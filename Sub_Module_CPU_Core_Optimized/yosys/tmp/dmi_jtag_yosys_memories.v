/* Generated by Yosys 0.51 (git sha1 c4b519022, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:54.8" */
module \cdc_2phase_clearable$dmi_jtag.i_dmi_cdc.i_cdc_req (src_rst_ni, src_clk_i, src_clear_i, src_data_i, src_valid_i, src_ready_o, dst_rst_ni, dst_clk_i, dst_clear_i, dst_clear_pending_o, dst_data_o, dst_valid_o, dst_ready_i, src_clear_pending_o);
  wire \$auto$builder.cc:338:Biop$326 ;
  wire \$auto$builder.cc:338:Biop$334 ;
  wire \$auto$builder.cc:364:Unop$324 ;
  wire \$auto$builder.cc:364:Unop$332 ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:88.35" */
  wire async_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:89.31" */
  wire [40:0] async_data;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:87.35" */
  wire async_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:69.16" */
  input dst_clear_i;
  wire dst_clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:70.16" */
  output dst_clear_pending_o;
  wire dst_clear_pending_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:68.16" */
  input dst_clk_i;
  wire dst_clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:71.16" */
  output [40:0] dst_data_o;
  wire [40:0] dst_data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:73.16" */
  input dst_ready_i;
  wire dst_ready_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:67.16" */
  input dst_rst_ni;
  wire dst_rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:72.16" */
  output dst_valid_o;
  wire dst_valid_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:81.16" */
  wire s_dst_clear_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:80.16" */
  wire s_dst_clear_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:84.16" */
  wire s_dst_isolate_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:83.16" */
  wire s_dst_isolate_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:82.16" */
  wire s_dst_valid;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:76.16" */
  wire s_src_clear_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:75.16" */
  wire s_src_clear_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:79.16" */
  wire s_src_isolate_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:78.16" */
  wire s_src_isolate_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:77.16" */
  wire s_src_ready;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:61.16" */
  input src_clear_i;
  wire src_clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:62.16" */
  output src_clear_pending_o;
  wire src_clear_pending_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:60.16" */
  input src_clk_i;
  wire src_clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:63.16" */
  input [40:0] src_data_i;
  wire [40:0] src_data_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:65.16" */
  output src_ready_o;
  wire src_ready_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:59.16" */
  input src_rst_ni;
  wire src_rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:64.16" */
  input src_valid_i;
  wire src_valid_i;
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$325  (
    .A(src_valid_i),
    .B(\$auto$builder.cc:364:Unop$324 ),
    .Y(\$auto$builder.cc:338:Biop$326 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$329  (
    .A(s_src_ready),
    .B(\$auto$builder.cc:364:Unop$324 ),
    .Y(src_ready_o)
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$333  (
    .A(dst_ready_i),
    .B(\$auto$builder.cc:364:Unop$332 ),
    .Y(\$auto$builder.cc:338:Biop$334 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$337  (
    .A(s_dst_valid),
    .B(\$auto$builder.cc:364:Unop$332 ),
    .Y(dst_valid_o)
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$323  (
    .A(s_src_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$324 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$331  (
    .A(s_dst_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$332 )
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_clear_ack_q  (
    .ARST(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_clear_req),
    .Q(s_dst_clear_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_isolate_ack_q  (
    .ARST(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_isolate_req),
    .Q(s_dst_isolate_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_clear_ack_q  (
    .ARST(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_clear_req),
    .Q(s_src_clear_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_isolate_ack_q  (
    .ARST(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_isolate_req),
    .Q(s_src_isolate_ack_q)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:143.5" */
  \cdc_reset_ctrlr$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr  i_cdc_reset_ctrlr (
    .a_clear_ack_i(s_src_clear_ack_q),
    .a_clear_i(src_clear_i),
    .a_clear_o(s_src_clear_req),
    .a_clk_i(src_clk_i),
    .a_isolate_ack_i(s_src_isolate_ack_q),
    .a_isolate_o(s_src_isolate_req),
    .a_rst_ni(src_rst_ni),
    .b_clear_ack_i(s_dst_clear_ack_q),
    .b_clear_i(dst_clear_i),
    .b_clear_o(s_dst_clear_req),
    .b_clk_i(dst_clk_i),
    .b_isolate_ack_i(s_dst_isolate_ack_q),
    .b_isolate_o(s_dst_isolate_req),
    .b_rst_ni(dst_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:125.5" */
  \cdc_2phase_dst_clearable$dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst  i_dst (
    .async_ack_o(async_ack),
    .async_data_i(async_data),
    .async_req_i(async_req),
    .clear_i(s_dst_clear_req),
    .clk_i(dst_clk_i),
    .data_o(dst_data_o),
    .ready_i(\$auto$builder.cc:338:Biop$334 ),
    .rst_ni(dst_rst_ni),
    .valid_o(s_dst_valid)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:106.5" */
  \cdc_2phase_src_clearable$dmi_jtag.i_dmi_cdc.i_cdc_req.i_src  i_src (
    .async_ack_i(async_ack),
    .async_data_o(async_data),
    .async_req_o(async_req),
    .clear_i(s_src_clear_req),
    .clk_i(src_clk_i),
    .data_i(src_data_i),
    .ready_o(s_src_ready),
    .rst_ni(src_rst_ni),
    .valid_i(\$auto$builder.cc:338:Biop$326 )
  );
  assign dst_clear_pending_o = s_dst_isolate_req;
  assign src_clear_pending_o = s_src_isolate_req;
endmodule

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:54.8" */
module \cdc_2phase_clearable$dmi_jtag.i_dmi_cdc.i_cdc_resp (src_rst_ni, src_clk_i, src_clear_i, src_data_i, src_valid_i, src_ready_o, dst_rst_ni, dst_clk_i, dst_clear_i, dst_clear_pending_o, dst_data_o, dst_valid_o, dst_ready_i, src_clear_pending_o);
  wire \$auto$builder.cc:338:Biop$352 ;
  wire \$auto$builder.cc:338:Biop$360 ;
  wire \$auto$builder.cc:364:Unop$350 ;
  wire \$auto$builder.cc:364:Unop$358 ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:88.35" */
  wire async_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:89.31" */
  wire [33:0] async_data;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:87.35" */
  wire async_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:69.16" */
  input dst_clear_i;
  wire dst_clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:70.16" */
  output dst_clear_pending_o;
  wire dst_clear_pending_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:68.16" */
  input dst_clk_i;
  wire dst_clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:71.16" */
  output [33:0] dst_data_o;
  wire [33:0] dst_data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:73.16" */
  input dst_ready_i;
  wire dst_ready_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:67.16" */
  input dst_rst_ni;
  wire dst_rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:72.16" */
  output dst_valid_o;
  wire dst_valid_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:81.16" */
  wire s_dst_clear_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:80.16" */
  wire s_dst_clear_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:84.16" */
  wire s_dst_isolate_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:83.16" */
  wire s_dst_isolate_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:82.16" */
  wire s_dst_valid;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:76.16" */
  wire s_src_clear_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:75.16" */
  wire s_src_clear_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:79.16" */
  wire s_src_isolate_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:78.16" */
  wire s_src_isolate_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:77.16" */
  wire s_src_ready;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:61.16" */
  input src_clear_i;
  wire src_clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:62.16" */
  output src_clear_pending_o;
  wire src_clear_pending_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:60.16" */
  input src_clk_i;
  wire src_clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:63.16" */
  input [33:0] src_data_i;
  wire [33:0] src_data_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:65.16" */
  output src_ready_o;
  wire src_ready_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:59.16" */
  input src_rst_ni;
  wire src_rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:64.16" */
  input src_valid_i;
  wire src_valid_i;
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$351  (
    .A(src_valid_i),
    .B(\$auto$builder.cc:364:Unop$350 ),
    .Y(\$auto$builder.cc:338:Biop$352 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$355  (
    .A(s_src_ready),
    .B(\$auto$builder.cc:364:Unop$350 ),
    .Y(src_ready_o)
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$359  (
    .A(dst_ready_i),
    .B(\$auto$builder.cc:364:Unop$358 ),
    .Y(\$auto$builder.cc:338:Biop$360 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$363  (
    .A(s_dst_valid),
    .B(\$auto$builder.cc:364:Unop$358 ),
    .Y(dst_valid_o)
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$349  (
    .A(s_src_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$350 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$357  (
    .A(s_dst_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$358 )
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_clear_ack_q  (
    .ARST(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_clear_req),
    .Q(s_dst_clear_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_isolate_ack_q  (
    .ARST(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_isolate_req),
    .Q(s_dst_isolate_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_clear_ack_q  (
    .ARST(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_clear_req),
    .Q(s_src_clear_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_isolate_ack_q  (
    .ARST(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_isolate_req),
    .Q(s_src_isolate_ack_q)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:143.5" */
  \cdc_reset_ctrlr$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr  i_cdc_reset_ctrlr (
    .a_clear_ack_i(s_src_clear_ack_q),
    .a_clear_i(src_clear_i),
    .a_clear_o(s_src_clear_req),
    .a_clk_i(src_clk_i),
    .a_isolate_ack_i(s_src_isolate_ack_q),
    .a_isolate_o(s_src_isolate_req),
    .a_rst_ni(src_rst_ni),
    .b_clear_ack_i(s_dst_clear_ack_q),
    .b_clear_i(dst_clear_i),
    .b_clear_o(s_dst_clear_req),
    .b_clk_i(dst_clk_i),
    .b_isolate_ack_i(s_dst_isolate_ack_q),
    .b_isolate_o(s_dst_isolate_req),
    .b_rst_ni(dst_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:125.5" */
  \cdc_2phase_dst_clearable$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst  i_dst (
    .async_ack_o(async_ack),
    .async_data_i(async_data),
    .async_req_i(async_req),
    .clear_i(s_dst_clear_req),
    .clk_i(dst_clk_i),
    .data_o(dst_data_o),
    .ready_i(\$auto$builder.cc:338:Biop$360 ),
    .rst_ni(dst_rst_ni),
    .valid_o(s_dst_valid)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:106.5" */
  \cdc_2phase_src_clearable$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src  i_src (
    .async_ack_i(async_ack),
    .async_data_o(async_data),
    .async_req_o(async_req),
    .clear_i(s_src_clear_req),
    .clk_i(src_clk_i),
    .data_i(src_data_i),
    .ready_o(s_src_ready),
    .rst_ni(src_rst_ni),
    .valid_i(\$auto$builder.cc:338:Biop$352 )
  );
  assign dst_clear_pending_o = s_dst_isolate_req;
  assign src_clear_pending_o = s_src_isolate_req;
endmodule

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:269.8" */
module \cdc_2phase_dst_clearable$dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst (clk_i, rst_ni, clear_i, data_o, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$builder.cc:338:Biop$400 ;
  wire \$auto$builder.cc:338:Biop$409 ;
  wire \$auto$builder.cc:338:Biop$413 ;
  wire \$auto$builder.cc:364:Unop$404 ;
  wire \$auto$builder.cc:364:Unop$411 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3797 ;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.8" */
  wire ack_dst_d;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.19" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:280.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:281.16" */
  input [40:0] async_data_i;
  wire [40:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:279.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:275.16" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:274.16" */
  input clk_i;
  wire clk_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:288.5" */
  /* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40" */
  wire [40:0] data_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:288.17" */
  wire [40:0] data_dst_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:276.16" */
  output [40:0] data_o;
  wire [40:0] data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:278.16" */
  input ready_i;
  wire ready_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.30" */
  wire req_synced;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.42" */
  wire req_synced_q1;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:273.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:277.16" */
  output valid_o;
  wire valid_o;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$399  (
    .A(valid_o),
    .B(ready_i),
    .Y(\$auto$builder.cc:338:Biop$400 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$408  (
    .A(req_synced),
    .B(req_synced_q1),
    .Y(\$auto$builder.cc:338:Biop$409 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$412  (
    .A(\$auto$builder.cc:338:Biop$409 ),
    .B(\$auto$builder.cc:364:Unop$411 ),
    .Y(\$auto$builder.cc:338:Biop$413 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$423  (
    .A(ack_dst_q),
    .B(req_synced_q1),
    .Y(valid_o)
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$403  (
    .A(ack_dst_q),
    .Y(\$auto$builder.cc:364:Unop$404 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$410  (
    .A(valid_o),
    .Y(\$auto$builder.cc:364:Unop$411 )
  );
  /* keep = "true" */
  \$dffe  #(
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3793  (
    .CLK(clk_i),
    .D(async_data_i[33:32]),
    .EN(\$auto$builder.cc:338:Biop$413 ),
    .Q(data_dst_q[33:32])
  );
  /* keep = "true" */
  \$dffe  #(
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$auto$ff.cc:266:slice$3794  (
    .CLK(clk_i),
    .D(async_data_i[31:0]),
    .EN(\$auto$builder.cc:338:Biop$413 ),
    .Q(data_dst_q[31:0])
  );
  /* keep = "true" */
  \$dffe  #(
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$auto$ff.cc:266:slice$3795  (
    .CLK(clk_i),
    .D(async_data_i[40:34]),
    .EN(\$auto$builder.cc:338:Biop$413 ),
    .Q(data_dst_q[40:34])
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$auto$ff.cc:266:slice$3796  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .EN(\$auto$opt_dff.cc:194:make_patterns_logic$3797 ),
    .Q(ack_dst_q)
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3798  (
    .A({ \$auto$builder.cc:338:Biop$400 , clear_i }),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3797 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_synced_q1  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(req_synced),
    .Q(req_synced_q1)
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:316.7-316.33|../rtl/common_cells/cdc_2phase_clearable.sv:315.5-317.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$2980  (
    .A(data_dst_q),
    .B(async_data_i),
    .S(\$auto$builder.cc:338:Biop$413 ),
    .Y(data_dst_d)
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:305.7-305.24|../rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2989  (
    .A(\$auto$builder.cc:364:Unop$404 ),
    .B(1'h0),
    .S(clear_i),
    .Y(ack_dst_d)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:294.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign async_ack_o = ack_dst_q;
  assign data_o = data_dst_q;
endmodule

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:269.8" */
module \cdc_2phase_dst_clearable$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst (clk_i, rst_ni, clear_i, data_o, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$builder.cc:338:Biop$450 ;
  wire \$auto$builder.cc:338:Biop$459 ;
  wire \$auto$builder.cc:338:Biop$463 ;
  wire \$auto$builder.cc:364:Unop$454 ;
  wire \$auto$builder.cc:364:Unop$461 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3802 ;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.8" */
  wire ack_dst_d;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.19" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:280.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:281.16" */
  input [33:0] async_data_i;
  wire [33:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:279.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:275.16" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:274.16" */
  input clk_i;
  wire clk_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:288.5" */
  /* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33" */
  wire [33:0] data_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:288.17" */
  wire [33:0] data_dst_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:276.16" */
  output [33:0] data_o;
  wire [33:0] data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:278.16" */
  input ready_i;
  wire ready_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.30" */
  wire req_synced;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.42" */
  wire req_synced_q1;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:273.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:277.16" */
  output valid_o;
  wire valid_o;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$449  (
    .A(valid_o),
    .B(ready_i),
    .Y(\$auto$builder.cc:338:Biop$450 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$458  (
    .A(req_synced),
    .B(req_synced_q1),
    .Y(\$auto$builder.cc:338:Biop$459 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$462  (
    .A(\$auto$builder.cc:338:Biop$459 ),
    .B(\$auto$builder.cc:364:Unop$461 ),
    .Y(\$auto$builder.cc:338:Biop$463 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$473  (
    .A(ack_dst_q),
    .B(req_synced_q1),
    .Y(valid_o)
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$453  (
    .A(ack_dst_q),
    .Y(\$auto$builder.cc:364:Unop$454 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$460  (
    .A(valid_o),
    .Y(\$auto$builder.cc:364:Unop$461 )
  );
  /* keep = "true" */
  \$dffe  #(
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3799  (
    .CLK(clk_i),
    .D(async_data_i[1:0]),
    .EN(\$auto$builder.cc:338:Biop$463 ),
    .Q(data_dst_q[1:0])
  );
  /* keep = "true" */
  \$dffe  #(
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$auto$ff.cc:266:slice$3800  (
    .CLK(clk_i),
    .D(async_data_i[33:2]),
    .EN(\$auto$builder.cc:338:Biop$463 ),
    .Q(data_dst_q[33:2])
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$auto$ff.cc:266:slice$3801  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .EN(\$auto$opt_dff.cc:194:make_patterns_logic$3802 ),
    .Q(ack_dst_q)
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3803  (
    .A({ \$auto$builder.cc:338:Biop$450 , clear_i }),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3802 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_synced_q1  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(req_synced),
    .Q(req_synced_q1)
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:316.7-316.33|../rtl/common_cells/cdc_2phase_clearable.sv:315.5-317.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$2951  (
    .A(data_dst_q),
    .B(async_data_i),
    .S(\$auto$builder.cc:338:Biop$463 ),
    .Y(data_dst_d)
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:305.7-305.24|../rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2960  (
    .A(\$auto$builder.cc:364:Unop$454 ),
    .B(1'h0),
    .S(clear_i),
    .Y(ack_dst_d)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:294.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign async_ack_o = ack_dst_q;
  assign data_o = data_dst_q;
endmodule

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:199.8" */
module \cdc_2phase_src_clearable$dmi_jtag.i_dmi_cdc.i_cdc_req.i_src (clk_i, rst_ni, clear_i, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$builder.cc:338:Biop$379 ;
  wire \$auto$builder.cc:364:Unop$383 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3805 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3810 ;
  wire \$auto$rtlil.cc:2739:Not$3809 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$385 ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.32" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:210.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:211.16" */
  output [40:0] async_data_o;
  wire [40:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:209.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:205.16" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:204.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:206.16" */
  input [40:0] data_i;
  wire [40:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:217.5" */
  /* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40" */
  wire [40:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:217.17" */
  wire [40:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:208.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:203.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:207.16" */
  input valid_i;
  wire valid_i;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$378  (
    .A(valid_i),
    .B(ready_o),
    .Y(\$auto$builder.cc:338:Biop$379 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$394  (
    .A(req_src_q),
    .B(ack_synced),
    .Y(ready_o)
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$382  (
    .A(req_src_q),
    .Y(\$auto$builder.cc:364:Unop$383 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:245.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$auto$ff.cc:266:slice$3804  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .EN(\$auto$opt_dff.cc:194:make_patterns_logic$3805 ),
    .Q(req_src_q)
  );
  /* keep = "true" */
  \$dffe  #(
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3807  (
    .CLK(clk_i),
    .D(data_i[33:32]),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3810 ),
    .Q(data_src_q[33:32])
  );
  /* keep = "true" */
  \$dffe  #(
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$auto$ff.cc:266:slice$3812  (
    .CLK(clk_i),
    .D(data_i[31:0]),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3810 ),
    .Q(data_src_q[31:0])
  );
  /* keep = "true" */
  \$dffe  #(
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$auto$ff.cc:266:slice$3817  (
    .CLK(clk_i),
    .D(data_i[40:34]),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3810 ),
    .Q(data_src_q[40:34])
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3806  (
    .A({ \$auto$builder.cc:338:Biop$379 , clear_i }),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3805 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:210:make_patterns_logic$3808  (
    .A(clear_i),
    .Y(\$auto$rtlil.cc:2739:Not$3809 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3811  (
    .A({ \$auto$rtlil.cc:2739:Not$3809 , \$auto$builder.cc:338:Biop$379  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3810 )
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.38-240.8|../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$2991  (
    .A(data_src_q),
    .B(data_i),
    .S(\$auto$builder.cc:338:Biop$379 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\data_src_d$385 )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3003  (
    .A(\$auto$builder.cc:364:Unop$383 ),
    .B(1'h0),
    .S(clear_i),
    .Y(req_src_d)
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$3007  (
    .A(\$auto$slang_frontend.cc:694:finish$\data_src_d$385 ),
    .B(data_src_q),
    .S(clear_i),
    .Y(data_src_d)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:222.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign async_data_o = data_src_q;
  assign async_req_o = req_src_q;
endmodule

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:199.8" */
module \cdc_2phase_src_clearable$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src (clk_i, rst_ni, clear_i, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$builder.cc:338:Biop$429 ;
  wire \$auto$builder.cc:364:Unop$433 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3823 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3828 ;
  wire \$auto$rtlil.cc:2739:Not$3827 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  wire [33:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$435 ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.32" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:210.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:211.16" */
  output [33:0] async_data_o;
  wire [33:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:209.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:205.16" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:204.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:206.16" */
  input [33:0] data_i;
  wire [33:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:217.5" */
  /* unused_bits = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33" */
  wire [33:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:217.17" */
  wire [33:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:208.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:203.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:207.16" */
  input valid_i;
  wire valid_i;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$428  (
    .A(valid_i),
    .B(ready_o),
    .Y(\$auto$builder.cc:338:Biop$429 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$444  (
    .A(req_src_q),
    .B(ack_synced),
    .Y(ready_o)
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$432  (
    .A(req_src_q),
    .Y(\$auto$builder.cc:364:Unop$433 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:245.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$auto$ff.cc:266:slice$3822  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .EN(\$auto$opt_dff.cc:194:make_patterns_logic$3823 ),
    .Q(req_src_q)
  );
  /* keep = "true" */
  \$dffe  #(
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3825  (
    .CLK(clk_i),
    .D(data_i[1:0]),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3828 ),
    .Q(data_src_q[1:0])
  );
  /* keep = "true" */
  \$dffe  #(
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$auto$ff.cc:266:slice$3830  (
    .CLK(clk_i),
    .D(data_i[33:2]),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3828 ),
    .Q(data_src_q[33:2])
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3824  (
    .A({ \$auto$builder.cc:338:Biop$429 , clear_i }),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3823 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:210:make_patterns_logic$3826  (
    .A(clear_i),
    .Y(\$auto$rtlil.cc:2739:Not$3827 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3829  (
    .A({ \$auto$rtlil.cc:2739:Not$3827 , \$auto$builder.cc:338:Biop$429  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3828 )
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.38-240.8|../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$2962  (
    .A(data_src_q),
    .B(data_i),
    .S(\$auto$builder.cc:338:Biop$429 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\data_src_d$435 )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2974  (
    .A(\$auto$builder.cc:364:Unop$433 ),
    .B(1'h0),
    .S(clear_i),
    .Y(req_src_d)
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$2978  (
    .A(\$auto$slang_frontend.cc:694:finish$\data_src_d$435 ),
    .B(data_src_q),
    .S(clear_i),
    .Y(data_src_d)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:222.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign async_data_o = data_src_q;
  assign async_req_o = req_src_q;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3836 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3838 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3840 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3842 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$864 ;
  wire \$procmux$1617_CMP ;
  wire \$procmux$1628_CMP ;
  wire \$procmux$1642_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "../rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "../rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:284.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3835  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3842 ),
    .Q(state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3837  (
    .A({ \$procmux$1628_CMP , ready_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3836 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3839  (
    .A({ \$procmux$1642_CMP , req_synced }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3838 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3841  (
    .A({ \$procmux$1617_CMP , req_synced }),
    .B(2'h3),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3840 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3843  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$3838 , \$auto$opt_dff.cc:194:make_patterns_logic$3840 , \$auto$opt_dff.cc:194:make_patterns_logic$3836  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3842 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:293.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1617_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$1617_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1628_CMP0  (
    .A(state_q),
    .B(1'h1),
    .Y(\$procmux$1628_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1639  (
    .A(1'h0),
    .B({ req_synced, 1'h1 }),
    .S({ \$procmux$1642_CMP , \$procmux$1628_CMP  }),
    .Y(valid_o)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1642_CMP0  (
    .A(state_q),
    .Y(\$procmux$1642_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$1645  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$864 , 2'h2 }),
    .S({ \$procmux$1642_CMP , \$procmux$1628_CMP  }),
    .Y(state_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:255.13-255.41|../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1655  (
    .A(2'h1),
    .B(2'h2),
    .S(ready_i),
    .Y(\$auto$slang_frontend.cc:694:finish$\state_d$864 )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1679  (
    .A(1'h0),
    .B({ ready_i, req_synced }),
    .S({ \$procmux$1628_CMP , \$procmux$1617_CMP  }),
    .Y(ack_dst_d)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign async_ack_o = ack_dst_q;
  assign data_o = async_data_i;
  assign data_valid = valid_o;
  assign output_ready = ready_i;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3845 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3847 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3849 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3851 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$937 ;
  wire \$procmux$1463_CMP ;
  wire \$procmux$1474_CMP ;
  wire \$procmux$1488_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "../rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "../rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:284.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3844  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3851 ),
    .Q(state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3846  (
    .A({ \$procmux$1474_CMP , ready_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3845 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3848  (
    .A({ \$procmux$1488_CMP , req_synced }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3847 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3850  (
    .A({ \$procmux$1463_CMP , req_synced }),
    .B(2'h3),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3849 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3852  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$3845 , \$auto$opt_dff.cc:194:make_patterns_logic$3849 , \$auto$opt_dff.cc:194:make_patterns_logic$3847  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3851 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:293.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1463_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$1463_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1474_CMP0  (
    .A(state_q),
    .B(1'h1),
    .Y(\$procmux$1474_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1485  (
    .A(1'h0),
    .B({ req_synced, 1'h1 }),
    .S({ \$procmux$1488_CMP , \$procmux$1474_CMP  }),
    .Y(valid_o)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1488_CMP0  (
    .A(state_q),
    .Y(\$procmux$1488_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$1491  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$937 , 2'h2 }),
    .S({ \$procmux$1488_CMP , \$procmux$1474_CMP  }),
    .Y(state_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:255.13-255.41|../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1501  (
    .A(2'h1),
    .B(2'h2),
    .S(ready_i),
    .Y(\$auto$slang_frontend.cc:694:finish$\state_d$937 )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1525  (
    .A(1'h0),
    .B({ ready_i, req_synced }),
    .S({ \$procmux$1474_CMP , \$procmux$1463_CMP  }),
    .Y(ack_dst_d)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign async_ack_o = ack_dst_q;
  assign data_o = async_data_i;
  assign data_valid = valid_o;
  assign output_ready = ready_i;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3854 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3856 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3858 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3860 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$1010 ;
  wire \$procmux$1309_CMP ;
  wire \$procmux$1320_CMP ;
  wire \$procmux$1334_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "../rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "../rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:284.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3853  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3860 ),
    .Q(state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3855  (
    .A({ \$procmux$1320_CMP , ready_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3854 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3857  (
    .A({ \$procmux$1334_CMP , req_synced }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3856 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3859  (
    .A({ \$procmux$1309_CMP , req_synced }),
    .B(2'h3),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3858 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3861  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$3854 , \$auto$opt_dff.cc:194:make_patterns_logic$3858 , \$auto$opt_dff.cc:194:make_patterns_logic$3856  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3860 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:293.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1309_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$1309_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1320_CMP0  (
    .A(state_q),
    .B(1'h1),
    .Y(\$procmux$1320_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1331  (
    .A(1'h0),
    .B({ req_synced, 1'h1 }),
    .S({ \$procmux$1334_CMP , \$procmux$1320_CMP  }),
    .Y(valid_o)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1334_CMP0  (
    .A(state_q),
    .Y(\$procmux$1334_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$1337  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$1010 , 2'h2 }),
    .S({ \$procmux$1334_CMP , \$procmux$1320_CMP  }),
    .Y(state_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:255.13-255.41|../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1347  (
    .A(2'h1),
    .B(2'h2),
    .S(ready_i),
    .Y(\$auto$slang_frontend.cc:694:finish$\state_d$1010 )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1371  (
    .A(1'h0),
    .B({ ready_i, req_synced }),
    .S({ \$procmux$1320_CMP , \$procmux$1309_CMP  }),
    .Y(ack_dst_d)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign async_ack_o = ack_dst_q;
  assign data_o = async_data_i;
  assign data_valid = valid_o;
  assign output_ready = ready_i;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3863 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3865 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3867 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3869 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$1083 ;
  wire \$procmux$1155_CMP ;
  wire \$procmux$1166_CMP ;
  wire \$procmux$1180_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "../rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "../rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:284.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3862  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3869 ),
    .Q(state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3864  (
    .A({ req_synced, \$procmux$1155_CMP  }),
    .B(2'h3),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3863 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3866  (
    .A({ \$procmux$1166_CMP , ready_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3865 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3868  (
    .A({ \$procmux$1180_CMP , req_synced }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3867 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3870  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$3865 , \$auto$opt_dff.cc:194:make_patterns_logic$3863 , \$auto$opt_dff.cc:194:make_patterns_logic$3867  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3869 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:293.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1155_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$1155_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1166_CMP0  (
    .A(state_q),
    .B(1'h1),
    .Y(\$procmux$1166_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1177  (
    .A(1'h0),
    .B({ req_synced, 1'h1 }),
    .S({ \$procmux$1180_CMP , \$procmux$1166_CMP  }),
    .Y(valid_o)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1180_CMP0  (
    .A(state_q),
    .Y(\$procmux$1180_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$1183  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$1083 , 2'h2 }),
    .S({ \$procmux$1180_CMP , \$procmux$1166_CMP  }),
    .Y(state_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:255.13-255.41|../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1193  (
    .A(2'h1),
    .B(2'h2),
    .S(ready_i),
    .Y(\$auto$slang_frontend.cc:694:finish$\state_d$1083 )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1217  (
    .A(1'h0),
    .B({ ready_i, req_synced }),
    .S({ \$procmux$1166_CMP , \$procmux$1155_CMP  }),
    .Y(ack_dst_d)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign async_ack_o = ack_dst_q;
  assign data_o = async_data_i;
  assign data_valid = valid_o;
  assign output_ready = ready_i;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3875 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3877 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3879 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3872 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3881 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$825 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$838 ;
  wire \$procmux$1687_CMP ;
  wire \$procmux$1703_CMP ;
  wire \$procmux$1717_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.5" */
  /* unused_bits = "0 1" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h1),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3871  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(data_i),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3872 ),
    .Q(data_src_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:172.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3874  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3881 ),
    .Q(state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3876  (
    .A({ \$procmux$1717_CMP , valid_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3875 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3878  (
    .A({ \$procmux$1703_CMP , ack_synced }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3877 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3880  (
    .A({ \$procmux$1687_CMP , ack_synced }),
    .B(2'h3),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3879 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3873  (
    .A({ \$procmux$1717_CMP , valid_i }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3872 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3882  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$3877 , \$auto$opt_dff.cc:194:make_patterns_logic$3875 , \$auto$opt_dff.cc:194:make_patterns_logic$3879  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3881 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1687_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$1687_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1689  (
    .A(ack_synced),
    .Y(\$auto$slang_frontend.cc:694:finish$\ready_o$838 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1703_CMP0  (
    .A(state_q),
    .B(1'h1),
    .Y(\$procmux$1703_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1716  (
    .A(data_src_q),
    .B(\$auto$slang_frontend.cc:694:finish$\data_src_d$825 ),
    .S(\$procmux$1717_CMP ),
    .Y(data_src_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1717_CMP0  (
    .A(state_q),
    .Y(\$procmux$1717_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1722  (
    .A(1'h0),
    .B({ valid_i, \$auto$slang_frontend.cc:694:finish$\ready_o$838  }),
    .S({ \$procmux$1717_CMP , \$procmux$1703_CMP  }),
    .Y(req_src_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1728  (
    .A(\$procmux$1687_CMP ),
    .B(\$auto$slang_frontend.cc:694:finish$\ready_o$838 ),
    .Y(ready_o)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$1735  (
    .A(2'h0),
    .B(4'h6),
    .S({ \$procmux$1717_CMP , \$procmux$1703_CMP  }),
    .Y(state_d)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1744  (
    .A(data_src_q),
    .B(data_i),
    .S(valid_i),
    .Y(\$auto$slang_frontend.cc:694:finish$\data_src_d$825 )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign async_data_o = data_src_q;
  assign async_req_o = req_src_q;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3887 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3889 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3891 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3884 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3893 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$898 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$911 ;
  wire \$procmux$1533_CMP ;
  wire \$procmux$1549_CMP ;
  wire \$procmux$1563_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.5" */
  /* unused_bits = "0 1" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h1),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3883  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(data_i),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3884 ),
    .Q(data_src_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:172.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3886  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3893 ),
    .Q(state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3888  (
    .A({ \$procmux$1563_CMP , valid_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3887 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3890  (
    .A({ \$procmux$1549_CMP , ack_synced }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3889 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3892  (
    .A({ \$procmux$1533_CMP , ack_synced }),
    .B(2'h3),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3891 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3885  (
    .A({ \$procmux$1563_CMP , valid_i }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3884 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3894  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$3891 , \$auto$opt_dff.cc:194:make_patterns_logic$3889 , \$auto$opt_dff.cc:194:make_patterns_logic$3887  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3893 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1533_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$1533_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1535  (
    .A(ack_synced),
    .Y(\$auto$slang_frontend.cc:694:finish$\ready_o$911 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1549_CMP0  (
    .A(state_q),
    .B(1'h1),
    .Y(\$procmux$1549_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1562  (
    .A(data_src_q),
    .B(\$auto$slang_frontend.cc:694:finish$\data_src_d$898 ),
    .S(\$procmux$1563_CMP ),
    .Y(data_src_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1563_CMP0  (
    .A(state_q),
    .Y(\$procmux$1563_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1568  (
    .A(1'h0),
    .B({ valid_i, \$auto$slang_frontend.cc:694:finish$\ready_o$911  }),
    .S({ \$procmux$1563_CMP , \$procmux$1549_CMP  }),
    .Y(req_src_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1574  (
    .A(\$procmux$1533_CMP ),
    .B(\$auto$slang_frontend.cc:694:finish$\ready_o$911 ),
    .Y(ready_o)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$1581  (
    .A(2'h0),
    .B(4'h6),
    .S({ \$procmux$1563_CMP , \$procmux$1549_CMP  }),
    .Y(state_d)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1590  (
    .A(data_src_q),
    .B(data_i),
    .S(valid_i),
    .Y(\$auto$slang_frontend.cc:694:finish$\data_src_d$898 )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign async_data_o = data_src_q;
  assign async_req_o = req_src_q;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3899 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3901 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3903 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3896 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3905 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$971 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$984 ;
  wire \$procmux$1379_CMP ;
  wire \$procmux$1395_CMP ;
  wire \$procmux$1409_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.5" */
  /* unused_bits = "0 1" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h1),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3895  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(data_i),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3896 ),
    .Q(data_src_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:172.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3898  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3905 ),
    .Q(state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3900  (
    .A({ \$procmux$1409_CMP , valid_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3899 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3902  (
    .A({ \$procmux$1395_CMP , ack_synced }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3901 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3904  (
    .A({ \$procmux$1379_CMP , ack_synced }),
    .B(2'h3),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3903 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3897  (
    .A({ \$procmux$1409_CMP , valid_i }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3896 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3906  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$3903 , \$auto$opt_dff.cc:194:make_patterns_logic$3901 , \$auto$opt_dff.cc:194:make_patterns_logic$3899  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3905 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1379_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$1379_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1381  (
    .A(ack_synced),
    .Y(\$auto$slang_frontend.cc:694:finish$\ready_o$984 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1395_CMP0  (
    .A(state_q),
    .B(1'h1),
    .Y(\$procmux$1395_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1408  (
    .A(data_src_q),
    .B(\$auto$slang_frontend.cc:694:finish$\data_src_d$971 ),
    .S(\$procmux$1409_CMP ),
    .Y(data_src_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1409_CMP0  (
    .A(state_q),
    .Y(\$procmux$1409_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1414  (
    .A(1'h0),
    .B({ valid_i, \$auto$slang_frontend.cc:694:finish$\ready_o$984  }),
    .S({ \$procmux$1409_CMP , \$procmux$1395_CMP  }),
    .Y(req_src_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1420  (
    .A(\$procmux$1379_CMP ),
    .B(\$auto$slang_frontend.cc:694:finish$\ready_o$984 ),
    .Y(ready_o)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$1427  (
    .A(2'h0),
    .B(4'h6),
    .S({ \$procmux$1409_CMP , \$procmux$1395_CMP  }),
    .Y(state_d)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1436  (
    .A(data_src_q),
    .B(data_i),
    .S(valid_i),
    .Y(\$auto$slang_frontend.cc:694:finish$\data_src_d$971 )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign async_data_o = data_src_q;
  assign async_req_o = req_src_q;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3911 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3913 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3915 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3908 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3917 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$1044 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$1057 ;
  wire \$procmux$1225_CMP ;
  wire \$procmux$1241_CMP ;
  wire \$procmux$1255_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.5" */
  /* unused_bits = "0 1" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h1),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3907  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(data_i),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3908 ),
    .Q(data_src_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:172.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3910  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3917 ),
    .Q(state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3912  (
    .A({ \$procmux$1255_CMP , valid_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3911 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3914  (
    .A({ \$procmux$1241_CMP , ack_synced }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3913 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3916  (
    .A({ \$procmux$1225_CMP , ack_synced }),
    .B(2'h3),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3915 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3909  (
    .A({ \$procmux$1255_CMP , valid_i }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3908 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3918  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$3913 , \$auto$opt_dff.cc:194:make_patterns_logic$3911 , \$auto$opt_dff.cc:194:make_patterns_logic$3915  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3917 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1225_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$1225_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1227  (
    .A(ack_synced),
    .Y(\$auto$slang_frontend.cc:694:finish$\ready_o$1057 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1241_CMP0  (
    .A(state_q),
    .B(1'h1),
    .Y(\$procmux$1241_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1254  (
    .A(data_src_q),
    .B(\$auto$slang_frontend.cc:694:finish$\data_src_d$1044 ),
    .S(\$procmux$1255_CMP ),
    .Y(data_src_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1255_CMP0  (
    .A(state_q),
    .Y(\$procmux$1255_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1260  (
    .A(1'h0),
    .B({ valid_i, \$auto$slang_frontend.cc:694:finish$\ready_o$1057  }),
    .S({ \$procmux$1255_CMP , \$procmux$1241_CMP  }),
    .Y(req_src_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1266  (
    .A(\$procmux$1225_CMP ),
    .B(\$auto$slang_frontend.cc:694:finish$\ready_o$1057 ),
    .Y(ready_o)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$1273  (
    .A(2'h0),
    .B(4'h6),
    .S({ \$procmux$1255_CMP , \$procmux$1241_CMP  }),
    .Y(state_d)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1282  (
    .A(data_src_q),
    .B(data_i),
    .S(valid_i),
    .Y(\$auto$slang_frontend.cc:694:finish$\data_src_d$1044 )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign async_data_o = data_src_q;
  assign async_req_o = req_src_q;
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:109.8" */
module \cdc_reset_ctrlr$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr (a_clk_i, a_rst_ni, a_clear_i, a_clear_o, a_clear_ack_i, a_isolate_o, a_isolate_ack_i, b_clk_i, b_rst_ni, b_clear_i, b_clear_o, b_clear_ack_i, b_isolate_o, b_isolate_ack_i);
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:125.15" */
  input a_clear_ack_i;
  wire a_clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:123.16" */
  input a_clear_i;
  wire a_clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:124.16" */
  output a_clear_o;
  wire a_clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:121.16" */
  input a_clk_i;
  wire a_clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:127.16" */
  input a_isolate_ack_i;
  wire a_isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:126.16" */
  output a_isolate_o;
  wire a_isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:122.16" */
  input a_rst_ni;
  wire a_rst_ni;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:143.31" */
  wire async_a2b_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:141.21" */
  wire [1:0] async_a2b_next_phase;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:139.16" */
  wire async_a2b_req;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:139.31" */
  wire async_b2a_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:145.21" */
  wire [1:0] async_b2a_next_phase;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:143.16" */
  wire async_b2a_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:133.16" */
  input b_clear_ack_i;
  wire b_clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:131.16" */
  input b_clear_i;
  wire b_clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:132.16" */
  output b_clear_o;
  wire b_clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:129.16" */
  input b_clk_i;
  wire b_clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:135.16" */
  input b_isolate_ack_i;
  wire b_isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:134.16" */
  output b_isolate_o;
  wire b_isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:130.16" */
  input b_rst_ni;
  wire b_rst_ni;
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:150.5" */
  \cdc_reset_ctrlr_half$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a  i_cdc_reset_ctrlr_half_a (
    .async_ack_i(async_b2a_ack),
    .async_ack_o(async_a2b_ack),
    .async_next_phase_i(async_b2a_next_phase),
    .async_next_phase_o(async_a2b_next_phase),
    .async_req_i(async_b2a_req),
    .async_req_o(async_a2b_req),
    .clear_ack_i(a_clear_ack_i),
    .clear_i(a_clear_i),
    .clear_o(a_clear_o),
    .clk_i(a_clk_i),
    .isolate_ack_i(a_isolate_ack_i),
    .isolate_o(a_isolate_o),
    .rst_ni(a_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:169.5" */
  \cdc_reset_ctrlr_half$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b  i_cdc_reset_ctrlr_half_b (
    .async_ack_i(async_a2b_ack),
    .async_ack_o(async_b2a_ack),
    .async_next_phase_i(async_a2b_next_phase),
    .async_next_phase_o(async_b2a_next_phase),
    .async_req_i(async_a2b_req),
    .async_req_o(async_b2a_req),
    .clear_ack_i(b_clear_ack_i),
    .clear_i(b_clear_i),
    .clear_o(b_clear_o),
    .clk_i(b_clk_i),
    .isolate_ack_i(b_isolate_ack_i),
    .isolate_o(b_isolate_o),
    .rst_ni(b_rst_ni)
  );
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:109.8" */
module \cdc_reset_ctrlr$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr (a_clk_i, a_rst_ni, a_clear_i, a_clear_o, a_clear_ack_i, a_isolate_o, a_isolate_ack_i, b_clk_i, b_rst_ni, b_clear_i, b_clear_o, b_clear_ack_i, b_isolate_o, b_isolate_ack_i);
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:125.15" */
  input a_clear_ack_i;
  wire a_clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:123.16" */
  input a_clear_i;
  wire a_clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:124.16" */
  output a_clear_o;
  wire a_clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:121.16" */
  input a_clk_i;
  wire a_clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:127.16" */
  input a_isolate_ack_i;
  wire a_isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:126.16" */
  output a_isolate_o;
  wire a_isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:122.16" */
  input a_rst_ni;
  wire a_rst_ni;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:143.31" */
  wire async_a2b_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:141.21" */
  wire [1:0] async_a2b_next_phase;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:139.16" */
  wire async_a2b_req;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:139.31" */
  wire async_b2a_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:145.21" */
  wire [1:0] async_b2a_next_phase;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:143.16" */
  wire async_b2a_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:133.16" */
  input b_clear_ack_i;
  wire b_clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:131.16" */
  input b_clear_i;
  wire b_clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:132.16" */
  output b_clear_o;
  wire b_clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:129.16" */
  input b_clk_i;
  wire b_clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:135.16" */
  input b_isolate_ack_i;
  wire b_isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:134.16" */
  output b_isolate_o;
  wire b_isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:130.16" */
  input b_rst_ni;
  wire b_rst_ni;
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:150.5" */
  \cdc_reset_ctrlr_half$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a  i_cdc_reset_ctrlr_half_a (
    .async_ack_i(async_b2a_ack),
    .async_ack_o(async_a2b_ack),
    .async_next_phase_i(async_b2a_next_phase),
    .async_next_phase_o(async_a2b_next_phase),
    .async_req_i(async_b2a_req),
    .async_req_o(async_a2b_req),
    .clear_ack_i(a_clear_ack_i),
    .clear_i(a_clear_i),
    .clear_o(a_clear_o),
    .clk_i(a_clk_i),
    .isolate_ack_i(a_isolate_ack_i),
    .isolate_o(a_isolate_o),
    .rst_ni(a_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:169.5" */
  \cdc_reset_ctrlr_half$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b  i_cdc_reset_ctrlr_half_b (
    .async_ack_i(async_a2b_ack),
    .async_ack_o(async_b2a_ack),
    .async_next_phase_i(async_a2b_next_phase),
    .async_next_phase_o(async_b2a_next_phase),
    .async_req_i(async_a2b_req),
    .async_req_o(async_b2a_req),
    .clear_ack_i(b_clear_ack_i),
    .clear_i(b_clear_i),
    .clear_o(b_clear_o),
    .clk_i(b_clk_i),
    .isolate_ack_i(b_isolate_ack_i),
    .isolate_o(b_isolate_o),
    .rst_ni(b_rst_ni)
  );
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$auto$builder.cc:338:Biop$490 ;
  wire \$auto$builder.cc:338:Biop$507 ;
  wire \$auto$builder.cc:338:Biop$546 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3921 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3923 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3925 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3927 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3929 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3931 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3933 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3935 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3937 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3939 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3691 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3693 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3699 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3703 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3705 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3709 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$4046 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$4048 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$499 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$515 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$516 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$555 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$558 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$553 ;
  wire \$procmux$2656_CMP ;
  wire \$procmux$2657_CMP ;
  wire \$procmux$2658_CMP ;
  wire \$procmux$2659_CMP ;
  wire \$procmux$2691_CMP ;
  wire \$procmux$2692_CMP ;
  wire \$procmux$2693_CMP ;
  wire \$procmux$2694_CMP ;
  wire \$procmux$2719_CMP ;
  wire \$procmux$2725_CMP ;
  wire \$procmux$2732_CMP ;
  wire \$procmux$2740_CMP ;
  wire \$procmux$2755_CMP ;
  wire \$procmux$2790_CMP ;
  wire \$procmux$2801_CMP ;
  wire \$procmux$2819_CMP ;
  wire \$procmux$2870_CMP ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$489  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$auto$builder.cc:338:Biop$490 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$506  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$auto$builder.cc:338:Biop$507 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$545  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$auto$builder.cc:338:Biop$546 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$562  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(clear_o)
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$564  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(isolate_o)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3919  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(receiver_next_phase),
    .EN(\$auto$builder.cc:338:Biop$546 ),
    .Q(receiver_phase_q)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(4'h1),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$auto$ff.cc:266:slice$3920  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3939 ),
    .Q(initiator_state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3922  (
    .A({ \$procmux$2870_CMP , clear_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3921 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3924  (
    .A({ \$procmux$2819_CMP , \$auto$builder.cc:338:Biop$490 , initiator_phase_transition_ack, isolate_ack_i }),
    .B(4'h8),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3923 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3926  (
    .A({ \$procmux$2801_CMP , isolate_ack_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3925 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3928  (
    .A({ \$procmux$2755_CMP , \$auto$builder.cc:338:Biop$507 , initiator_phase_transition_ack, clear_ack_i }),
    .B(4'h8),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3927 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3930  (
    .A({ \$procmux$2740_CMP , clear_ack_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3929 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3932  (
    .A({ \$procmux$2719_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3931 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3934  (
    .A({ \$procmux$2725_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3933 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3936  (
    .A({ \$procmux$2732_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3935 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3938  (
    .A({ \$procmux$2790_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3937 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd9),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3940  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$3927 , \$auto$opt_dff.cc:194:make_patterns_logic$3935 , \$auto$opt_dff.cc:194:make_patterns_logic$3937 , \$auto$opt_dff.cc:194:make_patterns_logic$3923 , \$auto$opt_dff.cc:194:make_patterns_logic$3921 , \$auto$opt_dff.cc:194:make_patterns_logic$3929 , \$auto$opt_dff.cc:194:make_patterns_logic$3925 , \$auto$opt_dff.cc:194:make_patterns_logic$3931 , \$auto$opt_dff.cc:194:make_patterns_logic$3933  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3939 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3690  (
    .A({ \$procmux$2658_CMP , \$procmux$2657_CMP , \$procmux$2656_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3691 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3692  (
    .A({ \$procmux$2694_CMP , \$procmux$2693_CMP , \$procmux$2691_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3693 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3696  (
    .A({ \$procmux$2819_CMP , \$procmux$2801_CMP , \$procmux$2790_CMP , \$procmux$2755_CMP , \$procmux$2740_CMP , \$procmux$2732_CMP , \$procmux$2725_CMP , \$procmux$2719_CMP  }),
    .Y(initiator_isolate_out)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3698  (
    .A({ \$procmux$2693_CMP , \$procmux$2692_CMP , \$procmux$2691_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3699 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3700  (
    .A({ \$procmux$2819_CMP , \$procmux$2790_CMP , \$procmux$2755_CMP , \$procmux$2732_CMP , \$procmux$2725_CMP , \$procmux$2719_CMP  }),
    .Y(initiator_phase_transition_req)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3702  (
    .A({ \$procmux$2694_CMP , \$procmux$2691_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3703 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3704  (
    .A({ \$procmux$2659_CMP , \$procmux$2658_CMP , \$procmux$2656_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3705 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3706  (
    .A({ \$procmux$2755_CMP , \$procmux$2740_CMP , \$procmux$2732_CMP  }),
    .Y(initiator_clear_out)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3708  (
    .A({ \$procmux$2819_CMP , \$procmux$2801_CMP , \$procmux$2790_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3709 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$4045  (
    .A({ \$procmux$2740_CMP , \$procmux$2732_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$4046 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$4047  (
    .A({ \$procmux$2801_CMP , \$procmux$2790_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$4048 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2655  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3705 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$558 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2656_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$2656_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2657_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$2657_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2658_CMP0  (
    .A(receiver_phase_q),
    .B(1'h1),
    .Y(\$procmux$2658_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2659_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$2659_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2677  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$558 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$555 ),
    .S(receiver_phase_req),
    .Y(receiver_clear_out)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2682  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3691 ),
    .B(\$auto$opt_reduce.cc:137:opt_pmux$3699 ),
    .S(receiver_phase_req),
    .Y(receiver_isolate_out)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2687  (
    .A(receiver_phase_req),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$553 ),
    .Y(receiver_phase_ack)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2690  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3693 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$555 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2691_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$2691_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2692_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$2692_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2693_CMP0  (
    .A(receiver_next_phase),
    .B(1'h1),
    .Y(\$procmux$2693_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2694_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$2694_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$2706  (
    .A(isolate_ack_i),
    .B({ clear_ack_i, 1'h1 }),
    .S({ \$procmux$2692_CMP , \$auto$opt_reduce.cc:137:opt_pmux$3703  }),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$553 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2719_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$2719_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2725_CMP0  (
    .A(initiator_state_q),
    .B(3'h7),
    .Y(\$procmux$2725_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2732_CMP0  (
    .A(initiator_state_q),
    .B(3'h5),
    .Y(\$procmux$2732_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2740_CMP0  (
    .A(initiator_state_q),
    .B(3'h6),
    .Y(\$procmux$2740_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2755_CMP0  (
    .A(initiator_state_q),
    .B(3'h4),
    .Y(\$procmux$2755_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$2763  (
    .A(2'h1),
    .B(2'h2),
    .S(initiator_phase_transition_ack),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$515 [1:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$2777  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$515 [1:0]),
    .B(2'h3),
    .S(\$auto$builder.cc:338:Biop$507 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$516 [1:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2790_CMP0  (
    .A(initiator_state_q),
    .B(2'h2),
    .Y(\$procmux$2790_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2801_CMP0  (
    .A(initiator_state_q),
    .B(2'h3),
    .Y(\$procmux$2801_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2819_CMP0  (
    .A(initiator_state_q),
    .B(1'h1),
    .Y(\$procmux$2819_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2847  (
    .A({ 2'h1, initiator_phase_transition_ack }),
    .B(3'h4),
    .S(\$auto$builder.cc:338:Biop$490 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$499 [2:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd4)
  ) \$procmux$2853  (
    .A(4'h1),
    .B({ 1'h0, \$auto$slang_frontend.cc:694:finish$\initiator_state_d$499 [2:0], 6'h11, \$auto$slang_frontend.cc:694:finish$\initiator_state_d$516 [1:0], 12'h780 }),
    .S({ \$procmux$2819_CMP , \$auto$opt_reduce.cc:137:opt_pmux$4048 , \$procmux$2755_CMP , \$auto$opt_reduce.cc:137:opt_pmux$4046 , \$procmux$2725_CMP , \$procmux$2719_CMP  }),
    .Y(initiator_state_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2870_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$2870_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$2937  (
    .A(2'h0),
    .B(6'h1b),
    .S({ \$auto$opt_reduce.cc:137:opt_pmux$3709 , initiator_clear_out, \$procmux$2725_CMP  }),
    .Y(initiator_clear_seq_phase)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$499 [3] = 1'h0;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$515 [3:2] = 2'h1;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$516 [3:2] = 2'h1;
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$auto$builder.cc:338:Biop$571 ;
  wire \$auto$builder.cc:338:Biop$588 ;
  wire \$auto$builder.cc:338:Biop$627 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3943 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3945 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3947 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3949 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3951 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3953 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3955 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3957 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3959 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3961 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3711 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3713 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3719 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3723 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3725 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3729 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$4050 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$4052 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$580 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$596 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$597 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$636 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$639 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$634 ;
  wire \$procmux$2360_CMP ;
  wire \$procmux$2361_CMP ;
  wire \$procmux$2362_CMP ;
  wire \$procmux$2363_CMP ;
  wire \$procmux$2395_CMP ;
  wire \$procmux$2396_CMP ;
  wire \$procmux$2397_CMP ;
  wire \$procmux$2398_CMP ;
  wire \$procmux$2423_CMP ;
  wire \$procmux$2429_CMP ;
  wire \$procmux$2436_CMP ;
  wire \$procmux$2444_CMP ;
  wire \$procmux$2459_CMP ;
  wire \$procmux$2494_CMP ;
  wire \$procmux$2505_CMP ;
  wire \$procmux$2523_CMP ;
  wire \$procmux$2574_CMP ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$570  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$auto$builder.cc:338:Biop$571 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$587  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$auto$builder.cc:338:Biop$588 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$626  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$auto$builder.cc:338:Biop$627 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$643  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(clear_o)
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$645  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(isolate_o)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3941  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(receiver_next_phase),
    .EN(\$auto$builder.cc:338:Biop$627 ),
    .Q(receiver_phase_q)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(4'h1),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$auto$ff.cc:266:slice$3942  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3961 ),
    .Q(initiator_state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3944  (
    .A({ \$procmux$2574_CMP , clear_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3943 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3946  (
    .A({ \$procmux$2523_CMP , \$auto$builder.cc:338:Biop$571 , initiator_phase_transition_ack, isolate_ack_i }),
    .B(4'h8),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3945 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3948  (
    .A({ \$procmux$2505_CMP , isolate_ack_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3947 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3950  (
    .A({ \$procmux$2459_CMP , \$auto$builder.cc:338:Biop$588 , initiator_phase_transition_ack, clear_ack_i }),
    .B(4'h8),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3949 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3952  (
    .A({ \$procmux$2444_CMP , clear_ack_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3951 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3954  (
    .A({ \$procmux$2423_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3953 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3956  (
    .A({ \$procmux$2429_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3955 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3958  (
    .A({ \$procmux$2436_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3957 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3960  (
    .A({ \$procmux$2494_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3959 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd9),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3962  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$3959 , \$auto$opt_dff.cc:194:make_patterns_logic$3957 , \$auto$opt_dff.cc:194:make_patterns_logic$3955 , \$auto$opt_dff.cc:194:make_patterns_logic$3953 , \$auto$opt_dff.cc:194:make_patterns_logic$3951 , \$auto$opt_dff.cc:194:make_patterns_logic$3949 , \$auto$opt_dff.cc:194:make_patterns_logic$3947 , \$auto$opt_dff.cc:194:make_patterns_logic$3945 , \$auto$opt_dff.cc:194:make_patterns_logic$3943  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3961 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3710  (
    .A({ \$procmux$2362_CMP , \$procmux$2361_CMP , \$procmux$2360_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3711 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3712  (
    .A({ \$procmux$2398_CMP , \$procmux$2397_CMP , \$procmux$2395_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3713 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3716  (
    .A({ \$procmux$2523_CMP , \$procmux$2505_CMP , \$procmux$2494_CMP , \$procmux$2459_CMP , \$procmux$2444_CMP , \$procmux$2436_CMP , \$procmux$2429_CMP , \$procmux$2423_CMP  }),
    .Y(initiator_isolate_out)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3718  (
    .A({ \$procmux$2397_CMP , \$procmux$2396_CMP , \$procmux$2395_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3719 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3720  (
    .A({ \$procmux$2523_CMP , \$procmux$2494_CMP , \$procmux$2459_CMP , \$procmux$2436_CMP , \$procmux$2429_CMP , \$procmux$2423_CMP  }),
    .Y(initiator_phase_transition_req)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3722  (
    .A({ \$procmux$2398_CMP , \$procmux$2395_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3723 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3724  (
    .A({ \$procmux$2363_CMP , \$procmux$2362_CMP , \$procmux$2360_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3725 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3726  (
    .A({ \$procmux$2459_CMP , \$procmux$2444_CMP , \$procmux$2436_CMP  }),
    .Y(initiator_clear_out)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3728  (
    .A({ \$procmux$2523_CMP , \$procmux$2505_CMP , \$procmux$2494_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3729 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$4049  (
    .A({ \$procmux$2444_CMP , \$procmux$2436_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$4050 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$4051  (
    .A({ \$procmux$2505_CMP , \$procmux$2494_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$4052 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2359  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3725 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$639 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2360_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$2360_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2361_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$2361_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2362_CMP0  (
    .A(receiver_phase_q),
    .B(1'h1),
    .Y(\$procmux$2362_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2363_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$2363_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2381  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$639 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$636 ),
    .S(receiver_phase_req),
    .Y(receiver_clear_out)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2386  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3711 ),
    .B(\$auto$opt_reduce.cc:137:opt_pmux$3719 ),
    .S(receiver_phase_req),
    .Y(receiver_isolate_out)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2391  (
    .A(receiver_phase_req),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$634 ),
    .Y(receiver_phase_ack)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2394  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3713 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$636 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2395_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$2395_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2396_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$2396_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2397_CMP0  (
    .A(receiver_next_phase),
    .B(1'h1),
    .Y(\$procmux$2397_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2398_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$2398_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$2410  (
    .A(isolate_ack_i),
    .B({ clear_ack_i, 1'h1 }),
    .S({ \$procmux$2396_CMP , \$auto$opt_reduce.cc:137:opt_pmux$3723  }),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$634 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2423_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$2423_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2429_CMP0  (
    .A(initiator_state_q),
    .B(3'h7),
    .Y(\$procmux$2429_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2436_CMP0  (
    .A(initiator_state_q),
    .B(3'h5),
    .Y(\$procmux$2436_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2444_CMP0  (
    .A(initiator_state_q),
    .B(3'h6),
    .Y(\$procmux$2444_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2459_CMP0  (
    .A(initiator_state_q),
    .B(3'h4),
    .Y(\$procmux$2459_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$2467  (
    .A(2'h1),
    .B(2'h2),
    .S(initiator_phase_transition_ack),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$596 [1:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$2481  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$596 [1:0]),
    .B(2'h3),
    .S(\$auto$builder.cc:338:Biop$588 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$597 [1:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2494_CMP0  (
    .A(initiator_state_q),
    .B(2'h2),
    .Y(\$procmux$2494_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2505_CMP0  (
    .A(initiator_state_q),
    .B(2'h3),
    .Y(\$procmux$2505_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2523_CMP0  (
    .A(initiator_state_q),
    .B(1'h1),
    .Y(\$procmux$2523_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2551  (
    .A({ 2'h1, initiator_phase_transition_ack }),
    .B(3'h4),
    .S(\$auto$builder.cc:338:Biop$571 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$580 [2:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd4)
  ) \$procmux$2557  (
    .A(4'h1),
    .B({ 1'h0, \$auto$slang_frontend.cc:694:finish$\initiator_state_d$580 [2:0], 6'h11, \$auto$slang_frontend.cc:694:finish$\initiator_state_d$597 [1:0], 12'h780 }),
    .S({ \$procmux$2523_CMP , \$auto$opt_reduce.cc:137:opt_pmux$4052 , \$procmux$2459_CMP , \$auto$opt_reduce.cc:137:opt_pmux$4050 , \$procmux$2429_CMP , \$procmux$2423_CMP  }),
    .Y(initiator_state_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2574_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$2574_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$2641  (
    .A(2'h0),
    .B(6'h1b),
    .S({ \$auto$opt_reduce.cc:137:opt_pmux$3729 , initiator_clear_out, \$procmux$2429_CMP  }),
    .Y(initiator_clear_seq_phase)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$580 [3] = 1'h0;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$596 [3:2] = 2'h1;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$597 [3:2] = 2'h1;
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$auto$builder.cc:338:Biop$662 ;
  wire \$auto$builder.cc:338:Biop$679 ;
  wire \$auto$builder.cc:338:Biop$718 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3965 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3967 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3969 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3971 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3973 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3975 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3977 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3979 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3981 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$3983 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3731 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3733 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3739 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3743 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3745 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3749 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$4054 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$4056 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$671 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$687 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$688 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$727 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$730 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$725 ;
  wire \$procmux$2064_CMP ;
  wire \$procmux$2065_CMP ;
  wire \$procmux$2066_CMP ;
  wire \$procmux$2067_CMP ;
  wire \$procmux$2099_CMP ;
  wire \$procmux$2100_CMP ;
  wire \$procmux$2101_CMP ;
  wire \$procmux$2102_CMP ;
  wire \$procmux$2127_CMP ;
  wire \$procmux$2133_CMP ;
  wire \$procmux$2140_CMP ;
  wire \$procmux$2148_CMP ;
  wire \$procmux$2163_CMP ;
  wire \$procmux$2198_CMP ;
  wire \$procmux$2209_CMP ;
  wire \$procmux$2227_CMP ;
  wire \$procmux$2278_CMP ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$661  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$auto$builder.cc:338:Biop$662 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$678  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$auto$builder.cc:338:Biop$679 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$717  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$auto$builder.cc:338:Biop$718 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$734  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(clear_o)
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$736  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(isolate_o)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3963  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(receiver_next_phase),
    .EN(\$auto$builder.cc:338:Biop$718 ),
    .Q(receiver_phase_q)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(4'h1),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$auto$ff.cc:266:slice$3964  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$3983 ),
    .Q(initiator_state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3966  (
    .A({ \$procmux$2278_CMP , clear_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3965 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3968  (
    .A({ \$procmux$2227_CMP , \$auto$builder.cc:338:Biop$662 , initiator_phase_transition_ack, isolate_ack_i }),
    .B(4'h8),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3967 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3970  (
    .A({ \$procmux$2209_CMP , isolate_ack_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3969 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3972  (
    .A({ \$procmux$2163_CMP , \$auto$builder.cc:338:Biop$679 , initiator_phase_transition_ack, clear_ack_i }),
    .B(4'h8),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3971 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3974  (
    .A({ \$procmux$2148_CMP , clear_ack_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3973 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3976  (
    .A({ \$procmux$2127_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3975 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3978  (
    .A({ \$procmux$2133_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3977 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3980  (
    .A({ \$procmux$2140_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3979 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3982  (
    .A({ \$procmux$2198_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3981 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd9),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$3984  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$3981 , \$auto$opt_dff.cc:194:make_patterns_logic$3979 , \$auto$opt_dff.cc:194:make_patterns_logic$3977 , \$auto$opt_dff.cc:194:make_patterns_logic$3975 , \$auto$opt_dff.cc:194:make_patterns_logic$3973 , \$auto$opt_dff.cc:194:make_patterns_logic$3971 , \$auto$opt_dff.cc:194:make_patterns_logic$3969 , \$auto$opt_dff.cc:194:make_patterns_logic$3967 , \$auto$opt_dff.cc:194:make_patterns_logic$3965  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$3983 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3730  (
    .A({ \$procmux$2066_CMP , \$procmux$2065_CMP , \$procmux$2064_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3731 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3732  (
    .A({ \$procmux$2102_CMP , \$procmux$2101_CMP , \$procmux$2099_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3733 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3736  (
    .A({ \$procmux$2227_CMP , \$procmux$2209_CMP , \$procmux$2198_CMP , \$procmux$2163_CMP , \$procmux$2148_CMP , \$procmux$2140_CMP , \$procmux$2133_CMP , \$procmux$2127_CMP  }),
    .Y(initiator_isolate_out)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3738  (
    .A({ \$procmux$2101_CMP , \$procmux$2100_CMP , \$procmux$2099_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3739 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3740  (
    .A({ \$procmux$2227_CMP , \$procmux$2198_CMP , \$procmux$2163_CMP , \$procmux$2140_CMP , \$procmux$2133_CMP , \$procmux$2127_CMP  }),
    .Y(initiator_phase_transition_req)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3742  (
    .A({ \$procmux$2102_CMP , \$procmux$2099_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3743 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3744  (
    .A({ \$procmux$2067_CMP , \$procmux$2066_CMP , \$procmux$2064_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3745 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3746  (
    .A({ \$procmux$2163_CMP , \$procmux$2148_CMP , \$procmux$2140_CMP  }),
    .Y(initiator_clear_out)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3748  (
    .A({ \$procmux$2227_CMP , \$procmux$2209_CMP , \$procmux$2198_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3749 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$4053  (
    .A({ \$procmux$2148_CMP , \$procmux$2140_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$4054 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$4055  (
    .A({ \$procmux$2209_CMP , \$procmux$2198_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$4056 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2063  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3745 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$730 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2064_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$2064_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2065_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$2065_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2066_CMP0  (
    .A(receiver_phase_q),
    .B(1'h1),
    .Y(\$procmux$2066_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2067_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$2067_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2085  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$730 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$727 ),
    .S(receiver_phase_req),
    .Y(receiver_clear_out)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2090  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3731 ),
    .B(\$auto$opt_reduce.cc:137:opt_pmux$3739 ),
    .S(receiver_phase_req),
    .Y(receiver_isolate_out)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2095  (
    .A(receiver_phase_req),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$725 ),
    .Y(receiver_phase_ack)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2098  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3733 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$727 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2099_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$2099_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2100_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$2100_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2101_CMP0  (
    .A(receiver_next_phase),
    .B(1'h1),
    .Y(\$procmux$2101_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2102_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$2102_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$2114  (
    .A(isolate_ack_i),
    .B({ clear_ack_i, 1'h1 }),
    .S({ \$procmux$2100_CMP , \$auto$opt_reduce.cc:137:opt_pmux$3743  }),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$725 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2127_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$2127_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2133_CMP0  (
    .A(initiator_state_q),
    .B(3'h7),
    .Y(\$procmux$2133_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2140_CMP0  (
    .A(initiator_state_q),
    .B(3'h5),
    .Y(\$procmux$2140_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2148_CMP0  (
    .A(initiator_state_q),
    .B(3'h6),
    .Y(\$procmux$2148_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$2163_CMP0  (
    .A(initiator_state_q),
    .B(3'h4),
    .Y(\$procmux$2163_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$2171  (
    .A(2'h1),
    .B(2'h2),
    .S(initiator_phase_transition_ack),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$687 [1:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$2185  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$687 [1:0]),
    .B(2'h3),
    .S(\$auto$builder.cc:338:Biop$679 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$688 [1:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2198_CMP0  (
    .A(initiator_state_q),
    .B(2'h2),
    .Y(\$procmux$2198_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$2209_CMP0  (
    .A(initiator_state_q),
    .B(2'h3),
    .Y(\$procmux$2209_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$2227_CMP0  (
    .A(initiator_state_q),
    .B(1'h1),
    .Y(\$procmux$2227_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2255  (
    .A({ 2'h1, initiator_phase_transition_ack }),
    .B(3'h4),
    .S(\$auto$builder.cc:338:Biop$662 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$671 [2:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd4)
  ) \$procmux$2261  (
    .A(4'h1),
    .B({ 1'h0, \$auto$slang_frontend.cc:694:finish$\initiator_state_d$671 [2:0], 6'h11, \$auto$slang_frontend.cc:694:finish$\initiator_state_d$688 [1:0], 12'h780 }),
    .S({ \$procmux$2227_CMP , \$auto$opt_reduce.cc:137:opt_pmux$4056 , \$procmux$2163_CMP , \$auto$opt_reduce.cc:137:opt_pmux$4054 , \$procmux$2133_CMP , \$procmux$2127_CMP  }),
    .Y(initiator_state_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2278_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$2278_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$2345  (
    .A(2'h0),
    .B(6'h1b),
    .S({ \$auto$opt_reduce.cc:137:opt_pmux$3749 , initiator_clear_out, \$procmux$2133_CMP  }),
    .Y(initiator_clear_seq_phase)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$671 [3] = 1'h0;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$687 [3:2] = 2'h1;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$688 [3:2] = 2'h1;
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$auto$builder.cc:338:Biop$743 ;
  wire \$auto$builder.cc:338:Biop$760 ;
  wire \$auto$builder.cc:338:Biop$799 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3987 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3989 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3991 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3993 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3995 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3997 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$3999 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4001 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4003 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$4005 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3751 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3753 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3759 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3763 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3765 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3769 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$4058 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$4060 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$752 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$768 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$769 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$808 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$811 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$806 ;
  wire \$procmux$1768_CMP ;
  wire \$procmux$1769_CMP ;
  wire \$procmux$1770_CMP ;
  wire \$procmux$1771_CMP ;
  wire \$procmux$1803_CMP ;
  wire \$procmux$1804_CMP ;
  wire \$procmux$1805_CMP ;
  wire \$procmux$1806_CMP ;
  wire \$procmux$1831_CMP ;
  wire \$procmux$1837_CMP ;
  wire \$procmux$1844_CMP ;
  wire \$procmux$1852_CMP ;
  wire \$procmux$1867_CMP ;
  wire \$procmux$1902_CMP ;
  wire \$procmux$1913_CMP ;
  wire \$procmux$1931_CMP ;
  wire \$procmux$1982_CMP ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$742  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$auto$builder.cc:338:Biop$743 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$759  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$auto$builder.cc:338:Biop$760 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$798  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$auto$builder.cc:338:Biop$799 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$815  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(clear_o)
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$817  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(isolate_o)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$3985  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(receiver_next_phase),
    .EN(\$auto$builder.cc:338:Biop$799 ),
    .Q(receiver_phase_q)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(4'h1),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$auto$ff.cc:266:slice$3986  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$4005 ),
    .Q(initiator_state_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3988  (
    .A({ \$procmux$1982_CMP , clear_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3987 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3990  (
    .A({ \$procmux$1931_CMP , \$auto$builder.cc:338:Biop$743 , initiator_phase_transition_ack, isolate_ack_i }),
    .B(4'h8),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3989 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3992  (
    .A({ \$procmux$1913_CMP , isolate_ack_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3991 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3994  (
    .A({ \$procmux$1867_CMP , \$auto$builder.cc:338:Biop$760 , initiator_phase_transition_ack, clear_ack_i }),
    .B(4'h8),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3993 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3996  (
    .A({ \$procmux$1852_CMP , clear_ack_i }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3995 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$3998  (
    .A({ \$procmux$1831_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3997 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4000  (
    .A({ \$procmux$1837_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$3999 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4002  (
    .A({ \$procmux$1844_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4001 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4004  (
    .A({ \$procmux$1902_CMP , initiator_phase_transition_ack }),
    .B(2'h2),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4003 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd9),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$4006  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$4003 , \$auto$opt_dff.cc:194:make_patterns_logic$4001 , \$auto$opt_dff.cc:194:make_patterns_logic$3999 , \$auto$opt_dff.cc:194:make_patterns_logic$3997 , \$auto$opt_dff.cc:194:make_patterns_logic$3995 , \$auto$opt_dff.cc:194:make_patterns_logic$3993 , \$auto$opt_dff.cc:194:make_patterns_logic$3991 , \$auto$opt_dff.cc:194:make_patterns_logic$3989 , \$auto$opt_dff.cc:194:make_patterns_logic$3987  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$4005 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3750  (
    .A({ \$procmux$1770_CMP , \$procmux$1769_CMP , \$procmux$1768_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3751 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3752  (
    .A({ \$procmux$1806_CMP , \$procmux$1805_CMP , \$procmux$1803_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3753 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3756  (
    .A({ \$procmux$1931_CMP , \$procmux$1913_CMP , \$procmux$1902_CMP , \$procmux$1867_CMP , \$procmux$1852_CMP , \$procmux$1844_CMP , \$procmux$1837_CMP , \$procmux$1831_CMP  }),
    .Y(initiator_isolate_out)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3758  (
    .A({ \$procmux$1805_CMP , \$procmux$1804_CMP , \$procmux$1803_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3759 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3760  (
    .A({ \$procmux$1931_CMP , \$procmux$1902_CMP , \$procmux$1867_CMP , \$procmux$1844_CMP , \$procmux$1837_CMP , \$procmux$1831_CMP  }),
    .Y(initiator_phase_transition_req)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3762  (
    .A({ \$procmux$1806_CMP , \$procmux$1803_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3763 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3764  (
    .A({ \$procmux$1771_CMP , \$procmux$1770_CMP , \$procmux$1768_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3765 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3766  (
    .A({ \$procmux$1867_CMP , \$procmux$1852_CMP , \$procmux$1844_CMP  }),
    .Y(initiator_clear_out)
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3768  (
    .A({ \$procmux$1931_CMP , \$procmux$1913_CMP , \$procmux$1902_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3769 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$4057  (
    .A({ \$procmux$1852_CMP , \$procmux$1844_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$4058 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$4059  (
    .A({ \$procmux$1913_CMP , \$procmux$1902_CMP  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$4060 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1767  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3765 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$811 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1768_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$1768_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1769_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$1769_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1770_CMP0  (
    .A(receiver_phase_q),
    .B(1'h1),
    .Y(\$procmux$1770_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1771_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$1771_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1789  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$811 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$808 ),
    .S(receiver_phase_req),
    .Y(receiver_clear_out)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1794  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3751 ),
    .B(\$auto$opt_reduce.cc:137:opt_pmux$3759 ),
    .S(receiver_phase_req),
    .Y(receiver_isolate_out)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1799  (
    .A(receiver_phase_req),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$806 ),
    .Y(receiver_phase_ack)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1802  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3753 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$808 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1803_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$1803_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1804_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$1804_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1805_CMP0  (
    .A(receiver_next_phase),
    .B(1'h1),
    .Y(\$procmux$1805_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1806_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$1806_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$1818  (
    .A(isolate_ack_i),
    .B({ clear_ack_i, 1'h1 }),
    .S({ \$procmux$1804_CMP , \$auto$opt_reduce.cc:137:opt_pmux$3763  }),
    .Y(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$806 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1831_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1831_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$1837_CMP0  (
    .A(initiator_state_q),
    .B(3'h7),
    .Y(\$procmux$1837_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$1844_CMP0  (
    .A(initiator_state_q),
    .B(3'h5),
    .Y(\$procmux$1844_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$1852_CMP0  (
    .A(initiator_state_q),
    .B(3'h6),
    .Y(\$procmux$1852_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$1867_CMP0  (
    .A(initiator_state_q),
    .B(3'h4),
    .Y(\$procmux$1867_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1875  (
    .A(2'h1),
    .B(2'h2),
    .S(initiator_phase_transition_ack),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$768 [1:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1889  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$768 [1:0]),
    .B(2'h3),
    .S(\$auto$builder.cc:338:Biop$760 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$769 [1:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1902_CMP0  (
    .A(initiator_state_q),
    .B(2'h2),
    .Y(\$procmux$1902_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1913_CMP0  (
    .A(initiator_state_q),
    .B(2'h3),
    .Y(\$procmux$1913_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$1931_CMP0  (
    .A(initiator_state_q),
    .B(1'h1),
    .Y(\$procmux$1931_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$1959  (
    .A({ 2'h1, initiator_phase_transition_ack }),
    .B(3'h4),
    .S(\$auto$builder.cc:338:Biop$743 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$752 [2:0])
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd4)
  ) \$procmux$1965  (
    .A(4'h1),
    .B({ 1'h0, \$auto$slang_frontend.cc:694:finish$\initiator_state_d$752 [2:0], 6'h11, \$auto$slang_frontend.cc:694:finish$\initiator_state_d$769 [1:0], 12'h780 }),
    .S({ \$procmux$1931_CMP , \$auto$opt_reduce.cc:137:opt_pmux$4060 , \$procmux$1867_CMP , \$auto$opt_reduce.cc:137:opt_pmux$4058 , \$procmux$1837_CMP , \$procmux$1831_CMP  }),
    .Y(initiator_state_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1982_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$1982_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$2049  (
    .A(2'h0),
    .B(6'h1b),
    .S({ \$auto$opt_reduce.cc:137:opt_pmux$3769 , initiator_clear_out, \$procmux$1837_CMP  }),
    .Y(initiator_clear_seq_phase)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$752 [3] = 1'h0;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$768 [3:2] = 2'h1;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$769 [3:2] = 2'h1;
endmodule

/* src = "../rtl/riscv-dbg/dmi_cdc.sv:19.8" */
module \dmi_cdc$dmi_jtag.i_dmi_cdc (clk_i, rst_ni, tck_i, trst_ni, jtag_dmi_req_i, jtag_dmi_ready_o, jtag_dmi_valid_i, jtag_dmi_cdc_clear_i, jtag_dmi_resp_o, jtag_dmi_valid_o, jtag_dmi_ready_i, core_dmi_rst_no, core_dmi_req_o, core_dmi_valid_o, core_dmi_ready_i, core_dmi_resp_i, core_dmi_ready_o, core_dmi_valid_i);
  wire \$auto$builder.cc:364:Unop$313 ;
  wire \$auto$builder.cc:364:Unop$322 ;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:98.28" */
  wire clear_pending_rise_edge_detect;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:35.28" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:48.28" */
  wire core_clear_pending;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:96.28" */
  wire core_clear_pending_q;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:41.28" */
  input core_dmi_ready_i;
  wire core_dmi_ready_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:44.28" */
  output core_dmi_ready_o;
  wire core_dmi_ready_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:39.28" */
  output [40:0] core_dmi_req_o;
  wire [40:0] core_dmi_req_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:43.28" */
  input [33:0] core_dmi_resp_i;
  wire [33:0] core_dmi_resp_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:38.28" */
  output core_dmi_rst_no;
  wire core_dmi_rst_no;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:97.28" */
  wire core_dmi_rst_nq;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:45.28" */
  input core_dmi_valid_i;
  wire core_dmi_valid_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:40.28" */
  output core_dmi_valid_o;
  wire core_dmi_valid_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:26.28" */
  input jtag_dmi_cdc_clear_i;
  wire jtag_dmi_cdc_clear_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:32.28" */
  input jtag_dmi_ready_i;
  wire jtag_dmi_ready_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:24.28" */
  output jtag_dmi_ready_o;
  wire jtag_dmi_ready_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:23.28" */
  input [40:0] jtag_dmi_req_i;
  wire [40:0] jtag_dmi_req_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:30.28" */
  output [33:0] jtag_dmi_resp_o;
  wire [33:0] jtag_dmi_resp_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:25.28" */
  input jtag_dmi_valid_i;
  wire jtag_dmi_valid_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:31.28" */
  output jtag_dmi_valid_o;
  wire jtag_dmi_valid_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:36.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:21.28" */
  input tck_i;
  wire tck_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:22.28" */
  input trst_ni;
  wire trst_ni;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$314  (
    .A(\$auto$builder.cc:364:Unop$313 ),
    .B(core_clear_pending),
    .Y(clear_pending_rise_edge_detect)
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$312  (
    .A(core_clear_pending_q),
    .Y(\$auto$builder.cc:364:Unop$313 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$321  (
    .A(clear_pending_rise_edge_detect),
    .Y(\$auto$builder.cc:364:Unop$322 )
  );
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:102.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$core_clear_pending_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(core_clear_pending),
    .Q(core_clear_pending_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:102.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$core_dmi_rst_nq  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D(\$auto$builder.cc:364:Unop$322 ),
    .Q(core_dmi_rst_nq)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:50.45" */
  \cdc_2phase_clearable$dmi_jtag.i_dmi_cdc.i_cdc_req  i_cdc_req (
    .dst_clear_i(1'h0),
    .dst_clear_pending_o(core_clear_pending),
    .dst_clk_i(clk_i),
    .dst_data_o(core_dmi_req_o),
    .dst_ready_i(core_dmi_ready_i),
    .dst_rst_ni(rst_ni),
    .dst_valid_o(core_dmi_valid_o),
    .src_clear_i(jtag_dmi_cdc_clear_i),
    .src_clk_i(tck_i),
    .src_data_i(jtag_dmi_req_i),
    .src_ready_o(jtag_dmi_ready_o),
    .src_rst_ni(trst_ni),
    .src_valid_i(jtag_dmi_valid_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:72.46" */
  \cdc_2phase_clearable$dmi_jtag.i_dmi_cdc.i_cdc_resp  i_cdc_resp (
    .dst_clear_i(jtag_dmi_cdc_clear_i),
    .dst_clk_i(tck_i),
    .dst_data_o(jtag_dmi_resp_o),
    .dst_ready_i(jtag_dmi_ready_i),
    .dst_rst_ni(trst_ni),
    .dst_valid_o(jtag_dmi_valid_o),
    .src_clear_i(1'h0),
    .src_clk_i(clk_i),
    .src_data_i(core_dmi_resp_i),
    .src_ready_o(core_dmi_ready_o),
    .src_rst_ni(rst_ni),
    .src_valid_i(core_dmi_valid_i)
  );
  assign core_dmi_rst_no = core_dmi_rst_nq;
endmodule

/* top =  1  */
/* src = "../rtl/riscv-dbg/dmi_jtag.sv:19.8" */
module dmi_jtag(clk_i, rst_ni, testmode_i, dmi_rst_no, dmi_req_o, dmi_req_valid_o, dmi_req_ready_i, dmi_resp_i, dmi_resp_ready_o, dmi_resp_valid_i, tck_i, tms_i, trst_ni, td_i, td_o, tdo_oe_o);
  wire \$auto$builder.cc:338:Biop$102 ;
  wire \$auto$builder.cc:338:Biop$107 ;
  wire \$auto$builder.cc:338:Biop$109 ;
  wire \$auto$builder.cc:338:Biop$116 ;
  wire \$auto$builder.cc:338:Biop$121 ;
  wire \$auto$builder.cc:338:Biop$123 ;
  wire \$auto$builder.cc:338:Biop$146 ;
  wire \$auto$builder.cc:338:Biop$150 ;
  wire \$auto$builder.cc:338:Biop$152 ;
  wire \$auto$builder.cc:338:Biop$2 ;
  wire \$auto$builder.cc:338:Biop$28 ;
  wire \$auto$builder.cc:338:Biop$37 ;
  wire \$auto$builder.cc:338:Biop$4 ;
  wire \$auto$builder.cc:338:Biop$41 ;
  wire \$auto$builder.cc:338:Biop$45 ;
  wire \$auto$builder.cc:338:Biop$49 ;
  wire \$auto$builder.cc:338:Biop$89 ;
  wire \$auto$builder.cc:338:Biop$91 ;
  wire \$auto$builder.cc:364:Unop$144 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4008 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4010 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4012 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4014 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4016 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4021 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4024 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4028 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4035 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$4018 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$4030 ;
  wire \$auto$opt_dff.cc:219:make_patterns_logic$4037 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3771 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3777 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$100 ;
  wire \$auto$rtlil.cc:2793:Eq$96 ;
  wire \$auto$rtlil.cc:2793:Eq$98 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\data_d$62 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\data_d$85 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:271.20-273.14" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$155 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:268.11-273.14" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$156 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:267.9-274.12" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$157 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:266.7-275.10" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$158 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:278.9-280.12" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$163 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:277.7-281.10" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$164 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:73.7-84.10" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\dtmcs_d$12 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:72.5-85.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\dtmcs_d$13 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:88.7-88.61" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\dtmcs_d$20 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:247.7-249.10" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\error_d$119 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:252.7-254.10" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\error_d$126 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:239.7-241.10" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$105 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$63 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$67 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$86 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:232.7-234.10" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$94 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$64 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$68 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$87 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:163.13-167.16" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$53 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$83 ;
  wire \$procmux$3236_CMP ;
  wire \$procmux$3240_CMP ;
  wire \$procmux$3310_CMP ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:125.15" */
  wire [6:0] address_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:125.26" */
  wire [6:0] address_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:56.9" */
  wire capture;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:22.24" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:126.16" */
  wire [31:0] data_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:126.24" */
  wire [31:0] data_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:128.10" */
  wire [40:0] dmi;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:54.9" */
  wire dmi_clear;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:107.18" */
  wire [40:0] dmi_req;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:29.24" */
  output [40:0] dmi_req_o;
  wire [40:0] dmi_req_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:108.18" */
  wire dmi_req_ready;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:31.24" */
  input dmi_req_ready_i;
  wire dmi_req_ready_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:109.18" */
  wire dmi_req_valid;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:30.24" */
  output dmi_req_valid_o;
  wire dmi_req_valid_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:111.18" */
  wire [33:0] dmi_resp;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:33.24" */
  input [33:0] dmi_resp_i;
  wire [33:0] dmi_resp_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:113.18" */
  wire dmi_resp_ready;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:34.24" */
  output dmi_resp_ready_o;
  wire dmi_resp_ready_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:112.18" */
  wire dmi_resp_valid;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:35.24" */
  input dmi_resp_valid_i;
  wire dmi_resp_valid_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:28.24" */
  output dmi_rst_no;
  wire dmi_rst_no;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:104.16" */
  wire dmi_select;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:105.16" */
  wire dmi_tdo;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:124.28" */
  wire [40:0] dr_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:124.34" */
  wire [40:0] dr_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:68.15" */
  wire [31:0] dtmcs_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:68.24" */
  wire [31:0] dtmcs_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:60.9" */
  wire dtmcs_select;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:49.15" */
  wire [1:0] error_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:136.9" */
  wire error_dmi_busy;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:49.24" */
  wire [1:0] error_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:52.9" */
  wire jtag_dmi_clear;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:23.24" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:57.9" */
  wire shift;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:122.11" */
  wire [2:0] state_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:122.20" */
  wire [2:0] state_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:51.9" */
  wire tck;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:37.24" */
  input tck_i;
  wire tck_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:40.24" */
  input td_i;
  wire td_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:41.24" */
  output td_o;
  wire td_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:58.9" */
  wire tdi;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:42.24" */
  output tdo_oe_o;
  wire tdo_oe_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:24.24" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:38.24" */
  input tms_i;
  wire tms_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:39.24" */
  input trst_ni;
  wire trst_ni;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:55.9" */
  wire update;
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:18:ReduceBool$99  (
    .A({ \$auto$rtlil.cc:2793:Eq$98 , \$auto$rtlil.cc:2793:Eq$96  }),
    .Y(\$auto$rtlil.cc:2746:ReduceBool$100 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1  (
    .A(dtmcs_select),
    .B(update),
    .Y(\$auto$builder.cc:338:Biop$2 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$101  (
    .A(capture),
    .B(\$auto$rtlil.cc:2746:ReduceBool$100 ),
    .Y(\$auto$builder.cc:338:Biop$102 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$106  (
    .A(error_q),
    .Y(\$auto$builder.cc:338:Biop$107 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$108  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$105 ),
    .B(\$auto$builder.cc:338:Biop$107 ),
    .Y(\$auto$builder.cc:338:Biop$109 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$115  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$87 ),
    .B(\$auto$builder.cc:338:Biop$107 ),
    .Y(\$auto$builder.cc:338:Biop$116 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$120  (
    .A(update),
    .B(dtmcs_q[16]),
    .Y(\$auto$builder.cc:338:Biop$121 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$122  (
    .A(\$auto$builder.cc:338:Biop$121 ),
    .B(dtmcs_select),
    .Y(\$auto$builder.cc:338:Biop$123 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$145  (
    .A(\$auto$builder.cc:338:Biop$107 ),
    .B(\$auto$builder.cc:364:Unop$144 ),
    .Y(\$auto$builder.cc:338:Biop$146 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$149  (
    .A(error_q),
    .B(2'h3),
    .Y(\$auto$builder.cc:338:Biop$150 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$151  (
    .A(\$auto$builder.cc:338:Biop$150 ),
    .B(error_dmi_busy),
    .Y(\$auto$builder.cc:338:Biop$152 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$27  (
    .A(state_q),
    .B(2'h3),
    .Y(\$auto$builder.cc:338:Biop$28 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3  (
    .A(\$auto$builder.cc:338:Biop$2 ),
    .B(dtmcs_q[17]),
    .Y(\$auto$builder.cc:338:Biop$4 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$36  (
    .A(dmi_select),
    .B(update),
    .Y(\$auto$builder.cc:338:Biop$37 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$40  (
    .A(\$auto$builder.cc:338:Biop$37 ),
    .B(\$auto$builder.cc:338:Biop$107 ),
    .Y(\$auto$builder.cc:338:Biop$41 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$44  (
    .A(dr_q[1:0]),
    .B(1'h1),
    .Y(\$auto$builder.cc:338:Biop$45 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$48  (
    .A(dr_q[1:0]),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$49 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5  (
    .A(jtag_dmi_clear),
    .B(\$auto$builder.cc:338:Biop$4 ),
    .Y(dmi_clear)
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$88  (
    .A(state_q),
    .Y(\$auto$builder.cc:338:Biop$89 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$90  (
    .A(update),
    .B(\$auto$builder.cc:338:Biop$89 ),
    .Y(\$auto$builder.cc:338:Biop$91 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$143  (
    .A(error_dmi_busy),
    .Y(\$auto$builder.cc:364:Unop$144 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:78:EqWildcard$95  (
    .A(state_q),
    .B(1'h1),
    .Y(\$auto$rtlil.cc:2793:Eq$96 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:78:EqWildcard$97  (
    .A(state_q),
    .B(2'h2),
    .Y(\$auto$rtlil.cc:2793:Eq$98 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:285.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(3'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$auto$ff.cc:266:slice$4007  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(state_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$4018 ),
    .Q(state_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:285.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$auto$ff.cc:266:slice$4020  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(error_d),
    .EN(\$auto$opt_dff.cc:194:make_patterns_logic$4021 ),
    .Q(error_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:285.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(32'd0),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$auto$ff.cc:266:slice$4023  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(data_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$4030 ),
    .Q(data_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:285.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(7'h00),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$auto$ff.cc:266:slice$4032  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(address_d),
    .EN(\$auto$opt_dff.cc:219:make_patterns_logic$4037 ),
    .Q(address_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4009  (
    .A({ \$auto$builder.cc:338:Biop$28 , dmi_req_ready, dmi_clear }),
    .B(3'h4),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4008 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4011  (
    .A({ \$auto$rtlil.cc:2793:Eq$96 , dmi_req_ready, dmi_clear }),
    .B(3'h4),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4010 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4013  (
    .A({ \$procmux$3240_CMP , \$auto$rtlil.cc:2793:Eq$96 , \$auto$builder.cc:338:Biop$28 , dmi_resp_valid, dmi_clear }),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4012 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4015  (
    .A({ \$procmux$3240_CMP , \$auto$builder.cc:338:Biop$41 , dmi_clear }),
    .B(3'h4),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4014 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4017  (
    .A({ \$procmux$3240_CMP , \$auto$builder.cc:338:Biop$49 , \$auto$builder.cc:338:Biop$45 , \$auto$builder.cc:338:Biop$41 , dmi_clear }),
    .B(5'h12),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4016 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4022  (
    .A({ \$auto$builder.cc:338:Biop$123 , \$auto$builder.cc:338:Biop$116 , \$auto$builder.cc:338:Biop$109 , dmi_clear }),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4021 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4025  (
    .A({ \$auto$rtlil.cc:2793:Eq$98 , dmi_resp_valid, dmi_clear }),
    .B(3'h4),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4024 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4029  (
    .A({ \$procmux$3240_CMP , \$auto$rtlil.cc:2793:Eq$98 , dmi_clear }),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4028 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4036  (
    .A({ \$procmux$3240_CMP , dmi_clear }),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4035 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$4019  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$4016 , \$auto$opt_dff.cc:194:make_patterns_logic$4014 , \$auto$opt_dff.cc:194:make_patterns_logic$4012 , \$auto$opt_dff.cc:194:make_patterns_logic$4010 , \$auto$opt_dff.cc:194:make_patterns_logic$4008  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$4018 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$4031  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$4028 , \$auto$opt_dff.cc:194:make_patterns_logic$4024 , \$auto$opt_dff.cc:194:make_patterns_logic$4014  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$4030 )
  );
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:220:make_patterns_logic$4038  (
    .A({ \$auto$opt_dff.cc:194:make_patterns_logic$4014 , \$auto$opt_dff.cc:194:make_patterns_logic$4035  }),
    .Y(\$auto$opt_dff.cc:219:make_patterns_logic$4037 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3770  (
    .A({ \$auto$rtlil.cc:2793:Eq$96 , \$auto$builder.cc:338:Biop$28  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3771 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3778  (
    .A({ \$procmux$3236_CMP , \$auto$rtlil.cc:2793:Eq$98  }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3777 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$31  (
    .A(2'h1),
    .B(2'h2),
    .S(\$auto$builder.cc:338:Biop$28 ),
    .Y(dmi_req[33:32])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:285.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(41'h00000000000),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd41)
  ) \$driver$dr_q  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(dr_d),
    .Q(dr_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(6'h00),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd6)
  ) \$driver$dtmcs_q.abits  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[9:4]),
    .Q(dtmcs_q[9:4])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dtmcs_q.dmihardreset  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[17]),
    .Q(dtmcs_q[17])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dtmcs_q.dmireset  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[16]),
    .Q(dtmcs_q[16])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$dtmcs_q.dmistat  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[11:10]),
    .Q(dtmcs_q[11:10])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(3'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$dtmcs_q.idle  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[14:12]),
    .Q(dtmcs_q[14:12])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(4'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$dtmcs_q.version  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[3:0]),
    .Q(dtmcs_q[3:0])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dtmcs_q.zero0  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[15]),
    .Q(dtmcs_q[15])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(14'h0000),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd14)
  ) \$driver$dtmcs_q.zero1  (
    .ARST(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[31:18]),
    .Q(dtmcs_q[31:18])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:253.9-253.30|../rtl/riscv-dbg/dmi_jtag.sv:252.7-254.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3192  (
    .A({ 1'h1, \$auto$slang_frontend.cc:694:finish$\error_d$119 [0] }),
    .B(2'h0),
    .S(\$auto$builder.cc:338:Biop$123 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\error_d$126 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:248.9-248.31|../rtl/riscv-dbg/dmi_jtag.sv:247.7-249.10" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3202  (
    .A(\$auto$builder.cc:338:Biop$116 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\error_d$119 [0])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:240.9-240.31|../rtl/riscv-dbg/dmi_jtag.sv:239.7-241.10" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3219  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$94 ),
    .B(\$auto$builder.cc:338:Biop$102 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$105 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:233.9-233.31|../rtl/riscv-dbg/dmi_jtag.sv:232.7-234.10" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3226  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$86 ),
    .B(\$auto$builder.cc:338:Biop$91 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$94 )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3236_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$3236_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3240_CMP0  (
    .A(state_q),
    .Y(\$procmux$3240_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:214.28-214.55|../rtl/riscv-dbg/dmi_jtag.sv:213.13-217.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3248_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h2),
    .Y(\$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$64 )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:215.29-215.51|../rtl/riscv-dbg/dmi_jtag.sv:213.13-217.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3259_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h3),
    .Y(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$63 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.31-219.14|../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3278  (
    .A(dmi_resp_valid),
    .B(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$63 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$67 )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:190.29-193.18|../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd32)
  ) \$procmux$3307  (
    .A(32'd3131949278),
    .B({ dmi_resp[33:2], 64'hdeadbeefb051b051 }),
    .S({ \$procmux$3310_CMP , \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$64 , \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$63  }),
    .Y(\$auto$slang_frontend.cc:694:finish$\data_d$62 )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:184.17-184.40|../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3310_CMP0  (
    .A(dmi_resp[1:0]),
    .Y(\$procmux$3310_CMP )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.31-199.14|../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3349  (
    .A(dmi_resp_valid),
    .B(\$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$64 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$68 )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$3407  (
    .A(dr_q[33:2]),
    .B(\$auto$slang_frontend.cc:694:finish$\data_d$62 ),
    .S(\$auto$rtlil.cc:2793:Eq$98 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\data_d$85 )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd3)
  ) \$procmux$3434  (
    .A(3'h0),
    .B({ 1'h0, \$auto$slang_frontend.cc:694:finish$\state_d$53 [1], 7'h54 }),
    .S({ \$procmux$3240_CMP , \$auto$rtlil.cc:2793:Eq$96 , \$auto$builder.cc:338:Biop$28  }),
    .Y(\$auto$slang_frontend.cc:694:finish$\state_d$83 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:164.15-164.30|../rtl/riscv-dbg/dmi_jtag.sv:163.13-167.16" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3471  (
    .A(\$auto$builder.cc:338:Biop$45 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\state_d$53 [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3522  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3777 ),
    .B(\$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$68 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$87 )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3533  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3777 ),
    .B(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$67 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$86 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$3561  (
    .A(\$auto$slang_frontend.cc:694:finish$\data_d$85 ),
    .B(32'd0),
    .S(dmi_clear),
    .Y(data_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3570  (
    .A(dr_q[40:34]),
    .B(7'h00),
    .S(dmi_clear),
    .Y(address_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3579  (
    .A(\$auto$slang_frontend.cc:694:finish$\state_d$83 ),
    .B(3'h0),
    .S(dmi_clear),
    .Y(state_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3588  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_d$126 ),
    .B(2'h0),
    .S(dmi_clear),
    .Y(error_d)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3606  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$105 ),
    .B(1'h0),
    .S(dmi_clear),
    .Y(error_dmi_busy)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3615  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3771 ),
    .B(1'h0),
    .S(dmi_clear),
    .Y(dmi_req_valid)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:279.11-279.47|../rtl/riscv-dbg/dmi_jtag.sv:278.9-280.12" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$3617  (
    .A(\$auto$slang_frontend.cc:694:finish$\dr_d$158 ),
    .B({ tdi, dr_q[40:1] }),
    .S(dmi_select),
    .Y(\$auto$slang_frontend.cc:694:finish$\dr_d$163 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:278.9-280.12|../rtl/riscv-dbg/dmi_jtag.sv:277.7-281.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$3626  (
    .A(\$auto$slang_frontend.cc:694:finish$\dr_d$158 ),
    .B(\$auto$slang_frontend.cc:694:finish$\dr_d$163 ),
    .S(shift),
    .Y(\$auto$slang_frontend.cc:694:finish$\dr_d$164 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:272.13-272.49|../rtl/riscv-dbg/dmi_jtag.sv:271.20-273.14" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$3632  (
    .A(dr_q),
    .B({ address_q, data_q, 2'h3 }),
    .S(\$auto$builder.cc:338:Biop$152 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\dr_d$155 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:269.13-269.52|../rtl/riscv-dbg/dmi_jtag.sv:268.11-273.14" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$3646  (
    .A(\$auto$slang_frontend.cc:694:finish$\dr_d$155 ),
    .B({ address_q, data_q, 2'h0 }),
    .S(\$auto$builder.cc:338:Biop$146 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\dr_d$156 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:268.11-273.14|../rtl/riscv-dbg/dmi_jtag.sv:267.9-274.12" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$3656  (
    .A(dr_q),
    .B(\$auto$slang_frontend.cc:694:finish$\dr_d$156 ),
    .S(dmi_select),
    .Y(\$auto$slang_frontend.cc:694:finish$\dr_d$157 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:267.9-274.12|../rtl/riscv-dbg/dmi_jtag.sv:266.7-275.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$3664  (
    .A(dr_q),
    .B(\$auto$slang_frontend.cc:694:finish$\dr_d$157 ),
    .S(capture),
    .Y(\$auto$slang_frontend.cc:694:finish$\dr_d$158 )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:264.7-264.17|../rtl/riscv-dbg/dmi_jtag.sv:263.5-282.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$3672  (
    .A(\$auto$slang_frontend.cc:694:finish$\dr_d$164 ),
    .B(41'h00000000000),
    .S(dmi_clear),
    .Y(dr_d)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:88.25-88.61|../rtl/riscv-dbg/dmi_jtag.sv:88.7-88.61" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$3674  (
    .A(\$auto$slang_frontend.cc:694:finish$\dtmcs_d$13 ),
    .B({ tdi, dtmcs_q[31:1] }),
    .S(dtmcs_select),
    .Y(\$auto$slang_frontend.cc:694:finish$\dtmcs_d$20 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:88.7-88.61|../rtl/riscv-dbg/dmi_jtag.sv:87.5-89.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$3680  (
    .A(\$auto$slang_frontend.cc:694:finish$\dtmcs_d$13 ),
    .B(\$auto$slang_frontend.cc:694:finish$\dtmcs_d$20 ),
    .S(shift),
    .Y(dtmcs_d)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:74.9-83.23|../rtl/riscv-dbg/dmi_jtag.sv:73.7-84.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$3683  (
    .A(dtmcs_q),
    .B({ 20'h00001, error_q, 10'h071 }),
    .S(dtmcs_select),
    .Y(\$auto$slang_frontend.cc:694:finish$\dtmcs_d$12 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:73.7-84.10|../rtl/riscv-dbg/dmi_jtag.sv:72.5-85.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$3688  (
    .A(dtmcs_q),
    .B(\$auto$slang_frontend.cc:694:finish$\dtmcs_d$12 ),
    .S(capture),
    .Y(\$auto$slang_frontend.cc:694:finish$\dtmcs_d$13 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:330.11" */
  \dmi_cdc$dmi_jtag.i_dmi_cdc  i_dmi_cdc (
    .clk_i(clk_i),
    .core_dmi_ready_i(dmi_req_ready_i),
    .core_dmi_ready_o(dmi_resp_ready_o),
    .core_dmi_req_o(dmi_req_o),
    .core_dmi_resp_i(dmi_resp_i),
    .core_dmi_rst_no(dmi_rst_no),
    .core_dmi_valid_i(dmi_resp_valid_i),
    .core_dmi_valid_o(dmi_req_valid_o),
    .jtag_dmi_cdc_clear_i(dmi_clear),
    .jtag_dmi_ready_i(1'h1),
    .jtag_dmi_ready_o(dmi_req_ready),
    .jtag_dmi_req_i({ address_q, dmi_req[33:32], data_q }),
    .jtag_dmi_resp_o(dmi_resp),
    .jtag_dmi_valid_i(dmi_req_valid),
    .jtag_dmi_valid_o(dmi_resp_valid),
    .rst_ni(rst_ni),
    .tck_i(tck),
    .trst_ni(trst_ni)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:307.5" */
  \dmi_jtag_tap$dmi_jtag.i_dmi_jtag_tap  i_dmi_jtag_tap (
    .capture_o(capture),
    .dmi_clear_o(jtag_dmi_clear),
    .dmi_select_o(dmi_select),
    .dmi_tdo_i(dr_q[0]),
    .dtmcs_select_o(dtmcs_select),
    .dtmcs_tdo_i(dtmcs_q[0]),
    .shift_o(shift),
    .tck_i(tck_i),
    .tck_o(tck),
    .td_i(td_i),
    .td_o(td_o),
    .tdi_o(tdi),
    .tdo_oe_o(tdo_oe_o),
    .testmode_i(testmode_i),
    .tms_i(tms_i),
    .trst_ni(trst_ni),
    .update_o(update)
  );
  assign \$auto$slang_frontend.cc:694:finish$\error_d$119 [1] = 1'h1;
  assign { \$auto$slang_frontend.cc:694:finish$\state_d$53 [2], \$auto$slang_frontend.cc:694:finish$\state_d$53 [0] } = 2'h1;
  assign dmi = dr_q;
  assign { dmi_req[40:34], dmi_req[31:0] } = { address_q, data_q };
  assign dmi_resp_ready = 1'h1;
  assign dmi_tdo = dr_q[0];
endmodule

/* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:19.8" */
module \dmi_jtag_tap$dmi_jtag.i_dmi_jtag_tap (testmode_i, tck_i, tms_i, trst_ni, td_i, td_o, tdo_oe_o, tck_o, dmi_clear_o, update_o, capture_o, shift_o, tdi_o, dtmcs_select_o, dtmcs_tdo_i, dmi_select_o, dmi_tdo_i);
  wire \$auto$builder.cc:338:Biop$233 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4040 ;
  wire \$auto$opt_dff.cc:194:make_patterns_logic$4043 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3773 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3775 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3781 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3783 ;
  wire \$auto$opt_reduce.cc:137:opt_pmux$3785 ;
  wire \$auto$rtlil.cc:2874:Mux$238 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$242 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:132.7-132.42" */
  wire \$auto$slang_frontend.cc:694:finish$\bypass_d$198 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  wire \$auto$slang_frontend.cc:694:finish$\bypass_d$200 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:137.7-137.43" */
  wire \$auto$slang_frontend.cc:694:finish$\bypass_d$210 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  wire \$auto$slang_frontend.cc:694:finish$\bypass_d$212 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:131.7-131.49" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\idcode_d$195 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\idcode_d$199 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:136.7-136.65" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\idcode_d$207 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\idcode_d$211 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:88.5-90.8" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$177 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  wire \$auto$slang_frontend.cc:694:finish$\tdo_mux$225 ;
  wire \$procmux$3090_CMP ;
  wire \$procmux$3091_CMP ;
  wire \$procmux$3092_CMP ;
  wire \$procmux$3095_CMP ;
  wire \$procmux$3097_CMP ;
  wire \$procmux$3098_CMP ;
  wire \$procmux$3099_CMP ;
  wire \$procmux$3102_CMP ;
  wire \$procmux$3103_CMP ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:124.16" */
  wire bypass_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:124.26" */
  wire bypass_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:58.30" */
  wire capture_dr;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:76.9" */
  wire capture_ir;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:40.23" */
  output capture_o;
  wire capture_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:38.23" */
  output dmi_clear_o;
  wire dmi_clear_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:46.23" */
  output dmi_select_o;
  wire dmi_select_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:47.23" */
  input dmi_tdo_i;
  wire dmi_tdo_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:43.23" */
  output dtmcs_select_o;
  wire dtmcs_select_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:44.23" */
  input dtmcs_tdo_i;
  wire dtmcs_tdo_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:120.16" */
  wire [31:0] idcode_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:120.26" */
  wire [31:0] idcode_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:121.16" */
  wire idcode_select;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:75.25" */
  wire [4:0] jtag_ir_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:75.36" */
  wire [4:0] jtag_ir_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:73.25" */
  wire [4:0] jtag_ir_shift_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:73.42" */
  wire [4:0] jtag_ir_shift_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:58.20" */
  wire shift_dr;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:76.21" */
  wire shift_ir;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:41.23" */
  output shift_o;
  wire shift_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:57.28" */
  wire [3:0] tap_state_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:57.15" */
  wire [3:0] tap_state_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:28.23" */
  input tck_i;
  wire tck_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:188.9" */
  wire tck_n;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:188.16" */
  wire tck_ni;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:36.23" */
  output tck_o;
  wire tck_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:31.23" */
  input td_i;
  wire td_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:32.23" */
  output td_o;
  wire td_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:42.23" */
  output tdi_o;
  wire tdi_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:168.9" */
  wire tdo_mux;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:33.23" */
  output tdo_oe_o;
  wire tdo_oe_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:76.42" */
  wire test_logic_reset;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:34.23" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:29.23" */
  input tms_i;
  wire tms_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:30.23" */
  input trst_ni;
  wire trst_ni;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:58.9" */
  wire update_dr;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:76.31" */
  wire update_ir;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:39.23" */
  output update_o;
  wire update_o;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$232  (
    .A(shift_ir),
    .B(shift_dr),
    .Y(\$auto$builder.cc:338:Biop$233 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:104.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(5'h00),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd5)
  ) \$auto$ff.cc:266:slice$4039  (
    .ARST(trst_ni),
    .CLK(tck_i),
    .D(jtag_ir_shift_d),
    .EN(\$auto$opt_dff.cc:194:make_patterns_logic$4040 ),
    .Q(jtag_ir_shift_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:104.3" */
  \$adffe  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(5'h01),
    .CLK_POLARITY(32'd1),
    .EN_POLARITY(32'd1),
    .WIDTH(32'd5)
  ) \$auto$ff.cc:266:slice$4042  (
    .ARST(trst_ni),
    .CLK(tck_i),
    .D(jtag_ir_d),
    .EN(\$auto$opt_dff.cc:194:make_patterns_logic$4043 ),
    .Q(jtag_ir_q)
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4041  (
    .A({ capture_ir, shift_ir, \$auto$opt_reduce.cc:137:opt_pmux$3775  }),
    .B(3'h1),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4040 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_dff.cc:195:make_patterns_logic$4044  (
    .A({ update_ir, \$auto$opt_reduce.cc:137:opt_pmux$3775  }),
    .B(2'h1),
    .Y(\$auto$opt_dff.cc:194:make_patterns_logic$4043 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3772  (
    .A({ idcode_select, dmi_select_o, dtmcs_select_o }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3773 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd15),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3774  (
    .A({ \$procmux$3103_CMP , \$procmux$3102_CMP , \$procmux$3099_CMP , \$procmux$3098_CMP , \$procmux$3097_CMP , \$procmux$3095_CMP , \$procmux$3092_CMP , \$procmux$3091_CMP , \$procmux$3090_CMP , update_ir, shift_ir, capture_ir, shift_dr, capture_o, update_o }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3775 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3780  (
    .A({ \$procmux$3103_CMP , update_ir, update_o }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3781 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3782  (
    .A({ shift_ir, capture_ir }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3783 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_reduce.cc:131:opt_pmux$3784  (
    .A({ shift_dr, capture_o }),
    .Y(\$auto$opt_reduce.cc:137:opt_pmux$3785 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$237  (
    .A(tms_i),
    .Y(\$auto$rtlil.cc:2874:Mux$238 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$265  (
    .A(2'h1),
    .B(2'h2),
    .S(tms_i),
    .Y(\$auto$rtlil.cc:2874:Mux$242 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:304.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$bypass_q  (
    .ARST(trst_ni),
    .CLK(tck_i),
    .D(bypass_d),
    .Q(bypass_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:304.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(32'd3507),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$idcode_q  (
    .ARST(trst_ni),
    .CLK(tck_i),
    .D(idcode_d),
    .Q(idcode_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:304.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(4'h1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$tap_state_q  (
    .ARST(trst_ni),
    .CLK(tck_i),
    .D(tap_state_d),
    .Q(tap_state_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:203.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$td_o  (
    .ARST(trst_ni),
    .CLK(tck_n),
    .D(tdo_mux),
    .Q(td_o)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:203.3" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(1'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$tdo_oe_o  (
    .ARST(trst_ni),
    .CLK(tck_n),
    .D(\$auto$builder.cc:338:Biop$233 ),
    .Q(tdo_oe_o)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:179.25-179.45|../rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$3010  (
    .A(bypass_q),
    .B({ idcode_q[0], dtmcs_tdo_i, dmi_tdo_i }),
    .S({ idcode_select, dtmcs_select_o, dmi_select_o }),
    .Y(\$auto$slang_frontend.cc:694:finish$\tdo_mux$225 )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:179.25-179.45|../rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$3011_CMP0  (
    .A(jtag_ir_q),
    .B(5'h11),
    .Y(dmi_select_o)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:178.25-178.47|../rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$3012_CMP0  (
    .A(jtag_ir_q),
    .B(5'h10),
    .Y(dtmcs_select_o)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:177.25-177.47|../rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3013_CMP0  (
    .A(jtag_ir_q),
    .B(1'h1),
    .Y(idcode_select)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:173.7-173.36|../rtl/riscv-dbg/dmi_jtag_tap.sv:172.5-182.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3019  (
    .A(\$auto$slang_frontend.cc:694:finish$\tdo_mux$225 ),
    .B(jtag_ir_shift_q[0]),
    .S(shift_ir),
    .Y(tdo_mux)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:140.27-144.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:140.5-144.8" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3042  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3775 ),
    .B(\$auto$slang_frontend.cc:694:finish$\bypass_d$212 ),
    .Y(bypass_d)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:140.27-144.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:140.5-144.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$3046  (
    .A(32'd3507),
    .B(\$auto$slang_frontend.cc:694:finish$\idcode_d$211 ),
    .S(\$auto$opt_reduce.cc:137:opt_pmux$3775 ),
    .Y(idcode_d)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:137.27-137.43|../rtl/riscv-dbg/dmi_jtag_tap.sv:137.7-137.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3050  (
    .A(td_i),
    .B(\$auto$slang_frontend.cc:694:finish$\bypass_d$200 ),
    .S(\$auto$opt_reduce.cc:137:opt_pmux$3773 ),
    .Y(\$auto$slang_frontend.cc:694:finish$\bypass_d$210 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:136.27-136.65|../rtl/riscv-dbg/dmi_jtag_tap.sv:136.7-136.65" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$3056  (
    .A(\$auto$slang_frontend.cc:694:finish$\idcode_d$199 ),
    .B({ td_i, idcode_q[31:1] }),
    .S(idcode_select),
    .Y(\$auto$slang_frontend.cc:694:finish$\idcode_d$207 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:135.19-138.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3063  (
    .A(\$auto$slang_frontend.cc:694:finish$\bypass_d$200 ),
    .B(\$auto$slang_frontend.cc:694:finish$\bypass_d$210 ),
    .S(shift_dr),
    .Y(\$auto$slang_frontend.cc:694:finish$\bypass_d$212 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:135.19-138.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$3068  (
    .A(\$auto$slang_frontend.cc:694:finish$\idcode_d$199 ),
    .B(\$auto$slang_frontend.cc:694:finish$\idcode_d$207 ),
    .S(shift_dr),
    .Y(\$auto$slang_frontend.cc:694:finish$\idcode_d$211 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:132.26-132.42|../rtl/riscv-dbg/dmi_jtag_tap.sv:132.7-132.42" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3071  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3773 ),
    .B(bypass_q),
    .Y(\$auto$slang_frontend.cc:694:finish$\bypass_d$198 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:131.26-131.49|../rtl/riscv-dbg/dmi_jtag_tap.sv:131.7-131.49" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$3076  (
    .A(idcode_q),
    .B(32'd3507),
    .S(idcode_select),
    .Y(\$auto$slang_frontend.cc:694:finish$\idcode_d$195 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:130.21-133.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3082  (
    .A(bypass_q),
    .B(\$auto$slang_frontend.cc:694:finish$\bypass_d$198 ),
    .S(capture_o),
    .Y(\$auto$slang_frontend.cc:694:finish$\bypass_d$200 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:130.21-133.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$3086  (
    .A(idcode_q),
    .B(\$auto$slang_frontend.cc:694:finish$\idcode_d$195 ),
    .S(capture_o),
    .Y(\$auto$slang_frontend.cc:694:finish$\idcode_d$199 )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3088  (
    .A(\$auto$opt_reduce.cc:137:opt_pmux$3775 ),
    .Y(dmi_clear_o)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3089_CMP0  (
    .A(tap_state_q),
    .B(4'hf),
    .Y(update_ir)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:290.9-290.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3090_CMP0  (
    .A(tap_state_q),
    .B(4'he),
    .Y(\$procmux$3090_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:287.9-287.51|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3091_CMP0  (
    .A(tap_state_q),
    .B(4'hd),
    .Y(\$procmux$3091_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:283.9-283.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3092_CMP0  (
    .A(tap_state_q),
    .B(4'hc),
    .Y(\$procmux$3092_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:278.16-281.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3093_CMP0  (
    .A(tap_state_q),
    .B(4'hb),
    .Y(shift_ir)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:270.18-273.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3094_CMP0  (
    .A(tap_state_q),
    .B(4'ha),
    .Y(capture_ir)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:264.9-264.60|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3095_CMP0  (
    .A(tap_state_q),
    .B(4'h9),
    .Y(\$procmux$3095_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:258.17-261.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3096_CMP0  (
    .A(tap_state_q),
    .B(4'h8),
    .Y(update_o)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:256.9-256.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3097_CMP0  (
    .A(tap_state_q),
    .B(3'h7),
    .Y(\$procmux$3097_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:253.9-253.51|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3098_CMP0  (
    .A(tap_state_q),
    .B(3'h6),
    .Y(\$procmux$3098_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:250.9-250.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3099_CMP0  (
    .A(tap_state_q),
    .B(3'h5),
    .Y(\$procmux$3099_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:245.16-248.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3100_CMP0  (
    .A(tap_state_q),
    .B(3'h4),
    .Y(shift_dr)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:241.18-244.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3101_CMP0  (
    .A(tap_state_q),
    .B(2'h3),
    .Y(capture_o)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:239.9-239.58|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3102_CMP0  (
    .A(tap_state_q),
    .B(2'h2),
    .Y(\$procmux$3102_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:235.9-235.60|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$3103_CMP0  (
    .A(tap_state_q),
    .B(1'h1),
    .Y(\$procmux$3103_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$pmux  #(
    .S_WIDTH(32'd11),
    .WIDTH(32'd4)
  ) \$procmux$3105  (
    .A({ 3'h0, \$auto$rtlil.cc:2874:Mux$238  }),
    .B({ \$auto$rtlil.cc:2874:Mux$242 [1], 1'h0, \$auto$rtlil.cc:2874:Mux$242 [0], 4'ha, tms_i, \$auto$rtlil.cc:2874:Mux$242 , \$auto$rtlil.cc:2874:Mux$242 [0], 4'h3, tms_i, \$auto$rtlil.cc:2874:Mux$242 , 2'h0, \$auto$rtlil.cc:2874:Mux$238 , 1'h0, \$auto$rtlil.cc:2874:Mux$238 , 2'h1, \$auto$rtlil.cc:2874:Mux$242 , \$auto$rtlil.cc:2874:Mux$242 [0], 2'h3, tms_i, 3'h7, \$auto$rtlil.cc:2874:Mux$242 , 1'h1, tms_i, 4'hc, \$auto$rtlil.cc:2874:Mux$242  }),
    .S({ \$procmux$3102_CMP , \$auto$opt_reduce.cc:137:opt_pmux$3785 , \$procmux$3099_CMP , \$procmux$3098_CMP , \$procmux$3097_CMP , \$procmux$3095_CMP , \$auto$opt_reduce.cc:137:opt_pmux$3783 , \$procmux$3092_CMP , \$procmux$3091_CMP , \$procmux$3090_CMP , \$auto$opt_reduce.cc:137:opt_pmux$3781  }),
    .Y(tap_state_d)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:97.27-101.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:97.5-101.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$3173  (
    .A(5'h01),
    .B(jtag_ir_shift_q),
    .S(\$auto$opt_reduce.cc:137:opt_pmux$3775 ),
    .Y(jtag_ir_d)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:97.27-101.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:97.5-101.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$3178  (
    .A(5'h00),
    .B(\$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$177 ),
    .S(\$auto$opt_reduce.cc:137:opt_pmux$3775 ),
    .Y(jtag_ir_shift_d)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:89.7-89.45|../rtl/riscv-dbg/dmi_jtag_tap.sv:88.5-90.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$3187  (
    .A({ td_i, jtag_ir_shift_q[4:1] }),
    .B(5'h05),
    .S(capture_ir),
    .Y(\$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$177 )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:195.15" */
  \tc_clk_mux2$dmi_jtag.i_dmi_jtag_tap.i_dft_tck_mux  i_dft_tck_mux (
    .clk0_i(tck_ni),
    .clk1_i(tck_i),
    .clk_o(tck_n),
    .clk_sel_i(testmode_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:190.19" */
  \tc_clk_inverter$dmi_jtag.i_dmi_jtag_tap.i_tck_inv  i_tck_inv (
    .clk_i(tck_i),
    .clk_o(tck_ni)
  );
  assign capture_dr = capture_o;
  assign shift_o = shift_dr;
  assign tck_o = tck_i;
  assign tdi_o = td_i;
  assign test_logic_reset = dmi_clear_o;
  assign update_dr = update_o;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(3'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_req.i_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(3'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(2'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(3'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$adff  #(
    .ARST_POLARITY(32'd0),
    .ARST_VALUE(3'h0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .ARST(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
endmodule

/* src = "../ihp13/tc_clk.sv:9.8" */
module \tc_clk_inverter$dmi_jtag.i_dmi_jtag_tap.i_tck_inv (clk_i, clk_o);
  /* src = "../ihp13/tc_clk.sv:10.18" */
  input clk_i;
  wire clk_i;
  /* src = "../ihp13/tc_clk.sv:11.18" */
  output clk_o;
  wire clk_o;
  /* keep = 1'h1 */
  /* src = "../ihp13/tc_clk.sv:14.16" */
  sg13g2_inv_1 i_inv (
    .A(clk_i),
    .Y(clk_o)
  );
endmodule

/* src = "../ihp13/tc_clk.sv:33.8" */
module \tc_clk_mux2$dmi_jtag.i_dmi_jtag_tap.i_dft_tck_mux (clk_o, clk0_i, clk1_i, clk_sel_i);
  /* src = "../ihp13/tc_clk.sv:34.18" */
  input clk0_i;
  wire clk0_i;
  /* src = "../ihp13/tc_clk.sv:35.18" */
  input clk1_i;
  wire clk1_i;
  /* src = "../ihp13/tc_clk.sv:37.18" */
  output clk_o;
  wire clk_o;
  /* src = "../ihp13/tc_clk.sv:36.18" */
  input clk_sel_i;
  wire clk_sel_i;
  /* keep = 1'h1 */
  /* src = "../ihp13/tc_clk.sv:40.17" */
  sg13g2_mux2_1 i_mux (
    .A0(clk0_i),
    .A1(clk1_i),
    .S(clk_sel_i),
    .X(clk_o)
  );
endmodule
