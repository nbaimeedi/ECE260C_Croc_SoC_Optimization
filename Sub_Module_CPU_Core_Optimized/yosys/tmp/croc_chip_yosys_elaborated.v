/* Generated by Yosys 0.51 (git sha1 c4b519022, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */

/* src = "../rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_croc.i_addr_decode_periphs (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "../rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode.sv:74.31" */
  input [479:0] addr_map_i;
  wire [479:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode.sv:90.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:76.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "../rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_addr_decode_periphs.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "../rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_addr_decode (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "../rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode.sv:74.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode.sv:90.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:76.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "../rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_addr_decode.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "../rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_addr_decode (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "../rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode.sv:74.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode.sv:90.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:76.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "../rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_addr_decode.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "../rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_addr_decode (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "../rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode.sv:74.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode.sv:90.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:76.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "../rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_addr_decode.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "../rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_addr_decode (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "../rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode.sv:74.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode.sv:90.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:76.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "../rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_addr_decode.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "../rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_user.i_addr_decode_periphs (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "../rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode.sv:74.31" */
  input [191:0] addr_map_i;
  wire [191:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode.sv:90.31" */
  input default_idx_i;
  wire default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode.sv:76.31" */
  output idx_o;
  wire idx_o;
  /* src = "../rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_user.i_addr_decode_periphs.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "../rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_addr_decode_periphs.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$auto$builder.cc:338:Biop$3870 ;
  wire \$auto$builder.cc:338:Biop$3872 ;
  wire \$auto$builder.cc:338:Biop$3874 ;
  wire \$auto$builder.cc:338:Biop$3876 ;
  wire \$auto$builder.cc:338:Biop$3878 ;
  wire \$auto$builder.cc:338:Biop$3880 ;
  wire \$auto$builder.cc:338:Biop$3882 ;
  wire \$auto$builder.cc:338:Biop$3899 ;
  wire \$auto$builder.cc:338:Biop$3901 ;
  wire \$auto$builder.cc:338:Biop$3903 ;
  wire \$auto$builder.cc:338:Biop$3905 ;
  wire \$auto$builder.cc:338:Biop$3907 ;
  wire \$auto$builder.cc:338:Biop$3909 ;
  wire \$auto$builder.cc:338:Biop$3911 ;
  wire \$auto$builder.cc:338:Biop$3928 ;
  wire \$auto$builder.cc:338:Biop$3930 ;
  wire \$auto$builder.cc:338:Biop$3932 ;
  wire \$auto$builder.cc:338:Biop$3934 ;
  wire \$auto$builder.cc:338:Biop$3936 ;
  wire \$auto$builder.cc:338:Biop$3938 ;
  wire \$auto$builder.cc:338:Biop$3940 ;
  wire \$auto$builder.cc:338:Biop$3957 ;
  wire \$auto$builder.cc:338:Biop$3959 ;
  wire \$auto$builder.cc:338:Biop$3961 ;
  wire \$auto$builder.cc:338:Biop$3963 ;
  wire \$auto$builder.cc:338:Biop$3965 ;
  wire \$auto$builder.cc:338:Biop$3967 ;
  wire \$auto$builder.cc:338:Biop$3969 ;
  wire \$auto$builder.cc:338:Biop$3986 ;
  wire \$auto$builder.cc:338:Biop$3988 ;
  wire \$auto$builder.cc:338:Biop$3990 ;
  wire \$auto$builder.cc:338:Biop$3992 ;
  wire \$auto$builder.cc:338:Biop$3994 ;
  wire \$auto$builder.cc:338:Biop$3996 ;
  wire \$auto$builder.cc:338:Biop$3998 ;
  wire \$auto$builder.cc:364:Unop$3886 ;
  wire \$auto$builder.cc:364:Unop$3888 ;
  wire \$auto$builder.cc:364:Unop$3915 ;
  wire \$auto$builder.cc:364:Unop$3917 ;
  wire \$auto$builder.cc:364:Unop$3944 ;
  wire \$auto$builder.cc:364:Unop$3946 ;
  wire \$auto$builder.cc:364:Unop$3973 ;
  wire \$auto$builder.cc:364:Unop$3975 ;
  wire \$auto$builder.cc:364:Unop$4002 ;
  wire \$auto$builder.cc:364:Unop$4004 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3859 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3863 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3884 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3890 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3913 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3919 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3942 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3948 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3971 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3977 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4000 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4006 ;
  wire \$auto$rtlil.cc:2874:Mux$3861 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$3865 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$3892 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$3921 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$3950 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$3979 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$4008 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$3867 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3868 ;
  /* \$nonstatic  = 32'd2 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3897 ;
  /* \$nonstatic  = 32'd3 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3926 ;
  /* \$nonstatic  = 32'd4 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3955 ;
  /* \$nonstatic  = 32'd5 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3984 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$3866 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$3895 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$3924 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$3953 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$3982 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$4011 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$3894 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$3923 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$3952 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$3981 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$4010 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$3893 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$3922 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$3951 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$3980 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$4009 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$3896 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$3925 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$3954 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$3983 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[4]$4012 ;
  wire \$procmux$14878_Y ;
  wire \$procmux$14879_CMP ;
  wire \$procmux$14884_Y ;
  wire \$procmux$14885_CMP ;
  wire \$procmux$14890_Y ;
  wire \$procmux$14891_CMP ;
  wire [2:0] \$procmux$14896_Y ;
  wire \$procmux$14897_CMP ;
  wire \$procmux$14902_Y ;
  wire \$procmux$14903_CMP ;
  wire \$procmux$14907_Y ;
  wire \$procmux$14908_CMP ;
  wire \$procmux$14912_Y ;
  wire \$procmux$14913_CMP ;
  wire [2:0] \$procmux$14917_Y ;
  wire \$procmux$14918_CMP ;
  wire \$procmux$14922_Y ;
  wire \$procmux$14923_CMP ;
  wire \$procmux$14926_Y ;
  wire \$procmux$14927_CMP ;
  wire \$procmux$14930_Y ;
  wire \$procmux$14931_CMP ;
  wire [2:0] \$procmux$14934_Y ;
  wire \$procmux$14935_CMP ;
  wire \$procmux$14938_Y ;
  wire \$procmux$14939_CMP ;
  wire \$procmux$14941_Y ;
  wire \$procmux$14942_CMP ;
  wire \$procmux$14944_Y ;
  wire \$procmux$14945_CMP ;
  wire [2:0] \$procmux$14947_Y ;
  wire \$procmux$14948_CMP ;
  wire \$procmux$14950_Y ;
  wire \$procmux$14951_CMP ;
  wire \$procmux$14952_Y ;
  wire \$procmux$14953_CMP ;
  wire \$procmux$14954_Y ;
  wire \$procmux$14955_CMP ;
  wire [2:0] \$procmux$14956_Y ;
  wire \$procmux$14957_CMP ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [479:0] addr_map_i;
  wire [479:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:95.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:81.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire [4:0] matched_rules;
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3869  (
    .A(addr_i),
    .B(addr_map_i[63:32]),
    .Y(\$auto$builder.cc:338:Biop$3870 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3873  (
    .A(addr_i),
    .B(addr_map_i[31:0]),
    .Y(\$auto$builder.cc:338:Biop$3874 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3875  (
    .A(addr_map_i[31:0]),
    .Y(\$auto$builder.cc:338:Biop$3876 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3877  (
    .A(\$auto$builder.cc:338:Biop$3874 ),
    .B(\$auto$builder.cc:338:Biop$3876 ),
    .Y(\$auto$builder.cc:338:Biop$3878 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3879  (
    .A(\$auto$builder.cc:338:Biop$3872 ),
    .B(\$auto$builder.cc:338:Biop$3878 ),
    .Y(\$auto$builder.cc:338:Biop$3880 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3898  (
    .A(addr_i),
    .B(addr_map_i[159:128]),
    .Y(\$auto$builder.cc:338:Biop$3899 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3902  (
    .A(addr_i),
    .B(addr_map_i[127:96]),
    .Y(\$auto$builder.cc:338:Biop$3903 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3904  (
    .A(addr_map_i[127:96]),
    .Y(\$auto$builder.cc:338:Biop$3905 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3906  (
    .A(\$auto$builder.cc:338:Biop$3903 ),
    .B(\$auto$builder.cc:338:Biop$3905 ),
    .Y(\$auto$builder.cc:338:Biop$3907 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3908  (
    .A(\$auto$builder.cc:338:Biop$3901 ),
    .B(\$auto$builder.cc:338:Biop$3907 ),
    .Y(\$auto$builder.cc:338:Biop$3909 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3927  (
    .A(addr_i),
    .B(addr_map_i[255:224]),
    .Y(\$auto$builder.cc:338:Biop$3928 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3931  (
    .A(addr_i),
    .B(addr_map_i[223:192]),
    .Y(\$auto$builder.cc:338:Biop$3932 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3933  (
    .A(addr_map_i[223:192]),
    .Y(\$auto$builder.cc:338:Biop$3934 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3935  (
    .A(\$auto$builder.cc:338:Biop$3932 ),
    .B(\$auto$builder.cc:338:Biop$3934 ),
    .Y(\$auto$builder.cc:338:Biop$3936 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3937  (
    .A(\$auto$builder.cc:338:Biop$3930 ),
    .B(\$auto$builder.cc:338:Biop$3936 ),
    .Y(\$auto$builder.cc:338:Biop$3938 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3956  (
    .A(addr_i),
    .B(addr_map_i[351:320]),
    .Y(\$auto$builder.cc:338:Biop$3957 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3960  (
    .A(addr_i),
    .B(addr_map_i[319:288]),
    .Y(\$auto$builder.cc:338:Biop$3961 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3962  (
    .A(addr_map_i[319:288]),
    .Y(\$auto$builder.cc:338:Biop$3963 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3964  (
    .A(\$auto$builder.cc:338:Biop$3961 ),
    .B(\$auto$builder.cc:338:Biop$3963 ),
    .Y(\$auto$builder.cc:338:Biop$3965 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3966  (
    .A(\$auto$builder.cc:338:Biop$3959 ),
    .B(\$auto$builder.cc:338:Biop$3965 ),
    .Y(\$auto$builder.cc:338:Biop$3967 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3985  (
    .A(addr_i),
    .B(addr_map_i[447:416]),
    .Y(\$auto$builder.cc:338:Biop$3986 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3989  (
    .A(addr_i),
    .B(addr_map_i[415:384]),
    .Y(\$auto$builder.cc:338:Biop$3990 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3991  (
    .A(addr_map_i[415:384]),
    .Y(\$auto$builder.cc:338:Biop$3992 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3993  (
    .A(\$auto$builder.cc:338:Biop$3990 ),
    .B(\$auto$builder.cc:338:Biop$3992 ),
    .Y(\$auto$builder.cc:338:Biop$3994 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3995  (
    .A(\$auto$builder.cc:338:Biop$3988 ),
    .B(\$auto$builder.cc:338:Biop$3994 ),
    .Y(\$auto$builder.cc:338:Biop$3996 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3885  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$3886 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3887  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$3888 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3914  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$3915 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3916  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$3917 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3943  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$3944 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3945  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$3946 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3972  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$3973 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3974  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$3975 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$4001  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$4002 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$4003  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$4004 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$3860  (
    .A(1'h1),
    .B(1'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$3859 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3861 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$3864  (
    .A(3'h0),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$3863 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3865 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$3891  (
    .A(addr_map_i[66:64]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$3890 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3892 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$3920  (
    .A(addr_map_i[162:160]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$3919 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3921 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$3949  (
    .A(addr_map_i[258:256]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$3948 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3950 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$3978  (
    .A(addr_map_i[354:352]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$3977 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3979 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$4007  (
    .A(addr_map_i[450:448]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4006 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4008 )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14878  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$4002 ),
    .S(\$procmux$14879_CMP ),
    .Y(\$procmux$14878_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14884  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$3982 ),
    .B(1'h0),
    .S(\$procmux$14885_CMP ),
    .Y(\$procmux$14884_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14890  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$3981 ),
    .B(\$auto$builder.cc:364:Unop$4004 ),
    .S(\$procmux$14891_CMP ),
    .Y(\$procmux$14890_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14896  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$3980 ),
    .B(\$auto$rtlil.cc:2874:Mux$4008 ),
    .S(\$procmux$14897_CMP ),
    .Y(\$procmux$14896_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14902  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$3973 ),
    .S(\$procmux$14903_CMP ),
    .Y(\$procmux$14902_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14907  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$3953 ),
    .B(1'h0),
    .S(\$procmux$14908_CMP ),
    .Y(\$procmux$14907_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14912  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$3952 ),
    .B(\$auto$builder.cc:364:Unop$3975 ),
    .S(\$procmux$14913_CMP ),
    .Y(\$procmux$14912_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14917  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$3951 ),
    .B(\$auto$rtlil.cc:2874:Mux$3979 ),
    .S(\$procmux$14918_CMP ),
    .Y(\$procmux$14917_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14922  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$3944 ),
    .S(\$procmux$14923_CMP ),
    .Y(\$procmux$14922_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14926  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$3924 ),
    .B(1'h0),
    .S(\$procmux$14927_CMP ),
    .Y(\$procmux$14926_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14930  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$3923 ),
    .B(\$auto$builder.cc:364:Unop$3946 ),
    .S(\$procmux$14931_CMP ),
    .Y(\$procmux$14930_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14934  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$3922 ),
    .B(\$auto$rtlil.cc:2874:Mux$3950 ),
    .S(\$procmux$14935_CMP ),
    .Y(\$procmux$14934_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14938  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$3915 ),
    .S(\$procmux$14939_CMP ),
    .Y(\$procmux$14938_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14941  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$3895 ),
    .B(1'h0),
    .S(\$procmux$14942_CMP ),
    .Y(\$procmux$14941_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14944  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$3894 ),
    .B(\$auto$builder.cc:364:Unop$3917 ),
    .S(\$procmux$14945_CMP ),
    .Y(\$procmux$14944_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14947  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$3893 ),
    .B(\$auto$rtlil.cc:2874:Mux$3921 ),
    .S(\$procmux$14948_CMP ),
    .Y(\$procmux$14947_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14950  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$3886 ),
    .S(\$procmux$14951_CMP ),
    .Y(\$procmux$14950_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14952  (
    .A(\$auto$rtlil.cc:2874:Mux$3861 ),
    .B(1'h0),
    .S(\$procmux$14953_CMP ),
    .Y(\$procmux$14952_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14954  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$3888 ),
    .S(\$procmux$14955_CMP ),
    .Y(\$procmux$14954_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14956  (
    .A(\$auto$rtlil.cc:2874:Mux$3865 ),
    .B(\$auto$rtlil.cc:2874:Mux$3892 ),
    .S(\$procmux$14957_CMP ),
    .Y(\$procmux$14956_Y )
  );
  assign idx_o = \$auto$slang_frontend.cc:694:finish$\idx_o$4009 ;
  assign dec_valid_o = \$auto$slang_frontend.cc:694:finish$\dec_valid_o$4010 ;
  assign dec_error_o = \$auto$slang_frontend.cc:694:finish$\dec_error_o$4011 ;
  assign matched_rules = { \$auto$slang_frontend.cc:694:finish$\matched_rules[4]$4012 , \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$3983 , \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$3954 , \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$3925 , \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$3896  };
  assign \$procmux$14879_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4000 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[4]$4012  = \$procmux$14878_Y ;
  assign \$procmux$14885_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4000 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$4011  = \$procmux$14884_Y ;
  assign \$procmux$14891_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4000 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$4010  = \$procmux$14890_Y ;
  assign \$procmux$14897_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4000 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$4009  = \$procmux$14896_Y ;
  assign \$procmux$14903_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3971 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$3983  = \$procmux$14902_Y ;
  assign \$procmux$14908_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3971 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$3982  = \$procmux$14907_Y ;
  assign \$procmux$14913_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3971 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$3981  = \$procmux$14912_Y ;
  assign \$procmux$14918_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3971 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$3980  = \$procmux$14917_Y ;
  assign \$procmux$14923_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3942 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$3954  = \$procmux$14922_Y ;
  assign \$procmux$14927_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3942 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$3953  = \$procmux$14926_Y ;
  assign \$procmux$14931_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3942 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$3952  = \$procmux$14930_Y ;
  assign \$procmux$14935_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3942 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$3951  = \$procmux$14934_Y ;
  assign \$procmux$14939_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3913 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$3925  = \$procmux$14938_Y ;
  assign \$procmux$14942_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3913 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$3924  = \$procmux$14941_Y ;
  assign \$procmux$14945_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3913 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$3923  = \$procmux$14944_Y ;
  assign \$procmux$14948_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3913 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$3922  = \$procmux$14947_Y ;
  assign \$procmux$14951_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3884 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$3896  = \$procmux$14950_Y ;
  assign \$procmux$14953_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3884 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$3895  = \$procmux$14952_Y ;
  assign \$procmux$14955_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3884 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$3894  = \$procmux$14954_Y ;
  assign \$procmux$14957_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3884 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$3893  = \$procmux$14956_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3859  = en_default_idx_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$3863  = en_default_idx_i;
  assign \$auto$builder.cc:338:Biop$3872  = \$auto$builder.cc:338:Biop$3870 ;
  assign \$auto$builder.cc:338:Biop$3882  = \$auto$builder.cc:338:Biop$3880 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3884  = \$auto$builder.cc:338:Biop$3880 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3890  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$3901  = \$auto$builder.cc:338:Biop$3899 ;
  assign \$auto$builder.cc:338:Biop$3911  = \$auto$builder.cc:338:Biop$3909 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3913  = \$auto$builder.cc:338:Biop$3909 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3919  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$3930  = \$auto$builder.cc:338:Biop$3928 ;
  assign \$auto$builder.cc:338:Biop$3940  = \$auto$builder.cc:338:Biop$3938 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3942  = \$auto$builder.cc:338:Biop$3938 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3948  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$3959  = \$auto$builder.cc:338:Biop$3957 ;
  assign \$auto$builder.cc:338:Biop$3969  = \$auto$builder.cc:338:Biop$3967 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3971  = \$auto$builder.cc:338:Biop$3967 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3977  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$3988  = \$auto$builder.cc:338:Biop$3986 ;
  assign \$auto$builder.cc:338:Biop$3998  = \$auto$builder.cc:338:Biop$3996 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4000  = \$auto$builder.cc:338:Biop$3996 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4006  = config_ongoing_i;
endmodule

/* src = "../rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_addr_decode.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$auto$builder.cc:338:Biop$6111 ;
  wire \$auto$builder.cc:338:Biop$6113 ;
  wire \$auto$builder.cc:338:Biop$6115 ;
  wire \$auto$builder.cc:338:Biop$6117 ;
  wire \$auto$builder.cc:338:Biop$6119 ;
  wire \$auto$builder.cc:338:Biop$6121 ;
  wire \$auto$builder.cc:338:Biop$6123 ;
  wire \$auto$builder.cc:338:Biop$6140 ;
  wire \$auto$builder.cc:338:Biop$6142 ;
  wire \$auto$builder.cc:338:Biop$6144 ;
  wire \$auto$builder.cc:338:Biop$6146 ;
  wire \$auto$builder.cc:338:Biop$6148 ;
  wire \$auto$builder.cc:338:Biop$6150 ;
  wire \$auto$builder.cc:338:Biop$6152 ;
  wire \$auto$builder.cc:338:Biop$6169 ;
  wire \$auto$builder.cc:338:Biop$6171 ;
  wire \$auto$builder.cc:338:Biop$6173 ;
  wire \$auto$builder.cc:338:Biop$6175 ;
  wire \$auto$builder.cc:338:Biop$6177 ;
  wire \$auto$builder.cc:338:Biop$6179 ;
  wire \$auto$builder.cc:338:Biop$6181 ;
  wire \$auto$builder.cc:338:Biop$6198 ;
  wire \$auto$builder.cc:338:Biop$6200 ;
  wire \$auto$builder.cc:338:Biop$6202 ;
  wire \$auto$builder.cc:338:Biop$6204 ;
  wire \$auto$builder.cc:338:Biop$6206 ;
  wire \$auto$builder.cc:338:Biop$6208 ;
  wire \$auto$builder.cc:338:Biop$6210 ;
  wire \$auto$builder.cc:364:Unop$6127 ;
  wire \$auto$builder.cc:364:Unop$6129 ;
  wire \$auto$builder.cc:364:Unop$6156 ;
  wire \$auto$builder.cc:364:Unop$6158 ;
  wire \$auto$builder.cc:364:Unop$6185 ;
  wire \$auto$builder.cc:364:Unop$6187 ;
  wire \$auto$builder.cc:364:Unop$6214 ;
  wire \$auto$builder.cc:364:Unop$6216 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6100 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6104 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6125 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6131 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6154 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6160 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6183 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6189 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6212 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6218 ;
  wire \$auto$rtlil.cc:2874:Mux$6102 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6106 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6133 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6162 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6191 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6220 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$6108 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6109 ;
  /* \$nonstatic  = 32'd2 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6138 ;
  /* \$nonstatic  = 32'd3 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6167 ;
  /* \$nonstatic  = 32'd4 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6196 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$6107 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6136 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6165 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6194 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6223 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6135 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6164 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6193 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6222 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6134 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6163 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6192 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6221 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6137 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6166 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6195 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6224 ;
  wire \$procmux$14068_Y ;
  wire \$procmux$14069_CMP ;
  wire \$procmux$14073_Y ;
  wire \$procmux$14074_CMP ;
  wire \$procmux$14078_Y ;
  wire \$procmux$14079_CMP ;
  wire [2:0] \$procmux$14083_Y ;
  wire \$procmux$14084_CMP ;
  wire \$procmux$14088_Y ;
  wire \$procmux$14089_CMP ;
  wire \$procmux$14092_Y ;
  wire \$procmux$14093_CMP ;
  wire \$procmux$14096_Y ;
  wire \$procmux$14097_CMP ;
  wire [2:0] \$procmux$14100_Y ;
  wire \$procmux$14101_CMP ;
  wire \$procmux$14104_Y ;
  wire \$procmux$14105_CMP ;
  wire \$procmux$14107_Y ;
  wire \$procmux$14108_CMP ;
  wire \$procmux$14110_Y ;
  wire \$procmux$14111_CMP ;
  wire [2:0] \$procmux$14113_Y ;
  wire \$procmux$14114_CMP ;
  wire \$procmux$14116_Y ;
  wire \$procmux$14117_CMP ;
  wire \$procmux$14118_Y ;
  wire \$procmux$14119_CMP ;
  wire \$procmux$14120_Y ;
  wire \$procmux$14121_CMP ;
  wire [2:0] \$procmux$14122_Y ;
  wire \$procmux$14123_CMP ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:95.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:81.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire [3:0] matched_rules;
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6110  (
    .A(addr_i),
    .B(addr_map_i[63:32]),
    .Y(\$auto$builder.cc:338:Biop$6111 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6114  (
    .A(addr_i),
    .B(addr_map_i[31:0]),
    .Y(\$auto$builder.cc:338:Biop$6115 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6116  (
    .A(addr_map_i[31:0]),
    .Y(\$auto$builder.cc:338:Biop$6117 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6118  (
    .A(\$auto$builder.cc:338:Biop$6115 ),
    .B(\$auto$builder.cc:338:Biop$6117 ),
    .Y(\$auto$builder.cc:338:Biop$6119 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6120  (
    .A(\$auto$builder.cc:338:Biop$6113 ),
    .B(\$auto$builder.cc:338:Biop$6119 ),
    .Y(\$auto$builder.cc:338:Biop$6121 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6139  (
    .A(addr_i),
    .B(addr_map_i[159:128]),
    .Y(\$auto$builder.cc:338:Biop$6140 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6143  (
    .A(addr_i),
    .B(addr_map_i[127:96]),
    .Y(\$auto$builder.cc:338:Biop$6144 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6145  (
    .A(addr_map_i[127:96]),
    .Y(\$auto$builder.cc:338:Biop$6146 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6147  (
    .A(\$auto$builder.cc:338:Biop$6144 ),
    .B(\$auto$builder.cc:338:Biop$6146 ),
    .Y(\$auto$builder.cc:338:Biop$6148 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6149  (
    .A(\$auto$builder.cc:338:Biop$6142 ),
    .B(\$auto$builder.cc:338:Biop$6148 ),
    .Y(\$auto$builder.cc:338:Biop$6150 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6168  (
    .A(addr_i),
    .B(addr_map_i[255:224]),
    .Y(\$auto$builder.cc:338:Biop$6169 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6172  (
    .A(addr_i),
    .B(addr_map_i[223:192]),
    .Y(\$auto$builder.cc:338:Biop$6173 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6174  (
    .A(addr_map_i[223:192]),
    .Y(\$auto$builder.cc:338:Biop$6175 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6176  (
    .A(\$auto$builder.cc:338:Biop$6173 ),
    .B(\$auto$builder.cc:338:Biop$6175 ),
    .Y(\$auto$builder.cc:338:Biop$6177 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6178  (
    .A(\$auto$builder.cc:338:Biop$6171 ),
    .B(\$auto$builder.cc:338:Biop$6177 ),
    .Y(\$auto$builder.cc:338:Biop$6179 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6197  (
    .A(addr_i),
    .B(addr_map_i[351:320]),
    .Y(\$auto$builder.cc:338:Biop$6198 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6201  (
    .A(addr_i),
    .B(addr_map_i[319:288]),
    .Y(\$auto$builder.cc:338:Biop$6202 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6203  (
    .A(addr_map_i[319:288]),
    .Y(\$auto$builder.cc:338:Biop$6204 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6205  (
    .A(\$auto$builder.cc:338:Biop$6202 ),
    .B(\$auto$builder.cc:338:Biop$6204 ),
    .Y(\$auto$builder.cc:338:Biop$6206 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6207  (
    .A(\$auto$builder.cc:338:Biop$6200 ),
    .B(\$auto$builder.cc:338:Biop$6206 ),
    .Y(\$auto$builder.cc:338:Biop$6208 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6126  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6127 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6128  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6129 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6155  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6156 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6157  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6158 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6184  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6185 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6186  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6187 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6213  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6214 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6215  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6216 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$6101  (
    .A(1'h1),
    .B(1'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6100 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6102 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6105  (
    .A(3'h0),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6104 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6106 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6132  (
    .A(addr_map_i[66:64]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6131 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6133 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6161  (
    .A(addr_map_i[162:160]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6160 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6162 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6190  (
    .A(addr_map_i[258:256]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6189 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6191 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6219  (
    .A(addr_map_i[354:352]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6218 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6220 )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14068  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6214 ),
    .S(\$procmux$14069_CMP ),
    .Y(\$procmux$14068_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14073  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6194 ),
    .B(1'h0),
    .S(\$procmux$14074_CMP ),
    .Y(\$procmux$14073_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14078  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6193 ),
    .B(\$auto$builder.cc:364:Unop$6216 ),
    .S(\$procmux$14079_CMP ),
    .Y(\$procmux$14078_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14083  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6192 ),
    .B(\$auto$rtlil.cc:2874:Mux$6220 ),
    .S(\$procmux$14084_CMP ),
    .Y(\$procmux$14083_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14088  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6185 ),
    .S(\$procmux$14089_CMP ),
    .Y(\$procmux$14088_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14092  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6165 ),
    .B(1'h0),
    .S(\$procmux$14093_CMP ),
    .Y(\$procmux$14092_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14096  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6164 ),
    .B(\$auto$builder.cc:364:Unop$6187 ),
    .S(\$procmux$14097_CMP ),
    .Y(\$procmux$14096_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14100  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6163 ),
    .B(\$auto$rtlil.cc:2874:Mux$6191 ),
    .S(\$procmux$14101_CMP ),
    .Y(\$procmux$14100_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14104  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6156 ),
    .S(\$procmux$14105_CMP ),
    .Y(\$procmux$14104_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14107  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6136 ),
    .B(1'h0),
    .S(\$procmux$14108_CMP ),
    .Y(\$procmux$14107_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14110  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6135 ),
    .B(\$auto$builder.cc:364:Unop$6158 ),
    .S(\$procmux$14111_CMP ),
    .Y(\$procmux$14110_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14113  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6134 ),
    .B(\$auto$rtlil.cc:2874:Mux$6162 ),
    .S(\$procmux$14114_CMP ),
    .Y(\$procmux$14113_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14116  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6127 ),
    .S(\$procmux$14117_CMP ),
    .Y(\$procmux$14116_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14118  (
    .A(\$auto$rtlil.cc:2874:Mux$6102 ),
    .B(1'h0),
    .S(\$procmux$14119_CMP ),
    .Y(\$procmux$14118_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14120  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6129 ),
    .S(\$procmux$14121_CMP ),
    .Y(\$procmux$14120_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14122  (
    .A(\$auto$rtlil.cc:2874:Mux$6106 ),
    .B(\$auto$rtlil.cc:2874:Mux$6133 ),
    .S(\$procmux$14123_CMP ),
    .Y(\$procmux$14122_Y )
  );
  assign idx_o = \$auto$slang_frontend.cc:694:finish$\idx_o$6221 ;
  assign dec_valid_o = \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6222 ;
  assign dec_error_o = \$auto$slang_frontend.cc:694:finish$\dec_error_o$6223 ;
  assign matched_rules = { \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6224 , \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6195 , \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6166 , \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6137  };
  assign \$procmux$14069_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6212 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6224  = \$procmux$14068_Y ;
  assign \$procmux$14074_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6212 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6223  = \$procmux$14073_Y ;
  assign \$procmux$14079_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6212 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6222  = \$procmux$14078_Y ;
  assign \$procmux$14084_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6212 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6221  = \$procmux$14083_Y ;
  assign \$procmux$14089_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6183 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6195  = \$procmux$14088_Y ;
  assign \$procmux$14093_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6183 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6194  = \$procmux$14092_Y ;
  assign \$procmux$14097_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6183 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6193  = \$procmux$14096_Y ;
  assign \$procmux$14101_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6183 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6192  = \$procmux$14100_Y ;
  assign \$procmux$14105_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6154 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6166  = \$procmux$14104_Y ;
  assign \$procmux$14108_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6154 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6165  = \$procmux$14107_Y ;
  assign \$procmux$14111_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6154 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6164  = \$procmux$14110_Y ;
  assign \$procmux$14114_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6154 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6163  = \$procmux$14113_Y ;
  assign \$procmux$14117_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6125 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6137  = \$procmux$14116_Y ;
  assign \$procmux$14119_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6125 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6136  = \$procmux$14118_Y ;
  assign \$procmux$14121_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6125 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6135  = \$procmux$14120_Y ;
  assign \$procmux$14123_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6125 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6134  = \$procmux$14122_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6100  = en_default_idx_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6104  = en_default_idx_i;
  assign \$auto$builder.cc:338:Biop$6113  = \$auto$builder.cc:338:Biop$6111 ;
  assign \$auto$builder.cc:338:Biop$6123  = \$auto$builder.cc:338:Biop$6121 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6125  = \$auto$builder.cc:338:Biop$6121 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6131  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6142  = \$auto$builder.cc:338:Biop$6140 ;
  assign \$auto$builder.cc:338:Biop$6152  = \$auto$builder.cc:338:Biop$6150 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6154  = \$auto$builder.cc:338:Biop$6150 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6160  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6171  = \$auto$builder.cc:338:Biop$6169 ;
  assign \$auto$builder.cc:338:Biop$6181  = \$auto$builder.cc:338:Biop$6179 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6183  = \$auto$builder.cc:338:Biop$6179 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6189  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6200  = \$auto$builder.cc:338:Biop$6198 ;
  assign \$auto$builder.cc:338:Biop$6210  = \$auto$builder.cc:338:Biop$6208 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6212  = \$auto$builder.cc:338:Biop$6208 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6218  = config_ongoing_i;
endmodule

/* src = "../rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_addr_decode.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$auto$builder.cc:338:Biop$6260 ;
  wire \$auto$builder.cc:338:Biop$6262 ;
  wire \$auto$builder.cc:338:Biop$6264 ;
  wire \$auto$builder.cc:338:Biop$6266 ;
  wire \$auto$builder.cc:338:Biop$6268 ;
  wire \$auto$builder.cc:338:Biop$6270 ;
  wire \$auto$builder.cc:338:Biop$6272 ;
  wire \$auto$builder.cc:338:Biop$6289 ;
  wire \$auto$builder.cc:338:Biop$6291 ;
  wire \$auto$builder.cc:338:Biop$6293 ;
  wire \$auto$builder.cc:338:Biop$6295 ;
  wire \$auto$builder.cc:338:Biop$6297 ;
  wire \$auto$builder.cc:338:Biop$6299 ;
  wire \$auto$builder.cc:338:Biop$6301 ;
  wire \$auto$builder.cc:338:Biop$6318 ;
  wire \$auto$builder.cc:338:Biop$6320 ;
  wire \$auto$builder.cc:338:Biop$6322 ;
  wire \$auto$builder.cc:338:Biop$6324 ;
  wire \$auto$builder.cc:338:Biop$6326 ;
  wire \$auto$builder.cc:338:Biop$6328 ;
  wire \$auto$builder.cc:338:Biop$6330 ;
  wire \$auto$builder.cc:338:Biop$6347 ;
  wire \$auto$builder.cc:338:Biop$6349 ;
  wire \$auto$builder.cc:338:Biop$6351 ;
  wire \$auto$builder.cc:338:Biop$6353 ;
  wire \$auto$builder.cc:338:Biop$6355 ;
  wire \$auto$builder.cc:338:Biop$6357 ;
  wire \$auto$builder.cc:338:Biop$6359 ;
  wire \$auto$builder.cc:364:Unop$6276 ;
  wire \$auto$builder.cc:364:Unop$6278 ;
  wire \$auto$builder.cc:364:Unop$6305 ;
  wire \$auto$builder.cc:364:Unop$6307 ;
  wire \$auto$builder.cc:364:Unop$6334 ;
  wire \$auto$builder.cc:364:Unop$6336 ;
  wire \$auto$builder.cc:364:Unop$6363 ;
  wire \$auto$builder.cc:364:Unop$6365 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6249 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6253 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6274 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6280 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6303 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6309 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6332 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6338 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6361 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6367 ;
  wire \$auto$rtlil.cc:2874:Mux$6251 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6255 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6282 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6311 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6340 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6369 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$6257 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6258 ;
  /* \$nonstatic  = 32'd2 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6287 ;
  /* \$nonstatic  = 32'd3 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6316 ;
  /* \$nonstatic  = 32'd4 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6345 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$6256 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6285 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6314 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6343 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6372 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6284 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6313 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6342 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6371 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6283 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6312 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6341 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6370 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6286 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6315 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6344 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6373 ;
  wire \$procmux$13981_Y ;
  wire \$procmux$13982_CMP ;
  wire \$procmux$13986_Y ;
  wire \$procmux$13987_CMP ;
  wire \$procmux$13991_Y ;
  wire \$procmux$13992_CMP ;
  wire [2:0] \$procmux$13996_Y ;
  wire \$procmux$13997_CMP ;
  wire \$procmux$14001_Y ;
  wire \$procmux$14002_CMP ;
  wire \$procmux$14005_Y ;
  wire \$procmux$14006_CMP ;
  wire \$procmux$14009_Y ;
  wire \$procmux$14010_CMP ;
  wire [2:0] \$procmux$14013_Y ;
  wire \$procmux$14014_CMP ;
  wire \$procmux$14017_Y ;
  wire \$procmux$14018_CMP ;
  wire \$procmux$14020_Y ;
  wire \$procmux$14021_CMP ;
  wire \$procmux$14023_Y ;
  wire \$procmux$14024_CMP ;
  wire [2:0] \$procmux$14026_Y ;
  wire \$procmux$14027_CMP ;
  wire \$procmux$14029_Y ;
  wire \$procmux$14030_CMP ;
  wire \$procmux$14031_Y ;
  wire \$procmux$14032_CMP ;
  wire \$procmux$14033_Y ;
  wire \$procmux$14034_CMP ;
  wire [2:0] \$procmux$14035_Y ;
  wire \$procmux$14036_CMP ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:95.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:81.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire [3:0] matched_rules;
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6259  (
    .A(addr_i),
    .B(addr_map_i[63:32]),
    .Y(\$auto$builder.cc:338:Biop$6260 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6263  (
    .A(addr_i),
    .B(addr_map_i[31:0]),
    .Y(\$auto$builder.cc:338:Biop$6264 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6265  (
    .A(addr_map_i[31:0]),
    .Y(\$auto$builder.cc:338:Biop$6266 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6267  (
    .A(\$auto$builder.cc:338:Biop$6264 ),
    .B(\$auto$builder.cc:338:Biop$6266 ),
    .Y(\$auto$builder.cc:338:Biop$6268 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6269  (
    .A(\$auto$builder.cc:338:Biop$6262 ),
    .B(\$auto$builder.cc:338:Biop$6268 ),
    .Y(\$auto$builder.cc:338:Biop$6270 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6288  (
    .A(addr_i),
    .B(addr_map_i[159:128]),
    .Y(\$auto$builder.cc:338:Biop$6289 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6292  (
    .A(addr_i),
    .B(addr_map_i[127:96]),
    .Y(\$auto$builder.cc:338:Biop$6293 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6294  (
    .A(addr_map_i[127:96]),
    .Y(\$auto$builder.cc:338:Biop$6295 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6296  (
    .A(\$auto$builder.cc:338:Biop$6293 ),
    .B(\$auto$builder.cc:338:Biop$6295 ),
    .Y(\$auto$builder.cc:338:Biop$6297 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6298  (
    .A(\$auto$builder.cc:338:Biop$6291 ),
    .B(\$auto$builder.cc:338:Biop$6297 ),
    .Y(\$auto$builder.cc:338:Biop$6299 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6317  (
    .A(addr_i),
    .B(addr_map_i[255:224]),
    .Y(\$auto$builder.cc:338:Biop$6318 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6321  (
    .A(addr_i),
    .B(addr_map_i[223:192]),
    .Y(\$auto$builder.cc:338:Biop$6322 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6323  (
    .A(addr_map_i[223:192]),
    .Y(\$auto$builder.cc:338:Biop$6324 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6325  (
    .A(\$auto$builder.cc:338:Biop$6322 ),
    .B(\$auto$builder.cc:338:Biop$6324 ),
    .Y(\$auto$builder.cc:338:Biop$6326 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6327  (
    .A(\$auto$builder.cc:338:Biop$6320 ),
    .B(\$auto$builder.cc:338:Biop$6326 ),
    .Y(\$auto$builder.cc:338:Biop$6328 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6346  (
    .A(addr_i),
    .B(addr_map_i[351:320]),
    .Y(\$auto$builder.cc:338:Biop$6347 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6350  (
    .A(addr_i),
    .B(addr_map_i[319:288]),
    .Y(\$auto$builder.cc:338:Biop$6351 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6352  (
    .A(addr_map_i[319:288]),
    .Y(\$auto$builder.cc:338:Biop$6353 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6354  (
    .A(\$auto$builder.cc:338:Biop$6351 ),
    .B(\$auto$builder.cc:338:Biop$6353 ),
    .Y(\$auto$builder.cc:338:Biop$6355 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6356  (
    .A(\$auto$builder.cc:338:Biop$6349 ),
    .B(\$auto$builder.cc:338:Biop$6355 ),
    .Y(\$auto$builder.cc:338:Biop$6357 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6275  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6276 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6277  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6278 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6304  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6305 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6306  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6307 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6333  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6334 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6335  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6336 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6362  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6363 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6364  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6365 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$6250  (
    .A(1'h1),
    .B(1'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6249 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6251 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6254  (
    .A(3'h0),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6253 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6255 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6281  (
    .A(addr_map_i[66:64]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6280 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6282 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6310  (
    .A(addr_map_i[162:160]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6309 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6311 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6339  (
    .A(addr_map_i[258:256]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6338 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6340 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6368  (
    .A(addr_map_i[354:352]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6367 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6369 )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13981  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6363 ),
    .S(\$procmux$13982_CMP ),
    .Y(\$procmux$13981_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13986  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6343 ),
    .B(1'h0),
    .S(\$procmux$13987_CMP ),
    .Y(\$procmux$13986_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13991  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6342 ),
    .B(\$auto$builder.cc:364:Unop$6365 ),
    .S(\$procmux$13992_CMP ),
    .Y(\$procmux$13991_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13996  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6341 ),
    .B(\$auto$rtlil.cc:2874:Mux$6369 ),
    .S(\$procmux$13997_CMP ),
    .Y(\$procmux$13996_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14001  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6334 ),
    .S(\$procmux$14002_CMP ),
    .Y(\$procmux$14001_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14005  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6314 ),
    .B(1'h0),
    .S(\$procmux$14006_CMP ),
    .Y(\$procmux$14005_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14009  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6313 ),
    .B(\$auto$builder.cc:364:Unop$6336 ),
    .S(\$procmux$14010_CMP ),
    .Y(\$procmux$14009_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14013  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6312 ),
    .B(\$auto$rtlil.cc:2874:Mux$6340 ),
    .S(\$procmux$14014_CMP ),
    .Y(\$procmux$14013_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14017  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6305 ),
    .S(\$procmux$14018_CMP ),
    .Y(\$procmux$14017_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14020  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6285 ),
    .B(1'h0),
    .S(\$procmux$14021_CMP ),
    .Y(\$procmux$14020_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14023  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6284 ),
    .B(\$auto$builder.cc:364:Unop$6307 ),
    .S(\$procmux$14024_CMP ),
    .Y(\$procmux$14023_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14026  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6283 ),
    .B(\$auto$rtlil.cc:2874:Mux$6311 ),
    .S(\$procmux$14027_CMP ),
    .Y(\$procmux$14026_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14029  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6276 ),
    .S(\$procmux$14030_CMP ),
    .Y(\$procmux$14029_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14031  (
    .A(\$auto$rtlil.cc:2874:Mux$6251 ),
    .B(1'h0),
    .S(\$procmux$14032_CMP ),
    .Y(\$procmux$14031_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14033  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6278 ),
    .S(\$procmux$14034_CMP ),
    .Y(\$procmux$14033_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14035  (
    .A(\$auto$rtlil.cc:2874:Mux$6255 ),
    .B(\$auto$rtlil.cc:2874:Mux$6282 ),
    .S(\$procmux$14036_CMP ),
    .Y(\$procmux$14035_Y )
  );
  assign idx_o = \$auto$slang_frontend.cc:694:finish$\idx_o$6370 ;
  assign dec_valid_o = \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6371 ;
  assign dec_error_o = \$auto$slang_frontend.cc:694:finish$\dec_error_o$6372 ;
  assign matched_rules = { \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6373 , \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6344 , \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6315 , \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6286  };
  assign \$procmux$13982_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6361 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6373  = \$procmux$13981_Y ;
  assign \$procmux$13987_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6361 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6372  = \$procmux$13986_Y ;
  assign \$procmux$13992_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6361 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6371  = \$procmux$13991_Y ;
  assign \$procmux$13997_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6361 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6370  = \$procmux$13996_Y ;
  assign \$procmux$14002_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6332 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6344  = \$procmux$14001_Y ;
  assign \$procmux$14006_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6332 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6343  = \$procmux$14005_Y ;
  assign \$procmux$14010_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6332 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6342  = \$procmux$14009_Y ;
  assign \$procmux$14014_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6332 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6341  = \$procmux$14013_Y ;
  assign \$procmux$14018_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6303 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6315  = \$procmux$14017_Y ;
  assign \$procmux$14021_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6303 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6314  = \$procmux$14020_Y ;
  assign \$procmux$14024_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6303 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6313  = \$procmux$14023_Y ;
  assign \$procmux$14027_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6303 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6312  = \$procmux$14026_Y ;
  assign \$procmux$14030_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6274 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6286  = \$procmux$14029_Y ;
  assign \$procmux$14032_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6274 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6285  = \$procmux$14031_Y ;
  assign \$procmux$14034_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6274 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6284  = \$procmux$14033_Y ;
  assign \$procmux$14036_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6274 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6283  = \$procmux$14035_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6249  = en_default_idx_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6253  = en_default_idx_i;
  assign \$auto$builder.cc:338:Biop$6262  = \$auto$builder.cc:338:Biop$6260 ;
  assign \$auto$builder.cc:338:Biop$6272  = \$auto$builder.cc:338:Biop$6270 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6274  = \$auto$builder.cc:338:Biop$6270 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6280  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6291  = \$auto$builder.cc:338:Biop$6289 ;
  assign \$auto$builder.cc:338:Biop$6301  = \$auto$builder.cc:338:Biop$6299 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6303  = \$auto$builder.cc:338:Biop$6299 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6309  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6320  = \$auto$builder.cc:338:Biop$6318 ;
  assign \$auto$builder.cc:338:Biop$6330  = \$auto$builder.cc:338:Biop$6328 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6332  = \$auto$builder.cc:338:Biop$6328 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6338  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6349  = \$auto$builder.cc:338:Biop$6347 ;
  assign \$auto$builder.cc:338:Biop$6359  = \$auto$builder.cc:338:Biop$6357 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6361  = \$auto$builder.cc:338:Biop$6357 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6367  = config_ongoing_i;
endmodule

/* src = "../rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_addr_decode.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$auto$builder.cc:338:Biop$6409 ;
  wire \$auto$builder.cc:338:Biop$6411 ;
  wire \$auto$builder.cc:338:Biop$6413 ;
  wire \$auto$builder.cc:338:Biop$6415 ;
  wire \$auto$builder.cc:338:Biop$6417 ;
  wire \$auto$builder.cc:338:Biop$6419 ;
  wire \$auto$builder.cc:338:Biop$6421 ;
  wire \$auto$builder.cc:338:Biop$6438 ;
  wire \$auto$builder.cc:338:Biop$6440 ;
  wire \$auto$builder.cc:338:Biop$6442 ;
  wire \$auto$builder.cc:338:Biop$6444 ;
  wire \$auto$builder.cc:338:Biop$6446 ;
  wire \$auto$builder.cc:338:Biop$6448 ;
  wire \$auto$builder.cc:338:Biop$6450 ;
  wire \$auto$builder.cc:338:Biop$6467 ;
  wire \$auto$builder.cc:338:Biop$6469 ;
  wire \$auto$builder.cc:338:Biop$6471 ;
  wire \$auto$builder.cc:338:Biop$6473 ;
  wire \$auto$builder.cc:338:Biop$6475 ;
  wire \$auto$builder.cc:338:Biop$6477 ;
  wire \$auto$builder.cc:338:Biop$6479 ;
  wire \$auto$builder.cc:338:Biop$6496 ;
  wire \$auto$builder.cc:338:Biop$6498 ;
  wire \$auto$builder.cc:338:Biop$6500 ;
  wire \$auto$builder.cc:338:Biop$6502 ;
  wire \$auto$builder.cc:338:Biop$6504 ;
  wire \$auto$builder.cc:338:Biop$6506 ;
  wire \$auto$builder.cc:338:Biop$6508 ;
  wire \$auto$builder.cc:364:Unop$6425 ;
  wire \$auto$builder.cc:364:Unop$6427 ;
  wire \$auto$builder.cc:364:Unop$6454 ;
  wire \$auto$builder.cc:364:Unop$6456 ;
  wire \$auto$builder.cc:364:Unop$6483 ;
  wire \$auto$builder.cc:364:Unop$6485 ;
  wire \$auto$builder.cc:364:Unop$6512 ;
  wire \$auto$builder.cc:364:Unop$6514 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6398 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6402 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6423 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6429 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6452 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6458 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6481 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6487 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6510 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6516 ;
  wire \$auto$rtlil.cc:2874:Mux$6400 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6404 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6431 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6460 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6489 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6518 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$6406 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6407 ;
  /* \$nonstatic  = 32'd2 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6436 ;
  /* \$nonstatic  = 32'd3 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6465 ;
  /* \$nonstatic  = 32'd4 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6494 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$6405 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6434 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6463 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6492 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6521 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6433 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6462 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6491 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6520 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6432 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6461 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6490 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6519 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6435 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6464 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6493 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6522 ;
  wire \$procmux$13894_Y ;
  wire \$procmux$13895_CMP ;
  wire \$procmux$13899_Y ;
  wire \$procmux$13900_CMP ;
  wire \$procmux$13904_Y ;
  wire \$procmux$13905_CMP ;
  wire [2:0] \$procmux$13909_Y ;
  wire \$procmux$13910_CMP ;
  wire \$procmux$13914_Y ;
  wire \$procmux$13915_CMP ;
  wire \$procmux$13918_Y ;
  wire \$procmux$13919_CMP ;
  wire \$procmux$13922_Y ;
  wire \$procmux$13923_CMP ;
  wire [2:0] \$procmux$13926_Y ;
  wire \$procmux$13927_CMP ;
  wire \$procmux$13930_Y ;
  wire \$procmux$13931_CMP ;
  wire \$procmux$13933_Y ;
  wire \$procmux$13934_CMP ;
  wire \$procmux$13936_Y ;
  wire \$procmux$13937_CMP ;
  wire [2:0] \$procmux$13939_Y ;
  wire \$procmux$13940_CMP ;
  wire \$procmux$13942_Y ;
  wire \$procmux$13943_CMP ;
  wire \$procmux$13944_Y ;
  wire \$procmux$13945_CMP ;
  wire \$procmux$13946_Y ;
  wire \$procmux$13947_CMP ;
  wire [2:0] \$procmux$13948_Y ;
  wire \$procmux$13949_CMP ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:95.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:81.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire [3:0] matched_rules;
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6408  (
    .A(addr_i),
    .B(addr_map_i[63:32]),
    .Y(\$auto$builder.cc:338:Biop$6409 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6412  (
    .A(addr_i),
    .B(addr_map_i[31:0]),
    .Y(\$auto$builder.cc:338:Biop$6413 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6414  (
    .A(addr_map_i[31:0]),
    .Y(\$auto$builder.cc:338:Biop$6415 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6416  (
    .A(\$auto$builder.cc:338:Biop$6413 ),
    .B(\$auto$builder.cc:338:Biop$6415 ),
    .Y(\$auto$builder.cc:338:Biop$6417 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6418  (
    .A(\$auto$builder.cc:338:Biop$6411 ),
    .B(\$auto$builder.cc:338:Biop$6417 ),
    .Y(\$auto$builder.cc:338:Biop$6419 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6437  (
    .A(addr_i),
    .B(addr_map_i[159:128]),
    .Y(\$auto$builder.cc:338:Biop$6438 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6441  (
    .A(addr_i),
    .B(addr_map_i[127:96]),
    .Y(\$auto$builder.cc:338:Biop$6442 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6443  (
    .A(addr_map_i[127:96]),
    .Y(\$auto$builder.cc:338:Biop$6444 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6445  (
    .A(\$auto$builder.cc:338:Biop$6442 ),
    .B(\$auto$builder.cc:338:Biop$6444 ),
    .Y(\$auto$builder.cc:338:Biop$6446 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6447  (
    .A(\$auto$builder.cc:338:Biop$6440 ),
    .B(\$auto$builder.cc:338:Biop$6446 ),
    .Y(\$auto$builder.cc:338:Biop$6448 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6466  (
    .A(addr_i),
    .B(addr_map_i[255:224]),
    .Y(\$auto$builder.cc:338:Biop$6467 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6470  (
    .A(addr_i),
    .B(addr_map_i[223:192]),
    .Y(\$auto$builder.cc:338:Biop$6471 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6472  (
    .A(addr_map_i[223:192]),
    .Y(\$auto$builder.cc:338:Biop$6473 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6474  (
    .A(\$auto$builder.cc:338:Biop$6471 ),
    .B(\$auto$builder.cc:338:Biop$6473 ),
    .Y(\$auto$builder.cc:338:Biop$6475 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6476  (
    .A(\$auto$builder.cc:338:Biop$6469 ),
    .B(\$auto$builder.cc:338:Biop$6475 ),
    .Y(\$auto$builder.cc:338:Biop$6477 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6495  (
    .A(addr_i),
    .B(addr_map_i[351:320]),
    .Y(\$auto$builder.cc:338:Biop$6496 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6499  (
    .A(addr_i),
    .B(addr_map_i[319:288]),
    .Y(\$auto$builder.cc:338:Biop$6500 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6501  (
    .A(addr_map_i[319:288]),
    .Y(\$auto$builder.cc:338:Biop$6502 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6503  (
    .A(\$auto$builder.cc:338:Biop$6500 ),
    .B(\$auto$builder.cc:338:Biop$6502 ),
    .Y(\$auto$builder.cc:338:Biop$6504 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6505  (
    .A(\$auto$builder.cc:338:Biop$6498 ),
    .B(\$auto$builder.cc:338:Biop$6504 ),
    .Y(\$auto$builder.cc:338:Biop$6506 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6424  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6425 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6426  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6427 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6453  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6454 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6455  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6456 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6482  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6483 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6484  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6485 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6511  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6512 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6513  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6514 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$6399  (
    .A(1'h1),
    .B(1'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6398 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6400 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6403  (
    .A(3'h0),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6402 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6404 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6430  (
    .A(addr_map_i[66:64]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6429 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6431 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6459  (
    .A(addr_map_i[162:160]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6458 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6460 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6488  (
    .A(addr_map_i[258:256]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6487 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6489 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6517  (
    .A(addr_map_i[354:352]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6516 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6518 )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13894  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6512 ),
    .S(\$procmux$13895_CMP ),
    .Y(\$procmux$13894_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13899  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6492 ),
    .B(1'h0),
    .S(\$procmux$13900_CMP ),
    .Y(\$procmux$13899_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13904  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6491 ),
    .B(\$auto$builder.cc:364:Unop$6514 ),
    .S(\$procmux$13905_CMP ),
    .Y(\$procmux$13904_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13909  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6490 ),
    .B(\$auto$rtlil.cc:2874:Mux$6518 ),
    .S(\$procmux$13910_CMP ),
    .Y(\$procmux$13909_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13914  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6483 ),
    .S(\$procmux$13915_CMP ),
    .Y(\$procmux$13914_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13918  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6463 ),
    .B(1'h0),
    .S(\$procmux$13919_CMP ),
    .Y(\$procmux$13918_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13922  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6462 ),
    .B(\$auto$builder.cc:364:Unop$6485 ),
    .S(\$procmux$13923_CMP ),
    .Y(\$procmux$13922_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13926  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6461 ),
    .B(\$auto$rtlil.cc:2874:Mux$6489 ),
    .S(\$procmux$13927_CMP ),
    .Y(\$procmux$13926_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13930  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6454 ),
    .S(\$procmux$13931_CMP ),
    .Y(\$procmux$13930_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13933  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6434 ),
    .B(1'h0),
    .S(\$procmux$13934_CMP ),
    .Y(\$procmux$13933_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13936  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6433 ),
    .B(\$auto$builder.cc:364:Unop$6456 ),
    .S(\$procmux$13937_CMP ),
    .Y(\$procmux$13936_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13939  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6432 ),
    .B(\$auto$rtlil.cc:2874:Mux$6460 ),
    .S(\$procmux$13940_CMP ),
    .Y(\$procmux$13939_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13942  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6425 ),
    .S(\$procmux$13943_CMP ),
    .Y(\$procmux$13942_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13944  (
    .A(\$auto$rtlil.cc:2874:Mux$6400 ),
    .B(1'h0),
    .S(\$procmux$13945_CMP ),
    .Y(\$procmux$13944_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13946  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6427 ),
    .S(\$procmux$13947_CMP ),
    .Y(\$procmux$13946_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13948  (
    .A(\$auto$rtlil.cc:2874:Mux$6404 ),
    .B(\$auto$rtlil.cc:2874:Mux$6431 ),
    .S(\$procmux$13949_CMP ),
    .Y(\$procmux$13948_Y )
  );
  assign idx_o = \$auto$slang_frontend.cc:694:finish$\idx_o$6519 ;
  assign dec_valid_o = \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6520 ;
  assign dec_error_o = \$auto$slang_frontend.cc:694:finish$\dec_error_o$6521 ;
  assign matched_rules = { \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6522 , \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6493 , \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6464 , \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6435  };
  assign \$procmux$13895_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6510 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6522  = \$procmux$13894_Y ;
  assign \$procmux$13900_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6510 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6521  = \$procmux$13899_Y ;
  assign \$procmux$13905_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6510 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6520  = \$procmux$13904_Y ;
  assign \$procmux$13910_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6510 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6519  = \$procmux$13909_Y ;
  assign \$procmux$13915_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6481 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6493  = \$procmux$13914_Y ;
  assign \$procmux$13919_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6481 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6492  = \$procmux$13918_Y ;
  assign \$procmux$13923_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6481 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6491  = \$procmux$13922_Y ;
  assign \$procmux$13927_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6481 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6490  = \$procmux$13926_Y ;
  assign \$procmux$13931_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6452 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6464  = \$procmux$13930_Y ;
  assign \$procmux$13934_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6452 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6463  = \$procmux$13933_Y ;
  assign \$procmux$13937_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6452 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6462  = \$procmux$13936_Y ;
  assign \$procmux$13940_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6452 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6461  = \$procmux$13939_Y ;
  assign \$procmux$13943_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6423 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6435  = \$procmux$13942_Y ;
  assign \$procmux$13945_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6423 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6434  = \$procmux$13944_Y ;
  assign \$procmux$13947_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6423 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6433  = \$procmux$13946_Y ;
  assign \$procmux$13949_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6423 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6432  = \$procmux$13948_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6398  = en_default_idx_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6402  = en_default_idx_i;
  assign \$auto$builder.cc:338:Biop$6411  = \$auto$builder.cc:338:Biop$6409 ;
  assign \$auto$builder.cc:338:Biop$6421  = \$auto$builder.cc:338:Biop$6419 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6423  = \$auto$builder.cc:338:Biop$6419 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6429  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6440  = \$auto$builder.cc:338:Biop$6438 ;
  assign \$auto$builder.cc:338:Biop$6450  = \$auto$builder.cc:338:Biop$6448 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6452  = \$auto$builder.cc:338:Biop$6448 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6458  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6469  = \$auto$builder.cc:338:Biop$6467 ;
  assign \$auto$builder.cc:338:Biop$6479  = \$auto$builder.cc:338:Biop$6477 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6481  = \$auto$builder.cc:338:Biop$6477 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6487  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6498  = \$auto$builder.cc:338:Biop$6496 ;
  assign \$auto$builder.cc:338:Biop$6508  = \$auto$builder.cc:338:Biop$6506 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6510  = \$auto$builder.cc:338:Biop$6506 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6516  = config_ongoing_i;
endmodule

/* src = "../rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_addr_decode.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$auto$builder.cc:338:Biop$6558 ;
  wire \$auto$builder.cc:338:Biop$6560 ;
  wire \$auto$builder.cc:338:Biop$6562 ;
  wire \$auto$builder.cc:338:Biop$6564 ;
  wire \$auto$builder.cc:338:Biop$6566 ;
  wire \$auto$builder.cc:338:Biop$6568 ;
  wire \$auto$builder.cc:338:Biop$6570 ;
  wire \$auto$builder.cc:338:Biop$6587 ;
  wire \$auto$builder.cc:338:Biop$6589 ;
  wire \$auto$builder.cc:338:Biop$6591 ;
  wire \$auto$builder.cc:338:Biop$6593 ;
  wire \$auto$builder.cc:338:Biop$6595 ;
  wire \$auto$builder.cc:338:Biop$6597 ;
  wire \$auto$builder.cc:338:Biop$6599 ;
  wire \$auto$builder.cc:338:Biop$6616 ;
  wire \$auto$builder.cc:338:Biop$6618 ;
  wire \$auto$builder.cc:338:Biop$6620 ;
  wire \$auto$builder.cc:338:Biop$6622 ;
  wire \$auto$builder.cc:338:Biop$6624 ;
  wire \$auto$builder.cc:338:Biop$6626 ;
  wire \$auto$builder.cc:338:Biop$6628 ;
  wire \$auto$builder.cc:338:Biop$6645 ;
  wire \$auto$builder.cc:338:Biop$6647 ;
  wire \$auto$builder.cc:338:Biop$6649 ;
  wire \$auto$builder.cc:338:Biop$6651 ;
  wire \$auto$builder.cc:338:Biop$6653 ;
  wire \$auto$builder.cc:338:Biop$6655 ;
  wire \$auto$builder.cc:338:Biop$6657 ;
  wire \$auto$builder.cc:364:Unop$6574 ;
  wire \$auto$builder.cc:364:Unop$6576 ;
  wire \$auto$builder.cc:364:Unop$6603 ;
  wire \$auto$builder.cc:364:Unop$6605 ;
  wire \$auto$builder.cc:364:Unop$6632 ;
  wire \$auto$builder.cc:364:Unop$6634 ;
  wire \$auto$builder.cc:364:Unop$6661 ;
  wire \$auto$builder.cc:364:Unop$6663 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6547 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6551 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6572 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6578 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6601 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6607 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6630 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6636 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6659 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6665 ;
  wire \$auto$rtlil.cc:2874:Mux$6549 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6553 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6580 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6609 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6638 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$6667 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$6555 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6556 ;
  /* \$nonstatic  = 32'd2 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6585 ;
  /* \$nonstatic  = 32'd3 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6614 ;
  /* \$nonstatic  = 32'd4 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$6643 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$6554 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6583 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6612 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6641 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_error_o$6670 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6582 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6611 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6640 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6669 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6581 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6610 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6639 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\idx_o$6668 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6584 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6613 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6642 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6671 ;
  wire \$procmux$13807_Y ;
  wire \$procmux$13808_CMP ;
  wire \$procmux$13812_Y ;
  wire \$procmux$13813_CMP ;
  wire \$procmux$13817_Y ;
  wire \$procmux$13818_CMP ;
  wire [2:0] \$procmux$13822_Y ;
  wire \$procmux$13823_CMP ;
  wire \$procmux$13827_Y ;
  wire \$procmux$13828_CMP ;
  wire \$procmux$13831_Y ;
  wire \$procmux$13832_CMP ;
  wire \$procmux$13835_Y ;
  wire \$procmux$13836_CMP ;
  wire [2:0] \$procmux$13839_Y ;
  wire \$procmux$13840_CMP ;
  wire \$procmux$13843_Y ;
  wire \$procmux$13844_CMP ;
  wire \$procmux$13846_Y ;
  wire \$procmux$13847_CMP ;
  wire \$procmux$13849_Y ;
  wire \$procmux$13850_CMP ;
  wire [2:0] \$procmux$13852_Y ;
  wire \$procmux$13853_CMP ;
  wire \$procmux$13855_Y ;
  wire \$procmux$13856_CMP ;
  wire \$procmux$13857_Y ;
  wire \$procmux$13858_CMP ;
  wire \$procmux$13859_Y ;
  wire \$procmux$13860_CMP ;
  wire [2:0] \$procmux$13861_Y ;
  wire \$procmux$13862_CMP ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:95.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:81.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire [3:0] matched_rules;
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6557  (
    .A(addr_i),
    .B(addr_map_i[63:32]),
    .Y(\$auto$builder.cc:338:Biop$6558 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6561  (
    .A(addr_i),
    .B(addr_map_i[31:0]),
    .Y(\$auto$builder.cc:338:Biop$6562 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6563  (
    .A(addr_map_i[31:0]),
    .Y(\$auto$builder.cc:338:Biop$6564 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6565  (
    .A(\$auto$builder.cc:338:Biop$6562 ),
    .B(\$auto$builder.cc:338:Biop$6564 ),
    .Y(\$auto$builder.cc:338:Biop$6566 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6567  (
    .A(\$auto$builder.cc:338:Biop$6560 ),
    .B(\$auto$builder.cc:338:Biop$6566 ),
    .Y(\$auto$builder.cc:338:Biop$6568 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6586  (
    .A(addr_i),
    .B(addr_map_i[159:128]),
    .Y(\$auto$builder.cc:338:Biop$6587 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6590  (
    .A(addr_i),
    .B(addr_map_i[127:96]),
    .Y(\$auto$builder.cc:338:Biop$6591 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6592  (
    .A(addr_map_i[127:96]),
    .Y(\$auto$builder.cc:338:Biop$6593 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6594  (
    .A(\$auto$builder.cc:338:Biop$6591 ),
    .B(\$auto$builder.cc:338:Biop$6593 ),
    .Y(\$auto$builder.cc:338:Biop$6595 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6596  (
    .A(\$auto$builder.cc:338:Biop$6589 ),
    .B(\$auto$builder.cc:338:Biop$6595 ),
    .Y(\$auto$builder.cc:338:Biop$6597 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6615  (
    .A(addr_i),
    .B(addr_map_i[255:224]),
    .Y(\$auto$builder.cc:338:Biop$6616 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6619  (
    .A(addr_i),
    .B(addr_map_i[223:192]),
    .Y(\$auto$builder.cc:338:Biop$6620 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6621  (
    .A(addr_map_i[223:192]),
    .Y(\$auto$builder.cc:338:Biop$6622 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6623  (
    .A(\$auto$builder.cc:338:Biop$6620 ),
    .B(\$auto$builder.cc:338:Biop$6622 ),
    .Y(\$auto$builder.cc:338:Biop$6624 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6625  (
    .A(\$auto$builder.cc:338:Biop$6618 ),
    .B(\$auto$builder.cc:338:Biop$6624 ),
    .Y(\$auto$builder.cc:338:Biop$6626 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6644  (
    .A(addr_i),
    .B(addr_map_i[351:320]),
    .Y(\$auto$builder.cc:338:Biop$6645 )
  );
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6648  (
    .A(addr_i),
    .B(addr_map_i[319:288]),
    .Y(\$auto$builder.cc:338:Biop$6649 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6650  (
    .A(addr_map_i[319:288]),
    .Y(\$auto$builder.cc:338:Biop$6651 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6652  (
    .A(\$auto$builder.cc:338:Biop$6649 ),
    .B(\$auto$builder.cc:338:Biop$6651 ),
    .Y(\$auto$builder.cc:338:Biop$6653 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6654  (
    .A(\$auto$builder.cc:338:Biop$6647 ),
    .B(\$auto$builder.cc:338:Biop$6653 ),
    .Y(\$auto$builder.cc:338:Biop$6655 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6573  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6574 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6575  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6576 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6602  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6603 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6604  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6605 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6631  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6632 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6633  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6634 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6660  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6661 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6662  (
    .A(config_ongoing_i),
    .Y(\$auto$builder.cc:364:Unop$6663 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$6548  (
    .A(1'h1),
    .B(1'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6547 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6549 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6552  (
    .A(3'h0),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6551 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6553 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6579  (
    .A(addr_map_i[66:64]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6578 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6580 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6608  (
    .A(addr_map_i[162:160]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6607 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6609 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6637  (
    .A(addr_map_i[258:256]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6636 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6638 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$slang_frontend.cc:2041:operator()$6666  (
    .A(addr_map_i[354:352]),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6665 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6667 )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13807  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6661 ),
    .S(\$procmux$13808_CMP ),
    .Y(\$procmux$13807_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13812  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6641 ),
    .B(1'h0),
    .S(\$procmux$13813_CMP ),
    .Y(\$procmux$13812_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13817  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6640 ),
    .B(\$auto$builder.cc:364:Unop$6663 ),
    .S(\$procmux$13818_CMP ),
    .Y(\$procmux$13817_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13822  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6639 ),
    .B(\$auto$rtlil.cc:2874:Mux$6667 ),
    .S(\$procmux$13823_CMP ),
    .Y(\$procmux$13822_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13827  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6632 ),
    .S(\$procmux$13828_CMP ),
    .Y(\$procmux$13827_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13831  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6612 ),
    .B(1'h0),
    .S(\$procmux$13832_CMP ),
    .Y(\$procmux$13831_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13835  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6611 ),
    .B(\$auto$builder.cc:364:Unop$6634 ),
    .S(\$procmux$13836_CMP ),
    .Y(\$procmux$13835_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13839  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6610 ),
    .B(\$auto$rtlil.cc:2874:Mux$6638 ),
    .S(\$procmux$13840_CMP ),
    .Y(\$procmux$13839_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13843  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6603 ),
    .S(\$procmux$13844_CMP ),
    .Y(\$procmux$13843_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13846  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_error_o$6583 ),
    .B(1'h0),
    .S(\$procmux$13847_CMP ),
    .Y(\$procmux$13846_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13849  (
    .A(\$auto$slang_frontend.cc:694:finish$\dec_valid_o$6582 ),
    .B(\$auto$builder.cc:364:Unop$6605 ),
    .S(\$procmux$13850_CMP ),
    .Y(\$procmux$13849_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13852  (
    .A(\$auto$slang_frontend.cc:694:finish$\idx_o$6581 ),
    .B(\$auto$rtlil.cc:2874:Mux$6609 ),
    .S(\$procmux$13853_CMP ),
    .Y(\$procmux$13852_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13855  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6574 ),
    .S(\$procmux$13856_CMP ),
    .Y(\$procmux$13855_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13857  (
    .A(\$auto$rtlil.cc:2874:Mux$6549 ),
    .B(1'h0),
    .S(\$procmux$13858_CMP ),
    .Y(\$procmux$13857_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13859  (
    .A(1'h0),
    .B(\$auto$builder.cc:364:Unop$6576 ),
    .S(\$procmux$13860_CMP ),
    .Y(\$procmux$13859_Y )
  );
  /* src = "../rtl/common_cells/addr_decode_dync.sv:117.9-122.10|../rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13861  (
    .A(\$auto$rtlil.cc:2874:Mux$6553 ),
    .B(\$auto$rtlil.cc:2874:Mux$6580 ),
    .S(\$procmux$13862_CMP ),
    .Y(\$procmux$13861_Y )
  );
  assign idx_o = \$auto$slang_frontend.cc:694:finish$\idx_o$6668 ;
  assign dec_valid_o = \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6669 ;
  assign dec_error_o = \$auto$slang_frontend.cc:694:finish$\dec_error_o$6670 ;
  assign matched_rules = { \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6671 , \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6642 , \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6613 , \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6584  };
  assign \$procmux$13808_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6659 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[3]$6671  = \$procmux$13807_Y ;
  assign \$procmux$13813_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6659 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6670  = \$procmux$13812_Y ;
  assign \$procmux$13818_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6659 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6669  = \$procmux$13817_Y ;
  assign \$procmux$13823_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6659 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6668  = \$procmux$13822_Y ;
  assign \$procmux$13828_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6630 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[2]$6642  = \$procmux$13827_Y ;
  assign \$procmux$13832_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6630 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6641  = \$procmux$13831_Y ;
  assign \$procmux$13836_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6630 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6640  = \$procmux$13835_Y ;
  assign \$procmux$13840_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6630 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6639  = \$procmux$13839_Y ;
  assign \$procmux$13844_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6601 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[1]$6613  = \$procmux$13843_Y ;
  assign \$procmux$13847_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6601 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6612  = \$procmux$13846_Y ;
  assign \$procmux$13850_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6601 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6611  = \$procmux$13849_Y ;
  assign \$procmux$13853_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6601 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6610  = \$procmux$13852_Y ;
  assign \$procmux$13856_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6572 ;
  assign \$auto$slang_frontend.cc:694:finish$\matched_rules[0]$6584  = \$procmux$13855_Y ;
  assign \$procmux$13858_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6572 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_error_o$6583  = \$procmux$13857_Y ;
  assign \$procmux$13860_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6572 ;
  assign \$auto$slang_frontend.cc:694:finish$\dec_valid_o$6582  = \$procmux$13859_Y ;
  assign \$procmux$13862_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6572 ;
  assign \$auto$slang_frontend.cc:694:finish$\idx_o$6581  = \$procmux$13861_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6547  = en_default_idx_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6551  = en_default_idx_i;
  assign \$auto$builder.cc:338:Biop$6560  = \$auto$builder.cc:338:Biop$6558 ;
  assign \$auto$builder.cc:338:Biop$6570  = \$auto$builder.cc:338:Biop$6568 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6572  = \$auto$builder.cc:338:Biop$6568 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6578  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6589  = \$auto$builder.cc:338:Biop$6587 ;
  assign \$auto$builder.cc:338:Biop$6599  = \$auto$builder.cc:338:Biop$6597 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6601  = \$auto$builder.cc:338:Biop$6597 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6607  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6618  = \$auto$builder.cc:338:Biop$6616 ;
  assign \$auto$builder.cc:338:Biop$6628  = \$auto$builder.cc:338:Biop$6626 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6630  = \$auto$builder.cc:338:Biop$6626 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6636  = config_ongoing_i;
  assign \$auto$builder.cc:338:Biop$6647  = \$auto$builder.cc:338:Biop$6645 ;
  assign \$auto$builder.cc:338:Biop$6657  = \$auto$builder.cc:338:Biop$6655 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6659  = \$auto$builder.cc:338:Biop$6655 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6665  = config_ongoing_i;
endmodule

/* src = "../rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_user.i_addr_decode_periphs.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$auto$rtlil.cc:2746:ReduceBool$5908 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5912 ;
  wire \$auto$rtlil.cc:2874:Mux$5910 ;
  wire \$auto$rtlil.cc:2874:Mux$5914 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$5916 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$5915 ;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [191:0] addr_map_i;
  wire [191:0] addr_map_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:95.31" */
  input default_idx_i;
  wire default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:81.31" */
  output idx_o;
  wire idx_o;
  /* src = "../rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire [1:0] matched_rules;
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5909  (
    .A(1'h1),
    .B(1'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5908 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5910 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5913  (
    .A(1'h0),
    .B(default_idx_i),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5912 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5914 )
  );
  assign idx_o = \$auto$rtlil.cc:2874:Mux$5914 ;
  assign dec_valid_o = 1'h0;
  assign dec_error_o = \$auto$rtlil.cc:2874:Mux$5910 ;
  assign matched_rules = 2'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$5908  = en_default_idx_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$5912  = en_default_idx_i;
endmodule

/* src = "../rtl/apb_uart/apb_uart.sv:35.8" */
module \apb_uart$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart (CLK, RSTN, PSEL, PENABLE, PWRITE, PADDR, PWDATA, PRDATA, PREADY, PSLVERR, INT, OUT1N, OUT2N, RTSN, DTRN, CTSN, DSRN, DCDN, RIN, SIN, SOUT
);
  wire \$auto$builder.cc:338:Biop$4223 ;
  wire \$auto$builder.cc:338:Biop$4225 ;
  wire \$auto$builder.cc:338:Biop$4227 ;
  wire \$auto$builder.cc:338:Biop$4229 ;
  wire \$auto$builder.cc:338:Biop$4231 ;
  wire \$auto$builder.cc:338:Biop$4237 ;
  wire \$auto$builder.cc:338:Biop$4239 ;
  wire \$auto$builder.cc:338:Biop$4241 ;
  wire \$auto$builder.cc:338:Biop$4243 ;
  wire \$auto$builder.cc:338:Biop$4245 ;
  wire \$auto$builder.cc:338:Biop$4251 ;
  wire \$auto$builder.cc:338:Biop$4257 ;
  wire \$auto$builder.cc:338:Biop$4259 ;
  wire \$auto$builder.cc:338:Biop$4261 ;
  wire \$auto$builder.cc:338:Biop$4263 ;
  wire \$auto$builder.cc:338:Biop$4265 ;
  wire \$auto$builder.cc:338:Biop$4271 ;
  wire \$auto$builder.cc:338:Biop$4273 ;
  wire \$auto$builder.cc:338:Biop$4275 ;
  wire \$auto$builder.cc:338:Biop$4277 ;
  wire \$auto$builder.cc:338:Biop$4279 ;
  wire \$auto$builder.cc:338:Biop$4285 ;
  wire \$auto$builder.cc:338:Biop$4287 ;
  wire \$auto$builder.cc:338:Biop$4289 ;
  wire \$auto$builder.cc:338:Biop$4291 ;
  wire \$auto$builder.cc:338:Biop$4293 ;
  wire \$auto$builder.cc:338:Biop$4299 ;
  wire \$auto$builder.cc:338:Biop$4301 ;
  wire \$auto$builder.cc:338:Biop$4303 ;
  wire \$auto$builder.cc:338:Biop$4305 ;
  wire \$auto$builder.cc:338:Biop$4307 ;
  wire \$auto$builder.cc:338:Biop$4313 ;
  wire \$auto$builder.cc:338:Biop$4315 ;
  wire \$auto$builder.cc:338:Biop$4317 ;
  wire \$auto$builder.cc:338:Biop$4319 ;
  wire \$auto$builder.cc:338:Biop$4321 ;
  wire \$auto$builder.cc:338:Biop$4327 ;
  wire \$auto$builder.cc:338:Biop$4329 ;
  wire \$auto$builder.cc:338:Biop$4331 ;
  wire \$auto$builder.cc:338:Biop$4337 ;
  wire \$auto$builder.cc:338:Biop$4339 ;
  wire \$auto$builder.cc:338:Biop$4341 ;
  wire \$auto$builder.cc:338:Biop$4347 ;
  wire \$auto$builder.cc:338:Biop$4349 ;
  wire \$auto$builder.cc:338:Biop$4351 ;
  wire \$auto$builder.cc:338:Biop$4357 ;
  wire \$auto$builder.cc:338:Biop$4359 ;
  wire \$auto$builder.cc:338:Biop$4361 ;
  wire \$auto$builder.cc:338:Biop$4367 ;
  wire \$auto$builder.cc:338:Biop$4369 ;
  wire \$auto$builder.cc:338:Biop$4371 ;
  wire \$auto$builder.cc:338:Biop$4377 ;
  wire \$auto$builder.cc:338:Biop$4379 ;
  wire \$auto$builder.cc:338:Biop$4381 ;
  wire \$auto$builder.cc:338:Biop$4387 ;
  wire \$auto$builder.cc:338:Biop$4389 ;
  wire \$auto$builder.cc:338:Biop$4391 ;
  wire \$auto$builder.cc:338:Biop$4400 ;
  wire \$auto$builder.cc:338:Biop$4405 ;
  wire \$auto$builder.cc:338:Biop$4413 ;
  wire \$auto$builder.cc:338:Biop$4421 ;
  wire \$auto$builder.cc:338:Biop$4423 ;
  wire \$auto$builder.cc:338:Biop$4425 ;
  wire \$auto$builder.cc:338:Biop$4427 ;
  wire \$auto$builder.cc:338:Biop$4429 ;
  wire \$auto$builder.cc:338:Biop$4431 ;
  wire \$auto$builder.cc:338:Biop$4433 ;
  wire \$auto$builder.cc:338:Biop$4435 ;
  wire \$auto$builder.cc:338:Biop$4437 ;
  wire \$auto$builder.cc:338:Biop$4441 ;
  wire \$auto$builder.cc:338:Biop$4443 ;
  wire \$auto$builder.cc:338:Biop$4445 ;
  wire \$auto$builder.cc:338:Biop$4447 ;
  wire \$auto$builder.cc:338:Biop$4449 ;
  wire \$auto$builder.cc:338:Biop$4455 ;
  wire \$auto$builder.cc:338:Biop$4457 ;
  wire \$auto$builder.cc:338:Biop$4459 ;
  wire \$auto$builder.cc:338:Biop$4461 ;
  wire \$auto$builder.cc:338:Biop$4463 ;
  wire \$auto$builder.cc:338:Biop$4465 ;
  wire \$auto$builder.cc:338:Biop$4467 ;
  wire \$auto$builder.cc:338:Biop$4480 ;
  wire \$auto$builder.cc:338:Biop$4482 ;
  wire \$auto$builder.cc:338:Biop$4484 ;
  wire \$auto$builder.cc:338:Biop$4486 ;
  wire \$auto$builder.cc:338:Biop$4488 ;
  wire \$auto$builder.cc:338:Biop$4492 ;
  wire \$auto$builder.cc:338:Biop$4494 ;
  wire \$auto$builder.cc:338:Biop$4496 ;
  wire \$auto$builder.cc:338:Biop$4498 ;
  wire \$auto$builder.cc:338:Biop$4500 ;
  wire [31:0] \$auto$builder.cc:338:Biop$4504 ;
  wire \$auto$builder.cc:338:Biop$4508 ;
  wire \$auto$builder.cc:338:Biop$4512 ;
  wire \$auto$builder.cc:338:Biop$4516 ;
  wire \$auto$builder.cc:338:Biop$4526 ;
  wire \$auto$builder.cc:338:Biop$4530 ;
  wire \$auto$builder.cc:338:Biop$4535 ;
  wire \$auto$builder.cc:338:Biop$4537 ;
  wire \$auto$builder.cc:338:Biop$4539 ;
  wire \$auto$builder.cc:338:Biop$4541 ;
  wire \$auto$builder.cc:338:Biop$4543 ;
  wire \$auto$builder.cc:338:Biop$4545 ;
  wire \$auto$builder.cc:338:Biop$4547 ;
  wire \$auto$builder.cc:338:Biop$4549 ;
  wire \$auto$builder.cc:338:Biop$4551 ;
  wire \$auto$builder.cc:338:Biop$4556 ;
  wire \$auto$builder.cc:338:Biop$4558 ;
  wire \$auto$builder.cc:338:Biop$4560 ;
  wire \$auto$builder.cc:338:Biop$4562 ;
  wire \$auto$builder.cc:338:Biop$4564 ;
  wire \$auto$builder.cc:338:Biop$4566 ;
  wire \$auto$builder.cc:338:Biop$4568 ;
  wire \$auto$builder.cc:338:Biop$4570 ;
  wire \$auto$builder.cc:338:Biop$4572 ;
  wire \$auto$builder.cc:338:Biop$4586 ;
  wire \$auto$builder.cc:338:Biop$4594 ;
  wire \$auto$builder.cc:338:Biop$4602 ;
  wire \$auto$builder.cc:338:Biop$4604 ;
  wire \$auto$builder.cc:338:Biop$4606 ;
  wire \$auto$builder.cc:338:Biop$4608 ;
  wire \$auto$builder.cc:338:Biop$4610 ;
  wire \$auto$builder.cc:338:Biop$4612 ;
  wire \$auto$builder.cc:338:Biop$4614 ;
  wire \$auto$builder.cc:338:Biop$4616 ;
  wire \$auto$builder.cc:338:Biop$4618 ;
  wire \$auto$builder.cc:338:Biop$4620 ;
  wire \$auto$builder.cc:338:Biop$4622 ;
  wire \$auto$builder.cc:338:Biop$4626 ;
  wire \$auto$builder.cc:338:Biop$4632 ;
  wire \$auto$builder.cc:338:Biop$4636 ;
  wire \$auto$builder.cc:338:Biop$4642 ;
  wire \$auto$builder.cc:338:Biop$4646 ;
  wire \$auto$builder.cc:338:Biop$4652 ;
  wire \$auto$builder.cc:338:Biop$4656 ;
  wire \$auto$builder.cc:338:Biop$4662 ;
  wire \$auto$builder.cc:338:Biop$4666 ;
  wire \$auto$builder.cc:338:Biop$4668 ;
  wire \$auto$builder.cc:338:Biop$4670 ;
  wire \$auto$builder.cc:338:Biop$4676 ;
  wire \$auto$builder.cc:338:Biop$4680 ;
  wire \$auto$builder.cc:338:Biop$4682 ;
  wire \$auto$builder.cc:338:Biop$4684 ;
  wire [31:0] \$auto$builder.cc:338:Biop$4688 ;
  wire \$auto$builder.cc:338:Biop$4690 ;
  wire \$auto$builder.cc:338:Biop$4692 ;
  wire \$auto$builder.cc:338:Biop$4694 ;
  wire [31:0] \$auto$builder.cc:338:Biop$4698 ;
  wire \$auto$builder.cc:338:Biop$4703 ;
  wire \$auto$builder.cc:338:Biop$4705 ;
  wire \$auto$builder.cc:338:Biop$4707 ;
  wire \$auto$builder.cc:338:Biop$4713 ;
  wire \$auto$builder.cc:338:Biop$4715 ;
  wire \$auto$builder.cc:338:Biop$4717 ;
  wire \$auto$builder.cc:338:Biop$4723 ;
  wire \$auto$builder.cc:338:Biop$4725 ;
  wire \$auto$builder.cc:338:Biop$4727 ;
  wire \$auto$builder.cc:338:Biop$4733 ;
  wire \$auto$builder.cc:338:Biop$4735 ;
  wire \$auto$builder.cc:338:Biop$4737 ;
  wire \$auto$builder.cc:338:Biop$4743 ;
  wire \$auto$builder.cc:338:Biop$4745 ;
  wire \$auto$builder.cc:338:Biop$4747 ;
  wire \$auto$builder.cc:338:Biop$4749 ;
  wire \$auto$builder.cc:338:Biop$4751 ;
  wire \$auto$builder.cc:338:Biop$4753 ;
  wire \$auto$builder.cc:338:Biop$4755 ;
  wire \$auto$builder.cc:338:Biop$4757 ;
  wire \$auto$builder.cc:338:Biop$4759 ;
  wire \$auto$builder.cc:338:Biop$4765 ;
  wire \$auto$builder.cc:338:Biop$4767 ;
  wire \$auto$builder.cc:338:Biop$4769 ;
  wire \$auto$builder.cc:338:Biop$4771 ;
  wire \$auto$builder.cc:338:Biop$4777 ;
  wire \$auto$builder.cc:338:Biop$4783 ;
  wire \$auto$builder.cc:338:Biop$4785 ;
  wire \$auto$builder.cc:338:Biop$4787 ;
  wire \$auto$builder.cc:338:Biop$4793 ;
  wire \$auto$builder.cc:338:Biop$4795 ;
  wire \$auto$builder.cc:338:Biop$4797 ;
  wire \$auto$builder.cc:338:Biop$4799 ;
  wire \$auto$builder.cc:338:Biop$4801 ;
  wire \$auto$builder.cc:338:Biop$4803 ;
  wire \$auto$builder.cc:338:Biop$4805 ;
  wire \$auto$builder.cc:338:Biop$4811 ;
  wire \$auto$builder.cc:338:Biop$4813 ;
  wire \$auto$builder.cc:338:Biop$4815 ;
  wire \$auto$builder.cc:338:Biop$4817 ;
  wire \$auto$builder.cc:338:Biop$4819 ;
  wire \$auto$builder.cc:338:Biop$4821 ;
  wire \$auto$builder.cc:338:Biop$4823 ;
  wire \$auto$builder.cc:338:Biop$4829 ;
  wire \$auto$builder.cc:338:Biop$4831 ;
  wire \$auto$builder.cc:338:Biop$4833 ;
  wire \$auto$builder.cc:338:Biop$4835 ;
  wire \$auto$builder.cc:338:Biop$4837 ;
  wire \$auto$builder.cc:338:Biop$4839 ;
  wire \$auto$builder.cc:338:Biop$4841 ;
  wire \$auto$builder.cc:338:Biop$4847 ;
  wire \$auto$builder.cc:338:Biop$4849 ;
  wire \$auto$builder.cc:338:Biop$4851 ;
  wire \$auto$builder.cc:338:Biop$4853 ;
  wire \$auto$builder.cc:338:Biop$4855 ;
  wire \$auto$builder.cc:338:Biop$4857 ;
  wire \$auto$builder.cc:338:Biop$4859 ;
  wire \$auto$builder.cc:338:Biop$4868 ;
  wire \$auto$builder.cc:338:Biop$4870 ;
  wire \$auto$builder.cc:338:Biop$4872 ;
  wire \$auto$builder.cc:338:Biop$4876 ;
  wire \$auto$builder.cc:338:Biop$4882 ;
  wire \$auto$builder.cc:338:Biop$4884 ;
  wire \$auto$builder.cc:338:Biop$4886 ;
  wire \$auto$builder.cc:338:Biop$4890 ;
  wire \$auto$builder.cc:338:Biop$4896 ;
  wire \$auto$builder.cc:338:Biop$4900 ;
  wire \$auto$builder.cc:338:Biop$4906 ;
  wire \$auto$builder.cc:338:Biop$4908 ;
  wire \$auto$builder.cc:338:Biop$4910 ;
  wire \$auto$builder.cc:338:Biop$4914 ;
  wire \$auto$builder.cc:338:Biop$4923 ;
  wire \$auto$builder.cc:338:Biop$4928 ;
  wire \$auto$builder.cc:338:Biop$4934 ;
  wire \$auto$builder.cc:338:Biop$4936 ;
  wire \$auto$builder.cc:338:Biop$4938 ;
  wire \$auto$builder.cc:338:Biop$4940 ;
  wire \$auto$builder.cc:338:Biop$4942 ;
  wire \$auto$builder.cc:338:Biop$4944 ;
  wire \$auto$builder.cc:338:Biop$4946 ;
  wire \$auto$builder.cc:338:Biop$4948 ;
  wire \$auto$builder.cc:338:Biop$4950 ;
  wire \$auto$builder.cc:338:Biop$4956 ;
  wire \$auto$builder.cc:338:Biop$4962 ;
  wire \$auto$builder.cc:338:Biop$4968 ;
  wire \$auto$builder.cc:338:Biop$4974 ;
  wire \$auto$builder.cc:338:Biop$4976 ;
  wire \$auto$builder.cc:338:Biop$4978 ;
  wire \$auto$builder.cc:338:Biop$4980 ;
  wire \$auto$builder.cc:338:Biop$4982 ;
  wire \$auto$builder.cc:338:Biop$4984 ;
  wire \$auto$builder.cc:338:Biop$4986 ;
  wire \$auto$builder.cc:338:Biop$4988 ;
  wire \$auto$builder.cc:338:Biop$4990 ;
  wire \$auto$builder.cc:338:Biop$4992 ;
  wire \$auto$builder.cc:338:Biop$4994 ;
  wire \$auto$builder.cc:338:Biop$4996 ;
  wire \$auto$builder.cc:338:Biop$4998 ;
  wire \$auto$builder.cc:338:Biop$5000 ;
  wire \$auto$builder.cc:338:Biop$5002 ;
  wire \$auto$builder.cc:338:Biop$5004 ;
  wire \$auto$builder.cc:338:Biop$5006 ;
  wire \$auto$builder.cc:338:Biop$5008 ;
  wire \$auto$builder.cc:338:Biop$5010 ;
  wire \$auto$builder.cc:338:Biop$5012 ;
  wire \$auto$builder.cc:338:Biop$5014 ;
  wire \$auto$builder.cc:338:Biop$5016 ;
  wire \$auto$builder.cc:338:Biop$5018 ;
  wire \$auto$builder.cc:338:Biop$5024 ;
  wire \$auto$builder.cc:338:Biop$5026 ;
  wire \$auto$builder.cc:338:Biop$5028 ;
  wire \$auto$builder.cc:338:Biop$5030 ;
  wire \$auto$builder.cc:338:Biop$5032 ;
  wire \$auto$builder.cc:338:Biop$5034 ;
  wire \$auto$builder.cc:338:Biop$5036 ;
  wire \$auto$builder.cc:338:Biop$5038 ;
  wire \$auto$builder.cc:338:Biop$5040 ;
  wire \$auto$builder.cc:338:Biop$5042 ;
  wire \$auto$builder.cc:338:Biop$5044 ;
  wire \$auto$builder.cc:338:Biop$5046 ;
  wire \$auto$builder.cc:338:Biop$5048 ;
  wire \$auto$builder.cc:338:Biop$5050 ;
  wire \$auto$builder.cc:338:Biop$5052 ;
  wire \$auto$builder.cc:338:Biop$5054 ;
  wire \$auto$builder.cc:338:Biop$5056 ;
  wire \$auto$builder.cc:338:Biop$5058 ;
  wire \$auto$builder.cc:338:Biop$5060 ;
  wire \$auto$builder.cc:338:Biop$5062 ;
  wire \$auto$builder.cc:338:Biop$5064 ;
  wire \$auto$builder.cc:338:Biop$5066 ;
  wire \$auto$builder.cc:338:Biop$5068 ;
  wire \$auto$builder.cc:338:Biop$5074 ;
  wire \$auto$builder.cc:338:Biop$5080 ;
  wire \$auto$builder.cc:338:Biop$5086 ;
  wire \$auto$builder.cc:338:Biop$5088 ;
  wire \$auto$builder.cc:338:Biop$5090 ;
  wire \$auto$builder.cc:338:Biop$5092 ;
  wire \$auto$builder.cc:338:Biop$5094 ;
  wire \$auto$builder.cc:338:Biop$5096 ;
  wire \$auto$builder.cc:338:Biop$5098 ;
  wire \$auto$builder.cc:338:Biop$5107 ;
  wire \$auto$builder.cc:338:Biop$5113 ;
  wire \$auto$builder.cc:338:Biop$5126 ;
  wire \$auto$builder.cc:338:Biop$5130 ;
  wire \$auto$builder.cc:338:Biop$5138 ;
  wire \$auto$builder.cc:338:Biop$5142 ;
  wire \$auto$builder.cc:338:Biop$5155 ;
  wire \$auto$builder.cc:338:Biop$5157 ;
  wire \$auto$builder.cc:338:Biop$5159 ;
  wire \$auto$builder.cc:338:Biop$5161 ;
  wire \$auto$builder.cc:338:Biop$5163 ;
  wire \$auto$builder.cc:338:Biop$5167 ;
  wire \$auto$builder.cc:338:Biop$5169 ;
  wire \$auto$builder.cc:338:Biop$5171 ;
  wire \$auto$builder.cc:338:Biop$5173 ;
  wire \$auto$builder.cc:338:Biop$5175 ;
  wire \$auto$builder.cc:338:Biop$5177 ;
  wire \$auto$builder.cc:338:Biop$5179 ;
  wire \$auto$builder.cc:338:Biop$5188 ;
  wire \$auto$builder.cc:338:Biop$5193 ;
  wire \$auto$builder.cc:338:Biop$5195 ;
  wire \$auto$builder.cc:338:Biop$5197 ;
  wire \$auto$builder.cc:338:Biop$5202 ;
  wire \$auto$builder.cc:338:Biop$5204 ;
  wire \$auto$builder.cc:338:Biop$5206 ;
  wire \$auto$builder.cc:338:Biop$5211 ;
  wire \$auto$builder.cc:338:Biop$5213 ;
  wire \$auto$builder.cc:338:Biop$5215 ;
  wire \$auto$builder.cc:338:Biop$5220 ;
  wire \$auto$builder.cc:338:Biop$5222 ;
  wire \$auto$builder.cc:338:Biop$5224 ;
  wire \$auto$builder.cc:338:Biop$5229 ;
  wire \$auto$builder.cc:338:Biop$5231 ;
  wire \$auto$builder.cc:338:Biop$5233 ;
  wire \$auto$builder.cc:338:Biop$5239 ;
  wire \$auto$builder.cc:338:Biop$5244 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4233 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4247 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4253 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4267 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4281 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4295 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4309 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4323 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4333 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4343 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4353 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4363 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4373 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4383 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4393 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4402 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4407 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4415 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4439 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4451 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4469 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4473 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4490 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4502 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4510 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4514 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4518 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4528 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4532 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4553 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4574 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4588 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4596 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4624 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4628 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4634 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4638 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4644 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4648 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4654 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4658 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4664 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4672 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4678 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4686 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4696 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4709 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4719 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4729 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4739 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4761 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4773 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4779 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4789 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4807 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4825 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4843 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4861 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4874 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4878 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4888 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4892 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4898 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4902 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4912 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4916 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4925 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4930 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4952 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4958 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4964 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4970 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5020 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5070 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5076 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5082 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5100 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5109 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5115 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5128 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5132 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5140 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5144 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5165 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5181 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5190 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5199 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5208 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5217 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5226 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5235 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5241 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5246 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4398 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4411 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4419 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4478 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4524 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4584 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4592 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4600 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4866 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4921 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5105 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5124 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5153 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5186 ;
  wire \$auto$rtlil.cc:2874:Mux$4235 ;
  wire \$auto$rtlil.cc:2874:Mux$4249 ;
  wire \$auto$rtlil.cc:2874:Mux$4255 ;
  wire \$auto$rtlil.cc:2874:Mux$4269 ;
  wire \$auto$rtlil.cc:2874:Mux$4283 ;
  wire \$auto$rtlil.cc:2874:Mux$4297 ;
  wire \$auto$rtlil.cc:2874:Mux$4311 ;
  wire \$auto$rtlil.cc:2874:Mux$4325 ;
  wire \$auto$rtlil.cc:2874:Mux$4335 ;
  wire \$auto$rtlil.cc:2874:Mux$4345 ;
  wire \$auto$rtlil.cc:2874:Mux$4355 ;
  wire \$auto$rtlil.cc:2874:Mux$4365 ;
  wire \$auto$rtlil.cc:2874:Mux$4375 ;
  wire \$auto$rtlil.cc:2874:Mux$4385 ;
  wire \$auto$rtlil.cc:2874:Mux$4395 ;
  wire \$auto$rtlil.cc:2874:Mux$4471 ;
  wire \$auto$rtlil.cc:2874:Mux$4475 ;
  wire \$auto$rtlil.cc:2874:Mux$4711 ;
  wire \$auto$rtlil.cc:2874:Mux$4721 ;
  wire \$auto$rtlil.cc:2874:Mux$4731 ;
  wire \$auto$rtlil.cc:2874:Mux$4741 ;
  wire \$auto$rtlil.cc:2874:Mux$4763 ;
  wire \$auto$rtlil.cc:2874:Mux$4775 ;
  wire \$auto$rtlil.cc:2874:Mux$4781 ;
  wire \$auto$rtlil.cc:2874:Mux$4791 ;
  wire \$auto$rtlil.cc:2874:Mux$4809 ;
  wire \$auto$rtlil.cc:2874:Mux$4827 ;
  wire \$auto$rtlil.cc:2874:Mux$4845 ;
  wire \$auto$rtlil.cc:2874:Mux$4863 ;
  wire \$auto$rtlil.cc:2874:Mux$4932 ;
  wire \$auto$rtlil.cc:2874:Mux$4954 ;
  wire \$auto$rtlil.cc:2874:Mux$4960 ;
  wire \$auto$rtlil.cc:2874:Mux$4966 ;
  wire \$auto$rtlil.cc:2874:Mux$4972 ;
  wire \$auto$rtlil.cc:2874:Mux$5022 ;
  wire \$auto$rtlil.cc:2874:Mux$5072 ;
  wire \$auto$rtlil.cc:2874:Mux$5078 ;
  wire \$auto$rtlil.cc:2874:Mux$5084 ;
  wire \$auto$rtlil.cc:2874:Mux$5102 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:867.8-870.13" */
  wire \$auto$slang_frontend.cc:694:finish$\DTRN$5227 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:852.8-855.13" */
  wire \$auto$slang_frontend.cc:694:finish$\OUT1N$5200 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:857.8-860.13" */
  wire \$auto$slang_frontend.cc:694:finish$\OUT2N$5209 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:883.13-890.18" */
  wire [7:0] \$auto$slang_frontend.cc:694:finish$\PRDATA[0]$5242 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:895.13-902.18" */
  wire [7:0] \$auto$slang_frontend.cc:694:finish$\PRDATA[0]$5247 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  wire [7:0] \$auto$slang_frontend.cc:694:finish$\PRDATA[0]$5248 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:862.8-865.13" */
  wire \$auto$slang_frontend.cc:694:finish$\RTSN$5218 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:872.8-875.18" */
  wire \$auto$slang_frontend.cc:694:finish$\SOUT$5236 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:847.8-850.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iBAUDOUTN$5191 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:344.18-347.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iCharTimeout$4519 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:340.13-347.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iCharTimeout$4520 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:338.8-352.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iCharTimeout$4521 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:244.8-247.13" */
  wire [7:0] \$auto$slang_frontend.cc:694:finish$\iDLL$4403 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:248.8-251.13" */
  wire [7:0] \$auto$slang_frontend.cc:694:finish$\iDLM$4408 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iFCR_DMAMode$4579 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:375.13-378.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iFCR_FIFO64E$4533 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iFCR_FIFO64E$4580 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iFCR_FIFOEnable$4576 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:380.13-383.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iFCR_RXFIFOReset$4554 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iFCR_RXFIFOReset$4577 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iFCR_RXTrigger$4581 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:385.13-388.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iFCR_TXFIFOReset$4575 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iFCR_TXFIFOReset$4578 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:505.18-508.18" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\iFECounter$4699 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:501.13-508.18" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\iFECounter$4700 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:495.8-509.13" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\iFECounter$4701 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:261.8-264.13" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\iIER[0]$4416 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:408.8-411.13" */
  wire [7:0] \$auto$slang_frontend.cc:694:finish$\iLCR$4589 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:483.13-486.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iLSR_BI$4659 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:479.8-486.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iLSR_BI$4660 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:475.13-478.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iLSR_FE$4649 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:471.8-478.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iLSR_FE$4650 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:491.13-494.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iLSR_FIFOERR$4673 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:487.8-494.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iLSR_FIFOERR$4674 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:459.13-462.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iLSR_OE$4629 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:455.8-462.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iLSR_OE$4630 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:467.13-470.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iLSR_PE$4639 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:463.8-470.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iLSR_PE$4640 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:429.8-432.12" */
  wire [5:0] \$auto$slang_frontend.cc:694:finish$\iMCR[0]$4597 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:591.13-594.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iMSR_TERI$4903 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:587.8-594.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iMSR_TERI$4904 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:575.13-578.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iMSR_dCTS$4879 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:571.8-578.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iMSR_dCTS$4880 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:599.13-602.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iMSR_dDCD$4917 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:595.8-602.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iMSR_dDCD$4918 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:583.13-586.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iMSR_dDSR$4893 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:579.8-586.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iMSR_dDSR$4894 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:823.13-826.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iRTS$5182 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:819.8-826.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iRTS$5183 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:793.27-794.50" */
  wire \$auto$slang_frontend.cc:694:finish$\iRXFIFOClear$5133 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  wire \$auto$slang_frontend.cc:694:finish$\iRXFIFOClear$5134 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  wire \$auto$slang_frontend.cc:694:finish$\iRXFIFOClear$5147 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  wire [10:0] \$auto$slang_frontend.cc:694:finish$\iRXFIFOD$5135 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  wire [10:0] \$auto$slang_frontend.cc:694:finish$\iRXFIFOD$5149 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:804.27-805.45" */
  wire \$auto$slang_frontend.cc:694:finish$\iRXFIFOWrite$5145 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:802.22-805.45" */
  wire \$auto$slang_frontend.cc:694:finish$\iRXFIFOWrite$5146 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  wire \$auto$slang_frontend.cc:694:finish$\iRXFIFOWrite$5148 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:622.8-625.13" */
  wire [7:0] \$auto$slang_frontend.cc:694:finish$\iSCR$4926 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:303.13-306.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iTHRInterrupt$4452 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:299.8-306.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iTHRInterrupt$4453 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  wire [7:0] \$auto$slang_frontend.cc:694:finish$\iTSR$5117 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  wire \$auto$slang_frontend.cc:694:finish$\iTXFIFORead$5118 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  wire \$auto$slang_frontend.cc:694:finish$\iTXRunning$5120 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:743.22-749.43" */
  wire \$auto$slang_frontend.cc:694:finish$\iTXStart$5110 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  wire \$auto$slang_frontend.cc:694:finish$\iTXStart$5119 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:334.13-337.13" */
  wire [5:0] \$auto$slang_frontend.cc:694:finish$\iTimeoutCount$4505 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:329.8-337.13" */
  wire [5:0] \$auto$slang_frontend.cc:694:finish$\iTimeoutCount$4506 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  wire \$auto$slang_frontend.cc:694:finish$\rx_State$5136 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  wire \$auto$slang_frontend.cc:694:finish$\rx_State$5150 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:743.22-749.43" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\tx_State$5111 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:760.22-763.42" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\tx_State$5116 ;
  /* src = "../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\tx_State$5121 ;
  wire [7:0] \$procmux$14341_Y ;
  wire \$procmux$14342_CMP ;
  wire [7:0] \$procmux$14343_Y ;
  wire \$procmux$14344_CMP ;
  wire [7:0] \$procmux$14345_Y ;
  wire \$procmux$14346_CMP ;
  wire \$procmux$14347_CMP ;
  wire \$procmux$14348_CMP ;
  wire \$procmux$14349_CMP ;
  wire \$procmux$14350_CMP ;
  wire \$procmux$14351_CMP ;
  wire \$procmux$14353_CMP ;
  wire \$procmux$14355_CMP ;
  wire [7:0] \$procmux$14364_Y ;
  wire \$procmux$14365_CMP ;
  wire [7:0] \$procmux$14366_Y ;
  wire \$procmux$14367_CMP ;
  wire \$procmux$14368_Y ;
  wire \$procmux$14369_CMP ;
  wire \$procmux$14375_Y ;
  wire \$procmux$14376_CMP ;
  wire \$procmux$14381_Y ;
  wire \$procmux$14382_CMP ;
  wire \$procmux$14386_Y ;
  wire \$procmux$14387_CMP ;
  wire \$procmux$14390_Y ;
  wire \$procmux$14391_CMP ;
  wire \$procmux$14393_Y ;
  wire \$procmux$14394_CMP ;
  wire \$procmux$14395_Y ;
  wire \$procmux$14396_CMP ;
  wire \$procmux$14398_Y ;
  wire \$procmux$14399_CMP ;
  wire \$procmux$14402_Y ;
  wire \$procmux$14403_CMP ;
  wire \$procmux$14404_Y ;
  wire \$procmux$14405_CMP ;
  wire \$procmux$14407_Y ;
  wire \$procmux$14408_CMP ;
  wire \$procmux$14409_Y ;
  wire \$procmux$14410_CMP ;
  wire \$procmux$14413_Y ;
  wire \$procmux$14414_CMP ;
  wire \$procmux$14415_Y ;
  wire \$procmux$14416_CMP ;
  wire \$procmux$14418_Y ;
  wire \$procmux$14419_CMP ;
  wire \$procmux$14421_CMP ;
  wire [10:0] \$procmux$14423_Y ;
  wire \$procmux$14424_CMP ;
  wire \$procmux$14426_CMP ;
  wire \$procmux$14428_Y ;
  wire \$procmux$14429_CMP ;
  wire \$procmux$14431_CMP ;
  wire \$procmux$14435_Y ;
  wire \$procmux$14436_CMP ;
  wire \$procmux$14437_Y ;
  wire \$procmux$14438_CMP ;
  wire [10:0] \$procmux$14442_Y ;
  wire \$procmux$14443_CMP ;
  wire [10:0] \$procmux$14444_Y ;
  wire \$procmux$14445_CMP ;
  wire \$procmux$14449_Y ;
  wire \$procmux$14450_CMP ;
  wire \$procmux$14451_Y ;
  wire \$procmux$14452_CMP ;
  wire \$procmux$14455_Y ;
  wire \$procmux$14456_CMP ;
  wire \$procmux$14457_Y ;
  wire \$procmux$14458_CMP ;
  wire \$procmux$14459_Y ;
  wire \$procmux$14460_CMP ;
  wire \$procmux$14462_Y ;
  wire \$procmux$14463_CMP ;
  wire [1:0] \$procmux$14466_Y ;
  wire \$procmux$14467_CMP ;
  wire [1:0] \$procmux$14468_Y ;
  wire \$procmux$14469_CMP ;
  wire [1:0] \$procmux$14470_Y ;
  wire \$procmux$14471_CMP ;
  wire \$procmux$14473_CMP ;
  wire \$procmux$14474_CMP ;
  wire \$procmux$14476_CMP ;
  wire \$procmux$14477_Y ;
  wire \$procmux$14478_CMP ;
  wire \$procmux$14480_CMP ;
  wire \$procmux$14481_CMP ;
  wire \$procmux$14483_CMP ;
  wire [1:0] \$procmux$14488_Y ;
  wire \$procmux$14489_CMP ;
  wire [1:0] \$procmux$14490_Y ;
  wire \$procmux$14491_CMP ;
  wire \$procmux$14496_Y ;
  wire \$procmux$14497_CMP ;
  wire \$procmux$14498_Y ;
  wire \$procmux$14499_CMP ;
  wire \$procmux$14502_Y ;
  wire \$procmux$14503_CMP ;
  wire \$procmux$14507_Y ;
  wire \$procmux$14508_CMP ;
  wire [7:0] \$procmux$14512_Y ;
  wire \$procmux$14513_CMP ;
  wire [7:0] \$procmux$14514_Y ;
  wire \$procmux$14515_CMP ;
  wire \$procmux$14516_Y ;
  wire \$procmux$14517_CMP ;
  wire \$procmux$14519_Y ;
  wire \$procmux$14520_CMP ;
  wire \$procmux$14526_Y ;
  wire \$procmux$14527_CMP ;
  wire \$procmux$14531_Y ;
  wire \$procmux$14532_CMP ;
  wire \$procmux$14534_Y ;
  wire \$procmux$14535_CMP ;
  wire \$procmux$14540_Y ;
  wire \$procmux$14541_CMP ;
  wire \$procmux$14544_Y ;
  wire \$procmux$14545_CMP ;
  wire \$procmux$14547_Y ;
  wire \$procmux$14548_CMP ;
  wire \$procmux$14552_Y ;
  wire \$procmux$14553_CMP ;
  wire \$procmux$14555_Y ;
  wire \$procmux$14556_CMP ;
  wire \$procmux$14558_Y ;
  wire \$procmux$14559_CMP ;
  wire \$procmux$14562_Y ;
  wire \$procmux$14563_CMP ;
  wire [6:0] \$procmux$14564_Y ;
  wire \$procmux$14565_CMP ;
  wire [6:0] \$procmux$14567_Y ;
  wire \$procmux$14568_CMP ;
  wire [6:0] \$procmux$14570_Y ;
  wire \$procmux$14571_CMP ;
  wire [6:0] \$procmux$14579_Y ;
  wire \$procmux$14580_CMP ;
  wire [6:0] \$procmux$14582_Y ;
  wire \$procmux$14583_CMP ;
  wire [6:0] \$procmux$14591_Y ;
  wire \$procmux$14592_CMP ;
  wire \$procmux$14598_Y ;
  wire \$procmux$14599_CMP ;
  wire \$procmux$14601_Y ;
  wire \$procmux$14602_CMP ;
  wire \$procmux$14609_Y ;
  wire \$procmux$14610_CMP ;
  wire \$procmux$14615_Y ;
  wire \$procmux$14616_CMP ;
  wire \$procmux$14618_Y ;
  wire \$procmux$14619_CMP ;
  wire \$procmux$14625_Y ;
  wire \$procmux$14626_CMP ;
  wire \$procmux$14630_Y ;
  wire \$procmux$14631_CMP ;
  wire \$procmux$14633_Y ;
  wire \$procmux$14634_CMP ;
  wire \$procmux$14639_Y ;
  wire \$procmux$14640_CMP ;
  wire \$procmux$14643_Y ;
  wire \$procmux$14644_CMP ;
  wire \$procmux$14646_Y ;
  wire \$procmux$14647_CMP ;
  wire \$procmux$14651_Y ;
  wire \$procmux$14652_CMP ;
  wire \$procmux$14654_Y ;
  wire \$procmux$14655_CMP ;
  wire \$procmux$14657_Y ;
  wire \$procmux$14658_CMP ;
  wire \$procmux$14661_Y ;
  wire \$procmux$14662_CMP ;
  wire [5:0] \$procmux$14663_Y ;
  wire \$procmux$14664_CMP ;
  wire [7:0] \$procmux$14665_Y ;
  wire \$procmux$14666_CMP ;
  wire \$procmux$14667_Y ;
  wire \$procmux$14668_CMP ;
  wire \$procmux$14671_Y ;
  wire \$procmux$14672_CMP ;
  wire \$procmux$14673_Y ;
  wire \$procmux$14674_CMP ;
  wire \$procmux$14676_Y ;
  wire \$procmux$14677_CMP ;
  wire \$procmux$14678_Y ;
  wire \$procmux$14679_CMP ;
  wire \$procmux$14680_Y ;
  wire \$procmux$14681_CMP ;
  wire [1:0] \$procmux$14685_Y ;
  wire \$procmux$14686_CMP ;
  wire \$procmux$14690_Y ;
  wire \$procmux$14691_CMP ;
  wire \$procmux$14695_Y ;
  wire \$procmux$14696_CMP ;
  wire \$procmux$14700_Y ;
  wire \$procmux$14701_CMP ;
  wire \$procmux$14705_Y ;
  wire \$procmux$14706_CMP ;
  wire \$procmux$14710_Y ;
  wire \$procmux$14711_CMP ;
  wire \$procmux$14714_Y ;
  wire \$procmux$14715_CMP ;
  wire \$procmux$14718_Y ;
  wire \$procmux$14719_CMP ;
  wire \$procmux$14721_Y ;
  wire \$procmux$14722_CMP ;
  wire \$procmux$14723_Y ;
  wire \$procmux$14724_CMP ;
  wire \$procmux$14729_Y ;
  wire \$procmux$14730_CMP ;
  wire \$procmux$14731_Y ;
  wire \$procmux$14732_CMP ;
  wire [5:0] \$procmux$14734_Y ;
  wire \$procmux$14735_CMP ;
  wire [5:0] \$procmux$14737_Y ;
  wire \$procmux$14738_CMP ;
  wire [5:0] \$procmux$14741_Y ;
  wire \$procmux$14742_CMP ;
  wire \$procmux$14743_Y ;
  wire \$procmux$14744_CMP ;
  wire \$procmux$14746_Y ;
  wire \$procmux$14747_CMP ;
  wire \$procmux$14750_Y ;
  wire \$procmux$14751_CMP ;
  wire [3:0] \$procmux$14752_Y ;
  wire \$procmux$14753_CMP ;
  wire [7:0] \$procmux$14754_Y ;
  wire \$procmux$14755_CMP ;
  wire [7:0] \$procmux$14757_Y ;
  wire \$procmux$14758_CMP ;
  /* src = "../rtl/apb_uart/apb_uart.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/apb_uart.sv:51.14" */
  input CTSN;
  wire CTSN;
  /* src = "../rtl/apb_uart/apb_uart.sv:53.14" */
  input DCDN;
  wire DCDN;
  /* src = "../rtl/apb_uart/apb_uart.sv:52.14" */
  input DSRN;
  wire DSRN;
  /* src = "../rtl/apb_uart/apb_uart.sv:50.16" */
  output DTRN;
  wire DTRN;
  /* src = "../rtl/apb_uart/apb_uart.sv:46.16" */
  output INT;
  wire INT;
  /* src = "../rtl/apb_uart/apb_uart.sv:47.16" */
  output OUT1N;
  wire OUT1N;
  /* src = "../rtl/apb_uart/apb_uart.sv:48.16" */
  output OUT2N;
  wire OUT2N;
  /* src = "../rtl/apb_uart/apb_uart.sv:41.20" */
  input [2:0] PADDR;
  wire [2:0] PADDR;
  /* src = "../rtl/apb_uart/apb_uart.sv:39.14" */
  input PENABLE;
  wire PENABLE;
  /* src = "../rtl/apb_uart/apb_uart.sv:43.23" */
  output [31:0] PRDATA;
  wire [31:0] PRDATA;
  /* src = "../rtl/apb_uart/apb_uart.sv:44.16" */
  output PREADY;
  wire PREADY;
  /* src = "../rtl/apb_uart/apb_uart.sv:38.14" */
  input PSEL;
  wire PSEL;
  /* src = "../rtl/apb_uart/apb_uart.sv:45.16" */
  output PSLVERR;
  wire PSLVERR;
  /* src = "../rtl/apb_uart/apb_uart.sv:42.21" */
  input [31:0] PWDATA;
  wire [31:0] PWDATA;
  /* src = "../rtl/apb_uart/apb_uart.sv:40.14" */
  input PWRITE;
  wire PWRITE;
  /* src = "../rtl/apb_uart/apb_uart.sv:54.14" */
  input RIN;
  wire RIN;
  /* src = "../rtl/apb_uart/apb_uart.sv:37.14" */
  input RSTN;
  wire RSTN;
  /* src = "../rtl/apb_uart/apb_uart.sv:49.16" */
  output RTSN;
  wire RTSN;
  /* src = "../rtl/apb_uart/apb_uart.sv:55.14" */
  input SIN;
  wire SIN;
  /* src = "../rtl/apb_uart/apb_uart.sv:56.16" */
  output SOUT;
  wire SOUT;
  /* src = "../rtl/apb_uart/apb_uart.sv:157.5" */
  wire iBAUDOUTN;
  /* src = "../rtl/apb_uart/apb_uart.sv:198.5" */
  wire iBIRE;
  /* src = "../rtl/apb_uart/apb_uart.sv:153.12" */
  wire [15:0] iBaudgenDiv;
  /* src = "../rtl/apb_uart/apb_uart.sv:154.5" */
  wire iBaudtick16x;
  /* src = "../rtl/apb_uart/apb_uart.sv:155.5" */
  wire iBaudtick2x;
  /* src = "../rtl/apb_uart/apb_uart.sv:137.5" */
  wire iCTSNs;
  /* src = "../rtl/apb_uart/apb_uart.sv:141.5" */
  wire iCTSn;
  /* src = "../rtl/apb_uart/apb_uart.sv:146.5" */
  wire iCTSnFE;
  /* src = "../rtl/apb_uart/apb_uart.sv:145.5" */
  wire iCTSnRE;
  /* src = "../rtl/apb_uart/apb_uart.sv:204.5" */
  wire iCharTimeout;
  /* src = "../rtl/apb_uart/apb_uart.sv:139.5" */
  wire iDCDNs;
  /* src = "../rtl/apb_uart/apb_uart.sv:143.5" */
  wire iDCDn;
  /* src = "../rtl/apb_uart/apb_uart.sv:150.5" */
  wire iDCDnFE;
  /* src = "../rtl/apb_uart/apb_uart.sv:149.5" */
  wire iDCDnRE;
  /* src = "../rtl/apb_uart/apb_uart.sv:83.11" */
  wire [7:0] iDLL;
  /* src = "../rtl/apb_uart/apb_uart.sv:71.5" */
  wire iDLLWrite;
  /* src = "../rtl/apb_uart/apb_uart.sv:84.11" */
  wire [7:0] iDLM;
  /* src = "../rtl/apb_uart/apb_uart.sv:72.5" */
  wire iDLMWrite;
  /* src = "../rtl/apb_uart/apb_uart.sv:138.5" */
  wire iDSRNs;
  /* src = "../rtl/apb_uart/apb_uart.sv:142.5" */
  wire iDSRn;
  /* src = "../rtl/apb_uart/apb_uart.sv:148.5" */
  wire iDSRnFE;
  /* src = "../rtl/apb_uart/apb_uart.sv:147.5" */
  wire iDSRnRE;
  /* src = "../rtl/apb_uart/apb_uart.sv:87.11" */
  wire [7:0] iFCR;
  /* src = "../rtl/apb_uart/apb_uart.sv:75.5" */
  wire iFCRWrite;
  /* src = "../rtl/apb_uart/apb_uart.sv:105.5" */
  wire iFCR_DMAMode;
  /* src = "../rtl/apb_uart/apb_uart.sv:106.5" */
  wire iFCR_FIFO64E;
  /* src = "../rtl/apb_uart/apb_uart.sv:102.5" */
  wire iFCR_FIFOEnable;
  /* src = "../rtl/apb_uart/apb_uart.sv:103.5" */
  wire iFCR_RXFIFOReset;
  /* src = "../rtl/apb_uart/apb_uart.sv:107.11" */
  wire [1:0] iFCR_RXTrigger;
  /* src = "../rtl/apb_uart/apb_uart.sv:104.5" */
  wire iFCR_TXFIFOReset;
  /* src = "../rtl/apb_uart/apb_uart.sv:199.11" */
  wire [6:0] iFECounter;
  /* src = "../rtl/apb_uart/apb_uart.sv:201.5" */
  wire iFEDecrement;
  /* src = "../rtl/apb_uart/apb_uart.sv:200.5" */
  wire iFEIncrement;
  /* src = "../rtl/apb_uart/apb_uart.sv:196.5" */
  wire iFERE;
  /* src = "../rtl/apb_uart/apb_uart.sv:85.11" */
  wire [7:0] iIER;
  /* src = "../rtl/apb_uart/apb_uart.sv:73.5" */
  wire iIERWrite;
  /* src = "../rtl/apb_uart/apb_uart.sv:96.5" */
  wire iIER_EDSSI;
  /* src = "../rtl/apb_uart/apb_uart.sv:95.5" */
  wire iIER_ELSI;
  /* src = "../rtl/apb_uart/apb_uart.sv:93.5" */
  wire iIER_ERBI;
  /* src = "../rtl/apb_uart/apb_uart.sv:94.5" */
  wire iIER_ETBEI;
  /* src = "../rtl/apb_uart/apb_uart.sv:86.11" */
  wire [7:0] iIIR;
  /* src = "../rtl/apb_uart/apb_uart.sv:74.5" */
  wire iIIRRead;
  /* src = "../rtl/apb_uart/apb_uart.sv:101.5" */
  wire iIIR_FIFO64;
  /* src = "../rtl/apb_uart/apb_uart.sv:98.5" */
  wire iIIR_ID0;
  /* src = "../rtl/apb_uart/apb_uart.sv:99.5" */
  wire iIIR_ID1;
  /* src = "../rtl/apb_uart/apb_uart.sv:100.5" */
  wire iIIR_ID2;
  /* src = "../rtl/apb_uart/apb_uart.sv:97.5" */
  wire iIIR_PI;
  /* src = "../rtl/apb_uart/apb_uart.sv:88.11" */
  wire [7:0] iLCR;
  /* src = "../rtl/apb_uart/apb_uart.sv:76.5" */
  wire iLCRWrite;
  /* src = "../rtl/apb_uart/apb_uart.sv:113.5" */
  wire iLCR_BC;
  /* src = "../rtl/apb_uart/apb_uart.sv:114.5" */
  wire iLCR_DLAB;
  /* src = "../rtl/apb_uart/apb_uart.sv:111.5" */
  wire iLCR_EPS;
  /* src = "../rtl/apb_uart/apb_uart.sv:110.5" */
  wire iLCR_PEN;
  /* src = "../rtl/apb_uart/apb_uart.sv:112.5" */
  wire iLCR_SP;
  /* src = "../rtl/apb_uart/apb_uart.sv:109.5" */
  wire iLCR_STB;
  /* src = "../rtl/apb_uart/apb_uart.sv:108.11" */
  wire [1:0] iLCR_WLS;
  /* src = "../rtl/apb_uart/apb_uart.sv:90.11" */
  wire [7:0] iLSR;
  /* src = "../rtl/apb_uart/apb_uart.sv:78.5" */
  wire iLSRRead;
  /* src = "../rtl/apb_uart/apb_uart.sv:125.5" */
  wire iLSR_BI;
  /* src = "../rtl/apb_uart/apb_uart.sv:121.5" */
  wire iLSR_DR;
  /* src = "../rtl/apb_uart/apb_uart.sv:124.5" */
  wire iLSR_FE;
  /* src = "../rtl/apb_uart/apb_uart.sv:128.5" */
  wire iLSR_FIFOERR;
  /* src = "../rtl/apb_uart/apb_uart.sv:122.5" */
  wire iLSR_OE;
  /* src = "../rtl/apb_uart/apb_uart.sv:123.5" */
  wire iLSR_PE;
  /* src = "../rtl/apb_uart/apb_uart.sv:127.5" */
  wire iLSR_TEMT;
  /* src = "../rtl/apb_uart/apb_uart.sv:126.5" */
  wire iLSR_THRE;
  /* src = "../rtl/apb_uart/apb_uart.sv:205.5" */
  wire iLSR_THRERE;
  /* src = "../rtl/apb_uart/apb_uart.sv:89.11" */
  wire [7:0] iMCR;
  /* src = "../rtl/apb_uart/apb_uart.sv:77.5" */
  wire iMCRWrite;
  /* src = "../rtl/apb_uart/apb_uart.sv:120.5" */
  wire iMCR_AFE;
  /* src = "../rtl/apb_uart/apb_uart.sv:115.5" */
  wire iMCR_DTR;
  /* src = "../rtl/apb_uart/apb_uart.sv:119.5" */
  wire iMCR_LOOP;
  /* src = "../rtl/apb_uart/apb_uart.sv:117.5" */
  wire iMCR_OUT1;
  /* src = "../rtl/apb_uart/apb_uart.sv:118.5" */
  wire iMCR_OUT2;
  /* src = "../rtl/apb_uart/apb_uart.sv:116.5" */
  wire iMCR_RTS;
  /* src = "../rtl/apb_uart/apb_uart.sv:91.11" */
  wire [7:0] iMSR;
  /* src = "../rtl/apb_uart/apb_uart.sv:79.5" */
  wire iMSRRead;
  /* src = "../rtl/apb_uart/apb_uart.sv:133.5" */
  wire iMSR_CTS;
  /* src = "../rtl/apb_uart/apb_uart.sv:136.5" */
  wire iMSR_DCD;
  /* src = "../rtl/apb_uart/apb_uart.sv:134.5" */
  wire iMSR_DSR;
  /* src = "../rtl/apb_uart/apb_uart.sv:135.5" */
  wire iMSR_RI;
  /* src = "../rtl/apb_uart/apb_uart.sv:131.5" */
  wire iMSR_TERI;
  /* src = "../rtl/apb_uart/apb_uart.sv:129.5" */
  wire iMSR_dCTS;
  /* src = "../rtl/apb_uart/apb_uart.sv:132.5" */
  wire iMSR_dDCD;
  /* src = "../rtl/apb_uart/apb_uart.sv:130.5" */
  wire iMSR_dDSR;
  /* src = "../rtl/apb_uart/apb_uart.sv:197.5" */
  wire iPERE;
  /* src = "../rtl/apb_uart/apb_uart.sv:82.11" */
  wire [7:0] iRBR;
  /* src = "../rtl/apb_uart/apb_uart.sv:69.5" */
  wire iRBRRead;
  /* src = "../rtl/apb_uart/apb_uart.sv:156.5" */
  wire iRCLK;
  /* src = "../rtl/apb_uart/apb_uart.sv:202.5" */
  wire iRDAInterrupt;
  /* src = "../rtl/apb_uart/apb_uart.sv:140.5" */
  wire iRINs;
  /* src = "../rtl/apb_uart/apb_uart.sv:144.5" */
  wire iRIn;
  /* src = "../rtl/apb_uart/apb_uart.sv:152.5" */
  wire iRInFE;
  /* src = "../rtl/apb_uart/apb_uart.sv:151.5" */
  wire iRInRE;
  /* src = "../rtl/apb_uart/apb_uart.sv:68.5" */
  wire iRST;
  /* src = "../rtl/apb_uart/apb_uart.sv:208.5" */
  wire iRTS;
  /* src = "../rtl/apb_uart/apb_uart.sv:195.5" */
  wire iRXBI;
  /* src = "../rtl/apb_uart/apb_uart.sv:191.5" */
  wire iRXClear;
  /* src = "../rtl/apb_uart/apb_uart.sv:192.11" */
  wire [7:0] iRXData;
  /* src = "../rtl/apb_uart/apb_uart.sv:194.5" */
  wire iRXFE;
  /* src = "../rtl/apb_uart/apb_uart.sv:172.5" */
  wire iRXFIFO16Full;
  /* src = "../rtl/apb_uart/apb_uart.sv:178.5" */
  wire iRXFIFO16Trigger;
  /* src = "../rtl/apb_uart/apb_uart.sv:173.5" */
  wire iRXFIFO64Full;
  /* src = "../rtl/apb_uart/apb_uart.sv:179.5" */
  wire iRXFIFO64Trigger;
  /* src = "../rtl/apb_uart/apb_uart.sv:182.5" */
  wire iRXFIFOBI;
  /* src = "../rtl/apb_uart/apb_uart.sv:167.5" */
  wire iRXFIFOClear;
  /* src = "../rtl/apb_uart/apb_uart.sv:174.12" */
  wire [10:0] iRXFIFOD;
  /* src = "../rtl/apb_uart/apb_uart.sv:170.5" */
  wire iRXFIFOEmpty;
  /* src = "../rtl/apb_uart/apb_uart.sv:181.5" */
  wire iRXFIFOFE;
  /* src = "../rtl/apb_uart/apb_uart.sv:171.5" */
  wire iRXFIFOFull;
  /* src = "../rtl/apb_uart/apb_uart.sv:180.5" */
  wire iRXFIFOPE;
  /* src = "../rtl/apb_uart/apb_uart.sv:175.12" */
  wire [10:0] iRXFIFOQ;
  /* src = "../rtl/apb_uart/apb_uart.sv:169.5" */
  wire iRXFIFORead;
  /* src = "../rtl/apb_uart/apb_uart.sv:177.5" */
  wire iRXFIFOTrigger;
  /* src = "../rtl/apb_uart/apb_uart.sv:176.11" */
  wire [5:0] iRXFIFOUsage;
  /* src = "../rtl/apb_uart/apb_uart.sv:168.5" */
  wire iRXFIFOWrite;
  /* src = "../rtl/apb_uart/apb_uart.sv:190.5" */
  wire iRXFinished;
  /* src = "../rtl/apb_uart/apb_uart.sv:193.5" */
  wire iRXPE;
  /* src = "../rtl/apb_uart/apb_uart.sv:67.5" */
  wire iRead;
  /* src = "../rtl/apb_uart/apb_uart.sv:92.11" */
  wire [7:0] iSCR;
  /* src = "../rtl/apb_uart/apb_uart.sv:80.5" */
  wire iSCRWrite;
  /* src = "../rtl/apb_uart/apb_uart.sv:189.5" */
  wire iSIN;
  /* src = "../rtl/apb_uart/apb_uart.sv:188.5" */
  wire iSINr;
  /* src = "../rtl/apb_uart/apb_uart.sv:183.5" */
  wire iSOUT;
  /* src = "../rtl/apb_uart/apb_uart.sv:206.5" */
  wire iTHRInterrupt;
  /* src = "../rtl/apb_uart/apb_uart.sv:70.5" */
  wire iTHRWrite;
  /* src = "../rtl/apb_uart/apb_uart.sv:81.11" */
  wire [7:0] iTSR;
  /* src = "../rtl/apb_uart/apb_uart.sv:185.5" */
  wire iTXClear;
  /* src = "../rtl/apb_uart/apb_uart.sv:207.5" */
  wire iTXEnable;
  /* src = "../rtl/apb_uart/apb_uart.sv:163.5" */
  wire iTXFIFO16Full;
  /* src = "../rtl/apb_uart/apb_uart.sv:164.5" */
  wire iTXFIFO64Full;
  /* src = "../rtl/apb_uart/apb_uart.sv:158.5" */
  wire iTXFIFOClear;
  /* src = "../rtl/apb_uart/apb_uart.sv:161.5" */
  wire iTXFIFOEmpty;
  /* src = "../rtl/apb_uart/apb_uart.sv:162.5" */
  wire iTXFIFOFull;
  /* src = "../rtl/apb_uart/apb_uart.sv:166.11" */
  wire [7:0] iTXFIFOQ;
  /* src = "../rtl/apb_uart/apb_uart.sv:160.5" */
  wire iTXFIFORead;
  /* src = "../rtl/apb_uart/apb_uart.sv:165.11" */
  wire [5:0] iTXFIFOUsage;
  /* src = "../rtl/apb_uart/apb_uart.sv:159.5" */
  wire iTXFIFOWrite;
  /* src = "../rtl/apb_uart/apb_uart.sv:186.5" */
  wire iTXFinished;
  /* src = "../rtl/apb_uart/apb_uart.sv:187.5" */
  wire iTXRunning;
  /* src = "../rtl/apb_uart/apb_uart.sv:184.5" */
  wire iTXStart;
  /* src = "../rtl/apb_uart/apb_uart.sv:203.11" */
  wire [5:0] iTimeoutCount;
  /* src = "../rtl/apb_uart/apb_uart.sv:66.5" */
  wire iWrite;
  /* src = "../rtl/apb_uart/apb_uart.sv:720.18" */
  wire rx_State;
  /* src = "../rtl/apb_uart/apb_uart.sv:721.18" */
  wire [1:0] tx_State;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4226  (
    .A(\$auto$builder.cc:338:Biop$4223 ),
    .B(\$auto$builder.cc:338:Biop$4225 ),
    .Y(\$auto$builder.cc:338:Biop$4227 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4230  (
    .A(\$auto$builder.cc:338:Biop$4227 ),
    .B(\$auto$builder.cc:338:Biop$4229 ),
    .Y(\$auto$builder.cc:338:Biop$4231 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4240  (
    .A(\$auto$builder.cc:338:Biop$4237 ),
    .B(\$auto$builder.cc:338:Biop$4239 ),
    .Y(\$auto$builder.cc:338:Biop$4241 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4242  (
    .A(PWRITE),
    .Y(\$auto$builder.cc:338:Biop$4243 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4244  (
    .A(\$auto$builder.cc:338:Biop$4241 ),
    .B(\$auto$builder.cc:338:Biop$4243 ),
    .Y(\$auto$builder.cc:338:Biop$4245 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4250  (
    .A(RSTN),
    .Y(\$auto$builder.cc:338:Biop$4251 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4258  (
    .A(PADDR),
    .Y(\$auto$builder.cc:338:Biop$4259 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4260  (
    .A(\$auto$builder.cc:338:Biop$4257 ),
    .B(\$auto$builder.cc:338:Biop$4259 ),
    .Y(\$auto$builder.cc:338:Biop$4261 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4262  (
    .A(iLCR_DLAB),
    .Y(\$auto$builder.cc:338:Biop$4263 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4264  (
    .A(\$auto$builder.cc:338:Biop$4261 ),
    .B(\$auto$builder.cc:338:Biop$4263 ),
    .Y(\$auto$builder.cc:338:Biop$4265 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4272  (
    .A(PADDR),
    .Y(\$auto$builder.cc:338:Biop$4273 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4274  (
    .A(\$auto$builder.cc:338:Biop$4271 ),
    .B(\$auto$builder.cc:338:Biop$4273 ),
    .Y(\$auto$builder.cc:338:Biop$4275 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4276  (
    .A(iLCR_DLAB),
    .Y(\$auto$builder.cc:338:Biop$4277 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4278  (
    .A(\$auto$builder.cc:338:Biop$4275 ),
    .B(\$auto$builder.cc:338:Biop$4277 ),
    .Y(\$auto$builder.cc:338:Biop$4279 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4286  (
    .A(PADDR),
    .Y(\$auto$builder.cc:338:Biop$4287 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4288  (
    .A(\$auto$builder.cc:338:Biop$4285 ),
    .B(\$auto$builder.cc:338:Biop$4287 ),
    .Y(\$auto$builder.cc:338:Biop$4289 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4292  (
    .A(\$auto$builder.cc:338:Biop$4289 ),
    .B(\$auto$builder.cc:338:Biop$4291 ),
    .Y(\$auto$builder.cc:338:Biop$4293 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4300  (
    .A(PADDR),
    .B(3'h1),
    .Y(\$auto$builder.cc:338:Biop$4301 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4302  (
    .A(\$auto$builder.cc:338:Biop$4299 ),
    .B(\$auto$builder.cc:338:Biop$4301 ),
    .Y(\$auto$builder.cc:338:Biop$4303 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4306  (
    .A(\$auto$builder.cc:338:Biop$4303 ),
    .B(\$auto$builder.cc:338:Biop$4305 ),
    .Y(\$auto$builder.cc:338:Biop$4307 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4314  (
    .A(PADDR),
    .B(3'h1),
    .Y(\$auto$builder.cc:338:Biop$4315 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4316  (
    .A(\$auto$builder.cc:338:Biop$4313 ),
    .B(\$auto$builder.cc:338:Biop$4315 ),
    .Y(\$auto$builder.cc:338:Biop$4317 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4318  (
    .A(iLCR_DLAB),
    .Y(\$auto$builder.cc:338:Biop$4319 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4320  (
    .A(\$auto$builder.cc:338:Biop$4317 ),
    .B(\$auto$builder.cc:338:Biop$4319 ),
    .Y(\$auto$builder.cc:338:Biop$4321 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4328  (
    .A(PADDR),
    .B(3'h2),
    .Y(\$auto$builder.cc:338:Biop$4329 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4330  (
    .A(\$auto$builder.cc:338:Biop$4327 ),
    .B(\$auto$builder.cc:338:Biop$4329 ),
    .Y(\$auto$builder.cc:338:Biop$4331 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4338  (
    .A(PADDR),
    .B(3'h2),
    .Y(\$auto$builder.cc:338:Biop$4339 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4340  (
    .A(\$auto$builder.cc:338:Biop$4337 ),
    .B(\$auto$builder.cc:338:Biop$4339 ),
    .Y(\$auto$builder.cc:338:Biop$4341 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4348  (
    .A(PADDR),
    .B(3'h3),
    .Y(\$auto$builder.cc:338:Biop$4349 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4350  (
    .A(\$auto$builder.cc:338:Biop$4347 ),
    .B(\$auto$builder.cc:338:Biop$4349 ),
    .Y(\$auto$builder.cc:338:Biop$4351 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4358  (
    .A(PADDR),
    .B(3'h4),
    .Y(\$auto$builder.cc:338:Biop$4359 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4360  (
    .A(\$auto$builder.cc:338:Biop$4357 ),
    .B(\$auto$builder.cc:338:Biop$4359 ),
    .Y(\$auto$builder.cc:338:Biop$4361 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4368  (
    .A(PADDR),
    .B(3'h5),
    .Y(\$auto$builder.cc:338:Biop$4369 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4370  (
    .A(\$auto$builder.cc:338:Biop$4367 ),
    .B(\$auto$builder.cc:338:Biop$4369 ),
    .Y(\$auto$builder.cc:338:Biop$4371 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4378  (
    .A(PADDR),
    .B(3'h6),
    .Y(\$auto$builder.cc:338:Biop$4379 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4380  (
    .A(\$auto$builder.cc:338:Biop$4377 ),
    .B(\$auto$builder.cc:338:Biop$4379 ),
    .Y(\$auto$builder.cc:338:Biop$4381 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4388  (
    .A(PADDR),
    .B(3'h7),
    .Y(\$auto$builder.cc:338:Biop$4389 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4390  (
    .A(\$auto$builder.cc:338:Biop$4387 ),
    .B(\$auto$builder.cc:338:Biop$4389 ),
    .Y(\$auto$builder.cc:338:Biop$4391 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4424  (
    .A(\$auto$builder.cc:338:Biop$4421 ),
    .B(\$auto$builder.cc:338:Biop$4423 ),
    .Y(\$auto$builder.cc:338:Biop$4425 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4430  (
    .A(\$auto$builder.cc:338:Biop$4427 ),
    .B(\$auto$builder.cc:338:Biop$4429 ),
    .Y(\$auto$builder.cc:338:Biop$4431 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4434  (
    .A(\$auto$builder.cc:338:Biop$4431 ),
    .B(\$auto$builder.cc:338:Biop$4433 ),
    .Y(\$auto$builder.cc:338:Biop$4435 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4436  (
    .A(\$auto$builder.cc:338:Biop$4425 ),
    .B(\$auto$builder.cc:338:Biop$4435 ),
    .Y(\$auto$builder.cc:338:Biop$4437 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4442  (
    .A(iIIR[3:1]),
    .B(3'h1),
    .Y(\$auto$builder.cc:338:Biop$4443 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4444  (
    .A(\$auto$builder.cc:338:Biop$4441 ),
    .B(\$auto$builder.cc:338:Biop$4443 ),
    .Y(\$auto$builder.cc:338:Biop$4445 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4448  (
    .A(\$auto$builder.cc:338:Biop$4445 ),
    .B(\$auto$builder.cc:338:Biop$4447 ),
    .Y(\$auto$builder.cc:338:Biop$4449 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4454  (
    .A(iFCR_FIFOEnable),
    .Y(\$auto$builder.cc:338:Biop$4455 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4458  (
    .A(\$auto$builder.cc:338:Biop$4455 ),
    .B(\$auto$builder.cc:338:Biop$4457 ),
    .Y(\$auto$builder.cc:338:Biop$4459 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4464  (
    .A(\$auto$builder.cc:338:Biop$4461 ),
    .B(\$auto$builder.cc:338:Biop$4463 ),
    .Y(\$auto$builder.cc:338:Biop$4465 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4466  (
    .A(\$auto$builder.cc:338:Biop$4459 ),
    .B(\$auto$builder.cc:338:Biop$4465 ),
    .Y(\$auto$builder.cc:338:Biop$4467 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4483  (
    .A(\$auto$builder.cc:338:Biop$4480 ),
    .B(\$auto$builder.cc:338:Biop$4482 ),
    .Y(\$auto$builder.cc:338:Biop$4484 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4487  (
    .A(\$auto$builder.cc:338:Biop$4484 ),
    .B(\$auto$builder.cc:338:Biop$4486 ),
    .Y(\$auto$builder.cc:338:Biop$4488 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4491  (
    .A(iRXFIFOEmpty),
    .Y(\$auto$builder.cc:338:Biop$4492 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4495  (
    .A(\$auto$builder.cc:338:Biop$4492 ),
    .B(\$auto$builder.cc:338:Biop$4494 ),
    .Y(\$auto$builder.cc:338:Biop$4496 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4497  (
    .A(iTimeoutCount[5]),
    .Y(\$auto$builder.cc:338:Biop$4498 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4499  (
    .A(\$auto$builder.cc:338:Biop$4496 ),
    .B(\$auto$builder.cc:338:Biop$4498 ),
    .Y(\$auto$builder.cc:338:Biop$4500 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$4503  (
    .A({ 26'h0000000, iTimeoutCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$4504 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4536  (
    .A(iFCR_FIFOEnable),
    .Y(\$auto$builder.cc:338:Biop$4537 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4540  (
    .A(\$auto$builder.cc:338:Biop$4537 ),
    .B(\$auto$builder.cc:338:Biop$4539 ),
    .Y(\$auto$builder.cc:338:Biop$4541 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4542  (
    .A(\$auto$builder.cc:338:Biop$4535 ),
    .B(\$auto$builder.cc:338:Biop$4541 ),
    .Y(\$auto$builder.cc:338:Biop$4543 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4546  (
    .A(PWDATA[0]),
    .Y(\$auto$builder.cc:338:Biop$4547 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4548  (
    .A(\$auto$builder.cc:338:Biop$4545 ),
    .B(\$auto$builder.cc:338:Biop$4547 ),
    .Y(\$auto$builder.cc:338:Biop$4549 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4550  (
    .A(\$auto$builder.cc:338:Biop$4543 ),
    .B(\$auto$builder.cc:338:Biop$4549 ),
    .Y(\$auto$builder.cc:338:Biop$4551 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4557  (
    .A(iFCR_FIFOEnable),
    .Y(\$auto$builder.cc:338:Biop$4558 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4561  (
    .A(\$auto$builder.cc:338:Biop$4558 ),
    .B(\$auto$builder.cc:338:Biop$4560 ),
    .Y(\$auto$builder.cc:338:Biop$4562 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4563  (
    .A(\$auto$builder.cc:338:Biop$4556 ),
    .B(\$auto$builder.cc:338:Biop$4562 ),
    .Y(\$auto$builder.cc:338:Biop$4564 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4567  (
    .A(PWDATA[0]),
    .Y(\$auto$builder.cc:338:Biop$4568 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4569  (
    .A(\$auto$builder.cc:338:Biop$4566 ),
    .B(\$auto$builder.cc:338:Biop$4568 ),
    .Y(\$auto$builder.cc:338:Biop$4570 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4571  (
    .A(\$auto$builder.cc:338:Biop$4564 ),
    .B(\$auto$builder.cc:338:Biop$4570 ),
    .Y(\$auto$builder.cc:338:Biop$4572 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4601  (
    .A(iFCR_FIFOEnable),
    .Y(\$auto$builder.cc:338:Biop$4602 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4605  (
    .A(\$auto$builder.cc:338:Biop$4602 ),
    .B(\$auto$builder.cc:338:Biop$4604 ),
    .Y(\$auto$builder.cc:338:Biop$4606 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4609  (
    .A(\$auto$builder.cc:338:Biop$4606 ),
    .B(\$auto$builder.cc:338:Biop$4608 ),
    .Y(\$auto$builder.cc:338:Biop$4610 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4615  (
    .A(\$auto$builder.cc:338:Biop$4612 ),
    .B(\$auto$builder.cc:338:Biop$4614 ),
    .Y(\$auto$builder.cc:338:Biop$4616 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4619  (
    .A(\$auto$builder.cc:338:Biop$4616 ),
    .B(\$auto$builder.cc:338:Biop$4618 ),
    .Y(\$auto$builder.cc:338:Biop$4620 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4621  (
    .A(\$auto$builder.cc:338:Biop$4610 ),
    .B(\$auto$builder.cc:338:Biop$4620 ),
    .Y(\$auto$builder.cc:338:Biop$4622 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4661  (
    .A(iFECounter),
    .Y(\$auto$builder.cc:338:Biop$4662 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4667  (
    .A(iRXFIFOQ[10:8]),
    .Y(\$auto$builder.cc:338:Biop$4668 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4669  (
    .A(\$auto$builder.cc:338:Biop$4666 ),
    .B(\$auto$builder.cc:338:Biop$4668 ),
    .Y(\$auto$builder.cc:338:Biop$4670 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4681  (
    .A(iFEDecrement),
    .Y(\$auto$builder.cc:338:Biop$4682 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4683  (
    .A(\$auto$builder.cc:338:Biop$4680 ),
    .B(\$auto$builder.cc:338:Biop$4682 ),
    .Y(\$auto$builder.cc:338:Biop$4684 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$4687  (
    .A({ 25'h0000000, iFECounter }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$4688 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4689  (
    .A(iFEIncrement),
    .Y(\$auto$builder.cc:338:Biop$4690 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4693  (
    .A(\$auto$builder.cc:338:Biop$4690 ),
    .B(\$auto$builder.cc:338:Biop$4692 ),
    .Y(\$auto$builder.cc:338:Biop$4694 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$4697  (
    .A({ 25'h0000000, iFECounter }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$4698 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4702  (
    .A(iRXFIFOEmpty),
    .Y(\$auto$builder.cc:338:Biop$4703 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4706  (
    .A(\$auto$builder.cc:338:Biop$4703 ),
    .B(\$auto$builder.cc:338:Biop$4705 ),
    .Y(\$auto$builder.cc:338:Biop$4707 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4712  (
    .A(iRXFIFOEmpty),
    .Y(\$auto$builder.cc:338:Biop$4713 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4716  (
    .A(\$auto$builder.cc:338:Biop$4713 ),
    .B(\$auto$builder.cc:338:Biop$4715 ),
    .Y(\$auto$builder.cc:338:Biop$4717 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4722  (
    .A(iRXFIFOEmpty),
    .Y(\$auto$builder.cc:338:Biop$4723 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4726  (
    .A(\$auto$builder.cc:338:Biop$4723 ),
    .B(\$auto$builder.cc:338:Biop$4725 ),
    .Y(\$auto$builder.cc:338:Biop$4727 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4734  (
    .A(iRXFIFOD[10:8]),
    .Y(\$auto$builder.cc:338:Biop$4735 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4736  (
    .A(\$auto$builder.cc:338:Biop$4733 ),
    .B(\$auto$builder.cc:338:Biop$4735 ),
    .Y(\$auto$builder.cc:338:Biop$4737 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4742  (
    .A(iFECounter),
    .Y(\$auto$builder.cc:338:Biop$4743 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4744  (
    .A(iRXFIFOEmpty),
    .Y(\$auto$builder.cc:338:Biop$4745 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4746  (
    .A(\$auto$builder.cc:338:Biop$4743 ),
    .B(\$auto$builder.cc:338:Biop$4745 ),
    .Y(\$auto$builder.cc:338:Biop$4747 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4752  (
    .A(\$auto$builder.cc:338:Biop$4749 ),
    .B(\$auto$builder.cc:338:Biop$4751 ),
    .Y(\$auto$builder.cc:338:Biop$4753 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4756  (
    .A(\$auto$builder.cc:338:Biop$4753 ),
    .B(\$auto$builder.cc:338:Biop$4755 ),
    .Y(\$auto$builder.cc:338:Biop$4757 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4758  (
    .A(\$auto$builder.cc:338:Biop$4747 ),
    .B(\$auto$builder.cc:338:Biop$4757 ),
    .Y(\$auto$builder.cc:338:Biop$4759 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4764  (
    .A(iFCR_FIFOEnable),
    .B(iLSR_FIFOERR),
    .Y(\$auto$builder.cc:338:Biop$4765 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4766  (
    .A(iRXFIFOEmpty),
    .Y(\$auto$builder.cc:338:Biop$4767 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4770  (
    .A(\$auto$builder.cc:338:Biop$4767 ),
    .B(\$auto$builder.cc:338:Biop$4769 ),
    .Y(\$auto$builder.cc:338:Biop$4771 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4782  (
    .A(iTXRunning),
    .Y(\$auto$builder.cc:338:Biop$4783 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4786  (
    .A(\$auto$builder.cc:338:Biop$4783 ),
    .B(\$auto$builder.cc:338:Biop$4785 ),
    .Y(\$auto$builder.cc:338:Biop$4787 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4796  (
    .A(\$auto$builder.cc:338:Biop$4793 ),
    .B(\$auto$builder.cc:338:Biop$4795 ),
    .Y(\$auto$builder.cc:338:Biop$4797 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4798  (
    .A(iMCR_LOOP),
    .Y(\$auto$builder.cc:338:Biop$4799 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4800  (
    .A(iCTSn),
    .Y(\$auto$builder.cc:338:Biop$4801 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4802  (
    .A(\$auto$builder.cc:338:Biop$4799 ),
    .B(\$auto$builder.cc:338:Biop$4801 ),
    .Y(\$auto$builder.cc:338:Biop$4803 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4804  (
    .A(\$auto$builder.cc:338:Biop$4797 ),
    .B(\$auto$builder.cc:338:Biop$4803 ),
    .Y(\$auto$builder.cc:338:Biop$4805 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4814  (
    .A(\$auto$builder.cc:338:Biop$4811 ),
    .B(\$auto$builder.cc:338:Biop$4813 ),
    .Y(\$auto$builder.cc:338:Biop$4815 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4816  (
    .A(iMCR_LOOP),
    .Y(\$auto$builder.cc:338:Biop$4817 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4818  (
    .A(iDSRn),
    .Y(\$auto$builder.cc:338:Biop$4819 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4820  (
    .A(\$auto$builder.cc:338:Biop$4817 ),
    .B(\$auto$builder.cc:338:Biop$4819 ),
    .Y(\$auto$builder.cc:338:Biop$4821 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4822  (
    .A(\$auto$builder.cc:338:Biop$4815 ),
    .B(\$auto$builder.cc:338:Biop$4821 ),
    .Y(\$auto$builder.cc:338:Biop$4823 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4832  (
    .A(\$auto$builder.cc:338:Biop$4829 ),
    .B(\$auto$builder.cc:338:Biop$4831 ),
    .Y(\$auto$builder.cc:338:Biop$4833 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4834  (
    .A(iMCR_LOOP),
    .Y(\$auto$builder.cc:338:Biop$4835 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4836  (
    .A(iRIn),
    .Y(\$auto$builder.cc:338:Biop$4837 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4838  (
    .A(\$auto$builder.cc:338:Biop$4835 ),
    .B(\$auto$builder.cc:338:Biop$4837 ),
    .Y(\$auto$builder.cc:338:Biop$4839 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4840  (
    .A(\$auto$builder.cc:338:Biop$4833 ),
    .B(\$auto$builder.cc:338:Biop$4839 ),
    .Y(\$auto$builder.cc:338:Biop$4841 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4850  (
    .A(\$auto$builder.cc:338:Biop$4847 ),
    .B(\$auto$builder.cc:338:Biop$4849 ),
    .Y(\$auto$builder.cc:338:Biop$4851 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4852  (
    .A(iMCR_LOOP),
    .Y(\$auto$builder.cc:338:Biop$4853 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4854  (
    .A(iDCDn),
    .Y(\$auto$builder.cc:338:Biop$4855 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4856  (
    .A(\$auto$builder.cc:338:Biop$4853 ),
    .B(\$auto$builder.cc:338:Biop$4855 ),
    .Y(\$auto$builder.cc:338:Biop$4857 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4858  (
    .A(\$auto$builder.cc:338:Biop$4851 ),
    .B(\$auto$builder.cc:338:Biop$4857 ),
    .Y(\$auto$builder.cc:338:Biop$4859 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4871  (
    .A(\$auto$builder.cc:338:Biop$4868 ),
    .B(\$auto$builder.cc:338:Biop$4870 ),
    .Y(\$auto$builder.cc:338:Biop$4872 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4885  (
    .A(\$auto$builder.cc:338:Biop$4882 ),
    .B(\$auto$builder.cc:338:Biop$4884 ),
    .Y(\$auto$builder.cc:338:Biop$4886 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4909  (
    .A(\$auto$builder.cc:338:Biop$4906 ),
    .B(\$auto$builder.cc:338:Biop$4908 ),
    .Y(\$auto$builder.cc:338:Biop$4910 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4927  (
    .A(iFCR_FIFO64E),
    .Y(\$auto$builder.cc:338:Biop$4928 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4933  (
    .A(iFCR_FIFOEnable),
    .Y(\$auto$builder.cc:338:Biop$4934 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4937  (
    .A(\$auto$builder.cc:338:Biop$4934 ),
    .B(\$auto$builder.cc:338:Biop$4936 ),
    .Y(\$auto$builder.cc:338:Biop$4938 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4941  (
    .A(iTXFIFOFull),
    .Y(\$auto$builder.cc:338:Biop$4942 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4943  (
    .A(\$auto$builder.cc:338:Biop$4940 ),
    .B(\$auto$builder.cc:338:Biop$4942 ),
    .Y(\$auto$builder.cc:338:Biop$4944 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4945  (
    .A(\$auto$builder.cc:338:Biop$4938 ),
    .B(\$auto$builder.cc:338:Biop$4944 ),
    .Y(\$auto$builder.cc:338:Biop$4946 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4949  (
    .A(\$auto$builder.cc:338:Biop$4946 ),
    .B(\$auto$builder.cc:338:Biop$4948 ),
    .Y(\$auto$builder.cc:338:Biop$4950 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4967  (
    .A(iFCR_FIFO64E),
    .Y(\$auto$builder.cc:338:Biop$4968 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4973  (
    .A(iFCR_RXTrigger),
    .Y(\$auto$builder.cc:338:Biop$4974 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4975  (
    .A(iRXFIFOEmpty),
    .Y(\$auto$builder.cc:338:Biop$4976 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4977  (
    .A(\$auto$builder.cc:338:Biop$4974 ),
    .B(\$auto$builder.cc:338:Biop$4976 ),
    .Y(\$auto$builder.cc:338:Biop$4978 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4979  (
    .A(iFCR_RXTrigger),
    .B(2'h1),
    .Y(\$auto$builder.cc:338:Biop$4980 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4985  (
    .A(\$auto$builder.cc:338:Biop$4982 ),
    .B(\$auto$builder.cc:338:Biop$4984 ),
    .Y(\$auto$builder.cc:338:Biop$4986 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4987  (
    .A(\$auto$builder.cc:338:Biop$4980 ),
    .B(\$auto$builder.cc:338:Biop$4986 ),
    .Y(\$auto$builder.cc:338:Biop$4988 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4989  (
    .A(\$auto$builder.cc:338:Biop$4978 ),
    .B(\$auto$builder.cc:338:Biop$4988 ),
    .Y(\$auto$builder.cc:338:Biop$4990 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4991  (
    .A(iFCR_RXTrigger),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$4992 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4995  (
    .A(\$auto$builder.cc:338:Biop$4992 ),
    .B(\$auto$builder.cc:338:Biop$4994 ),
    .Y(\$auto$builder.cc:338:Biop$4996 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4997  (
    .A(\$auto$builder.cc:338:Biop$4990 ),
    .B(\$auto$builder.cc:338:Biop$4996 ),
    .Y(\$auto$builder.cc:338:Biop$4998 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4999  (
    .A(iFCR_RXTrigger),
    .B(2'h3),
    .Y(\$auto$builder.cc:338:Biop$5000 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5003  (
    .A(\$auto$builder.cc:338:Biop$5000 ),
    .B(\$auto$builder.cc:338:Biop$5002 ),
    .Y(\$auto$builder.cc:338:Biop$5004 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5007  (
    .A(\$auto$builder.cc:338:Biop$5004 ),
    .B(\$auto$builder.cc:338:Biop$5006 ),
    .Y(\$auto$builder.cc:338:Biop$5008 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5011  (
    .A(\$auto$builder.cc:338:Biop$5008 ),
    .B(\$auto$builder.cc:338:Biop$5010 ),
    .Y(\$auto$builder.cc:338:Biop$5012 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5013  (
    .A(\$auto$builder.cc:338:Biop$4998 ),
    .B(\$auto$builder.cc:338:Biop$5012 ),
    .Y(\$auto$builder.cc:338:Biop$5014 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5017  (
    .A(\$auto$builder.cc:338:Biop$5014 ),
    .B(\$auto$builder.cc:338:Biop$5016 ),
    .Y(\$auto$builder.cc:338:Biop$5018 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5023  (
    .A(iFCR_RXTrigger),
    .Y(\$auto$builder.cc:338:Biop$5024 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5025  (
    .A(iRXFIFOEmpty),
    .Y(\$auto$builder.cc:338:Biop$5026 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5027  (
    .A(\$auto$builder.cc:338:Biop$5024 ),
    .B(\$auto$builder.cc:338:Biop$5026 ),
    .Y(\$auto$builder.cc:338:Biop$5028 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5029  (
    .A(iFCR_RXTrigger),
    .B(2'h1),
    .Y(\$auto$builder.cc:338:Biop$5030 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5035  (
    .A(\$auto$builder.cc:338:Biop$5032 ),
    .B(\$auto$builder.cc:338:Biop$5034 ),
    .Y(\$auto$builder.cc:338:Biop$5036 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5037  (
    .A(\$auto$builder.cc:338:Biop$5030 ),
    .B(\$auto$builder.cc:338:Biop$5036 ),
    .Y(\$auto$builder.cc:338:Biop$5038 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5039  (
    .A(\$auto$builder.cc:338:Biop$5028 ),
    .B(\$auto$builder.cc:338:Biop$5038 ),
    .Y(\$auto$builder.cc:338:Biop$5040 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5041  (
    .A(iFCR_RXTrigger),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$5042 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5045  (
    .A(\$auto$builder.cc:338:Biop$5042 ),
    .B(\$auto$builder.cc:338:Biop$5044 ),
    .Y(\$auto$builder.cc:338:Biop$5046 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5047  (
    .A(\$auto$builder.cc:338:Biop$5040 ),
    .B(\$auto$builder.cc:338:Biop$5046 ),
    .Y(\$auto$builder.cc:338:Biop$5048 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5049  (
    .A(iFCR_RXTrigger),
    .B(2'h3),
    .Y(\$auto$builder.cc:338:Biop$5050 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5053  (
    .A(\$auto$builder.cc:338:Biop$5050 ),
    .B(\$auto$builder.cc:338:Biop$5052 ),
    .Y(\$auto$builder.cc:338:Biop$5054 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5057  (
    .A(\$auto$builder.cc:338:Biop$5054 ),
    .B(\$auto$builder.cc:338:Biop$5056 ),
    .Y(\$auto$builder.cc:338:Biop$5058 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5061  (
    .A(\$auto$builder.cc:338:Biop$5058 ),
    .B(\$auto$builder.cc:338:Biop$5060 ),
    .Y(\$auto$builder.cc:338:Biop$5062 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5063  (
    .A(\$auto$builder.cc:338:Biop$5048 ),
    .B(\$auto$builder.cc:338:Biop$5062 ),
    .Y(\$auto$builder.cc:338:Biop$5064 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5067  (
    .A(\$auto$builder.cc:338:Biop$5064 ),
    .B(\$auto$builder.cc:338:Biop$5066 ),
    .Y(\$auto$builder.cc:338:Biop$5068 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5073  (
    .A(iFCR_FIFO64E),
    .Y(\$auto$builder.cc:338:Biop$5074 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5079  (
    .A(iMCR_LOOP),
    .Y(\$auto$builder.cc:338:Biop$5080 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5085  (
    .A(iTXFIFOEmpty),
    .Y(\$auto$builder.cc:338:Biop$5086 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5087  (
    .A(iMCR_AFE),
    .Y(\$auto$builder.cc:338:Biop$5088 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5093  (
    .A(\$auto$builder.cc:338:Biop$5090 ),
    .B(\$auto$builder.cc:338:Biop$5092 ),
    .Y(\$auto$builder.cc:338:Biop$5094 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5095  (
    .A(\$auto$builder.cc:338:Biop$5088 ),
    .B(\$auto$builder.cc:338:Biop$5094 ),
    .Y(\$auto$builder.cc:338:Biop$5096 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5097  (
    .A(\$auto$builder.cc:338:Biop$5086 ),
    .B(\$auto$builder.cc:338:Biop$5096 ),
    .Y(\$auto$builder.cc:338:Biop$5098 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5129  (
    .A(iFCR_FIFOEnable),
    .Y(\$auto$builder.cc:338:Biop$5130 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5137  (
    .A(iFCR_FIFOEnable),
    .Y(\$auto$builder.cc:338:Biop$5138 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5141  (
    .A(iRXFIFOFull),
    .Y(\$auto$builder.cc:338:Biop$5142 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5154  (
    .A(iMCR_RTS),
    .Y(\$auto$builder.cc:338:Biop$5155 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5160  (
    .A(\$auto$builder.cc:338:Biop$5157 ),
    .B(\$auto$builder.cc:338:Biop$5159 ),
    .Y(\$auto$builder.cc:338:Biop$5161 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5162  (
    .A(\$auto$builder.cc:338:Biop$5155 ),
    .B(\$auto$builder.cc:338:Biop$5161 ),
    .Y(\$auto$builder.cc:338:Biop$5163 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5168  (
    .A(iMCR_AFE),
    .Y(\$auto$builder.cc:338:Biop$5169 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5174  (
    .A(\$auto$builder.cc:338:Biop$5171 ),
    .B(\$auto$builder.cc:338:Biop$5173 ),
    .Y(\$auto$builder.cc:338:Biop$5175 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5176  (
    .A(\$auto$builder.cc:338:Biop$5169 ),
    .B(\$auto$builder.cc:338:Biop$5175 ),
    .Y(\$auto$builder.cc:338:Biop$5177 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5178  (
    .A(\$auto$builder.cc:338:Biop$5167 ),
    .B(\$auto$builder.cc:338:Biop$5177 ),
    .Y(\$auto$builder.cc:338:Biop$5179 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5187  (
    .A(iBaudtick16x),
    .Y(\$auto$builder.cc:338:Biop$5188 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5194  (
    .A(iMCR_OUT1),
    .Y(\$auto$builder.cc:338:Biop$5195 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5196  (
    .A(\$auto$builder.cc:338:Biop$5193 ),
    .B(\$auto$builder.cc:338:Biop$5195 ),
    .Y(\$auto$builder.cc:338:Biop$5197 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5203  (
    .A(iMCR_OUT2),
    .Y(\$auto$builder.cc:338:Biop$5204 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5205  (
    .A(\$auto$builder.cc:338:Biop$5202 ),
    .B(\$auto$builder.cc:338:Biop$5204 ),
    .Y(\$auto$builder.cc:338:Biop$5206 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5212  (
    .A(iRTS),
    .Y(\$auto$builder.cc:338:Biop$5213 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5214  (
    .A(\$auto$builder.cc:338:Biop$5211 ),
    .B(\$auto$builder.cc:338:Biop$5213 ),
    .Y(\$auto$builder.cc:338:Biop$5215 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5221  (
    .A(iMCR_DTR),
    .Y(\$auto$builder.cc:338:Biop$5222 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5223  (
    .A(\$auto$builder.cc:338:Biop$5220 ),
    .B(\$auto$builder.cc:338:Biop$5222 ),
    .Y(\$auto$builder.cc:338:Biop$5224 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5232  (
    .A(\$auto$builder.cc:338:Biop$5229 ),
    .B(\$auto$builder.cc:338:Biop$5231 ),
    .Y(\$auto$builder.cc:338:Biop$5233 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5238  (
    .A(iLCR_DLAB),
    .Y(\$auto$builder.cc:338:Biop$5239 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5243  (
    .A(iLCR_DLAB),
    .Y(\$auto$builder.cc:338:Biop$5244 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4234  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4233 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4235 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4248  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4247 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4249 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4254  (
    .A(1'h1),
    .B(1'h0),
    .S(RSTN),
    .Y(\$auto$rtlil.cc:2874:Mux$4255 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4268  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4267 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4269 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4282  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4281 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4283 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4296  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4295 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4297 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4310  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4309 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4311 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4324  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4323 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4325 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4334  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4333 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4335 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4344  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4343 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4345 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4354  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4353 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4355 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4364  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4363 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4365 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4374  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4373 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4375 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4384  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4383 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4385 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4394  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4393 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4395 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4470  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4469 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4471 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4474  (
    .A(1'h0),
    .B(iFCR_FIFO64E),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4473 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4475 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4710  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4709 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4711 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4720  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4719 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4721 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4730  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4729 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4731 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4740  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4739 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4741 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4762  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4761 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4763 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4774  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4773 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4775 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4780  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4779 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4781 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4790  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4789 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4791 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4808  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4807 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4809 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4826  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4825 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4827 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4844  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4843 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4845 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4862  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4861 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4863 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4931  (
    .A(iTXFIFO16Full),
    .B(iTXFIFO64Full),
    .S(iFCR_FIFO64E),
    .Y(\$auto$rtlil.cc:2874:Mux$4932 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4953  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4952 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4954 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4959  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4958 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4960 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4965  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$4964 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4966 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$4971  (
    .A(iRXFIFO16Full),
    .B(iRXFIFO64Full),
    .S(iFCR_FIFO64E),
    .Y(\$auto$rtlil.cc:2874:Mux$4972 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5021  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5020 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5022 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5071  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5070 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5072 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5077  (
    .A(iRXFIFO16Trigger),
    .B(iRXFIFO64Trigger),
    .S(iFCR_FIFO64E),
    .Y(\$auto$rtlil.cc:2874:Mux$5078 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5083  (
    .A(iSINr),
    .B(iSOUT),
    .S(iMCR[4]),
    .Y(\$auto$rtlil.cc:2874:Mux$5084 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5101  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5100 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5102 )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$DTRN  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\DTRN$5227 ),
    .Q(DTRN)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$OUT1N  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\OUT1N$5200 ),
    .Q(OUT1N)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$OUT2N  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\OUT2N$5209 ),
    .Q(OUT2N)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$RTSN  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\RTSN$5218 ),
    .Q(RTSN)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$SOUT  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\SOUT$5236 ),
    .Q(SOUT)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iBAUDOUTN  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iBAUDOUTN$5191 ),
    .Q(iBAUDOUTN)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:320.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iCharTimeout  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iCharTimeout$4521 ),
    .Q(iCharTimeout)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:234.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iDLL  (
    .AD(8'h01),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iDLL$4403 ),
    .Q(iDLL)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:234.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iDLM  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iDLM$4408 ),
    .Q(iDLM)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFCR_DMAMode  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFCR_DMAMode$4579 ),
    .Q(iFCR_DMAMode)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFCR_FIFO64E  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFCR_FIFO64E$4580 ),
    .Q(iFCR_FIFO64E)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFCR_FIFOEnable  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFCR_FIFOEnable$4576 ),
    .Q(iFCR_FIFOEnable)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFCR_RXFIFOReset  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFCR_RXFIFOReset$4577 ),
    .Q(iFCR_RXFIFOReset)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iFCR_RXTrigger  (
    .AD(2'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFCR_RXTrigger$4581 ),
    .Q(iFCR_RXTrigger)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFCR_TXFIFOReset  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFCR_TXFIFOReset$4578 ),
    .Q(iFCR_TXFIFOReset)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$iFECounter  (
    .AD(7'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFECounter$4701 ),
    .Q(iFECounter)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:254.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iIER  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D({ 4'h0, \$auto$slang_frontend.cc:694:finish$\iIER[0]$4416  }),
    .Q(iIER)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:400.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iLCR  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iLCR$4589 ),
    .Q(iLCR)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLSR_BI  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iLSR_BI$4660 ),
    .Q(iLSR_BI)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLSR_FE  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iLSR_FE$4650 ),
    .Q(iLSR_FE)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLSR_FIFOERR  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iLSR_FIFOERR$4674 ),
    .Q(iLSR_FIFOERR)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLSR_OE  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iLSR_OE$4630 ),
    .Q(iLSR_OE)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLSR_PE  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iLSR_PE$4640 ),
    .Q(iLSR_PE)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:422.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iMCR  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D({ 2'h0, \$auto$slang_frontend.cc:694:finish$\iMCR[0]$4597  }),
    .Q(iMCR)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:561.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iMSR_TERI  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iMSR_TERI$4904 ),
    .Q(iMSR_TERI)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:561.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iMSR_dCTS  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iMSR_dCTS$4880 ),
    .Q(iMSR_dCTS)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:561.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iMSR_dDCD  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iMSR_dDCD$4918 ),
    .Q(iMSR_dDCD)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:561.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iMSR_dDSR  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iMSR_dDSR$4894 ),
    .Q(iMSR_dDSR)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:812.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iRTS  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iRTS$5183 ),
    .Q(iRTS)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:773.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iRXFIFOClear  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iRXFIFOClear$5147 ),
    .Q(iRXFIFOClear)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:773.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iRXFIFOD  (
    .AD(11'h000),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iRXFIFOD$5149 ),
    .Q(iRXFIFOD)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:773.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iRXFIFOWrite  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iRXFIFOWrite$5148 ),
    .Q(iRXFIFOWrite)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:614.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iSCR  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iSCR$4926 ),
    .Q(iSCR)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:292.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iTHRInterrupt  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iTHRInterrupt$4453 ),
    .Q(iTHRInterrupt)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:724.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iTSR  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iTSR$5117 ),
    .Q(iTSR)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:724.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iTXFIFORead  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iTXFIFORead$5118 ),
    .Q(iTXFIFORead)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:724.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iTXRunning  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iTXRunning$5120 ),
    .Q(iTXRunning)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:724.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iTXStart  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iTXStart$5119 ),
    .Q(iTXStart)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:320.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd6)
  ) \$driver$iTimeoutCount  (
    .AD(6'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iTimeoutCount$4506 ),
    .Q(iTimeoutCount)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:773.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$rx_State  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\rx_State$5150 ),
    .Q(rx_State)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:724.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$tx_State  (
    .AD(2'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\tx_State$5121 ),
    .Q(tx_State)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:897.18-897.38|../rtl/apb_uart/apb_uart.sv:895.13-902.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$14341  (
    .A(iIER),
    .B(iDLM),
    .S(iLCR[7]),
    .Y(\$procmux$14341_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:895.13-902.18|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$14343  (
    .A(8'hxx),
    .B(\$procmux$14341_Y ),
    .S(\$procmux$14344_CMP ),
    .Y(\$procmux$14343_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:895.13-902.18|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$14344_CMP0  (
    .A(PADDR),
    .B(3'h1),
    .Y(\$procmux$14344_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:932.13-932.33|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd8)
  ) \$procmux$14345  (
    .A(8'hxx),
    .B({ \$auto$slang_frontend.cc:694:finish$\PRDATA[0]$5242 , \$auto$slang_frontend.cc:694:finish$\PRDATA[0]$5247 , iFCR_FIFOEnable, iFCR_FIFOEnable, \$auto$rtlil.cc:2874:Mux$4475 , 1'h0, iIIR[3:0], iLCR, iMCR, \$auto$builder.cc:338:Biop$4765 , \$auto$rtlil.cc:2874:Mux$4791 , \$auto$rtlil.cc:2874:Mux$4781 , iLSR_BI, iLSR_FE, iLSR_PE, iLSR_OE, \$auto$rtlil.cc:2874:Mux$4775 , \$auto$rtlil.cc:2874:Mux$4863 , \$auto$rtlil.cc:2874:Mux$4845 , \$auto$rtlil.cc:2874:Mux$4827 , \$auto$rtlil.cc:2874:Mux$4809 , iMSR_dDCD, iMSR_TERI, iMSR_dDSR, iMSR_dCTS, iSCR }),
    .S({ \$procmux$14355_CMP , \$procmux$14353_CMP , \$procmux$14351_CMP , \$procmux$14350_CMP , \$procmux$14349_CMP , \$procmux$14348_CMP , \$procmux$14347_CMP , \$procmux$14346_CMP  }),
    .Y(\$procmux$14345_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:932.13-932.33|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$14346_CMP0  (
    .A(PADDR),
    .B(3'h7),
    .Y(\$procmux$14346_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:927.13-927.33|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$14347_CMP0  (
    .A(PADDR),
    .B(3'h6),
    .Y(\$procmux$14347_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:922.13-922.33|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$14348_CMP0  (
    .A(PADDR),
    .B(3'h5),
    .Y(\$procmux$14348_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:917.13-917.33|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$14349_CMP0  (
    .A(PADDR),
    .B(3'h4),
    .Y(\$procmux$14349_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:912.13-912.33|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$14350_CMP0  (
    .A(PADDR),
    .B(3'h3),
    .Y(\$procmux$14350_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:907.13-907.33|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$14351_CMP0  (
    .A(PADDR),
    .B(3'h2),
    .Y(\$procmux$14351_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:895.13-902.18|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$14353_CMP0  (
    .A(PADDR),
    .B(3'h1),
    .Y(\$procmux$14353_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:883.13-890.18|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$14355_CMP0  (
    .A(PADDR),
    .Y(\$procmux$14355_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:885.18-885.38|../rtl/apb_uart/apb_uart.sv:883.13-890.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$14364  (
    .A(iRXFIFOQ[7:0]),
    .B(iDLL),
    .S(iLCR[7]),
    .Y(\$procmux$14364_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:883.13-890.18|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$14366  (
    .A(8'hxx),
    .B(\$procmux$14364_Y ),
    .S(\$procmux$14367_CMP ),
    .Y(\$procmux$14366_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:883.13-890.18|../rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$14367_CMP0  (
    .A(PADDR),
    .Y(\$procmux$14367_CMP )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:874.13-874.27|../rtl/apb_uart/apb_uart.sv:872.8-875.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14368  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14369_CMP ),
    .Y(\$procmux$14368_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:869.13-869.27|../rtl/apb_uart/apb_uart.sv:867.8-870.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14375  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14376_CMP ),
    .Y(\$procmux$14375_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:864.13-864.27|../rtl/apb_uart/apb_uart.sv:862.8-865.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14381  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14382_CMP ),
    .Y(\$procmux$14381_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:859.13-859.28|../rtl/apb_uart/apb_uart.sv:857.8-860.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14386  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14387_CMP ),
    .Y(\$procmux$14386_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:854.13-854.28|../rtl/apb_uart/apb_uart.sv:852.8-855.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14390  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14391_CMP ),
    .Y(\$procmux$14390_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:849.13-849.32|../rtl/apb_uart/apb_uart.sv:847.8-850.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14393  (
    .A(1'h1),
    .B(1'h0),
    .S(iBaudtick16x),
    .Y(\$procmux$14393_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:825.13-825.27|../rtl/apb_uart/apb_uart.sv:823.13-826.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14395  (
    .A(iRTS),
    .B(1'h1),
    .S(\$procmux$14396_CMP ),
    .Y(\$procmux$14395_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:821.13-821.27|../rtl/apb_uart/apb_uart.sv:819.8-826.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14398  (
    .A(\$procmux$14395_Y ),
    .B(1'hx),
    .S(\$procmux$14399_CMP ),
    .Y(\$procmux$14398_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:821.13-821.27|../rtl/apb_uart/apb_uart.sv:819.8-826.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14402  (
    .A(\$auto$slang_frontend.cc:694:finish$\iRTS$5182 ),
    .B(1'h0),
    .S(\$procmux$14403_CMP ),
    .Y(\$procmux$14402_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:805.24-805.45|../rtl/apb_uart/apb_uart.sv:804.27-805.45" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14404  (
    .A(1'h1),
    .B(1'h0),
    .S(\$auto$rtlil.cc:2874:Mux$4972 ),
    .Y(\$procmux$14404_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:803.24-803.45|../rtl/apb_uart/apb_uart.sv:802.22-805.45" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14407  (
    .A(1'hx),
    .B(\$procmux$14404_Y ),
    .S(iFCR_FIFOEnable),
    .Y(\$procmux$14407_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:801.19-807.22|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14409  (
    .A(1'hx),
    .B(\$procmux$14407_Y ),
    .S(\$procmux$14410_CMP ),
    .Y(\$procmux$14409_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:803.24-803.45|../rtl/apb_uart/apb_uart.sv:802.22-805.45" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14413  (
    .A(1'h1),
    .B(\$auto$slang_frontend.cc:694:finish$\iRXFIFOWrite$5145 ),
    .S(iFCR_FIFOEnable),
    .Y(\$procmux$14413_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:801.19-807.22|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14415  (
    .A(1'hx),
    .B(\$procmux$14413_Y ),
    .S(\$procmux$14416_CMP ),
    .Y(\$procmux$14415_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:801.19-807.22|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$14418  (
    .A(1'hx),
    .B({ \$auto$slang_frontend.cc:694:finish$\rx_State$5136 , 1'h0 }),
    .S({ \$procmux$14421_CMP , \$procmux$14419_CMP  }),
    .Y(\$procmux$14418_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$14421_CMP0  (
    .A(rx_State),
    .Y(\$procmux$14421_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:801.19-807.22|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd11)
  ) \$procmux$14423  (
    .A(11'hxxx),
    .B({ \$auto$slang_frontend.cc:694:finish$\iRXFIFOD$5135 , iRXFIFOD }),
    .S({ \$procmux$14426_CMP , \$procmux$14424_CMP  }),
    .Y(\$procmux$14423_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$14426_CMP0  (
    .A(rx_State),
    .Y(\$procmux$14426_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:801.19-807.22|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$14428  (
    .A(1'hx),
    .B({ \$auto$slang_frontend.cc:694:finish$\iRXFIFOClear$5134 , iFCR_RXFIFOReset }),
    .S({ \$procmux$14431_CMP , \$procmux$14429_CMP  }),
    .Y(\$procmux$14428_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$14431_CMP0  (
    .A(rx_State),
    .Y(\$procmux$14431_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:791.24-796.27|../rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14435  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14436_CMP ),
    .Y(\$procmux$14435_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14437  (
    .A(\$procmux$14435_Y ),
    .B(1'hx),
    .S(rx_State),
    .Y(\$procmux$14437_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$14438_CMP0  (
    .A(rx_State),
    .Y(\$procmux$14438_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:791.24-796.27|../rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  \$mux  #(
    .WIDTH(32'd11)
  ) \$procmux$14442  (
    .A(iRXFIFOD),
    .B({ iRXBI, iRXFE, iRXPE, iRXData }),
    .S(\$procmux$14443_CMP ),
    .Y(\$procmux$14442_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd11)
  ) \$procmux$14444  (
    .A(\$procmux$14442_Y ),
    .B(11'hxxx),
    .S(rx_State),
    .Y(\$procmux$14444_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$14445_CMP0  (
    .A(rx_State),
    .Y(\$procmux$14445_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:791.24-796.27|../rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14449  (
    .A(iFCR_RXFIFOReset),
    .B(\$auto$slang_frontend.cc:694:finish$\iRXFIFOClear$5133 ),
    .S(\$procmux$14450_CMP ),
    .Y(\$procmux$14449_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14451  (
    .A(\$procmux$14449_Y ),
    .B(1'hx),
    .S(rx_State),
    .Y(\$procmux$14451_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$14452_CMP0  (
    .A(rx_State),
    .Y(\$procmux$14452_CMP )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:794.29-794.50|../rtl/apb_uart/apb_uart.sv:793.27-794.50" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14455  (
    .A(1'h1),
    .B(iFCR_RXFIFOReset),
    .S(iFCR_FIFOEnable),
    .Y(\$procmux$14455_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:791.24-796.27|../rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14457  (
    .A(1'hx),
    .B(\$procmux$14455_Y ),
    .S(\$procmux$14458_CMP ),
    .Y(\$procmux$14457_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14459  (
    .A(\$procmux$14457_Y ),
    .B(1'hx),
    .S(rx_State),
    .Y(\$procmux$14459_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:790.22-798.43|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$14460_CMP0  (
    .A(rx_State),
    .Y(\$procmux$14460_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:801.19-807.22|../rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14462  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\iRXFIFOWrite$5146 ),
    .S(\$procmux$14463_CMP ),
    .Y(\$procmux$14462_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:761.24-761.42|../rtl/apb_uart/apb_uart.sv:760.22-763.42" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14466  (
    .A(2'h2),
    .B(2'h3),
    .S(\$procmux$14467_CMP ),
    .Y(\$procmux$14466_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:759.19-766.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14468  (
    .A(2'hx),
    .B(\$procmux$14466_Y ),
    .S(\$procmux$14469_CMP ),
    .Y(\$procmux$14468_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:759.19-766.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14469_CMP0  (
    .A(tx_State),
    .B(2'h2),
    .Y(\$procmux$14469_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:767.31-767.50|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd2)
  ) \$procmux$14470  (
    .A(2'hx),
    .B({ \$auto$slang_frontend.cc:694:finish$\tx_State$5111 , 2'h2, \$auto$slang_frontend.cc:694:finish$\tx_State$5116 , 2'h0 }),
    .S({ \$procmux$14476_CMP , \$procmux$14474_CMP , \$procmux$14473_CMP , \$procmux$14471_CMP  }),
    .Y(\$procmux$14470_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:767.31-767.50|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14471_CMP0  (
    .A(tx_State),
    .B(2'h3),
    .Y(\$procmux$14471_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:759.19-766.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14473_CMP0  (
    .A(tx_State),
    .B(2'h2),
    .Y(\$procmux$14473_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:752.19-757.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14474_CMP0  (
    .A(tx_State),
    .B(2'h1),
    .Y(\$procmux$14474_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:743.22-749.43|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14476_CMP0  (
    .A(tx_State),
    .Y(\$procmux$14476_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:767.31-767.50|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$14477  (
    .A(1'hx),
    .B({ \$auto$slang_frontend.cc:694:finish$\iTXStart$5110 , 3'h6 }),
    .S({ \$procmux$14483_CMP , \$procmux$14481_CMP , \$procmux$14480_CMP , \$procmux$14478_CMP  }),
    .Y(\$procmux$14477_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:767.31-767.50|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14478_CMP0  (
    .A(tx_State),
    .B(2'h3),
    .Y(\$procmux$14478_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:759.19-766.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14480_CMP0  (
    .A(tx_State),
    .B(2'h2),
    .Y(\$procmux$14480_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:752.19-757.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14481_CMP0  (
    .A(tx_State),
    .B(2'h1),
    .Y(\$procmux$14481_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:743.22-749.43|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14483_CMP0  (
    .A(tx_State),
    .Y(\$procmux$14483_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:744.24-747.27|../rtl/apb_uart/apb_uart.sv:743.22-749.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14488  (
    .A(2'h0),
    .B(2'h1),
    .S(\$procmux$14489_CMP ),
    .Y(\$procmux$14488_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:743.22-749.43|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14490  (
    .A(2'hx),
    .B(\$procmux$14488_Y ),
    .S(\$procmux$14491_CMP ),
    .Y(\$procmux$14490_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:743.22-749.43|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14491_CMP0  (
    .A(tx_State),
    .Y(\$procmux$14491_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:744.24-747.27|../rtl/apb_uart/apb_uart.sv:743.22-749.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14496  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14497_CMP ),
    .Y(\$procmux$14496_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:743.22-749.43|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14498  (
    .A(1'hx),
    .B(\$procmux$14496_Y ),
    .S(\$procmux$14499_CMP ),
    .Y(\$procmux$14498_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:743.22-749.43|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14499_CMP0  (
    .A(tx_State),
    .Y(\$procmux$14499_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:759.19-766.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14502  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14503_CMP ),
    .Y(\$procmux$14502_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:759.19-766.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14503_CMP0  (
    .A(tx_State),
    .B(2'h2),
    .Y(\$procmux$14503_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:752.19-757.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14507  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14508_CMP ),
    .Y(\$procmux$14507_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:752.19-757.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14508_CMP0  (
    .A(tx_State),
    .B(2'h1),
    .Y(\$procmux$14508_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:752.19-757.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$14512  (
    .A(iTSR),
    .B(iTXFIFOQ),
    .S(\$procmux$14513_CMP ),
    .Y(\$procmux$14512_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:752.19-757.22|../rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$14513_CMP0  (
    .A(tx_State),
    .B(2'h1),
    .Y(\$procmux$14513_CMP )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:624.13-624.34|../rtl/apb_uart/apb_uart.sv:622.8-625.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$14514  (
    .A(iSCR),
    .B(PWDATA[7:0]),
    .S(\$procmux$14515_CMP ),
    .Y(\$procmux$14514_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:601.13-601.32|../rtl/apb_uart/apb_uart.sv:599.13-602.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14516  (
    .A(iMSR_dDCD),
    .B(1'h0),
    .S(\$procmux$14517_CMP ),
    .Y(\$procmux$14516_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:597.13-597.32|../rtl/apb_uart/apb_uart.sv:595.8-602.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14519  (
    .A(\$procmux$14516_Y ),
    .B(1'hx),
    .S(\$procmux$14520_CMP ),
    .Y(\$procmux$14519_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:597.13-597.32|../rtl/apb_uart/apb_uart.sv:595.8-602.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14526  (
    .A(\$auto$slang_frontend.cc:694:finish$\iMSR_dDCD$4917 ),
    .B(1'h1),
    .S(\$procmux$14527_CMP ),
    .Y(\$procmux$14526_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:593.13-593.32|../rtl/apb_uart/apb_uart.sv:591.13-594.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14531  (
    .A(iMSR_TERI),
    .B(1'h0),
    .S(\$procmux$14532_CMP ),
    .Y(\$procmux$14531_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:589.13-589.32|../rtl/apb_uart/apb_uart.sv:587.8-594.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14534  (
    .A(\$procmux$14531_Y ),
    .B(1'hx),
    .S(\$procmux$14535_CMP ),
    .Y(\$procmux$14534_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:589.13-589.32|../rtl/apb_uart/apb_uart.sv:587.8-594.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14540  (
    .A(\$auto$slang_frontend.cc:694:finish$\iMSR_TERI$4903 ),
    .B(1'h1),
    .S(\$procmux$14541_CMP ),
    .Y(\$procmux$14540_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:585.13-585.32|../rtl/apb_uart/apb_uart.sv:583.13-586.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14544  (
    .A(iMSR_dDSR),
    .B(1'h0),
    .S(\$procmux$14545_CMP ),
    .Y(\$procmux$14544_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:581.13-581.32|../rtl/apb_uart/apb_uart.sv:579.8-586.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14547  (
    .A(\$procmux$14544_Y ),
    .B(1'hx),
    .S(\$procmux$14548_CMP ),
    .Y(\$procmux$14547_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:581.13-581.32|../rtl/apb_uart/apb_uart.sv:579.8-586.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14552  (
    .A(\$auto$slang_frontend.cc:694:finish$\iMSR_dDSR$4893 ),
    .B(1'h1),
    .S(\$procmux$14553_CMP ),
    .Y(\$procmux$14552_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:577.13-577.32|../rtl/apb_uart/apb_uart.sv:575.13-578.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14555  (
    .A(iMSR_dCTS),
    .B(1'h0),
    .S(\$procmux$14556_CMP ),
    .Y(\$procmux$14555_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:573.13-573.32|../rtl/apb_uart/apb_uart.sv:571.8-578.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14558  (
    .A(\$procmux$14555_Y ),
    .B(1'hx),
    .S(\$procmux$14559_CMP ),
    .Y(\$procmux$14558_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:573.13-573.32|../rtl/apb_uart/apb_uart.sv:571.8-578.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14562  (
    .A(\$auto$slang_frontend.cc:694:finish$\iMSR_dCTS$4879 ),
    .B(1'h1),
    .S(\$procmux$14563_CMP ),
    .Y(\$procmux$14562_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:507.18-507.47|../rtl/apb_uart/apb_uart.sv:505.18-508.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$14564  (
    .A(iFECounter),
    .B(\$auto$builder.cc:338:Biop$4698 [6:0]),
    .S(\$procmux$14565_CMP ),
    .Y(\$procmux$14564_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:503.18-503.47|../rtl/apb_uart/apb_uart.sv:501.13-508.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$14567  (
    .A(\$procmux$14564_Y ),
    .B(7'hxx),
    .S(\$procmux$14568_CMP ),
    .Y(\$procmux$14567_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:497.13-497.29|../rtl/apb_uart/apb_uart.sv:495.8-509.13" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$14570  (
    .A(\$procmux$14567_Y ),
    .B(7'hxx),
    .S(\$procmux$14571_CMP ),
    .Y(\$procmux$14570_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:503.18-503.47|../rtl/apb_uart/apb_uart.sv:501.13-508.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$14579  (
    .A(\$auto$slang_frontend.cc:694:finish$\iFECounter$4699 ),
    .B(\$auto$builder.cc:338:Biop$4688 [6:0]),
    .S(\$procmux$14580_CMP ),
    .Y(\$procmux$14579_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:497.13-497.29|../rtl/apb_uart/apb_uart.sv:495.8-509.13" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$14582  (
    .A(\$procmux$14579_Y ),
    .B(7'hxx),
    .S(\$procmux$14583_CMP ),
    .Y(\$procmux$14582_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:497.13-497.29|../rtl/apb_uart/apb_uart.sv:495.8-509.13" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$14591  (
    .A(\$auto$slang_frontend.cc:694:finish$\iFECounter$4700 ),
    .B(7'h00),
    .S(\$procmux$14592_CMP ),
    .Y(\$procmux$14591_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:493.13-493.35|../rtl/apb_uart/apb_uart.sv:491.13-494.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14598  (
    .A(iLSR_FIFOERR),
    .B(1'h0),
    .S(\$procmux$14599_CMP ),
    .Y(\$procmux$14598_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:489.13-489.35|../rtl/apb_uart/apb_uart.sv:487.8-494.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14601  (
    .A(\$procmux$14598_Y ),
    .B(1'hx),
    .S(\$procmux$14602_CMP ),
    .Y(\$procmux$14601_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:489.13-489.35|../rtl/apb_uart/apb_uart.sv:487.8-494.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14609  (
    .A(\$auto$slang_frontend.cc:694:finish$\iLSR_FIFOERR$4673 ),
    .B(1'h1),
    .S(\$procmux$14610_CMP ),
    .Y(\$procmux$14609_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:485.13-485.30|../rtl/apb_uart/apb_uart.sv:483.13-486.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14615  (
    .A(iLSR_BI),
    .B(1'h0),
    .S(\$procmux$14616_CMP ),
    .Y(\$procmux$14615_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:481.13-481.30|../rtl/apb_uart/apb_uart.sv:479.8-486.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14618  (
    .A(\$procmux$14615_Y ),
    .B(1'hx),
    .S(\$procmux$14619_CMP ),
    .Y(\$procmux$14618_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:481.13-481.30|../rtl/apb_uart/apb_uart.sv:479.8-486.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14625  (
    .A(\$auto$slang_frontend.cc:694:finish$\iLSR_BI$4659 ),
    .B(1'h1),
    .S(\$procmux$14626_CMP ),
    .Y(\$procmux$14625_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:477.13-477.30|../rtl/apb_uart/apb_uart.sv:475.13-478.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14630  (
    .A(iLSR_FE),
    .B(1'h0),
    .S(\$procmux$14631_CMP ),
    .Y(\$procmux$14630_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:473.13-473.30|../rtl/apb_uart/apb_uart.sv:471.8-478.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14633  (
    .A(\$procmux$14630_Y ),
    .B(1'hx),
    .S(\$procmux$14634_CMP ),
    .Y(\$procmux$14633_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:473.13-473.30|../rtl/apb_uart/apb_uart.sv:471.8-478.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14639  (
    .A(\$auto$slang_frontend.cc:694:finish$\iLSR_FE$4649 ),
    .B(1'h1),
    .S(\$procmux$14640_CMP ),
    .Y(\$procmux$14639_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:469.13-469.30|../rtl/apb_uart/apb_uart.sv:467.13-470.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14643  (
    .A(iLSR_PE),
    .B(1'h0),
    .S(\$procmux$14644_CMP ),
    .Y(\$procmux$14643_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:465.13-465.30|../rtl/apb_uart/apb_uart.sv:463.8-470.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14646  (
    .A(\$procmux$14643_Y ),
    .B(1'hx),
    .S(\$procmux$14647_CMP ),
    .Y(\$procmux$14646_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:465.13-465.30|../rtl/apb_uart/apb_uart.sv:463.8-470.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14651  (
    .A(\$auto$slang_frontend.cc:694:finish$\iLSR_PE$4639 ),
    .B(1'h1),
    .S(\$procmux$14652_CMP ),
    .Y(\$procmux$14651_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:461.13-461.30|../rtl/apb_uart/apb_uart.sv:459.13-462.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14654  (
    .A(iLSR_OE),
    .B(1'h0),
    .S(\$procmux$14655_CMP ),
    .Y(\$procmux$14654_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:457.13-457.30|../rtl/apb_uart/apb_uart.sv:455.8-462.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14657  (
    .A(\$procmux$14654_Y ),
    .B(1'hx),
    .S(\$procmux$14658_CMP ),
    .Y(\$procmux$14657_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:457.13-457.30|../rtl/apb_uart/apb_uart.sv:455.8-462.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14661  (
    .A(\$auto$slang_frontend.cc:694:finish$\iLSR_OE$4629 ),
    .B(1'h1),
    .S(\$procmux$14662_CMP ),
    .Y(\$procmux$14661_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:431.11-431.36|../rtl/apb_uart/apb_uart.sv:429.8-432.12" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$14663  (
    .A(iMCR[5:0]),
    .B(PWDATA[5:0]),
    .S(\$procmux$14664_CMP ),
    .Y(\$procmux$14663_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:410.13-410.34|../rtl/apb_uart/apb_uart.sv:408.8-411.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$14665  (
    .A(iLCR),
    .B(PWDATA[7:0]),
    .S(\$procmux$14666_CMP ),
    .Y(\$procmux$14665_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:387.18-387.44|../rtl/apb_uart/apb_uart.sv:385.13-388.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14667  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14668_CMP ),
    .Y(\$procmux$14667_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:371.10-389.13|../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14671  (
    .A(1'hx),
    .B(\$procmux$14667_Y ),
    .S(\$procmux$14672_CMP ),
    .Y(\$procmux$14671_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:382.18-382.44|../rtl/apb_uart/apb_uart.sv:380.13-383.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14673  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14674_CMP ),
    .Y(\$procmux$14673_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:371.10-389.13|../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14676  (
    .A(1'hx),
    .B(\$procmux$14673_Y ),
    .S(\$procmux$14677_CMP ),
    .Y(\$procmux$14676_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:377.18-377.44|../rtl/apb_uart/apb_uart.sv:375.13-378.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14678  (
    .A(iFCR_FIFO64E),
    .B(PWDATA[5]),
    .S(\$procmux$14679_CMP ),
    .Y(\$procmux$14678_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:371.10-389.13|../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14680  (
    .A(1'hx),
    .B(\$procmux$14678_Y ),
    .S(\$procmux$14681_CMP ),
    .Y(\$procmux$14680_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:371.10-389.13|../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14685  (
    .A(iFCR_RXTrigger),
    .B(PWDATA[7:6]),
    .S(\$procmux$14686_CMP ),
    .Y(\$procmux$14685_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:371.10-389.13|../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14690  (
    .A(iFCR_FIFO64E),
    .B(\$auto$slang_frontend.cc:694:finish$\iFCR_FIFO64E$4533 ),
    .S(\$procmux$14691_CMP ),
    .Y(\$procmux$14690_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:371.10-389.13|../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14695  (
    .A(iFCR_DMAMode),
    .B(PWDATA[3]),
    .S(\$procmux$14696_CMP ),
    .Y(\$procmux$14695_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:371.10-389.13|../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14700  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\iFCR_TXFIFOReset$4575 ),
    .S(\$procmux$14701_CMP ),
    .Y(\$procmux$14700_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:371.10-389.13|../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14705  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\iFCR_RXFIFOReset$4554 ),
    .S(\$procmux$14706_CMP ),
    .Y(\$procmux$14705_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:371.10-389.13|../rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14710  (
    .A(iFCR_FIFOEnable),
    .B(PWDATA[0]),
    .S(\$procmux$14711_CMP ),
    .Y(\$procmux$14710_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:340.13-347.18|../rtl/apb_uart/apb_uart.sv:338.8-352.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14714  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\iCharTimeout$4520 ),
    .S(\$procmux$14715_CMP ),
    .Y(\$procmux$14714_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:346.18-346.40|../rtl/apb_uart/apb_uart.sv:344.18-347.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14718  (
    .A(iCharTimeout),
    .B(1'h1),
    .S(\$procmux$14719_CMP ),
    .Y(\$procmux$14718_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:342.18-342.40|../rtl/apb_uart/apb_uart.sv:340.13-347.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14721  (
    .A(\$procmux$14718_Y ),
    .B(1'hx),
    .S(\$procmux$14722_CMP ),
    .Y(\$procmux$14721_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:340.13-347.18|../rtl/apb_uart/apb_uart.sv:338.8-352.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14723  (
    .A(1'hx),
    .B(\$procmux$14721_Y ),
    .S(\$procmux$14724_CMP ),
    .Y(\$procmux$14723_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:342.18-342.40|../rtl/apb_uart/apb_uart.sv:340.13-347.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14729  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCharTimeout$4519 ),
    .B(1'h0),
    .S(\$procmux$14730_CMP ),
    .Y(\$procmux$14729_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:340.13-347.18|../rtl/apb_uart/apb_uart.sv:338.8-352.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14731  (
    .A(1'hx),
    .B(\$procmux$14729_Y ),
    .S(\$procmux$14732_CMP ),
    .Y(\$procmux$14731_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:336.13-336.48|../rtl/apb_uart/apb_uart.sv:334.13-337.13" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$14734  (
    .A(iTimeoutCount),
    .B(\$auto$builder.cc:338:Biop$4504 [5:0]),
    .S(\$procmux$14735_CMP ),
    .Y(\$procmux$14734_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:332.13-332.72|../rtl/apb_uart/apb_uart.sv:329.8-337.13" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$14737  (
    .A(\$procmux$14734_Y ),
    .B(6'hxx),
    .S(\$procmux$14738_CMP ),
    .Y(\$procmux$14737_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:332.13-332.72|../rtl/apb_uart/apb_uart.sv:329.8-337.13" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$14741  (
    .A(\$auto$slang_frontend.cc:694:finish$\iTimeoutCount$4505 ),
    .B(6'h00),
    .S(\$procmux$14742_CMP ),
    .Y(\$procmux$14741_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:305.13-305.36|../rtl/apb_uart/apb_uart.sv:303.13-306.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14743  (
    .A(iTHRInterrupt),
    .B(1'h0),
    .S(\$procmux$14744_CMP ),
    .Y(\$procmux$14743_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:301.13-301.36|../rtl/apb_uart/apb_uart.sv:299.8-306.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14746  (
    .A(\$procmux$14743_Y ),
    .B(1'hx),
    .S(\$procmux$14747_CMP ),
    .Y(\$procmux$14746_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/apb_uart.sv:301.13-301.36|../rtl/apb_uart/apb_uart.sv:299.8-306.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14750  (
    .A(\$auto$slang_frontend.cc:694:finish$\iTHRInterrupt$4452 ),
    .B(1'h1),
    .S(\$procmux$14751_CMP ),
    .Y(\$procmux$14750_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:263.13-263.38|../rtl/apb_uart/apb_uart.sv:261.8-264.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$14752  (
    .A(iIER[3:0]),
    .B(PWDATA[3:0]),
    .S(\$procmux$14753_CMP ),
    .Y(\$procmux$14752_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:250.13-250.34|../rtl/apb_uart/apb_uart.sv:248.8-251.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$14754  (
    .A(iDLM),
    .B(PWDATA[7:0]),
    .S(\$procmux$14755_CMP ),
    .Y(\$procmux$14754_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:246.13-246.34|../rtl/apb_uart/apb_uart.sv:244.8-247.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$14757  (
    .A(iDLL),
    .B(PWDATA[7:0]),
    .S(\$procmux$14758_CMP ),
    .Y(\$procmux$14757_Y )
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:630.14" */
  \uart_baudgen$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BG16  UART_BG16 (
    .BAUDTICK(iBaudtick16x),
    .CE(1'h1),
    .CLEAR(1'h0),
    .CLK(CLK),
    .DIVIDER(iBaudgenDiv),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:637.29" */
  \slib_clock_div$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BG2  UART_BG2 (
    .CE(iBaudtick16x),
    .CLK(CLK),
    .Q(iBaudtick2x),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:517.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BIDET  UART_BIDET (
    .CLK(CLK),
    .D(iRXFIFOBI),
    .RE(iBIRE),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:536.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_CTS  UART_ED_CTS (
    .CLK(CLK),
    .D(iMSR_CTS),
    .FE(iCTSnFE),
    .RE(iCTSnRE),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:554.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_DCD  UART_ED_DCD (
    .CLK(CLK),
    .D(iMSR_DCD),
    .FE(iDCDnFE),
    .RE(iDCDnRE),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:542.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_DSR  UART_ED_DSR (
    .CLK(CLK),
    .D(iMSR_DSR),
    .FE(iDSRnFE),
    .RE(iDSRnRE),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:548.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_RI  UART_ED_RI (
    .CLK(CLK),
    .D(iMSR_RI),
    .FE(iRInFE),
    .RE(iRInRE),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:516.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_FEDET  UART_FEDET (
    .CLK(CLK),
    .D(iRXFIFOFE),
    .RE(iFERE),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:229.31" */
  \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_CTS  UART_IF_CTS (
    .CE(iBaudtick2x),
    .CLK(CLK),
    .D(iCTSNs),
    .Q(iCTSn),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:231.31" */
  \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_DCD  UART_IF_DCD (
    .CE(iBaudtick2x),
    .CLK(CLK),
    .D(iDCDNs),
    .Q(iDCDn),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:230.31" */
  \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_DSR  UART_IF_DSR (
    .CE(iBaudtick2x),
    .CLK(CLK),
    .D(iDSRNs),
    .Q(iDSRn),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:232.31" */
  \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_RI  UART_IF_RI (
    .CE(iBaudtick2x),
    .CLK(CLK),
    .D(iRINs),
    .Q(iRIn),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:273.16" */
  \uart_interrupt$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IIC  UART_IIC (
    .AFE(iMCR_AFE),
    .CLK(CLK),
    .CTI(iCharTimeout),
    .IER(iIER[3:0]),
    .IIR(iIIR[3:0]),
    .INT(INT),
    .LSR(iLSR[4:0]),
    .MSR(iMSR[3:0]),
    .RDA(iRDAInterrupt),
    .RST(iRST),
    .THI(iTHRInterrupt)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:285.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IIC_THRE_ED  UART_IIC_THRE_ED (
    .CLK(CLK),
    .D(iLSR_THRE),
    .RE(iLSR_THRERE),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:225.17" */
  \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_CTS  UART_IS_CTS (
    .CLK(CLK),
    .D(CTSN),
    .Q(iCTSNs),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:227.17" */
  \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_DCD  UART_IS_DCD (
    .CLK(CLK),
    .D(DCDN),
    .Q(iDCDNs),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:226.17" */
  \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_DSR  UART_IS_DSR (
    .CLK(CLK),
    .D(DSRN),
    .Q(iDSRNs),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:228.17" */
  \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_RI  UART_IS_RI (
    .CLK(CLK),
    .D(RIN),
    .Q(iRINs),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:224.17" */
  \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_SIN  UART_IS_SIN (
    .CLK(CLK),
    .D(SIN),
    .Q(iSINr),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:515.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_PEDET  UART_PEDET (
    .CLK(CLK),
    .D(iRXFIFOPE),
    .RE(iPERE),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:642.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RCLK  UART_RCLK (
    .CLK(CLK),
    .D(iBAUDOUTN),
    .RE(iRCLK),
    .RST(iRST)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:697.15" */
  \uart_receiver$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX  UART_RX (
    .BI(iRXBI),
    .CLK(CLK),
    .DOUT(iRXData),
    .EPS(iLCR_EPS),
    .FE(iRXFE),
    .PE(iRXPE),
    .PEN(iLCR_PEN),
    .RST(iRST),
    .RXCLEAR(1'h0),
    .RXCLK(iRCLK),
    .RXFINISHED(iRXFinished),
    .SIN(iSIN),
    .SP(iLCR_SP),
    .STB(iLCR_STB),
    .WLS(iLCR_WLS)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:663.37" */
  \slib_fifo$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RXFF  UART_RXFF (
    .CLEAR(iRXFIFOClear),
    .CLK(CLK),
    .D(iRXFIFOD),
    .EMPTY(iRXFIFOEmpty),
    .FULL(iRXFIFO64Full),
    .Q(iRXFIFOQ),
    .READ(iRXFIFORead),
    .RST(iRST),
    .USAGE(iRXFIFOUsage),
    .WRITE(iRXFIFOWrite)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:681.18" */
  \uart_transmitter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_TX  UART_TX (
    .BC(iLCR_BC),
    .CLEAR(1'h0),
    .CLK(CLK),
    .DIN(iTSR),
    .EPS(iLCR_EPS),
    .PEN(iLCR_PEN),
    .RST(iRST),
    .SOUT(iSOUT),
    .SP(iLCR_SP),
    .STB(iLCR_STB),
    .TXCLK(iBaudtick2x),
    .TXFINISHED(iTXFinished),
    .TXSTART(iTXStart),
    .WLS(iLCR_WLS)
  );
  /* src = "../rtl/apb_uart/apb_uart.sv:648.36" */
  \slib_fifo$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_TXFF  UART_TXFF (
    .CLEAR(iTXFIFOClear),
    .CLK(CLK),
    .D(PWDATA[7:0]),
    .EMPTY(iTXFIFOEmpty),
    .FULL(iTXFIFO64Full),
    .Q(iTXFIFOQ),
    .READ(iTXFIFORead),
    .RST(iRST),
    .USAGE(iTXFIFOUsage),
    .WRITE(iTXFIFOWrite)
  );
  assign iWrite = \$auto$rtlil.cc:2874:Mux$4235 ;
  assign iRead = \$auto$rtlil.cc:2874:Mux$4249 ;
  assign iRST = \$auto$rtlil.cc:2874:Mux$4255 ;
  assign iRBRRead = \$auto$rtlil.cc:2874:Mux$4269 ;
  assign iTHRWrite = \$auto$rtlil.cc:2874:Mux$4283 ;
  assign iDLLWrite = \$auto$rtlil.cc:2874:Mux$4297 ;
  assign iDLMWrite = \$auto$rtlil.cc:2874:Mux$4311 ;
  assign iIERWrite = \$auto$rtlil.cc:2874:Mux$4325 ;
  assign iIIRRead = \$auto$rtlil.cc:2874:Mux$4335 ;
  assign iFCRWrite = \$auto$rtlil.cc:2874:Mux$4345 ;
  assign iLCRWrite = \$auto$rtlil.cc:2874:Mux$4355 ;
  assign iMCRWrite = \$auto$rtlil.cc:2874:Mux$4365 ;
  assign iLSRRead = \$auto$rtlil.cc:2874:Mux$4375 ;
  assign iMSRRead = \$auto$rtlil.cc:2874:Mux$4385 ;
  assign iSCRWrite = \$auto$rtlil.cc:2874:Mux$4395 ;
  assign iIER_ERBI = iIER[0];
  assign iIER_ETBEI = iIER[1];
  assign iIER_ELSI = iIER[2];
  assign iIER_EDSSI = iIER[3];
  assign iRDAInterrupt = \$auto$rtlil.cc:2874:Mux$4471 ;
  assign iIIR_PI = iIIR[0];
  assign iIIR_ID0 = iIIR[1];
  assign iIIR_ID1 = iIIR[2];
  assign iIIR_ID2 = iIIR[3];
  assign iIIR_FIFO64 = iIIR[5];
  assign iIIR[4] = 1'h0;
  assign iIIR[5] = \$auto$rtlil.cc:2874:Mux$4475 ;
  assign iIIR[6] = iFCR_FIFOEnable;
  assign iIIR[7] = iFCR_FIFOEnable;
  assign iFCR[0] = iFCR_FIFOEnable;
  assign iFCR[1] = iFCR_RXFIFOReset;
  assign iFCR[2] = iFCR_TXFIFOReset;
  assign iFCR[3] = iFCR_DMAMode;
  assign iFCR[4] = 1'h0;
  assign iFCR[5] = iFCR_FIFO64E;
  assign iFCR[7:6] = iFCR_RXTrigger;
  assign iLCR_WLS = iLCR[1:0];
  assign iLCR_STB = iLCR[2];
  assign iLCR_PEN = iLCR[3];
  assign iLCR_EPS = iLCR[4];
  assign iLCR_SP = iLCR[5];
  assign iLCR_BC = iLCR[6];
  assign iLCR_DLAB = iLCR[7];
  assign iMCR_DTR = iMCR[0];
  assign iMCR_RTS = iMCR[1];
  assign iMCR_OUT1 = iMCR[2];
  assign iMCR_OUT2 = iMCR[3];
  assign iMCR_LOOP = iMCR[4];
  assign iMCR_AFE = iMCR[5];
  assign iRXFIFOPE = \$auto$rtlil.cc:2874:Mux$4711 ;
  assign iRXFIFOFE = \$auto$rtlil.cc:2874:Mux$4721 ;
  assign iRXFIFOBI = \$auto$rtlil.cc:2874:Mux$4731 ;
  assign iFEIncrement = \$auto$rtlil.cc:2874:Mux$4741 ;
  assign iFEDecrement = \$auto$rtlil.cc:2874:Mux$4763 ;
  assign iLSR[0] = iLSR_DR;
  assign iLSR[1] = iLSR_OE;
  assign iLSR[2] = iLSR_PE;
  assign iLSR[3] = iLSR_FE;
  assign iLSR[4] = iLSR_BI;
  assign iLSR[5] = iLSR_THRE;
  assign iLSR[6] = iLSR_TEMT;
  assign iLSR[7] = \$auto$builder.cc:338:Biop$4765 ;
  assign iLSR_DR = \$auto$rtlil.cc:2874:Mux$4775 ;
  assign iLSR_THRE = \$auto$rtlil.cc:2874:Mux$4781 ;
  assign iLSR_TEMT = \$auto$rtlil.cc:2874:Mux$4791 ;
  assign iMSR_CTS = \$auto$rtlil.cc:2874:Mux$4809 ;
  assign iMSR_DSR = \$auto$rtlil.cc:2874:Mux$4827 ;
  assign iMSR_RI = \$auto$rtlil.cc:2874:Mux$4845 ;
  assign iMSR_DCD = \$auto$rtlil.cc:2874:Mux$4863 ;
  assign iMSR[0] = iMSR_dCTS;
  assign iMSR[1] = iMSR_dDSR;
  assign iMSR[2] = iMSR_TERI;
  assign iMSR[3] = iMSR_dDCD;
  assign iMSR[4] = iMSR_CTS;
  assign iMSR[5] = iMSR_DSR;
  assign iMSR[6] = iMSR_RI;
  assign iMSR[7] = iMSR_DCD;
  assign iBaudgenDiv = { iDLM, iDLL };
  assign iTXFIFO16Full = iTXFIFOUsage[4];
  assign iTXFIFOFull = \$auto$rtlil.cc:2874:Mux$4932 ;
  assign iTXFIFOWrite = \$auto$rtlil.cc:2874:Mux$4954 ;
  assign iTXFIFOClear = \$auto$rtlil.cc:2874:Mux$4960 ;
  assign iRXFIFORead = \$auto$rtlil.cc:2874:Mux$4966 ;
  assign iRXFIFO16Full = iRXFIFOUsage[4];
  assign iRXFIFOFull = \$auto$rtlil.cc:2874:Mux$4972 ;
  assign iRBR = iRXFIFOQ[7:0];
  assign iRXFIFO16Trigger = \$auto$rtlil.cc:2874:Mux$5022 ;
  assign iRXFIFO64Trigger = \$auto$rtlil.cc:2874:Mux$5072 ;
  assign iRXFIFOTrigger = \$auto$rtlil.cc:2874:Mux$5078 ;
  assign iTXClear = 1'h0;
  assign iRXClear = 1'h0;
  assign iSIN = \$auto$rtlil.cc:2874:Mux$5084 ;
  assign iTXEnable = \$auto$rtlil.cc:2874:Mux$5102 ;
  assign PRDATA = { 24'h000000, \$auto$slang_frontend.cc:694:finish$\PRDATA[0]$5248  };
  assign PREADY = 1'h1;
  assign PSLVERR = 1'h0;
  assign \$procmux$14342_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5246 ;
  assign \$auto$slang_frontend.cc:694:finish$\PRDATA[0]$5247  = \$procmux$14343_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\PRDATA[0]$5248  = \$procmux$14345_Y ;
  assign \$procmux$14365_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5241 ;
  assign \$auto$slang_frontend.cc:694:finish$\PRDATA[0]$5242  = \$procmux$14366_Y ;
  assign \$procmux$14369_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5235 ;
  assign \$auto$slang_frontend.cc:694:finish$\SOUT$5236  = \$procmux$14368_Y ;
  assign \$procmux$14376_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5226 ;
  assign \$auto$slang_frontend.cc:694:finish$\DTRN$5227  = \$procmux$14375_Y ;
  assign \$procmux$14382_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5217 ;
  assign \$auto$slang_frontend.cc:694:finish$\RTSN$5218  = \$procmux$14381_Y ;
  assign \$procmux$14387_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5208 ;
  assign \$auto$slang_frontend.cc:694:finish$\OUT2N$5209  = \$procmux$14386_Y ;
  assign \$procmux$14391_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5199 ;
  assign \$auto$slang_frontend.cc:694:finish$\OUT1N$5200  = \$procmux$14390_Y ;
  assign \$procmux$14394_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5190 ;
  assign \$auto$slang_frontend.cc:694:finish$\iBAUDOUTN$5191  = \$procmux$14393_Y ;
  assign \$procmux$14396_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5181 ;
  assign \$procmux$14399_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5165 ;
  assign \$auto$slang_frontend.cc:694:finish$\iRTS$5182  = \$procmux$14398_Y ;
  assign \$procmux$14403_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5165 ;
  assign \$auto$slang_frontend.cc:694:finish$\iRTS$5183  = \$procmux$14402_Y ;
  assign \$procmux$14405_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5144 ;
  assign \$procmux$14408_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5140 ;
  assign \$procmux$14410_CMP  = rx_State;
  assign \$auto$slang_frontend.cc:694:finish$\iRXFIFOWrite$5145  = \$procmux$14409_Y ;
  assign \$procmux$14414_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5140 ;
  assign \$procmux$14416_CMP  = rx_State;
  assign \$auto$slang_frontend.cc:694:finish$\iRXFIFOWrite$5146  = \$procmux$14415_Y ;
  assign \$procmux$14419_CMP  = rx_State;
  assign \$auto$slang_frontend.cc:694:finish$\rx_State$5150  = \$procmux$14418_Y ;
  assign \$procmux$14424_CMP  = rx_State;
  assign \$auto$slang_frontend.cc:694:finish$\iRXFIFOD$5149  = \$procmux$14423_Y ;
  assign \$procmux$14429_CMP  = rx_State;
  assign \$auto$slang_frontend.cc:694:finish$\iRXFIFOClear$5147  = \$procmux$14428_Y ;
  assign \$procmux$14436_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5128 ;
  assign \$auto$slang_frontend.cc:694:finish$\rx_State$5136  = \$procmux$14437_Y ;
  assign \$procmux$14443_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5128 ;
  assign \$auto$slang_frontend.cc:694:finish$\iRXFIFOD$5135  = \$procmux$14444_Y ;
  assign \$procmux$14450_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5128 ;
  assign \$auto$slang_frontend.cc:694:finish$\iRXFIFOClear$5134  = \$procmux$14451_Y ;
  assign \$procmux$14456_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5132 ;
  assign \$procmux$14458_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5128 ;
  assign \$auto$slang_frontend.cc:694:finish$\iRXFIFOClear$5133  = \$procmux$14459_Y ;
  assign \$procmux$14463_CMP  = rx_State;
  assign \$auto$slang_frontend.cc:694:finish$\iRXFIFOWrite$5148  = \$procmux$14462_Y ;
  assign \$procmux$14467_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5115 ;
  assign \$auto$slang_frontend.cc:694:finish$\tx_State$5116  = \$procmux$14468_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\tx_State$5121  = \$procmux$14470_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\iTXStart$5119  = \$procmux$14477_Y ;
  assign \$procmux$14489_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5109 ;
  assign \$auto$slang_frontend.cc:694:finish$\tx_State$5111  = \$procmux$14490_Y ;
  assign \$procmux$14497_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5109 ;
  assign \$auto$slang_frontend.cc:694:finish$\iTXStart$5110  = \$procmux$14498_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\iTXRunning$5120  = \$procmux$14502_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\iTXFIFORead$5118  = \$procmux$14507_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\iTSR$5117  = \$procmux$14512_Y ;
  assign \$procmux$14515_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4925 ;
  assign \$auto$slang_frontend.cc:694:finish$\iSCR$4926  = \$procmux$14514_Y ;
  assign \$procmux$14517_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4916 ;
  assign \$procmux$14520_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4912 ;
  assign \$auto$slang_frontend.cc:694:finish$\iMSR_dDCD$4917  = \$procmux$14519_Y ;
  assign \$procmux$14527_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4912 ;
  assign \$auto$slang_frontend.cc:694:finish$\iMSR_dDCD$4918  = \$procmux$14526_Y ;
  assign \$procmux$14532_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4902 ;
  assign \$procmux$14535_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4898 ;
  assign \$auto$slang_frontend.cc:694:finish$\iMSR_TERI$4903  = \$procmux$14534_Y ;
  assign \$procmux$14541_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4898 ;
  assign \$auto$slang_frontend.cc:694:finish$\iMSR_TERI$4904  = \$procmux$14540_Y ;
  assign \$procmux$14545_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4892 ;
  assign \$procmux$14548_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4888 ;
  assign \$auto$slang_frontend.cc:694:finish$\iMSR_dDSR$4893  = \$procmux$14547_Y ;
  assign \$procmux$14553_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4888 ;
  assign \$auto$slang_frontend.cc:694:finish$\iMSR_dDSR$4894  = \$procmux$14552_Y ;
  assign \$procmux$14556_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4878 ;
  assign \$procmux$14559_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4874 ;
  assign \$auto$slang_frontend.cc:694:finish$\iMSR_dCTS$4879  = \$procmux$14558_Y ;
  assign \$procmux$14563_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4874 ;
  assign \$auto$slang_frontend.cc:694:finish$\iMSR_dCTS$4880  = \$procmux$14562_Y ;
  assign \$procmux$14565_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4696 ;
  assign \$procmux$14568_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4686 ;
  assign \$procmux$14571_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4678 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFECounter$4699  = \$procmux$14570_Y ;
  assign \$procmux$14580_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4686 ;
  assign \$procmux$14583_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4678 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFECounter$4700  = \$procmux$14582_Y ;
  assign \$procmux$14592_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4678 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFECounter$4701  = \$procmux$14591_Y ;
  assign \$procmux$14599_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4672 ;
  assign \$procmux$14602_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4664 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLSR_FIFOERR$4673  = \$procmux$14601_Y ;
  assign \$procmux$14610_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4664 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLSR_FIFOERR$4674  = \$procmux$14609_Y ;
  assign \$procmux$14616_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4658 ;
  assign \$procmux$14619_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4654 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLSR_BI$4659  = \$procmux$14618_Y ;
  assign \$procmux$14626_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4654 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLSR_BI$4660  = \$procmux$14625_Y ;
  assign \$procmux$14631_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4648 ;
  assign \$procmux$14634_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4644 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLSR_FE$4649  = \$procmux$14633_Y ;
  assign \$procmux$14640_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4644 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLSR_FE$4650  = \$procmux$14639_Y ;
  assign \$procmux$14644_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4638 ;
  assign \$procmux$14647_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4634 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLSR_PE$4639  = \$procmux$14646_Y ;
  assign \$procmux$14652_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4634 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLSR_PE$4640  = \$procmux$14651_Y ;
  assign \$procmux$14655_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4628 ;
  assign \$procmux$14658_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4624 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLSR_OE$4629  = \$procmux$14657_Y ;
  assign \$procmux$14662_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4624 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLSR_OE$4630  = \$procmux$14661_Y ;
  assign \$procmux$14664_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4596 ;
  assign \$auto$slang_frontend.cc:694:finish$\iMCR[0]$4597  = \$procmux$14663_Y ;
  assign \$procmux$14666_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4588 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLCR$4589  = \$procmux$14665_Y ;
  assign \$procmux$14668_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4574 ;
  assign \$procmux$14672_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4528 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFCR_TXFIFOReset$4575  = \$procmux$14671_Y ;
  assign \$procmux$14674_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4553 ;
  assign \$procmux$14677_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4528 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFCR_RXFIFOReset$4554  = \$procmux$14676_Y ;
  assign \$procmux$14679_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4532 ;
  assign \$procmux$14681_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4528 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFCR_FIFO64E$4533  = \$procmux$14680_Y ;
  assign \$procmux$14686_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4528 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFCR_RXTrigger$4581  = \$procmux$14685_Y ;
  assign \$procmux$14691_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4528 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFCR_FIFO64E$4580  = \$procmux$14690_Y ;
  assign \$procmux$14696_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4528 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFCR_DMAMode$4579  = \$procmux$14695_Y ;
  assign \$procmux$14701_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4528 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFCR_TXFIFOReset$4578  = \$procmux$14700_Y ;
  assign \$procmux$14706_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4528 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFCR_RXFIFOReset$4577  = \$procmux$14705_Y ;
  assign \$procmux$14711_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4528 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFCR_FIFOEnable$4576  = \$procmux$14710_Y ;
  assign \$procmux$14715_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4510 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCharTimeout$4521  = \$procmux$14714_Y ;
  assign \$procmux$14719_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4518 ;
  assign \$procmux$14722_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4514 ;
  assign \$procmux$14724_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4510 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCharTimeout$4519  = \$procmux$14723_Y ;
  assign \$procmux$14730_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4514 ;
  assign \$procmux$14732_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4510 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCharTimeout$4520  = \$procmux$14731_Y ;
  assign \$procmux$14735_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4502 ;
  assign \$procmux$14738_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4490 ;
  assign \$auto$slang_frontend.cc:694:finish$\iTimeoutCount$4505  = \$procmux$14737_Y ;
  assign \$procmux$14742_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4490 ;
  assign \$auto$slang_frontend.cc:694:finish$\iTimeoutCount$4506  = \$procmux$14741_Y ;
  assign \$procmux$14744_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4451 ;
  assign \$procmux$14747_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4439 ;
  assign \$auto$slang_frontend.cc:694:finish$\iTHRInterrupt$4452  = \$procmux$14746_Y ;
  assign \$procmux$14751_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4439 ;
  assign \$auto$slang_frontend.cc:694:finish$\iTHRInterrupt$4453  = \$procmux$14750_Y ;
  assign \$procmux$14753_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4415 ;
  assign \$auto$slang_frontend.cc:694:finish$\iIER[0]$4416  = \$procmux$14752_Y ;
  assign \$procmux$14755_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4407 ;
  assign \$auto$slang_frontend.cc:694:finish$\iDLM$4408  = \$procmux$14754_Y ;
  assign \$procmux$14758_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4402 ;
  assign \$auto$slang_frontend.cc:694:finish$\iDLL$4403  = \$procmux$14757_Y ;
  assign \$auto$builder.cc:338:Biop$4223  = PSEL;
  assign \$auto$builder.cc:338:Biop$4225  = PENABLE;
  assign \$auto$builder.cc:338:Biop$4229  = PWRITE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4233  = \$auto$builder.cc:338:Biop$4231 ;
  assign \$auto$builder.cc:338:Biop$4237  = PSEL;
  assign \$auto$builder.cc:338:Biop$4239  = PENABLE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4247  = \$auto$builder.cc:338:Biop$4245 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4253  = \$auto$builder.cc:338:Biop$4251 ;
  assign \$auto$builder.cc:338:Biop$4257  = iRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4267  = \$auto$builder.cc:338:Biop$4265 ;
  assign \$auto$builder.cc:338:Biop$4271  = iWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4281  = \$auto$builder.cc:338:Biop$4279 ;
  assign \$auto$builder.cc:338:Biop$4285  = iWrite;
  assign \$auto$builder.cc:338:Biop$4291  = iLCR_DLAB;
  assign \$auto$rtlil.cc:2746:ReduceBool$4295  = \$auto$builder.cc:338:Biop$4293 ;
  assign \$auto$builder.cc:338:Biop$4299  = iWrite;
  assign \$auto$builder.cc:338:Biop$4305  = iLCR_DLAB;
  assign \$auto$rtlil.cc:2746:ReduceBool$4309  = \$auto$builder.cc:338:Biop$4307 ;
  assign \$auto$builder.cc:338:Biop$4313  = iWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4323  = \$auto$builder.cc:338:Biop$4321 ;
  assign \$auto$builder.cc:338:Biop$4327  = iRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4333  = \$auto$builder.cc:338:Biop$4331 ;
  assign \$auto$builder.cc:338:Biop$4337  = iWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4343  = \$auto$builder.cc:338:Biop$4341 ;
  assign \$auto$builder.cc:338:Biop$4347  = iWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4353  = \$auto$builder.cc:338:Biop$4351 ;
  assign \$auto$builder.cc:338:Biop$4357  = iWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4363  = \$auto$builder.cc:338:Biop$4361 ;
  assign \$auto$builder.cc:338:Biop$4367  = iRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4373  = \$auto$builder.cc:338:Biop$4371 ;
  assign \$auto$builder.cc:338:Biop$4377  = iRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4383  = \$auto$builder.cc:338:Biop$4381 ;
  assign \$auto$builder.cc:338:Biop$4387  = iWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4393  = \$auto$builder.cc:338:Biop$4391 ;
  assign \$auto$builder.cc:338:Biop$4400  = iDLLWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4402  = \$auto$rtlil.cc:2874:Mux$4297 ;
  assign \$auto$builder.cc:338:Biop$4405  = iDLMWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4407  = \$auto$rtlil.cc:2874:Mux$4311 ;
  assign \$auto$builder.cc:338:Biop$4413  = iIERWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4415  = \$auto$rtlil.cc:2874:Mux$4325 ;
  assign \$auto$builder.cc:338:Biop$4421  = iLSR_THRERE;
  assign \$auto$builder.cc:338:Biop$4423  = iFCR_TXFIFOReset;
  assign \$auto$builder.cc:338:Biop$4427  = iIERWrite;
  assign \$auto$builder.cc:338:Biop$4429  = PWDATA[1];
  assign \$auto$builder.cc:338:Biop$4777  = iTXFIFOEmpty;
  assign \$auto$rtlil.cc:2746:ReduceBool$4779  = iTXFIFOEmpty;
  assign \$auto$builder.cc:338:Biop$4433  = iLSR_THRE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4439  = \$auto$builder.cc:338:Biop$4437 ;
  assign \$auto$builder.cc:338:Biop$4441  = iIIRRead;
  assign \$auto$builder.cc:338:Biop$4447  = iTHRWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4451  = \$auto$builder.cc:338:Biop$4449 ;
  assign \$auto$builder.cc:338:Biop$4769  = iRXFIFOWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4773  = \$auto$builder.cc:338:Biop$4771 ;
  assign \$auto$builder.cc:338:Biop$4457  = iLSR_DR;
  assign \$auto$builder.cc:338:Biop$4461  = iFCR_FIFOEnable;
  assign \$auto$builder.cc:338:Biop$4982  = iRXFIFOUsage[2];
  assign \$auto$builder.cc:338:Biop$4984  = iRXFIFOUsage[3];
  assign \$auto$builder.cc:338:Biop$4994  = iRXFIFOUsage[3];
  assign \$auto$builder.cc:338:Biop$5002  = iRXFIFOUsage[3];
  assign \$auto$builder.cc:338:Biop$5006  = iRXFIFOUsage[2];
  assign \$auto$builder.cc:338:Biop$5010  = iRXFIFOUsage[1];
  assign \$auto$builder.cc:338:Biop$5016  = iRXFIFO16Full;
  assign \$auto$rtlil.cc:2746:ReduceBool$5020  = \$auto$builder.cc:338:Biop$5018 ;
  assign \$auto$builder.cc:338:Biop$5032  = iRXFIFOUsage[4];
  assign \$auto$builder.cc:338:Biop$5034  = iRXFIFOUsage[5];
  assign \$auto$builder.cc:338:Biop$5044  = iRXFIFOUsage[5];
  assign \$auto$builder.cc:338:Biop$5052  = iRXFIFOUsage[5];
  assign \$auto$builder.cc:338:Biop$5056  = iRXFIFOUsage[4];
  assign \$auto$builder.cc:338:Biop$5060  = iRXFIFOUsage[3];
  assign \$auto$builder.cc:338:Biop$5066  = iRXFIFO64Full;
  assign \$auto$rtlil.cc:2746:ReduceBool$5070  = \$auto$builder.cc:338:Biop$5068 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5076  = \$auto$builder.cc:338:Biop$5074 ;
  assign \$auto$builder.cc:338:Biop$4463  = iRXFIFOTrigger;
  assign \$auto$rtlil.cc:2746:ReduceBool$4469  = \$auto$builder.cc:338:Biop$4467 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4473  = iFCR_FIFOEnable;
  assign \$auto$builder.cc:338:Biop$4480  = iRXFIFOEmpty;
  assign \$auto$builder.cc:338:Biop$4482  = iRBRRead;
  assign \$auto$builder.cc:338:Biop$4486  = iRXFIFOWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4490  = \$auto$builder.cc:338:Biop$4488 ;
  assign \$auto$builder.cc:338:Biop$4494  = iBaudtick2x;
  assign \$auto$rtlil.cc:2746:ReduceBool$4502  = \$auto$builder.cc:338:Biop$4500 ;
  assign \$auto$builder.cc:338:Biop$4508  = iFCR_FIFOEnable;
  assign \$auto$rtlil.cc:2746:ReduceBool$4510  = iFCR_FIFOEnable;
  assign \$auto$builder.cc:338:Biop$4512  = iRBRRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4514  = \$auto$rtlil.cc:2874:Mux$4269 ;
  assign \$auto$builder.cc:338:Biop$4516  = iTimeoutCount[5];
  assign \$auto$rtlil.cc:2746:ReduceBool$4518  = iTimeoutCount[5];
  assign \$auto$builder.cc:338:Biop$4526  = iFCRWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4528  = \$auto$rtlil.cc:2874:Mux$4345 ;
  assign \$auto$builder.cc:338:Biop$4530  = iLCR_DLAB;
  assign \$auto$rtlil.cc:2746:ReduceBool$4532  = iLCR[7];
  assign \$auto$builder.cc:338:Biop$4535  = PWDATA[1];
  assign \$auto$builder.cc:338:Biop$4539  = PWDATA[0];
  assign \$auto$builder.cc:338:Biop$4545  = iFCR_FIFOEnable;
  assign \$auto$rtlil.cc:2746:ReduceBool$4553  = \$auto$builder.cc:338:Biop$4551 ;
  assign \$auto$builder.cc:338:Biop$4556  = PWDATA[2];
  assign \$auto$builder.cc:338:Biop$4560  = PWDATA[0];
  assign \$auto$builder.cc:338:Biop$4566  = iFCR_FIFOEnable;
  assign \$auto$rtlil.cc:2746:ReduceBool$4574  = \$auto$builder.cc:338:Biop$4572 ;
  assign \$auto$builder.cc:338:Biop$4586  = iLCRWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4588  = \$auto$rtlil.cc:2874:Mux$4355 ;
  assign \$auto$builder.cc:338:Biop$4594  = iMCRWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4596  = \$auto$rtlil.cc:2874:Mux$4365 ;
  assign \$auto$builder.cc:338:Biop$4604  = iLSR_DR;
  assign \$auto$builder.cc:338:Biop$4608  = iRXFinished;
  assign \$auto$builder.cc:338:Biop$4612  = iFCR_FIFOEnable;
  assign \$auto$rtlil.cc:2746:ReduceBool$4970  = \$auto$builder.cc:338:Biop$4968 ;
  assign \$auto$builder.cc:338:Biop$4614  = iRXFIFOFull;
  assign \$auto$builder.cc:338:Biop$4618  = iRXFinished;
  assign \$auto$rtlil.cc:2746:ReduceBool$4624  = \$auto$builder.cc:338:Biop$4622 ;
  assign \$auto$builder.cc:338:Biop$4626  = iLSRRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4628  = \$auto$rtlil.cc:2874:Mux$4375 ;
  assign \$auto$builder.cc:338:Biop$4632  = iPERE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4634  = iPERE;
  assign \$auto$builder.cc:338:Biop$4636  = iLSRRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4638  = \$auto$rtlil.cc:2874:Mux$4375 ;
  assign \$auto$builder.cc:338:Biop$4642  = iFERE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4644  = iFERE;
  assign \$auto$builder.cc:338:Biop$4646  = iLSRRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4648  = \$auto$rtlil.cc:2874:Mux$4375 ;
  assign \$auto$builder.cc:338:Biop$4652  = iBIRE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4654  = iBIRE;
  assign \$auto$builder.cc:338:Biop$4656  = iLSRRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4658  = \$auto$rtlil.cc:2874:Mux$4375 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4664  = \$auto$builder.cc:338:Biop$4662 ;
  assign \$auto$builder.cc:338:Biop$4666  = iRXFIFOEmpty;
  assign \$auto$rtlil.cc:2746:ReduceBool$4672  = \$auto$builder.cc:338:Biop$4670 ;
  assign \$auto$builder.cc:338:Biop$4676  = iRXFIFOClear;
  assign \$auto$rtlil.cc:2746:ReduceBool$4678  = iRXFIFOClear;
  assign \$auto$builder.cc:338:Biop$4733  = iRXFIFOWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4739  = \$auto$builder.cc:338:Biop$4737 ;
  assign \$auto$builder.cc:338:Biop$4680  = iFEIncrement;
  assign \$auto$builder.cc:338:Biop$4749  = iPERE;
  assign \$auto$builder.cc:338:Biop$4751  = iFERE;
  assign \$auto$builder.cc:338:Biop$4755  = iBIRE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4761  = \$auto$builder.cc:338:Biop$4759 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4686  = \$auto$builder.cc:338:Biop$4684 ;
  assign \$auto$builder.cc:338:Biop$4692  = iFEDecrement;
  assign \$auto$rtlil.cc:2746:ReduceBool$4696  = \$auto$builder.cc:338:Biop$4694 ;
  assign \$auto$builder.cc:338:Biop$4705  = iRXFIFOQ[8];
  assign \$auto$rtlil.cc:2746:ReduceBool$4709  = \$auto$builder.cc:338:Biop$4707 ;
  assign \$auto$builder.cc:338:Biop$4715  = iRXFIFOQ[9];
  assign \$auto$rtlil.cc:2746:ReduceBool$4719  = \$auto$builder.cc:338:Biop$4717 ;
  assign \$auto$builder.cc:338:Biop$4725  = iRXFIFOQ[10];
  assign \$auto$rtlil.cc:2746:ReduceBool$4729  = \$auto$builder.cc:338:Biop$4727 ;
  assign \$auto$builder.cc:338:Biop$4785  = iLSR_THRE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4789  = \$auto$builder.cc:338:Biop$4787 ;
  assign \$auto$builder.cc:338:Biop$4793  = iMCR_LOOP;
  assign \$auto$builder.cc:338:Biop$4795  = iRTS;
  assign \$auto$rtlil.cc:2746:ReduceBool$4807  = \$auto$builder.cc:338:Biop$4805 ;
  assign \$auto$builder.cc:338:Biop$4811  = iMCR_LOOP;
  assign \$auto$builder.cc:338:Biop$4813  = iMCR_DTR;
  assign \$auto$rtlil.cc:2746:ReduceBool$4825  = \$auto$builder.cc:338:Biop$4823 ;
  assign \$auto$builder.cc:338:Biop$4829  = iMCR_LOOP;
  assign \$auto$builder.cc:338:Biop$4831  = iMCR_OUT1;
  assign \$auto$rtlil.cc:2746:ReduceBool$4843  = \$auto$builder.cc:338:Biop$4841 ;
  assign \$auto$builder.cc:338:Biop$4847  = iMCR_LOOP;
  assign \$auto$builder.cc:338:Biop$4849  = iMCR_OUT2;
  assign \$auto$rtlil.cc:2746:ReduceBool$4861  = \$auto$builder.cc:338:Biop$4859 ;
  assign \$auto$builder.cc:338:Biop$4868  = iCTSnRE;
  assign \$auto$builder.cc:338:Biop$4870  = iCTSnFE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4874  = \$auto$builder.cc:338:Biop$4872 ;
  assign \$auto$builder.cc:338:Biop$4876  = iMSRRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4878  = \$auto$rtlil.cc:2874:Mux$4385 ;
  assign \$auto$builder.cc:338:Biop$4882  = iDSRnRE;
  assign \$auto$builder.cc:338:Biop$4884  = iDSRnFE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4888  = \$auto$builder.cc:338:Biop$4886 ;
  assign \$auto$builder.cc:338:Biop$4890  = iMSRRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4892  = \$auto$rtlil.cc:2874:Mux$4385 ;
  assign \$auto$builder.cc:338:Biop$4896  = iRInFE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4898  = iRInFE;
  assign \$auto$builder.cc:338:Biop$4900  = iMSRRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4902  = \$auto$rtlil.cc:2874:Mux$4385 ;
  assign \$auto$builder.cc:338:Biop$4906  = iDCDnRE;
  assign \$auto$builder.cc:338:Biop$4908  = iDCDnFE;
  assign \$auto$rtlil.cc:2746:ReduceBool$4912  = \$auto$builder.cc:338:Biop$4910 ;
  assign \$auto$builder.cc:338:Biop$4914  = iMSRRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4916  = \$auto$rtlil.cc:2874:Mux$4385 ;
  assign \$auto$builder.cc:338:Biop$4923  = iSCRWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4925  = \$auto$rtlil.cc:2874:Mux$4395 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4930  = \$auto$builder.cc:338:Biop$4928 ;
  assign \$auto$builder.cc:338:Biop$4936  = iTXFIFOEmpty;
  assign \$auto$builder.cc:338:Biop$4940  = iFCR_FIFOEnable;
  assign \$auto$builder.cc:338:Biop$4948  = iTHRWrite;
  assign \$auto$rtlil.cc:2746:ReduceBool$4952  = \$auto$builder.cc:338:Biop$4950 ;
  assign \$auto$builder.cc:338:Biop$4956  = iFCR_TXFIFOReset;
  assign \$auto$rtlil.cc:2746:ReduceBool$4958  = iFCR_TXFIFOReset;
  assign \$auto$builder.cc:338:Biop$4962  = iRBRRead;
  assign \$auto$rtlil.cc:2746:ReduceBool$4964  = \$auto$rtlil.cc:2874:Mux$4269 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5082  = \$auto$builder.cc:338:Biop$5080 ;
  assign \$auto$builder.cc:338:Biop$5090  = iMCR_AFE;
  assign \$auto$builder.cc:338:Biop$5092  = iMSR_CTS;
  assign \$auto$rtlil.cc:2746:ReduceBool$5100  = \$auto$builder.cc:338:Biop$5098 ;
  assign \$auto$builder.cc:338:Biop$5107  = iTXEnable;
  assign \$auto$rtlil.cc:2746:ReduceBool$5109  = \$auto$rtlil.cc:2874:Mux$5102 ;
  assign \$auto$builder.cc:338:Biop$5113  = iTXFinished;
  assign \$auto$rtlil.cc:2746:ReduceBool$5115  = iTXFinished;
  assign \$auto$builder.cc:338:Biop$5126  = iRXFinished;
  assign \$auto$rtlil.cc:2746:ReduceBool$5128  = iRXFinished;
  assign \$auto$rtlil.cc:2746:ReduceBool$5132  = \$auto$builder.cc:338:Biop$5130 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5140  = \$auto$builder.cc:338:Biop$5138 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5144  = \$auto$builder.cc:338:Biop$5142 ;
  assign \$auto$builder.cc:338:Biop$5157  = iMCR_AFE;
  assign \$auto$builder.cc:338:Biop$5159  = iRXFIFOTrigger;
  assign \$auto$rtlil.cc:2746:ReduceBool$5165  = \$auto$builder.cc:338:Biop$5163 ;
  assign \$auto$builder.cc:338:Biop$5167  = iMCR_RTS;
  assign \$auto$builder.cc:338:Biop$5171  = iMCR_AFE;
  assign \$auto$builder.cc:338:Biop$5173  = iRXFIFOEmpty;
  assign \$auto$rtlil.cc:2746:ReduceBool$5181  = \$auto$builder.cc:338:Biop$5179 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5190  = \$auto$builder.cc:338:Biop$5188 ;
  assign \$auto$builder.cc:338:Biop$5193  = iMCR_LOOP;
  assign \$auto$rtlil.cc:2746:ReduceBool$5199  = \$auto$builder.cc:338:Biop$5197 ;
  assign \$auto$builder.cc:338:Biop$5202  = iMCR_LOOP;
  assign \$auto$rtlil.cc:2746:ReduceBool$5208  = \$auto$builder.cc:338:Biop$5206 ;
  assign \$auto$builder.cc:338:Biop$5211  = iMCR_LOOP;
  assign \$auto$rtlil.cc:2746:ReduceBool$5217  = \$auto$builder.cc:338:Biop$5215 ;
  assign \$auto$builder.cc:338:Biop$5220  = iMCR_LOOP;
  assign \$auto$rtlil.cc:2746:ReduceBool$5226  = \$auto$builder.cc:338:Biop$5224 ;
  assign \$auto$builder.cc:338:Biop$5229  = iMCR_LOOP;
  assign \$auto$builder.cc:338:Biop$5231  = iSOUT;
  assign \$auto$rtlil.cc:2746:ReduceBool$5235  = \$auto$builder.cc:338:Biop$5233 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5241  = \$auto$builder.cc:338:Biop$5239 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5246  = \$auto$builder.cc:338:Biop$5244 ;
  assign \$auto$rtlil.cc:2747:LogicNot$4398  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$4411  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$4419  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$4478  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$4524  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$4584  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$4592  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$4600  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$4866  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$4921  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$5105  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$5124  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$5153  = RSTN;
  assign \$auto$rtlil.cc:2747:LogicNot$5186  = RSTN;
endmodule

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:54.8" */
module \cdc_2phase_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req (src_rst_ni, src_clk_i, src_clear_i, src_data_i, src_valid_i, src_ready_o, dst_rst_ni, dst_clk_i, dst_clear_i, dst_clear_pending_o, dst_data_o, dst_valid_o, dst_ready_i, src_clear_pending_o);
  wire \$auto$builder.cc:338:Biop$6049 ;
  wire \$auto$builder.cc:338:Biop$6053 ;
  wire \$auto$builder.cc:338:Biop$6057 ;
  wire \$auto$builder.cc:338:Biop$6061 ;
  wire \$auto$builder.cc:364:Unop$6047 ;
  wire \$auto$builder.cc:364:Unop$6051 ;
  wire \$auto$builder.cc:364:Unop$6055 ;
  wire \$auto$builder.cc:364:Unop$6059 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6064 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6066 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6069 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6071 ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:88.35" */
  wire async_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:89.31" */
  wire [40:0] async_data;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:87.35" */
  wire async_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:69.16" */
  input dst_clear_i;
  wire dst_clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:70.16" */
  output dst_clear_pending_o;
  wire dst_clear_pending_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:68.16" */
  input dst_clk_i;
  wire dst_clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:71.16" */
  output [40:0] dst_data_o;
  wire [40:0] dst_data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:73.16" */
  input dst_ready_i;
  wire dst_ready_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:67.16" */
  input dst_rst_ni;
  wire dst_rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:72.16" */
  output dst_valid_o;
  wire dst_valid_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:81.16" */
  wire s_dst_clear_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:80.16" */
  wire s_dst_clear_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:84.16" */
  wire s_dst_isolate_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:83.16" */
  wire s_dst_isolate_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:82.16" */
  wire s_dst_valid;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:76.16" */
  wire s_src_clear_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:75.16" */
  wire s_src_clear_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:79.16" */
  wire s_src_isolate_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:78.16" */
  wire s_src_isolate_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:77.16" */
  wire s_src_ready;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:61.16" */
  input src_clear_i;
  wire src_clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:62.16" */
  output src_clear_pending_o;
  wire src_clear_pending_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:60.16" */
  input src_clk_i;
  wire src_clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:63.16" */
  input [40:0] src_data_i;
  wire [40:0] src_data_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:65.16" */
  output src_ready_o;
  wire src_ready_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:59.16" */
  input src_rst_ni;
  wire src_rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:64.16" */
  input src_valid_i;
  wire src_valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6063  (
    .A(src_rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6064 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6068  (
    .A(dst_rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6069 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6048  (
    .A(src_valid_i),
    .B(\$auto$builder.cc:364:Unop$6047 ),
    .Y(\$auto$builder.cc:338:Biop$6049 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6052  (
    .A(s_src_ready),
    .B(\$auto$builder.cc:364:Unop$6051 ),
    .Y(\$auto$builder.cc:338:Biop$6053 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6056  (
    .A(dst_ready_i),
    .B(\$auto$builder.cc:364:Unop$6055 ),
    .Y(\$auto$builder.cc:338:Biop$6057 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6060  (
    .A(s_dst_valid),
    .B(\$auto$builder.cc:364:Unop$6059 ),
    .Y(\$auto$builder.cc:338:Biop$6061 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6046  (
    .A(s_src_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$6047 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6050  (
    .A(s_src_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$6051 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6054  (
    .A(s_dst_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$6055 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6058  (
    .A(s_dst_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$6059 )
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_clear_ack_q  (
    .AD(1'h0),
    .ALOAD(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_clear_req),
    .Q(s_dst_clear_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_isolate_ack_q  (
    .AD(1'h0),
    .ALOAD(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_isolate_req),
    .Q(s_dst_isolate_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_clear_ack_q  (
    .AD(1'h0),
    .ALOAD(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_clear_req),
    .Q(s_src_clear_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_isolate_ack_q  (
    .AD(1'h0),
    .ALOAD(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_isolate_req),
    .Q(s_src_isolate_ack_q)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:143.5" */
  \cdc_reset_ctrlr$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr  i_cdc_reset_ctrlr (
    .a_clear_ack_i(s_src_clear_ack_q),
    .a_clear_i(src_clear_i),
    .a_clear_o(s_src_clear_req),
    .a_clk_i(src_clk_i),
    .a_isolate_ack_i(s_src_isolate_ack_q),
    .a_isolate_o(s_src_isolate_req),
    .a_rst_ni(src_rst_ni),
    .b_clear_ack_i(s_dst_clear_ack_q),
    .b_clear_i(dst_clear_i),
    .b_clear_o(s_dst_clear_req),
    .b_clk_i(dst_clk_i),
    .b_isolate_ack_i(s_dst_isolate_ack_q),
    .b_isolate_o(s_dst_isolate_req),
    .b_rst_ni(dst_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:125.5" */
  \cdc_2phase_dst_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst  i_dst (
    .async_ack_o(async_ack),
    .async_data_i(async_data),
    .async_req_i(async_req),
    .clear_i(s_dst_clear_req),
    .clk_i(dst_clk_i),
    .data_o(dst_data_o),
    .ready_i(\$auto$builder.cc:338:Biop$6057 ),
    .rst_ni(dst_rst_ni),
    .valid_o(s_dst_valid)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:106.5" */
  \cdc_2phase_src_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_src  i_src (
    .async_ack_i(async_ack),
    .async_data_o(async_data),
    .async_req_o(async_req),
    .clear_i(s_src_clear_req),
    .clk_i(src_clk_i),
    .data_i(src_data_i),
    .ready_o(s_src_ready),
    .rst_ni(src_rst_ni),
    .valid_i(\$auto$builder.cc:338:Biop$6049 )
  );
  assign src_ready_o = \$auto$builder.cc:338:Biop$6053 ;
  assign dst_valid_o = \$auto$builder.cc:338:Biop$6061 ;
  assign src_clear_pending_o = s_src_isolate_req;
  assign dst_clear_pending_o = s_dst_isolate_req;
  assign \$auto$rtlil.cc:2747:LogicNot$6066  = src_rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$6071  = dst_rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:54.8" */
module \cdc_2phase_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp (src_rst_ni, src_clk_i, src_clear_i, src_data_i, src_valid_i, src_ready_o, dst_rst_ni, dst_clk_i, dst_clear_i, dst_clear_pending_o, dst_data_o, dst_valid_o, dst_ready_i, src_clear_pending_o);
  wire \$auto$builder.cc:338:Biop$6075 ;
  wire \$auto$builder.cc:338:Biop$6079 ;
  wire \$auto$builder.cc:338:Biop$6083 ;
  wire \$auto$builder.cc:338:Biop$6087 ;
  wire \$auto$builder.cc:364:Unop$6073 ;
  wire \$auto$builder.cc:364:Unop$6077 ;
  wire \$auto$builder.cc:364:Unop$6081 ;
  wire \$auto$builder.cc:364:Unop$6085 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6090 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6092 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6095 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6097 ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:88.35" */
  wire async_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:89.31" */
  wire [33:0] async_data;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:87.35" */
  wire async_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:69.16" */
  input dst_clear_i;
  wire dst_clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:70.16" */
  output dst_clear_pending_o;
  wire dst_clear_pending_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:68.16" */
  input dst_clk_i;
  wire dst_clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:71.16" */
  output [33:0] dst_data_o;
  wire [33:0] dst_data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:73.16" */
  input dst_ready_i;
  wire dst_ready_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:67.16" */
  input dst_rst_ni;
  wire dst_rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:72.16" */
  output dst_valid_o;
  wire dst_valid_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:81.16" */
  wire s_dst_clear_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:80.16" */
  wire s_dst_clear_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:84.16" */
  wire s_dst_isolate_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:83.16" */
  wire s_dst_isolate_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:82.16" */
  wire s_dst_valid;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:76.16" */
  wire s_src_clear_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:75.16" */
  wire s_src_clear_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:79.16" */
  wire s_src_isolate_ack_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:78.16" */
  wire s_src_isolate_req;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:77.16" */
  wire s_src_ready;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:61.16" */
  input src_clear_i;
  wire src_clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:62.16" */
  output src_clear_pending_o;
  wire src_clear_pending_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:60.16" */
  input src_clk_i;
  wire src_clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:63.16" */
  input [33:0] src_data_i;
  wire [33:0] src_data_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:65.16" */
  output src_ready_o;
  wire src_ready_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:59.16" */
  input src_rst_ni;
  wire src_rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:64.16" */
  input src_valid_i;
  wire src_valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6089  (
    .A(src_rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6090 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6094  (
    .A(dst_rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6095 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6074  (
    .A(src_valid_i),
    .B(\$auto$builder.cc:364:Unop$6073 ),
    .Y(\$auto$builder.cc:338:Biop$6075 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6078  (
    .A(s_src_ready),
    .B(\$auto$builder.cc:364:Unop$6077 ),
    .Y(\$auto$builder.cc:338:Biop$6079 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6082  (
    .A(dst_ready_i),
    .B(\$auto$builder.cc:364:Unop$6081 ),
    .Y(\$auto$builder.cc:338:Biop$6083 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6086  (
    .A(s_dst_valid),
    .B(\$auto$builder.cc:364:Unop$6085 ),
    .Y(\$auto$builder.cc:338:Biop$6087 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6072  (
    .A(s_src_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$6073 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6076  (
    .A(s_src_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$6077 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6080  (
    .A(s_dst_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$6081 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6084  (
    .A(s_dst_isolate_req),
    .Y(\$auto$builder.cc:364:Unop$6085 )
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_clear_ack_q  (
    .AD(1'h0),
    .ALOAD(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_clear_req),
    .Q(s_dst_clear_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_isolate_ack_q  (
    .AD(1'h0),
    .ALOAD(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_isolate_req),
    .Q(s_dst_isolate_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_clear_ack_q  (
    .AD(1'h0),
    .ALOAD(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_clear_req),
    .Q(s_src_clear_ack_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_isolate_ack_q  (
    .AD(1'h0),
    .ALOAD(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_isolate_req),
    .Q(s_src_isolate_ack_q)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:143.5" */
  \cdc_reset_ctrlr$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr  i_cdc_reset_ctrlr (
    .a_clear_ack_i(s_src_clear_ack_q),
    .a_clear_i(src_clear_i),
    .a_clear_o(s_src_clear_req),
    .a_clk_i(src_clk_i),
    .a_isolate_ack_i(s_src_isolate_ack_q),
    .a_isolate_o(s_src_isolate_req),
    .a_rst_ni(src_rst_ni),
    .b_clear_ack_i(s_dst_clear_ack_q),
    .b_clear_i(dst_clear_i),
    .b_clear_o(s_dst_clear_req),
    .b_clk_i(dst_clk_i),
    .b_isolate_ack_i(s_dst_isolate_ack_q),
    .b_isolate_o(s_dst_isolate_req),
    .b_rst_ni(dst_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:125.5" */
  \cdc_2phase_dst_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst  i_dst (
    .async_ack_o(async_ack),
    .async_data_i(async_data),
    .async_req_i(async_req),
    .clear_i(s_dst_clear_req),
    .clk_i(dst_clk_i),
    .data_o(dst_data_o),
    .ready_i(\$auto$builder.cc:338:Biop$6083 ),
    .rst_ni(dst_rst_ni),
    .valid_o(s_dst_valid)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:106.5" */
  \cdc_2phase_src_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src  i_src (
    .async_ack_i(async_ack),
    .async_data_o(async_data),
    .async_req_o(async_req),
    .clear_i(s_src_clear_req),
    .clk_i(src_clk_i),
    .data_i(src_data_i),
    .ready_o(s_src_ready),
    .rst_ni(src_rst_ni),
    .valid_i(\$auto$builder.cc:338:Biop$6075 )
  );
  assign src_ready_o = \$auto$builder.cc:338:Biop$6079 ;
  assign dst_valid_o = \$auto$builder.cc:338:Biop$6087 ;
  assign src_clear_pending_o = s_src_isolate_req;
  assign dst_clear_pending_o = s_dst_isolate_req;
  assign \$auto$rtlil.cc:2747:LogicNot$6092  = src_rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$6097  = dst_rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:269.8" */
module \cdc_2phase_dst_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst (clk_i, rst_ni, data_o, clear_i, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$builder.cc:338:Biop$9328 ;
  wire \$auto$builder.cc:338:Biop$9337 ;
  wire \$auto$builder.cc:338:Biop$9341 ;
  wire \$auto$builder.cc:338:Biop$9352 ;
  wire \$auto$builder.cc:364:Unop$9332 ;
  wire \$auto$builder.cc:364:Unop$9339 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9326 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9330 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9343 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9348 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9350 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:306.14-308.8" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$9333 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$9334 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:315.5-317.8" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\data_dst_d$9344 ;
  wire [40:0] \$procmux$12696_Y ;
  wire \$procmux$12697_CMP ;
  wire \$procmux$12698_Y ;
  wire \$procmux$12699_CMP ;
  wire \$procmux$12701_Y ;
  wire \$procmux$12702_CMP ;
  wire \$procmux$12705_Y ;
  wire \$procmux$12706_CMP ;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.8" */
  wire ack_dst_d;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.19" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:280.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:281.16" */
  input [40:0] async_data_i;
  wire [40:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:279.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:275.16" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:274.16" */
  input clk_i;
  wire clk_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:288.5" */
  wire [40:0] data_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:288.17" */
  wire [40:0] data_dst_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:276.16" */
  output [40:0] data_o;
  wire [40:0] data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:278.16" */
  input ready_i;
  wire ready_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.30" */
  wire req_synced;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.42" */
  wire req_synced_q1;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:273.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:277.16" */
  output valid_o;
  wire valid_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$9347  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$9348 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9327  (
    .A(valid_o),
    .B(ready_i),
    .Y(\$auto$builder.cc:338:Biop$9328 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9336  (
    .A(req_synced),
    .B(req_synced_q1),
    .Y(\$auto$builder.cc:338:Biop$9337 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9340  (
    .A(\$auto$builder.cc:338:Biop$9337 ),
    .B(\$auto$builder.cc:364:Unop$9339 ),
    .Y(\$auto$builder.cc:338:Biop$9341 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9351  (
    .A(ack_dst_q),
    .B(req_synced_q1),
    .Y(\$auto$builder.cc:338:Biop$9352 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9331  (
    .A(ack_dst_q),
    .Y(\$auto$builder.cc:364:Unop$9332 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9338  (
    .A(valid_o),
    .Y(\$auto$builder.cc:364:Unop$9339 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$data_dst_q.addr  (
    .CLK(clk_i),
    .D(data_dst_d[40:34]),
    .Q(data_dst_q[40:34])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_dst_q.data  (
    .CLK(clk_i),
    .D(data_dst_d[31:0]),
    .Q(data_dst_q[31:0])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_dst_q.op  (
    .CLK(clk_i),
    .D(data_dst_d[33:32]),
    .Q(data_dst_q[33:32])
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_synced_q1  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_synced),
    .Q(req_synced_q1)
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:316.7-316.33|../rtl/common_cells/cdc_2phase_clearable.sv:315.5-317.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$12696  (
    .A(data_dst_q),
    .B(async_data_i),
    .S(\$procmux$12697_CMP ),
    .Y(\$procmux$12696_Y )
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:307.7-307.30|../rtl/common_cells/cdc_2phase_clearable.sv:306.14-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12698  (
    .A(ack_dst_q),
    .B(\$auto$builder.cc:364:Unop$9332 ),
    .S(\$procmux$12699_CMP ),
    .Y(\$procmux$12698_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:305.7-305.24|../rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12701  (
    .A(\$procmux$12698_Y ),
    .B(1'hx),
    .S(\$procmux$12702_CMP ),
    .Y(\$procmux$12701_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:305.7-305.24|../rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12705  (
    .A(\$auto$slang_frontend.cc:694:finish$\ack_dst_d$9333 ),
    .B(1'h0),
    .S(\$procmux$12706_CMP ),
    .Y(\$procmux$12705_Y )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:294.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign ack_dst_d = \$auto$slang_frontend.cc:694:finish$\ack_dst_d$9334 ;
  assign data_dst_d = \$auto$slang_frontend.cc:694:finish$\data_dst_d$9344 ;
  assign valid_o = \$auto$builder.cc:338:Biop$9352 ;
  assign data_o = data_dst_q;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$12697_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9343 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_dst_d$9344  = \$procmux$12696_Y ;
  assign \$procmux$12699_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9330 ;
  assign \$procmux$12702_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9326 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$9333  = \$procmux$12701_Y ;
  assign \$procmux$12706_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9326 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$9334  = \$procmux$12705_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9326  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$9330  = \$auto$builder.cc:338:Biop$9328 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9343  = \$auto$builder.cc:338:Biop$9341 ;
  assign \$auto$rtlil.cc:2747:LogicNot$9350  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:269.8" */
module \cdc_2phase_dst_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst (clk_i, rst_ni, data_o, clear_i, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$builder.cc:338:Biop$9378 ;
  wire \$auto$builder.cc:338:Biop$9387 ;
  wire \$auto$builder.cc:338:Biop$9391 ;
  wire \$auto$builder.cc:338:Biop$9402 ;
  wire \$auto$builder.cc:364:Unop$9382 ;
  wire \$auto$builder.cc:364:Unop$9389 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9376 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9380 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9393 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9398 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9400 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:306.14-308.8" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$9383 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$9384 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:315.5-317.8" */
  wire [33:0] \$auto$slang_frontend.cc:694:finish$\data_dst_d$9394 ;
  wire [33:0] \$procmux$12667_Y ;
  wire \$procmux$12668_CMP ;
  wire \$procmux$12669_Y ;
  wire \$procmux$12670_CMP ;
  wire \$procmux$12672_Y ;
  wire \$procmux$12673_CMP ;
  wire \$procmux$12676_Y ;
  wire \$procmux$12677_CMP ;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.8" */
  wire ack_dst_d;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.19" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:280.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:281.16" */
  input [33:0] async_data_i;
  wire [33:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:279.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:275.16" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:274.16" */
  input clk_i;
  wire clk_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:288.5" */
  wire [33:0] data_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:288.17" */
  wire [33:0] data_dst_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:276.16" */
  output [33:0] data_o;
  wire [33:0] data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:278.16" */
  input ready_i;
  wire ready_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.30" */
  wire req_synced;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:286.42" */
  wire req_synced_q1;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:273.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:277.16" */
  output valid_o;
  wire valid_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$9397  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$9398 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9377  (
    .A(valid_o),
    .B(ready_i),
    .Y(\$auto$builder.cc:338:Biop$9378 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9386  (
    .A(req_synced),
    .B(req_synced_q1),
    .Y(\$auto$builder.cc:338:Biop$9387 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9390  (
    .A(\$auto$builder.cc:338:Biop$9387 ),
    .B(\$auto$builder.cc:364:Unop$9389 ),
    .Y(\$auto$builder.cc:338:Biop$9391 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9401  (
    .A(ack_dst_q),
    .B(req_synced_q1),
    .Y(\$auto$builder.cc:338:Biop$9402 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9381  (
    .A(ack_dst_q),
    .Y(\$auto$builder.cc:364:Unop$9382 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9388  (
    .A(valid_o),
    .Y(\$auto$builder.cc:364:Unop$9389 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_dst_q.data  (
    .CLK(clk_i),
    .D(data_dst_d[33:2]),
    .Q(data_dst_q[33:2])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_dst_q.resp  (
    .CLK(clk_i),
    .D(data_dst_d[1:0]),
    .Q(data_dst_q[1:0])
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_synced_q1  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_synced),
    .Q(req_synced_q1)
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:316.7-316.33|../rtl/common_cells/cdc_2phase_clearable.sv:315.5-317.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$12667  (
    .A(data_dst_q),
    .B(async_data_i),
    .S(\$procmux$12668_CMP ),
    .Y(\$procmux$12667_Y )
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:307.7-307.30|../rtl/common_cells/cdc_2phase_clearable.sv:306.14-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12669  (
    .A(ack_dst_q),
    .B(\$auto$builder.cc:364:Unop$9382 ),
    .S(\$procmux$12670_CMP ),
    .Y(\$procmux$12669_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:305.7-305.24|../rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12672  (
    .A(\$procmux$12669_Y ),
    .B(1'hx),
    .S(\$procmux$12673_CMP ),
    .Y(\$procmux$12672_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:305.7-305.24|../rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12676  (
    .A(\$auto$slang_frontend.cc:694:finish$\ack_dst_d$9383 ),
    .B(1'h0),
    .S(\$procmux$12677_CMP ),
    .Y(\$procmux$12676_Y )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:294.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign ack_dst_d = \$auto$slang_frontend.cc:694:finish$\ack_dst_d$9384 ;
  assign data_dst_d = \$auto$slang_frontend.cc:694:finish$\data_dst_d$9394 ;
  assign valid_o = \$auto$builder.cc:338:Biop$9402 ;
  assign data_o = data_dst_q;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$12668_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9393 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_dst_d$9394  = \$procmux$12667_Y ;
  assign \$procmux$12670_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9380 ;
  assign \$procmux$12673_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9376 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$9383  = \$procmux$12672_Y ;
  assign \$procmux$12677_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9376 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$9384  = \$procmux$12676_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9376  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$9380  = \$auto$builder.cc:338:Biop$9378 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9393  = \$auto$builder.cc:338:Biop$9391 ;
  assign \$auto$rtlil.cc:2747:LogicNot$9400  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:199.8" */
module \cdc_2phase_src_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_src (clk_i, rst_ni, data_i, clear_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$builder.cc:338:Biop$9307 ;
  wire \$auto$builder.cc:338:Biop$9323 ;
  wire \$auto$builder.cc:364:Unop$9311 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9305 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9309 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9319 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9321 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$9313 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$9315 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$9312 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$9314 ;
  wire [40:0] \$procmux$12707_Y ;
  wire \$procmux$12708_CMP ;
  wire [40:0] \$procmux$12710_Y ;
  wire \$procmux$12711_CMP ;
  wire \$procmux$12712_Y ;
  wire \$procmux$12713_CMP ;
  wire \$procmux$12715_Y ;
  wire \$procmux$12716_CMP ;
  wire \$procmux$12719_Y ;
  wire \$procmux$12720_CMP ;
  wire [40:0] \$procmux$12723_Y ;
  wire \$procmux$12724_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.32" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:210.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:211.16" */
  output [40:0] async_data_o;
  wire [40:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:209.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:205.16" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:204.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:206.16" */
  input [40:0] data_i;
  wire [40:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:217.5" */
  wire [40:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:217.17" */
  wire [40:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:208.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:203.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:207.16" */
  input valid_i;
  wire valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$9318  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$9319 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9306  (
    .A(valid_i),
    .B(ready_o),
    .Y(\$auto$builder.cc:338:Biop$9307 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9322  (
    .A(req_src_q),
    .B(ack_synced),
    .Y(\$auto$builder.cc:338:Biop$9323 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9310  (
    .A(req_src_q),
    .Y(\$auto$builder.cc:364:Unop$9311 )
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$data_src_q.addr  (
    .CLK(clk_i),
    .D(data_src_d[40:34]),
    .Q(data_src_q[40:34])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_src_q.data  (
    .CLK(clk_i),
    .D(data_src_d[31:0]),
    .Q(data_src_q[31:0])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q.op  (
    .CLK(clk_i),
    .D(data_src_d[33:32]),
    .Q(data_src_q[33:32])
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:245.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.38-240.8|../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$12707  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$12708_CMP ),
    .Y(\$procmux$12707_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$12710  (
    .A(\$procmux$12707_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$12711_CMP ),
    .Y(\$procmux$12710_Y )
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.38-240.8|../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12712  (
    .A(req_src_q),
    .B(\$auto$builder.cc:364:Unop$9311 ),
    .S(\$procmux$12713_CMP ),
    .Y(\$procmux$12712_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12715  (
    .A(\$procmux$12712_Y ),
    .B(1'hx),
    .S(\$procmux$12716_CMP ),
    .Y(\$procmux$12715_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12719  (
    .A(\$auto$slang_frontend.cc:694:finish$\req_src_d$9312 ),
    .B(1'h0),
    .S(\$procmux$12720_CMP ),
    .Y(\$procmux$12719_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$12723  (
    .A(\$auto$slang_frontend.cc:694:finish$\data_src_d$9313 ),
    .B(data_src_q),
    .S(\$procmux$12724_CMP ),
    .Y(\$procmux$12723_Y )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:222.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign req_src_d = \$auto$slang_frontend.cc:694:finish$\req_src_d$9314 ;
  assign data_src_d = \$auto$slang_frontend.cc:694:finish$\data_src_d$9315 ;
  assign ready_o = \$auto$builder.cc:338:Biop$9323 ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$procmux$12708_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9309 ;
  assign \$procmux$12711_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9305 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$9313  = \$procmux$12710_Y ;
  assign \$procmux$12713_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9309 ;
  assign \$procmux$12716_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9305 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$9312  = \$procmux$12715_Y ;
  assign \$procmux$12720_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9305 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$9314  = \$procmux$12719_Y ;
  assign \$procmux$12724_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9305 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$9315  = \$procmux$12723_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9305  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$9309  = \$auto$builder.cc:338:Biop$9307 ;
  assign \$auto$rtlil.cc:2747:LogicNot$9321  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_2phase_clearable.sv:199.8" */
module \cdc_2phase_src_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src (clk_i, rst_ni, data_i, clear_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$builder.cc:338:Biop$9357 ;
  wire \$auto$builder.cc:338:Biop$9373 ;
  wire \$auto$builder.cc:364:Unop$9361 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9355 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9359 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9369 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9371 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  wire [33:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$9363 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  wire [33:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$9365 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$9362 ;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$9364 ;
  wire [33:0] \$procmux$12678_Y ;
  wire \$procmux$12679_CMP ;
  wire [33:0] \$procmux$12681_Y ;
  wire \$procmux$12682_CMP ;
  wire \$procmux$12683_Y ;
  wire \$procmux$12684_CMP ;
  wire \$procmux$12686_Y ;
  wire \$procmux$12687_CMP ;
  wire \$procmux$12690_Y ;
  wire \$procmux$12691_CMP ;
  wire [33:0] \$procmux$12694_Y ;
  wire \$procmux$12695_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.32" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:210.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:211.16" */
  output [33:0] async_data_o;
  wire [33:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:209.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:205.16" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:204.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:206.16" */
  input [33:0] data_i;
  wire [33:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:217.5" */
  wire [33:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:217.17" */
  wire [33:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:208.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:215.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:203.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:207.16" */
  input valid_i;
  wire valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$9368  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$9369 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9356  (
    .A(valid_i),
    .B(ready_o),
    .Y(\$auto$builder.cc:338:Biop$9357 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9372  (
    .A(req_src_q),
    .B(ack_synced),
    .Y(\$auto$builder.cc:338:Biop$9373 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9360  (
    .A(req_src_q),
    .Y(\$auto$builder.cc:364:Unop$9361 )
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_src_q.data  (
    .CLK(clk_i),
    .D(data_src_d[33:2]),
    .Q(data_src_q[33:2])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q.resp  (
    .CLK(clk_i),
    .D(data_src_d[1:0]),
    .Q(data_src_q[1:0])
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:245.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.38-240.8|../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$12678  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$12679_CMP ),
    .Y(\$procmux$12678_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$12681  (
    .A(\$procmux$12678_Y ),
    .B(34'hxxxxxxxxx),
    .S(\$procmux$12682_CMP ),
    .Y(\$procmux$12681_Y )
  );
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:237.38-240.8|../rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12683  (
    .A(req_src_q),
    .B(\$auto$builder.cc:364:Unop$9361 ),
    .S(\$procmux$12684_CMP ),
    .Y(\$procmux$12683_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12686  (
    .A(\$procmux$12683_Y ),
    .B(1'hx),
    .S(\$procmux$12687_CMP ),
    .Y(\$procmux$12686_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12690  (
    .A(\$auto$slang_frontend.cc:694:finish$\req_src_d$9362 ),
    .B(1'h0),
    .S(\$procmux$12691_CMP ),
    .Y(\$procmux$12690_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|../rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$12694  (
    .A(\$auto$slang_frontend.cc:694:finish$\data_src_d$9363 ),
    .B(data_src_q),
    .S(\$procmux$12695_CMP ),
    .Y(\$procmux$12694_Y )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_2phase_clearable.sv:222.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign req_src_d = \$auto$slang_frontend.cc:694:finish$\req_src_d$9364 ;
  assign data_src_d = \$auto$slang_frontend.cc:694:finish$\data_src_d$9365 ;
  assign ready_o = \$auto$builder.cc:338:Biop$9373 ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$procmux$12679_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9359 ;
  assign \$procmux$12682_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9355 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$9363  = \$procmux$12681_Y ;
  assign \$procmux$12684_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9359 ;
  assign \$procmux$12687_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9355 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$9362  = \$procmux$12686_Y ;
  assign \$procmux$12691_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9355 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$9364  = \$procmux$12690_Y ;
  assign \$procmux$12695_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9355 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$9365  = \$procmux$12694_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9355  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$9359  = \$auto$builder.cc:338:Biop$9357 ;
  assign \$auto$rtlil.cc:2747:LogicNot$9371  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$builder.cc:338:Biop$10493 ;
  wire \$auto$builder.cc:338:Biop$10497 ;
  wire \$auto$builder.cc:338:Biop$10504 ;
  wire \$auto$builder.cc:338:Biop$10510 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10495 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10499 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10506 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10512 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10520 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10522 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10525 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10527 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10508 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10514 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10516 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire \$auto$slang_frontend.cc:694:finish$\data_valid$10502 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$auto$slang_frontend.cc:694:finish$\data_valid$10517 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10500 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10501 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10507 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10513 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10515 ;
  wire \$procmux$11250_Y ;
  wire \$procmux$11251_CMP ;
  wire \$procmux$11252_Y ;
  wire \$procmux$11253_CMP ;
  wire [1:0] \$procmux$11255_Y ;
  wire \$procmux$11256_CMP ;
  wire [1:0] \$procmux$11257_Y ;
  wire \$procmux$11258_CMP ;
  wire \$procmux$11261_Y ;
  wire \$procmux$11262_CMP ;
  wire \$procmux$11263_Y ;
  wire \$procmux$11264_CMP ;
  wire [1:0] \$procmux$11267_Y ;
  wire \$procmux$11268_CMP ;
  wire [1:0] \$procmux$11269_Y ;
  wire \$procmux$11270_CMP ;
  wire \$procmux$11275_Y ;
  wire \$procmux$11276_CMP ;
  wire \$procmux$11278_CMP ;
  wire [1:0] \$procmux$11281_Y ;
  wire \$procmux$11282_CMP ;
  wire \$procmux$11284_CMP ;
  wire \$procmux$11286_CMP ;
  wire [1:0] \$procmux$11291_Y ;
  wire \$procmux$11292_CMP ;
  wire [1:0] \$procmux$11293_Y ;
  wire \$procmux$11294_CMP ;
  wire [1:0] \$procmux$11295_Y ;
  wire \$procmux$11296_CMP ;
  wire \$procmux$11301_Y ;
  wire \$procmux$11302_CMP ;
  wire \$procmux$11303_Y ;
  wire \$procmux$11304_CMP ;
  wire [1:0] \$procmux$11309_Y ;
  wire \$procmux$11310_CMP ;
  wire [1:0] \$procmux$11311_Y ;
  wire \$procmux$11312_CMP ;
  wire \$procmux$11315_Y ;
  wire \$procmux$11316_CMP ;
  wire \$procmux$11318_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "../rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "../rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10519  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10520 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10524  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10525 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10509  (
    .A(req_synced),
    .Y(\$auto$builder.cc:338:Biop$10510 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:293.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:284.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.33-275.12|../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11250  (
    .A(1'h0),
    .B(1'h1),
    .S(req_synced),
    .Y(\$procmux$11250_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11252  (
    .A(1'hx),
    .B(\$procmux$11250_Y ),
    .S(\$procmux$11253_CMP ),
    .Y(\$procmux$11252_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11253_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11253_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.33-275.12|../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11255  (
    .A(2'h0),
    .B(state_q),
    .S(req_synced),
    .Y(\$procmux$11255_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11257  (
    .A(2'hx),
    .B(\$procmux$11255_Y ),
    .S(\$procmux$11258_CMP ),
    .Y(\$procmux$11257_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11258_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11258_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.35-267.12|../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11261  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11262_CMP ),
    .Y(\$procmux$11261_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11263  (
    .A(1'hx),
    .B(\$procmux$11261_Y ),
    .S(\$procmux$11264_CMP ),
    .Y(\$procmux$11263_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11264_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11264_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.35-267.12|../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11267  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$11268_CMP ),
    .Y(\$procmux$11267_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11269  (
    .A(2'hx),
    .B(\$procmux$11267_Y ),
    .S(\$procmux$11270_CMP ),
    .Y(\$procmux$11269_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11270_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11270_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11275  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\data_valid$10502 , 1'h1 }),
    .S({ \$procmux$11278_CMP , \$procmux$11276_CMP  }),
    .Y(\$procmux$11275_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11276_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11276_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11278_CMP0  (
    .A(state_q),
    .Y(\$procmux$11278_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$11281  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$10501 , \$auto$slang_frontend.cc:694:finish$\state_d$10507 , \$auto$slang_frontend.cc:694:finish$\state_d$10513  }),
    .S({ \$procmux$11286_CMP , \$procmux$11284_CMP , \$procmux$11282_CMP  }),
    .Y(\$procmux$11281_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11282_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11282_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11284_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11284_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11286_CMP0  (
    .A(state_q),
    .Y(\$procmux$11286_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:255.13-255.41|../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11291  (
    .A(2'h1),
    .B(2'h2),
    .S(\$procmux$11292_CMP ),
    .Y(\$procmux$11291_Y )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11293  (
    .A(2'hx),
    .B(\$procmux$11291_Y ),
    .S(\$procmux$11294_CMP ),
    .Y(\$procmux$11293_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11295  (
    .A(2'hx),
    .B(\$procmux$11293_Y ),
    .S(\$procmux$11296_CMP ),
    .Y(\$procmux$11295_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11296_CMP0  (
    .A(state_q),
    .Y(\$procmux$11296_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11301  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11302_CMP ),
    .Y(\$procmux$11301_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11303  (
    .A(1'hx),
    .B(\$procmux$11301_Y ),
    .S(\$procmux$11304_CMP ),
    .Y(\$procmux$11303_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11304_CMP0  (
    .A(state_q),
    .Y(\$procmux$11304_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11309  (
    .A(state_q),
    .B(\$auto$slang_frontend.cc:694:finish$\state_d$10500 ),
    .S(\$procmux$11310_CMP ),
    .Y(\$procmux$11309_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11311  (
    .A(2'hx),
    .B(\$procmux$11309_Y ),
    .S(\$procmux$11312_CMP ),
    .Y(\$procmux$11311_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11312_CMP0  (
    .A(state_q),
    .Y(\$procmux$11312_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11315  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10508 , \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10514  }),
    .S({ \$procmux$11318_CMP , \$procmux$11316_CMP  }),
    .Y(\$procmux$11315_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11316_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11316_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11318_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11318_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign state_d = \$auto$slang_frontend.cc:694:finish$\state_d$10515 ;
  assign ack_dst_d = \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10516 ;
  assign data_valid = \$auto$slang_frontend.cc:694:finish$\data_valid$10517 ;
  assign valid_o = data_valid;
  assign output_ready = ready_i;
  assign data_o = async_data_i;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$11251_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10512 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10514  = \$procmux$11252_Y ;
  assign \$procmux$11256_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10512 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10513  = \$procmux$11257_Y ;
  assign \$procmux$11262_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10506 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10508  = \$procmux$11263_Y ;
  assign \$procmux$11268_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10506 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10507  = \$procmux$11269_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\data_valid$10517  = \$procmux$11275_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10515  = \$procmux$11281_Y ;
  assign \$procmux$11292_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10499 ;
  assign \$procmux$11294_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10495 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10500  = \$procmux$11295_Y ;
  assign \$procmux$11302_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10495 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_valid$10502  = \$procmux$11303_Y ;
  assign \$procmux$11310_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10495 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10501  = \$procmux$11311_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10516  = \$procmux$11315_Y ;
  assign \$auto$builder.cc:338:Biop$10493  = req_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10495  = req_synced;
  assign \$auto$builder.cc:338:Biop$10497  = output_ready;
  assign \$auto$rtlil.cc:2746:ReduceBool$10499  = ready_i;
  assign \$auto$builder.cc:338:Biop$10504  = output_ready;
  assign \$auto$rtlil.cc:2746:ReduceBool$10506  = ready_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10512  = \$auto$builder.cc:338:Biop$10510 ;
  assign \$auto$rtlil.cc:2747:LogicNot$10522  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10527  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$builder.cc:338:Biop$10566 ;
  wire \$auto$builder.cc:338:Biop$10570 ;
  wire \$auto$builder.cc:338:Biop$10577 ;
  wire \$auto$builder.cc:338:Biop$10583 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10568 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10572 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10579 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10585 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10593 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10595 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10598 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10600 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10581 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10587 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10589 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire \$auto$slang_frontend.cc:694:finish$\data_valid$10575 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$auto$slang_frontend.cc:694:finish$\data_valid$10590 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10573 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10574 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10580 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10586 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10588 ;
  wire \$procmux$11096_Y ;
  wire \$procmux$11097_CMP ;
  wire \$procmux$11098_Y ;
  wire \$procmux$11099_CMP ;
  wire [1:0] \$procmux$11101_Y ;
  wire \$procmux$11102_CMP ;
  wire [1:0] \$procmux$11103_Y ;
  wire \$procmux$11104_CMP ;
  wire \$procmux$11107_Y ;
  wire \$procmux$11108_CMP ;
  wire \$procmux$11109_Y ;
  wire \$procmux$11110_CMP ;
  wire [1:0] \$procmux$11113_Y ;
  wire \$procmux$11114_CMP ;
  wire [1:0] \$procmux$11115_Y ;
  wire \$procmux$11116_CMP ;
  wire \$procmux$11121_Y ;
  wire \$procmux$11122_CMP ;
  wire \$procmux$11124_CMP ;
  wire [1:0] \$procmux$11127_Y ;
  wire \$procmux$11128_CMP ;
  wire \$procmux$11130_CMP ;
  wire \$procmux$11132_CMP ;
  wire [1:0] \$procmux$11137_Y ;
  wire \$procmux$11138_CMP ;
  wire [1:0] \$procmux$11139_Y ;
  wire \$procmux$11140_CMP ;
  wire [1:0] \$procmux$11141_Y ;
  wire \$procmux$11142_CMP ;
  wire \$procmux$11147_Y ;
  wire \$procmux$11148_CMP ;
  wire \$procmux$11149_Y ;
  wire \$procmux$11150_CMP ;
  wire [1:0] \$procmux$11155_Y ;
  wire \$procmux$11156_CMP ;
  wire [1:0] \$procmux$11157_Y ;
  wire \$procmux$11158_CMP ;
  wire \$procmux$11161_Y ;
  wire \$procmux$11162_CMP ;
  wire \$procmux$11164_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "../rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "../rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10592  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10593 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10597  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10598 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10582  (
    .A(req_synced),
    .Y(\$auto$builder.cc:338:Biop$10583 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:293.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:284.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.33-275.12|../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11096  (
    .A(1'h0),
    .B(1'h1),
    .S(req_synced),
    .Y(\$procmux$11096_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11098  (
    .A(1'hx),
    .B(\$procmux$11096_Y ),
    .S(\$procmux$11099_CMP ),
    .Y(\$procmux$11098_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11099_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11099_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.33-275.12|../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11101  (
    .A(2'h0),
    .B(state_q),
    .S(req_synced),
    .Y(\$procmux$11101_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11103  (
    .A(2'hx),
    .B(\$procmux$11101_Y ),
    .S(\$procmux$11104_CMP ),
    .Y(\$procmux$11103_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11104_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11104_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.35-267.12|../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11107  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11108_CMP ),
    .Y(\$procmux$11107_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11109  (
    .A(1'hx),
    .B(\$procmux$11107_Y ),
    .S(\$procmux$11110_CMP ),
    .Y(\$procmux$11109_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11110_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11110_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.35-267.12|../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11113  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$11114_CMP ),
    .Y(\$procmux$11113_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11115  (
    .A(2'hx),
    .B(\$procmux$11113_Y ),
    .S(\$procmux$11116_CMP ),
    .Y(\$procmux$11115_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11116_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11116_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11121  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\data_valid$10575 , 1'h1 }),
    .S({ \$procmux$11124_CMP , \$procmux$11122_CMP  }),
    .Y(\$procmux$11121_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11122_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11122_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11124_CMP0  (
    .A(state_q),
    .Y(\$procmux$11124_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$11127  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$10574 , \$auto$slang_frontend.cc:694:finish$\state_d$10580 , \$auto$slang_frontend.cc:694:finish$\state_d$10586  }),
    .S({ \$procmux$11132_CMP , \$procmux$11130_CMP , \$procmux$11128_CMP  }),
    .Y(\$procmux$11127_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11128_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11128_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11130_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11130_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11132_CMP0  (
    .A(state_q),
    .Y(\$procmux$11132_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:255.13-255.41|../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11137  (
    .A(2'h1),
    .B(2'h2),
    .S(\$procmux$11138_CMP ),
    .Y(\$procmux$11137_Y )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11139  (
    .A(2'hx),
    .B(\$procmux$11137_Y ),
    .S(\$procmux$11140_CMP ),
    .Y(\$procmux$11139_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11141  (
    .A(2'hx),
    .B(\$procmux$11139_Y ),
    .S(\$procmux$11142_CMP ),
    .Y(\$procmux$11141_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11142_CMP0  (
    .A(state_q),
    .Y(\$procmux$11142_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11147  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11148_CMP ),
    .Y(\$procmux$11147_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11149  (
    .A(1'hx),
    .B(\$procmux$11147_Y ),
    .S(\$procmux$11150_CMP ),
    .Y(\$procmux$11149_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11150_CMP0  (
    .A(state_q),
    .Y(\$procmux$11150_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11155  (
    .A(state_q),
    .B(\$auto$slang_frontend.cc:694:finish$\state_d$10573 ),
    .S(\$procmux$11156_CMP ),
    .Y(\$procmux$11155_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11157  (
    .A(2'hx),
    .B(\$procmux$11155_Y ),
    .S(\$procmux$11158_CMP ),
    .Y(\$procmux$11157_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11158_CMP0  (
    .A(state_q),
    .Y(\$procmux$11158_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11161  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10581 , \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10587  }),
    .S({ \$procmux$11164_CMP , \$procmux$11162_CMP  }),
    .Y(\$procmux$11161_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11162_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11162_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11164_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11164_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign state_d = \$auto$slang_frontend.cc:694:finish$\state_d$10588 ;
  assign ack_dst_d = \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10589 ;
  assign data_valid = \$auto$slang_frontend.cc:694:finish$\data_valid$10590 ;
  assign valid_o = data_valid;
  assign output_ready = ready_i;
  assign data_o = async_data_i;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$11097_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10585 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10587  = \$procmux$11098_Y ;
  assign \$procmux$11102_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10585 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10586  = \$procmux$11103_Y ;
  assign \$procmux$11108_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10579 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10581  = \$procmux$11109_Y ;
  assign \$procmux$11114_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10579 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10580  = \$procmux$11115_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\data_valid$10590  = \$procmux$11121_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10588  = \$procmux$11127_Y ;
  assign \$procmux$11138_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10572 ;
  assign \$procmux$11140_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10568 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10573  = \$procmux$11141_Y ;
  assign \$procmux$11148_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10568 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_valid$10575  = \$procmux$11149_Y ;
  assign \$procmux$11156_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10568 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10574  = \$procmux$11157_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10589  = \$procmux$11161_Y ;
  assign \$auto$builder.cc:338:Biop$10566  = req_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10568  = req_synced;
  assign \$auto$builder.cc:338:Biop$10570  = output_ready;
  assign \$auto$rtlil.cc:2746:ReduceBool$10572  = ready_i;
  assign \$auto$builder.cc:338:Biop$10577  = output_ready;
  assign \$auto$rtlil.cc:2746:ReduceBool$10579  = ready_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10585  = \$auto$builder.cc:338:Biop$10583 ;
  assign \$auto$rtlil.cc:2747:LogicNot$10595  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10600  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$builder.cc:338:Biop$10639 ;
  wire \$auto$builder.cc:338:Biop$10643 ;
  wire \$auto$builder.cc:338:Biop$10650 ;
  wire \$auto$builder.cc:338:Biop$10656 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10641 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10645 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10652 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10658 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10666 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10668 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10671 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10673 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10654 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10660 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10662 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire \$auto$slang_frontend.cc:694:finish$\data_valid$10648 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$auto$slang_frontend.cc:694:finish$\data_valid$10663 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10646 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10647 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10653 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10659 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10661 ;
  wire \$procmux$10942_Y ;
  wire \$procmux$10943_CMP ;
  wire \$procmux$10944_Y ;
  wire \$procmux$10945_CMP ;
  wire [1:0] \$procmux$10947_Y ;
  wire \$procmux$10948_CMP ;
  wire [1:0] \$procmux$10949_Y ;
  wire \$procmux$10950_CMP ;
  wire \$procmux$10953_Y ;
  wire \$procmux$10954_CMP ;
  wire \$procmux$10955_Y ;
  wire \$procmux$10956_CMP ;
  wire [1:0] \$procmux$10959_Y ;
  wire \$procmux$10960_CMP ;
  wire [1:0] \$procmux$10961_Y ;
  wire \$procmux$10962_CMP ;
  wire \$procmux$10967_Y ;
  wire \$procmux$10968_CMP ;
  wire \$procmux$10970_CMP ;
  wire [1:0] \$procmux$10973_Y ;
  wire \$procmux$10974_CMP ;
  wire \$procmux$10976_CMP ;
  wire \$procmux$10978_CMP ;
  wire [1:0] \$procmux$10983_Y ;
  wire \$procmux$10984_CMP ;
  wire [1:0] \$procmux$10985_Y ;
  wire \$procmux$10986_CMP ;
  wire [1:0] \$procmux$10987_Y ;
  wire \$procmux$10988_CMP ;
  wire \$procmux$10993_Y ;
  wire \$procmux$10994_CMP ;
  wire \$procmux$10995_Y ;
  wire \$procmux$10996_CMP ;
  wire [1:0] \$procmux$11001_Y ;
  wire \$procmux$11002_CMP ;
  wire [1:0] \$procmux$11003_Y ;
  wire \$procmux$11004_CMP ;
  wire \$procmux$11007_Y ;
  wire \$procmux$11008_CMP ;
  wire \$procmux$11010_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "../rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "../rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10665  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10666 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10670  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10671 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10655  (
    .A(req_synced),
    .Y(\$auto$builder.cc:338:Biop$10656 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:293.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:284.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.33-275.12|../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10942  (
    .A(1'h0),
    .B(1'h1),
    .S(req_synced),
    .Y(\$procmux$10942_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10944  (
    .A(1'hx),
    .B(\$procmux$10942_Y ),
    .S(\$procmux$10945_CMP ),
    .Y(\$procmux$10944_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10945_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10945_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.33-275.12|../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10947  (
    .A(2'h0),
    .B(state_q),
    .S(req_synced),
    .Y(\$procmux$10947_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10949  (
    .A(2'hx),
    .B(\$procmux$10947_Y ),
    .S(\$procmux$10950_CMP ),
    .Y(\$procmux$10949_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10950_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10950_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.35-267.12|../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10953  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10954_CMP ),
    .Y(\$procmux$10953_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10955  (
    .A(1'hx),
    .B(\$procmux$10953_Y ),
    .S(\$procmux$10956_CMP ),
    .Y(\$procmux$10955_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10956_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10956_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.35-267.12|../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10959  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$10960_CMP ),
    .Y(\$procmux$10959_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10961  (
    .A(2'hx),
    .B(\$procmux$10959_Y ),
    .S(\$procmux$10962_CMP ),
    .Y(\$procmux$10961_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10962_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10962_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10967  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\data_valid$10648 , 1'h1 }),
    .S({ \$procmux$10970_CMP , \$procmux$10968_CMP  }),
    .Y(\$procmux$10967_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10968_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10968_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10970_CMP0  (
    .A(state_q),
    .Y(\$procmux$10970_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$10973  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$10647 , \$auto$slang_frontend.cc:694:finish$\state_d$10653 , \$auto$slang_frontend.cc:694:finish$\state_d$10659  }),
    .S({ \$procmux$10978_CMP , \$procmux$10976_CMP , \$procmux$10974_CMP  }),
    .Y(\$procmux$10973_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10974_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10974_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10976_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10976_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10978_CMP0  (
    .A(state_q),
    .Y(\$procmux$10978_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:255.13-255.41|../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10983  (
    .A(2'h1),
    .B(2'h2),
    .S(\$procmux$10984_CMP ),
    .Y(\$procmux$10983_Y )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10985  (
    .A(2'hx),
    .B(\$procmux$10983_Y ),
    .S(\$procmux$10986_CMP ),
    .Y(\$procmux$10985_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10987  (
    .A(2'hx),
    .B(\$procmux$10985_Y ),
    .S(\$procmux$10988_CMP ),
    .Y(\$procmux$10987_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10988_CMP0  (
    .A(state_q),
    .Y(\$procmux$10988_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10993  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10994_CMP ),
    .Y(\$procmux$10993_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10995  (
    .A(1'hx),
    .B(\$procmux$10993_Y ),
    .S(\$procmux$10996_CMP ),
    .Y(\$procmux$10995_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10996_CMP0  (
    .A(state_q),
    .Y(\$procmux$10996_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11001  (
    .A(state_q),
    .B(\$auto$slang_frontend.cc:694:finish$\state_d$10646 ),
    .S(\$procmux$11002_CMP ),
    .Y(\$procmux$11001_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11003  (
    .A(2'hx),
    .B(\$procmux$11001_Y ),
    .S(\$procmux$11004_CMP ),
    .Y(\$procmux$11003_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11004_CMP0  (
    .A(state_q),
    .Y(\$procmux$11004_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11007  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10654 , \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10660  }),
    .S({ \$procmux$11010_CMP , \$procmux$11008_CMP  }),
    .Y(\$procmux$11007_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11008_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11008_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11010_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11010_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign state_d = \$auto$slang_frontend.cc:694:finish$\state_d$10661 ;
  assign ack_dst_d = \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10662 ;
  assign data_valid = \$auto$slang_frontend.cc:694:finish$\data_valid$10663 ;
  assign valid_o = data_valid;
  assign output_ready = ready_i;
  assign data_o = async_data_i;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$10943_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10658 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10660  = \$procmux$10944_Y ;
  assign \$procmux$10948_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10658 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10659  = \$procmux$10949_Y ;
  assign \$procmux$10954_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10652 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10654  = \$procmux$10955_Y ;
  assign \$procmux$10960_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10652 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10653  = \$procmux$10961_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\data_valid$10663  = \$procmux$10967_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10661  = \$procmux$10973_Y ;
  assign \$procmux$10984_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10645 ;
  assign \$procmux$10986_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10641 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10646  = \$procmux$10987_Y ;
  assign \$procmux$10994_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10641 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_valid$10648  = \$procmux$10995_Y ;
  assign \$procmux$11002_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10641 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10647  = \$procmux$11003_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10662  = \$procmux$11007_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10658  = \$auto$builder.cc:338:Biop$10656 ;
  assign \$auto$builder.cc:338:Biop$10650  = output_ready;
  assign \$auto$rtlil.cc:2746:ReduceBool$10652  = ready_i;
  assign \$auto$builder.cc:338:Biop$10639  = req_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10641  = req_synced;
  assign \$auto$builder.cc:338:Biop$10643  = output_ready;
  assign \$auto$rtlil.cc:2746:ReduceBool$10645  = ready_i;
  assign \$auto$rtlil.cc:2747:LogicNot$10668  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10673  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, valid_o, ready_i, async_req_i, async_ack_o, async_data_i);
  wire \$auto$builder.cc:338:Biop$10712 ;
  wire \$auto$builder.cc:338:Biop$10716 ;
  wire \$auto$builder.cc:338:Biop$10723 ;
  wire \$auto$builder.cc:338:Biop$10729 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10714 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10718 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10725 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10731 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10739 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10741 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10744 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10746 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10727 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10733 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10735 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire \$auto$slang_frontend.cc:694:finish$\data_valid$10721 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$auto$slang_frontend.cc:694:finish$\data_valid$10736 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10719 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10720 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10726 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10732 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10734 ;
  wire \$procmux$10788_Y ;
  wire \$procmux$10789_CMP ;
  wire \$procmux$10790_Y ;
  wire \$procmux$10791_CMP ;
  wire [1:0] \$procmux$10793_Y ;
  wire \$procmux$10794_CMP ;
  wire [1:0] \$procmux$10795_Y ;
  wire \$procmux$10796_CMP ;
  wire \$procmux$10799_Y ;
  wire \$procmux$10800_CMP ;
  wire \$procmux$10801_Y ;
  wire \$procmux$10802_CMP ;
  wire [1:0] \$procmux$10805_Y ;
  wire \$procmux$10806_CMP ;
  wire [1:0] \$procmux$10807_Y ;
  wire \$procmux$10808_CMP ;
  wire \$procmux$10813_Y ;
  wire \$procmux$10814_CMP ;
  wire \$procmux$10816_CMP ;
  wire [1:0] \$procmux$10819_Y ;
  wire \$procmux$10820_CMP ;
  wire \$procmux$10822_CMP ;
  wire \$procmux$10824_CMP ;
  wire [1:0] \$procmux$10829_Y ;
  wire \$procmux$10830_CMP ;
  wire [1:0] \$procmux$10831_Y ;
  wire \$procmux$10832_CMP ;
  wire [1:0] \$procmux$10833_Y ;
  wire \$procmux$10834_CMP ;
  wire \$procmux$10839_Y ;
  wire \$procmux$10840_CMP ;
  wire \$procmux$10841_Y ;
  wire \$procmux$10842_CMP ;
  wire [1:0] \$procmux$10847_Y ;
  wire \$procmux$10848_CMP ;
  wire [1:0] \$procmux$10849_Y ;
  wire \$procmux$10850_CMP ;
  wire \$procmux$10853_Y ;
  wire \$procmux$10854_CMP ;
  wire \$procmux$10856_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "../rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "../rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10738  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10739 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10743  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10744 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10728  (
    .A(req_synced),
    .Y(\$auto$builder.cc:338:Biop$10729 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:293.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:284.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.33-275.12|../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10788  (
    .A(1'h0),
    .B(1'h1),
    .S(req_synced),
    .Y(\$procmux$10788_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10790  (
    .A(1'hx),
    .B(\$procmux$10788_Y ),
    .S(\$procmux$10791_CMP ),
    .Y(\$procmux$10790_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10791_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10791_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:272.33-275.12|../rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10793  (
    .A(2'h0),
    .B(state_q),
    .S(req_synced),
    .Y(\$procmux$10793_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10795  (
    .A(2'hx),
    .B(\$procmux$10793_Y ),
    .S(\$procmux$10796_CMP ),
    .Y(\$procmux$10795_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10796_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10796_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.35-267.12|../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10799  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10800_CMP ),
    .Y(\$procmux$10799_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10801  (
    .A(1'hx),
    .B(\$procmux$10799_Y ),
    .S(\$procmux$10802_CMP ),
    .Y(\$procmux$10801_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10802_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10802_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:264.35-267.12|../rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10805  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$10806_CMP ),
    .Y(\$procmux$10805_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10807  (
    .A(2'hx),
    .B(\$procmux$10805_Y ),
    .S(\$procmux$10808_CMP ),
    .Y(\$procmux$10807_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10808_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10808_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10813  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\data_valid$10721 , 1'h1 }),
    .S({ \$procmux$10816_CMP , \$procmux$10814_CMP  }),
    .Y(\$procmux$10813_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10814_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10814_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10816_CMP0  (
    .A(state_q),
    .Y(\$procmux$10816_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$10819  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$10720 , \$auto$slang_frontend.cc:694:finish$\state_d$10726 , \$auto$slang_frontend.cc:694:finish$\state_d$10732  }),
    .S({ \$procmux$10824_CMP , \$procmux$10822_CMP , \$procmux$10820_CMP  }),
    .Y(\$procmux$10819_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10820_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10820_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10822_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10822_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10824_CMP0  (
    .A(state_q),
    .Y(\$procmux$10824_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:255.13-255.41|../rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10829  (
    .A(2'h1),
    .B(2'h2),
    .S(\$procmux$10830_CMP ),
    .Y(\$procmux$10829_Y )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10831  (
    .A(2'hx),
    .B(\$procmux$10829_Y ),
    .S(\$procmux$10832_CMP ),
    .Y(\$procmux$10831_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10833  (
    .A(2'hx),
    .B(\$procmux$10831_Y ),
    .S(\$procmux$10834_CMP ),
    .Y(\$procmux$10833_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10834_CMP0  (
    .A(state_q),
    .Y(\$procmux$10834_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10839  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10840_CMP ),
    .Y(\$procmux$10839_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10841  (
    .A(1'hx),
    .B(\$procmux$10839_Y ),
    .S(\$procmux$10842_CMP ),
    .Y(\$procmux$10841_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10842_CMP0  (
    .A(state_q),
    .Y(\$procmux$10842_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.33-259.12|../rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10847  (
    .A(state_q),
    .B(\$auto$slang_frontend.cc:694:finish$\state_d$10719 ),
    .S(\$procmux$10848_CMP ),
    .Y(\$procmux$10847_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10849  (
    .A(2'hx),
    .B(\$procmux$10847_Y ),
    .S(\$procmux$10850_CMP ),
    .Y(\$procmux$10849_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:252.9-259.12|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10850_CMP0  (
    .A(state_q),
    .Y(\$procmux$10850_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10853  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10727 , \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10733  }),
    .S({ \$procmux$10856_CMP , \$procmux$10854_CMP  }),
    .Y(\$procmux$10853_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:270.26-276.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10854_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10854_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:262.28-268.10|../rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10856_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10856_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign state_d = \$auto$slang_frontend.cc:694:finish$\state_d$10734 ;
  assign ack_dst_d = \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10735 ;
  assign data_valid = \$auto$slang_frontend.cc:694:finish$\data_valid$10736 ;
  assign valid_o = data_valid;
  assign output_ready = ready_i;
  assign data_o = async_data_i;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$10789_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10731 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10733  = \$procmux$10790_Y ;
  assign \$procmux$10794_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10731 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10732  = \$procmux$10795_Y ;
  assign \$procmux$10800_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10725 ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10727  = \$procmux$10801_Y ;
  assign \$procmux$10806_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10725 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10726  = \$procmux$10807_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\data_valid$10736  = \$procmux$10813_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10734  = \$procmux$10819_Y ;
  assign \$procmux$10830_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10718 ;
  assign \$procmux$10832_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10714 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10719  = \$procmux$10833_Y ;
  assign \$procmux$10840_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10714 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_valid$10721  = \$procmux$10841_Y ;
  assign \$procmux$10848_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10714 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10720  = \$procmux$10849_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ack_dst_d$10735  = \$procmux$10853_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10731  = \$auto$builder.cc:338:Biop$10729 ;
  assign \$auto$builder.cc:338:Biop$10723  = output_ready;
  assign \$auto$rtlil.cc:2746:ReduceBool$10725  = ready_i;
  assign \$auto$builder.cc:338:Biop$10712  = req_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10714  = req_synced;
  assign \$auto$builder.cc:338:Biop$10716  = output_ready;
  assign \$auto$rtlil.cc:2746:ReduceBool$10718  = ready_i;
  assign \$auto$rtlil.cc:2747:LogicNot$10741  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10746  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$builder.cc:338:Biop$10463 ;
  wire \$auto$builder.cc:338:Biop$10469 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10458 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10465 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10471 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10481 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10483 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10486 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10490 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$10461 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$10478 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_q$10488 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:139.9-143.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10456 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:161.11-163.14" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10472 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10474 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10476 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10460 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10467 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10477 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_q$10487 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10459 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10466 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10473 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10475 ;
  wire \$procmux$11320_Y ;
  wire \$procmux$11321_CMP ;
  wire \$procmux$11322_Y ;
  wire \$procmux$11323_CMP ;
  wire \$procmux$11325_Y ;
  wire \$procmux$11326_CMP ;
  wire \$procmux$11327_Y ;
  wire \$procmux$11328_CMP ;
  wire [1:0] \$procmux$11330_Y ;
  wire \$procmux$11331_CMP ;
  wire [1:0] \$procmux$11332_Y ;
  wire \$procmux$11333_CMP ;
  wire \$procmux$11336_Y ;
  wire \$procmux$11337_CMP ;
  wire \$procmux$11338_Y ;
  wire \$procmux$11339_CMP ;
  wire [1:0] \$procmux$11342_Y ;
  wire \$procmux$11343_CMP ;
  wire [1:0] \$procmux$11344_Y ;
  wire \$procmux$11345_CMP ;
  wire [1:0] \$procmux$11352_Y ;
  wire \$procmux$11353_CMP ;
  wire \$procmux$11358_Y ;
  wire \$procmux$11359_CMP ;
  wire \$procmux$11361_CMP ;
  wire \$procmux$11364_Y ;
  wire \$procmux$11365_CMP ;
  wire \$procmux$11368_CMP ;
  wire [1:0] \$procmux$11371_Y ;
  wire \$procmux$11372_CMP ;
  wire \$procmux$11374_CMP ;
  wire \$procmux$11376_CMP ;
  wire [1:0] \$procmux$11380_Y ;
  wire \$procmux$11381_CMP ;
  wire [1:0] \$procmux$11382_Y ;
  wire \$procmux$11383_CMP ;
  wire \$procmux$11387_Y ;
  wire \$procmux$11388_CMP ;
  wire \$procmux$11389_Y ;
  wire \$procmux$11390_CMP ;
  wire [1:0] \$procmux$11394_Y ;
  wire \$procmux$11395_CMP ;
  wire [1:0] \$procmux$11396_Y ;
  wire \$procmux$11397_CMP ;
  wire \$procmux$11401_Y ;
  wire \$procmux$11402_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.5" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10480  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10481 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10485  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10486 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10468  (
    .A(ack_synced),
    .Y(\$auto$builder.cc:338:Biop$10469 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q  (
    .AD(2'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(data_src_d),
    .Q(data_src_q)
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11320  (
    .A(1'h1),
    .B(1'hx),
    .S(ack_synced),
    .Y(\$procmux$11320_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11322  (
    .A(1'hx),
    .B(\$procmux$11320_Y ),
    .S(\$procmux$11323_CMP ),
    .Y(\$procmux$11322_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11323_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11323_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11325  (
    .A(\$auto$slang_frontend.cc:694:finish$\ready_o$10472 ),
    .B(1'h0),
    .S(ack_synced),
    .Y(\$procmux$11325_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11327  (
    .A(1'hx),
    .B(\$procmux$11325_Y ),
    .S(\$procmux$11328_CMP ),
    .Y(\$procmux$11327_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11328_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11328_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11330  (
    .A(2'h0),
    .B(state_q),
    .S(ack_synced),
    .Y(\$procmux$11330_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11332  (
    .A(2'hx),
    .B(\$procmux$11330_Y ),
    .S(\$procmux$11333_CMP ),
    .Y(\$procmux$11332_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11333_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11333_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.33-156.12|../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11336  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$11337_CMP ),
    .Y(\$procmux$11336_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11338  (
    .A(1'hx),
    .B(\$procmux$11336_Y ),
    .S(\$procmux$11339_CMP ),
    .Y(\$procmux$11338_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11339_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11339_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.33-156.12|../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11342  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$11343_CMP ),
    .Y(\$procmux$11342_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11344  (
    .A(2'hx),
    .B(\$procmux$11342_Y ),
    .S(\$procmux$11345_CMP ),
    .Y(\$procmux$11344_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11345_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11345_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11352  (
    .A(data_src_q),
    .B(\$auto$slang_frontend.cc:694:finish$\data_src_d$10461 ),
    .S(\$procmux$11353_CMP ),
    .Y(\$procmux$11352_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11353_CMP0  (
    .A(state_q),
    .Y(\$procmux$11353_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11358  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\req_src_d$10460 , \$auto$slang_frontend.cc:694:finish$\req_src_d$10467  }),
    .S({ \$procmux$11361_CMP , \$procmux$11359_CMP  }),
    .Y(\$procmux$11358_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11359_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11359_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11361_CMP0  (
    .A(state_q),
    .Y(\$procmux$11361_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11364  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\ready_o$10456 , \$auto$slang_frontend.cc:694:finish$\ready_o$10474  }),
    .S({ \$procmux$11368_CMP , \$procmux$11365_CMP  }),
    .Y(\$procmux$11364_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11365_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11365_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11368_CMP0  (
    .A(state_q),
    .Y(\$procmux$11368_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$11371  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$10459 , \$auto$slang_frontend.cc:694:finish$\state_d$10466 , \$auto$slang_frontend.cc:694:finish$\state_d$10473  }),
    .S({ \$procmux$11376_CMP , \$procmux$11374_CMP , \$procmux$11372_CMP  }),
    .Y(\$procmux$11371_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11372_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11372_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11374_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11374_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11376_CMP0  (
    .A(state_q),
    .Y(\$procmux$11376_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11380  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$11381_CMP ),
    .Y(\$procmux$11380_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11382  (
    .A(2'hx),
    .B(\$procmux$11380_Y ),
    .S(\$procmux$11383_CMP ),
    .Y(\$procmux$11382_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11383_CMP0  (
    .A(state_q),
    .Y(\$procmux$11383_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11387  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11388_CMP ),
    .Y(\$procmux$11387_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11389  (
    .A(1'hx),
    .B(\$procmux$11387_Y ),
    .S(\$procmux$11390_CMP ),
    .Y(\$procmux$11389_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11390_CMP0  (
    .A(state_q),
    .Y(\$procmux$11390_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11394  (
    .A(state_q),
    .B(2'h1),
    .S(\$procmux$11395_CMP ),
    .Y(\$procmux$11394_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11396  (
    .A(2'hx),
    .B(\$procmux$11394_Y ),
    .S(\$procmux$11397_CMP ),
    .Y(\$procmux$11396_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11397_CMP0  (
    .A(state_q),
    .Y(\$procmux$11397_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11401  (
    .A(1'hx),
    .B(1'h0),
    .S(\$procmux$11402_CMP ),
    .Y(\$procmux$11401_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11402_CMP0  (
    .A(state_q),
    .Y(\$procmux$11402_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign state_d = \$auto$slang_frontend.cc:694:finish$\state_d$10475 ;
  assign ready_o = \$auto$slang_frontend.cc:694:finish$\ready_o$10476 ;
  assign req_src_d = \$auto$slang_frontend.cc:694:finish$\req_src_d$10477 ;
  assign data_src_d = \$auto$slang_frontend.cc:694:finish$\data_src_d$10478 ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_q$10488  = 2'h1;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_q$10487  = 1'h1;
  assign \$procmux$11321_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10471 ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10472  = \$procmux$11322_Y ;
  assign \$procmux$11326_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10471 ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10474  = \$procmux$11327_Y ;
  assign \$procmux$11331_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10471 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10473  = \$procmux$11332_Y ;
  assign \$procmux$11337_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10465 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10467  = \$procmux$11338_Y ;
  assign \$procmux$11343_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10465 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10466  = \$procmux$11344_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$10478  = \$procmux$11352_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10477  = \$procmux$11358_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10476  = \$procmux$11364_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10475  = \$procmux$11371_Y ;
  assign \$procmux$11381_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10458 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$10461  = \$procmux$11382_Y ;
  assign \$procmux$11388_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10458 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10460  = \$procmux$11389_Y ;
  assign \$procmux$11395_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10458 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10459  = \$procmux$11396_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10456  = \$procmux$11401_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10458  = valid_i;
  assign \$auto$builder.cc:338:Biop$10463  = ack_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10465  = ack_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10471  = \$auto$builder.cc:338:Biop$10469 ;
  assign \$auto$rtlil.cc:2747:LogicNot$10483  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10490  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$builder.cc:338:Biop$10536 ;
  wire \$auto$builder.cc:338:Biop$10542 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10531 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10538 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10544 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10554 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10556 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10559 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10563 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$10534 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$10551 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_q$10561 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:139.9-143.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10529 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:161.11-163.14" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10545 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10547 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10549 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10533 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10540 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10550 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_q$10560 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10532 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10539 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10546 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10548 ;
  wire \$procmux$11166_Y ;
  wire \$procmux$11167_CMP ;
  wire \$procmux$11168_Y ;
  wire \$procmux$11169_CMP ;
  wire \$procmux$11171_Y ;
  wire \$procmux$11172_CMP ;
  wire \$procmux$11173_Y ;
  wire \$procmux$11174_CMP ;
  wire [1:0] \$procmux$11176_Y ;
  wire \$procmux$11177_CMP ;
  wire [1:0] \$procmux$11178_Y ;
  wire \$procmux$11179_CMP ;
  wire \$procmux$11182_Y ;
  wire \$procmux$11183_CMP ;
  wire \$procmux$11184_Y ;
  wire \$procmux$11185_CMP ;
  wire [1:0] \$procmux$11188_Y ;
  wire \$procmux$11189_CMP ;
  wire [1:0] \$procmux$11190_Y ;
  wire \$procmux$11191_CMP ;
  wire [1:0] \$procmux$11198_Y ;
  wire \$procmux$11199_CMP ;
  wire \$procmux$11204_Y ;
  wire \$procmux$11205_CMP ;
  wire \$procmux$11207_CMP ;
  wire \$procmux$11210_Y ;
  wire \$procmux$11211_CMP ;
  wire \$procmux$11214_CMP ;
  wire [1:0] \$procmux$11217_Y ;
  wire \$procmux$11218_CMP ;
  wire \$procmux$11220_CMP ;
  wire \$procmux$11222_CMP ;
  wire [1:0] \$procmux$11226_Y ;
  wire \$procmux$11227_CMP ;
  wire [1:0] \$procmux$11228_Y ;
  wire \$procmux$11229_CMP ;
  wire \$procmux$11233_Y ;
  wire \$procmux$11234_CMP ;
  wire \$procmux$11235_Y ;
  wire \$procmux$11236_CMP ;
  wire [1:0] \$procmux$11240_Y ;
  wire \$procmux$11241_CMP ;
  wire [1:0] \$procmux$11242_Y ;
  wire \$procmux$11243_CMP ;
  wire \$procmux$11247_Y ;
  wire \$procmux$11248_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.5" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10553  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10554 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10558  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10559 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10541  (
    .A(ack_synced),
    .Y(\$auto$builder.cc:338:Biop$10542 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q  (
    .AD(2'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(data_src_d),
    .Q(data_src_q)
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11166  (
    .A(1'h1),
    .B(1'hx),
    .S(ack_synced),
    .Y(\$procmux$11166_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11168  (
    .A(1'hx),
    .B(\$procmux$11166_Y ),
    .S(\$procmux$11169_CMP ),
    .Y(\$procmux$11168_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11169_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11169_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11171  (
    .A(\$auto$slang_frontend.cc:694:finish$\ready_o$10545 ),
    .B(1'h0),
    .S(ack_synced),
    .Y(\$procmux$11171_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11173  (
    .A(1'hx),
    .B(\$procmux$11171_Y ),
    .S(\$procmux$11174_CMP ),
    .Y(\$procmux$11173_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11174_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11174_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11176  (
    .A(2'h0),
    .B(state_q),
    .S(ack_synced),
    .Y(\$procmux$11176_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11178  (
    .A(2'hx),
    .B(\$procmux$11176_Y ),
    .S(\$procmux$11179_CMP ),
    .Y(\$procmux$11178_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11179_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11179_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.33-156.12|../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11182  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$11183_CMP ),
    .Y(\$procmux$11182_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11184  (
    .A(1'hx),
    .B(\$procmux$11182_Y ),
    .S(\$procmux$11185_CMP ),
    .Y(\$procmux$11184_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11185_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11185_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.33-156.12|../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11188  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$11189_CMP ),
    .Y(\$procmux$11188_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11190  (
    .A(2'hx),
    .B(\$procmux$11188_Y ),
    .S(\$procmux$11191_CMP ),
    .Y(\$procmux$11190_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11191_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11191_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11198  (
    .A(data_src_q),
    .B(\$auto$slang_frontend.cc:694:finish$\data_src_d$10534 ),
    .S(\$procmux$11199_CMP ),
    .Y(\$procmux$11198_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11199_CMP0  (
    .A(state_q),
    .Y(\$procmux$11199_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11204  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\req_src_d$10533 , \$auto$slang_frontend.cc:694:finish$\req_src_d$10540  }),
    .S({ \$procmux$11207_CMP , \$procmux$11205_CMP  }),
    .Y(\$procmux$11204_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11205_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11205_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11207_CMP0  (
    .A(state_q),
    .Y(\$procmux$11207_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11210  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\ready_o$10529 , \$auto$slang_frontend.cc:694:finish$\ready_o$10547  }),
    .S({ \$procmux$11214_CMP , \$procmux$11211_CMP  }),
    .Y(\$procmux$11210_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11211_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11211_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11214_CMP0  (
    .A(state_q),
    .Y(\$procmux$11214_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$11217  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$10532 , \$auto$slang_frontend.cc:694:finish$\state_d$10539 , \$auto$slang_frontend.cc:694:finish$\state_d$10546  }),
    .S({ \$procmux$11222_CMP , \$procmux$11220_CMP , \$procmux$11218_CMP  }),
    .Y(\$procmux$11217_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11218_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11218_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11220_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11220_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11222_CMP0  (
    .A(state_q),
    .Y(\$procmux$11222_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11226  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$11227_CMP ),
    .Y(\$procmux$11226_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11228  (
    .A(2'hx),
    .B(\$procmux$11226_Y ),
    .S(\$procmux$11229_CMP ),
    .Y(\$procmux$11228_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11229_CMP0  (
    .A(state_q),
    .Y(\$procmux$11229_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11233  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11234_CMP ),
    .Y(\$procmux$11233_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11235  (
    .A(1'hx),
    .B(\$procmux$11233_Y ),
    .S(\$procmux$11236_CMP ),
    .Y(\$procmux$11235_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11236_CMP0  (
    .A(state_q),
    .Y(\$procmux$11236_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11240  (
    .A(state_q),
    .B(2'h1),
    .S(\$procmux$11241_CMP ),
    .Y(\$procmux$11240_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11242  (
    .A(2'hx),
    .B(\$procmux$11240_Y ),
    .S(\$procmux$11243_CMP ),
    .Y(\$procmux$11242_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11243_CMP0  (
    .A(state_q),
    .Y(\$procmux$11243_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11247  (
    .A(1'hx),
    .B(1'h0),
    .S(\$procmux$11248_CMP ),
    .Y(\$procmux$11247_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11248_CMP0  (
    .A(state_q),
    .Y(\$procmux$11248_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign state_d = \$auto$slang_frontend.cc:694:finish$\state_d$10548 ;
  assign ready_o = \$auto$slang_frontend.cc:694:finish$\ready_o$10549 ;
  assign req_src_d = \$auto$slang_frontend.cc:694:finish$\req_src_d$10550 ;
  assign data_src_d = \$auto$slang_frontend.cc:694:finish$\data_src_d$10551 ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_q$10561  = 2'h1;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_q$10560  = 1'h1;
  assign \$procmux$11167_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10544 ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10545  = \$procmux$11168_Y ;
  assign \$procmux$11172_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10544 ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10547  = \$procmux$11173_Y ;
  assign \$procmux$11177_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10544 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10546  = \$procmux$11178_Y ;
  assign \$procmux$11183_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10538 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10540  = \$procmux$11184_Y ;
  assign \$procmux$11189_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10538 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10539  = \$procmux$11190_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$10551  = \$procmux$11198_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10550  = \$procmux$11204_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10549  = \$procmux$11210_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10548  = \$procmux$11217_Y ;
  assign \$procmux$11227_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10531 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$10534  = \$procmux$11228_Y ;
  assign \$procmux$11234_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10531 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10533  = \$procmux$11235_Y ;
  assign \$procmux$11241_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10531 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10532  = \$procmux$11242_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10529  = \$procmux$11247_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10531  = valid_i;
  assign \$auto$builder.cc:338:Biop$10536  = ack_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10538  = ack_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10544  = \$auto$builder.cc:338:Biop$10542 ;
  assign \$auto$rtlil.cc:2747:LogicNot$10556  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10563  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$builder.cc:338:Biop$10609 ;
  wire \$auto$builder.cc:338:Biop$10615 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10604 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10611 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10617 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10627 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10629 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10632 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10636 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$10607 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$10624 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_q$10634 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:139.9-143.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10602 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:161.11-163.14" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10618 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10620 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10622 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10606 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10613 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10623 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_q$10633 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10605 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10612 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10619 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10621 ;
  wire \$procmux$11012_Y ;
  wire \$procmux$11013_CMP ;
  wire \$procmux$11014_Y ;
  wire \$procmux$11015_CMP ;
  wire \$procmux$11017_Y ;
  wire \$procmux$11018_CMP ;
  wire \$procmux$11019_Y ;
  wire \$procmux$11020_CMP ;
  wire [1:0] \$procmux$11022_Y ;
  wire \$procmux$11023_CMP ;
  wire [1:0] \$procmux$11024_Y ;
  wire \$procmux$11025_CMP ;
  wire \$procmux$11028_Y ;
  wire \$procmux$11029_CMP ;
  wire \$procmux$11030_Y ;
  wire \$procmux$11031_CMP ;
  wire [1:0] \$procmux$11034_Y ;
  wire \$procmux$11035_CMP ;
  wire [1:0] \$procmux$11036_Y ;
  wire \$procmux$11037_CMP ;
  wire [1:0] \$procmux$11044_Y ;
  wire \$procmux$11045_CMP ;
  wire \$procmux$11050_Y ;
  wire \$procmux$11051_CMP ;
  wire \$procmux$11053_CMP ;
  wire \$procmux$11056_Y ;
  wire \$procmux$11057_CMP ;
  wire \$procmux$11060_CMP ;
  wire [1:0] \$procmux$11063_Y ;
  wire \$procmux$11064_CMP ;
  wire \$procmux$11066_CMP ;
  wire \$procmux$11068_CMP ;
  wire [1:0] \$procmux$11072_Y ;
  wire \$procmux$11073_CMP ;
  wire [1:0] \$procmux$11074_Y ;
  wire \$procmux$11075_CMP ;
  wire \$procmux$11079_Y ;
  wire \$procmux$11080_CMP ;
  wire \$procmux$11081_Y ;
  wire \$procmux$11082_CMP ;
  wire [1:0] \$procmux$11086_Y ;
  wire \$procmux$11087_CMP ;
  wire [1:0] \$procmux$11088_Y ;
  wire \$procmux$11089_CMP ;
  wire \$procmux$11093_Y ;
  wire \$procmux$11094_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.5" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10626  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10627 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10631  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10632 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10614  (
    .A(ack_synced),
    .Y(\$auto$builder.cc:338:Biop$10615 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q  (
    .AD(2'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(data_src_d),
    .Q(data_src_q)
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11012  (
    .A(1'h1),
    .B(1'hx),
    .S(ack_synced),
    .Y(\$procmux$11012_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11014  (
    .A(1'hx),
    .B(\$procmux$11012_Y ),
    .S(\$procmux$11015_CMP ),
    .Y(\$procmux$11014_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11015_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11015_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11017  (
    .A(\$auto$slang_frontend.cc:694:finish$\ready_o$10618 ),
    .B(1'h0),
    .S(ack_synced),
    .Y(\$procmux$11017_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11019  (
    .A(1'hx),
    .B(\$procmux$11017_Y ),
    .S(\$procmux$11020_CMP ),
    .Y(\$procmux$11019_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11020_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11020_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11022  (
    .A(2'h0),
    .B(state_q),
    .S(ack_synced),
    .Y(\$procmux$11022_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11024  (
    .A(2'hx),
    .B(\$procmux$11022_Y ),
    .S(\$procmux$11025_CMP ),
    .Y(\$procmux$11024_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11025_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11025_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.33-156.12|../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11028  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$11029_CMP ),
    .Y(\$procmux$11028_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11030  (
    .A(1'hx),
    .B(\$procmux$11028_Y ),
    .S(\$procmux$11031_CMP ),
    .Y(\$procmux$11030_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11031_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11031_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.33-156.12|../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11034  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$11035_CMP ),
    .Y(\$procmux$11034_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11036  (
    .A(2'hx),
    .B(\$procmux$11034_Y ),
    .S(\$procmux$11037_CMP ),
    .Y(\$procmux$11036_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11037_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11037_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11044  (
    .A(data_src_q),
    .B(\$auto$slang_frontend.cc:694:finish$\data_src_d$10607 ),
    .S(\$procmux$11045_CMP ),
    .Y(\$procmux$11044_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11045_CMP0  (
    .A(state_q),
    .Y(\$procmux$11045_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11050  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\req_src_d$10606 , \$auto$slang_frontend.cc:694:finish$\req_src_d$10613  }),
    .S({ \$procmux$11053_CMP , \$procmux$11051_CMP  }),
    .Y(\$procmux$11050_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11051_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11051_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11053_CMP0  (
    .A(state_q),
    .Y(\$procmux$11053_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11056  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\ready_o$10602 , \$auto$slang_frontend.cc:694:finish$\ready_o$10620  }),
    .S({ \$procmux$11060_CMP , \$procmux$11057_CMP  }),
    .Y(\$procmux$11056_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11057_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11057_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11060_CMP0  (
    .A(state_q),
    .Y(\$procmux$11060_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$11063  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$10605 , \$auto$slang_frontend.cc:694:finish$\state_d$10612 , \$auto$slang_frontend.cc:694:finish$\state_d$10619  }),
    .S({ \$procmux$11068_CMP , \$procmux$11066_CMP , \$procmux$11064_CMP  }),
    .Y(\$procmux$11063_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11064_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$11064_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11066_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$11066_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11068_CMP0  (
    .A(state_q),
    .Y(\$procmux$11068_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11072  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$11073_CMP ),
    .Y(\$procmux$11072_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11074  (
    .A(2'hx),
    .B(\$procmux$11072_Y ),
    .S(\$procmux$11075_CMP ),
    .Y(\$procmux$11074_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11075_CMP0  (
    .A(state_q),
    .Y(\$procmux$11075_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11079  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11080_CMP ),
    .Y(\$procmux$11079_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11081  (
    .A(1'hx),
    .B(\$procmux$11079_Y ),
    .S(\$procmux$11082_CMP ),
    .Y(\$procmux$11081_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11082_CMP0  (
    .A(state_q),
    .Y(\$procmux$11082_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11086  (
    .A(state_q),
    .B(2'h1),
    .S(\$procmux$11087_CMP ),
    .Y(\$procmux$11086_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11088  (
    .A(2'hx),
    .B(\$procmux$11086_Y ),
    .S(\$procmux$11089_CMP ),
    .Y(\$procmux$11088_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11089_CMP0  (
    .A(state_q),
    .Y(\$procmux$11089_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11093  (
    .A(1'hx),
    .B(1'h0),
    .S(\$procmux$11094_CMP ),
    .Y(\$procmux$11093_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11094_CMP0  (
    .A(state_q),
    .Y(\$procmux$11094_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign state_d = \$auto$slang_frontend.cc:694:finish$\state_d$10621 ;
  assign ready_o = \$auto$slang_frontend.cc:694:finish$\ready_o$10622 ;
  assign req_src_d = \$auto$slang_frontend.cc:694:finish$\req_src_d$10623 ;
  assign data_src_d = \$auto$slang_frontend.cc:694:finish$\data_src_d$10624 ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_q$10634  = 2'h1;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_q$10633  = 1'h1;
  assign \$procmux$11013_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10617 ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10618  = \$procmux$11014_Y ;
  assign \$procmux$11018_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10617 ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10620  = \$procmux$11019_Y ;
  assign \$procmux$11023_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10617 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10619  = \$procmux$11024_Y ;
  assign \$procmux$11029_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10611 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10613  = \$procmux$11030_Y ;
  assign \$procmux$11035_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10611 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10612  = \$procmux$11036_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$10624  = \$procmux$11044_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10623  = \$procmux$11050_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10622  = \$procmux$11056_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10621  = \$procmux$11063_Y ;
  assign \$procmux$11073_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10604 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$10607  = \$procmux$11074_Y ;
  assign \$procmux$11080_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10604 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10606  = \$procmux$11081_Y ;
  assign \$procmux$11087_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10604 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10605  = \$procmux$11088_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10602  = \$procmux$11093_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10604  = valid_i;
  assign \$auto$builder.cc:338:Biop$10609  = ack_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10611  = ack_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10617  = \$auto$builder.cc:338:Biop$10615 ;
  assign \$auto$rtlil.cc:2747:LogicNot$10629  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10636  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$auto$builder.cc:338:Biop$10682 ;
  wire \$auto$builder.cc:338:Biop$10688 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10677 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10684 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10690 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10700 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10702 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10705 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10709 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$10680 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_d$10697 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_src_q$10707 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:139.9-143.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10675 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:161.11-163.14" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10691 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10693 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$auto$slang_frontend.cc:694:finish$\ready_o$10695 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10679 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10686 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_d$10696 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire \$auto$slang_frontend.cc:694:finish$\req_src_q$10706 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10678 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10685 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10692 ;
  /* src = "../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\state_d$10694 ;
  wire \$procmux$10858_Y ;
  wire \$procmux$10859_CMP ;
  wire \$procmux$10860_Y ;
  wire \$procmux$10861_CMP ;
  wire \$procmux$10863_Y ;
  wire \$procmux$10864_CMP ;
  wire \$procmux$10865_Y ;
  wire \$procmux$10866_CMP ;
  wire [1:0] \$procmux$10868_Y ;
  wire \$procmux$10869_CMP ;
  wire [1:0] \$procmux$10870_Y ;
  wire \$procmux$10871_CMP ;
  wire \$procmux$10874_Y ;
  wire \$procmux$10875_CMP ;
  wire \$procmux$10876_Y ;
  wire \$procmux$10877_CMP ;
  wire [1:0] \$procmux$10880_Y ;
  wire \$procmux$10881_CMP ;
  wire [1:0] \$procmux$10882_Y ;
  wire \$procmux$10883_CMP ;
  wire [1:0] \$procmux$10890_Y ;
  wire \$procmux$10891_CMP ;
  wire \$procmux$10896_Y ;
  wire \$procmux$10897_CMP ;
  wire \$procmux$10899_CMP ;
  wire \$procmux$10902_Y ;
  wire \$procmux$10903_CMP ;
  wire \$procmux$10906_CMP ;
  wire [1:0] \$procmux$10909_Y ;
  wire \$procmux$10910_CMP ;
  wire \$procmux$10912_CMP ;
  wire \$procmux$10914_CMP ;
  wire [1:0] \$procmux$10918_Y ;
  wire \$procmux$10919_CMP ;
  wire [1:0] \$procmux$10920_Y ;
  wire \$procmux$10921_CMP ;
  wire \$procmux$10925_Y ;
  wire \$procmux$10926_CMP ;
  wire \$procmux$10927_Y ;
  wire \$procmux$10928_CMP ;
  wire [1:0] \$procmux$10932_Y ;
  wire \$procmux$10933_CMP ;
  wire [1:0] \$procmux$10934_Y ;
  wire \$procmux$10935_CMP ;
  wire \$procmux$10939_Y ;
  wire \$procmux$10940_CMP ;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "../rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.5" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "../rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "../rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10699  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10700 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10704  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10705 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10687  (
    .A(ack_synced),
    .Y(\$auto$builder.cc:338:Biop$10688 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q  (
    .AD(2'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(data_src_d),
    .Q(data_src_q)
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10858  (
    .A(1'h1),
    .B(1'hx),
    .S(ack_synced),
    .Y(\$procmux$10858_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10860  (
    .A(1'hx),
    .B(\$procmux$10858_Y ),
    .S(\$procmux$10861_CMP ),
    .Y(\$procmux$10860_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10861_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10861_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10863  (
    .A(\$auto$slang_frontend.cc:694:finish$\ready_o$10691 ),
    .B(1'h0),
    .S(ack_synced),
    .Y(\$procmux$10863_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10865  (
    .A(1'hx),
    .B(\$procmux$10863_Y ),
    .S(\$procmux$10866_CMP ),
    .Y(\$procmux$10865_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10866_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10866_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.33-164.12|../rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10868  (
    .A(2'h0),
    .B(state_q),
    .S(ack_synced),
    .Y(\$procmux$10868_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10870  (
    .A(2'hx),
    .B(\$procmux$10868_Y ),
    .S(\$procmux$10871_CMP ),
    .Y(\$procmux$10870_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10871_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10871_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.33-156.12|../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10874  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$10875_CMP ),
    .Y(\$procmux$10874_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10876  (
    .A(1'hx),
    .B(\$procmux$10874_Y ),
    .S(\$procmux$10877_CMP ),
    .Y(\$procmux$10876_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10877_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10877_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:153.33-156.12|../rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10880  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$10881_CMP ),
    .Y(\$procmux$10880_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10882  (
    .A(2'hx),
    .B(\$procmux$10880_Y ),
    .S(\$procmux$10883_CMP ),
    .Y(\$procmux$10882_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10883_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10883_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10890  (
    .A(data_src_q),
    .B(\$auto$slang_frontend.cc:694:finish$\data_src_d$10680 ),
    .S(\$procmux$10891_CMP ),
    .Y(\$procmux$10890_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10891_CMP0  (
    .A(state_q),
    .Y(\$procmux$10891_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10896  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\req_src_d$10679 , \$auto$slang_frontend.cc:694:finish$\req_src_d$10686  }),
    .S({ \$procmux$10899_CMP , \$procmux$10897_CMP  }),
    .Y(\$procmux$10896_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10897_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10897_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10899_CMP0  (
    .A(state_q),
    .Y(\$procmux$10899_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10902  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\ready_o$10675 , \$auto$slang_frontend.cc:694:finish$\ready_o$10693  }),
    .S({ \$procmux$10906_CMP , \$procmux$10903_CMP  }),
    .Y(\$procmux$10902_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10903_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10903_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10906_CMP0  (
    .A(state_q),
    .Y(\$procmux$10906_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$10909  (
    .A(2'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$10678 , \$auto$slang_frontend.cc:694:finish$\state_d$10685 , \$auto$slang_frontend.cc:694:finish$\state_d$10692  }),
    .S({ \$procmux$10914_CMP , \$procmux$10912_CMP , \$procmux$10910_CMP  }),
    .Y(\$procmux$10909_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:159.9-164.12|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10910_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$10910_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:151.24-157.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10912_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$10912_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10914_CMP0  (
    .A(state_q),
    .Y(\$procmux$10914_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10918  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$10919_CMP ),
    .Y(\$procmux$10918_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10920  (
    .A(2'hx),
    .B(\$procmux$10918_Y ),
    .S(\$procmux$10921_CMP ),
    .Y(\$procmux$10920_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10921_CMP0  (
    .A(state_q),
    .Y(\$procmux$10921_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10925  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10926_CMP ),
    .Y(\$procmux$10925_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10927  (
    .A(1'hx),
    .B(\$procmux$10925_Y ),
    .S(\$procmux$10928_CMP ),
    .Y(\$procmux$10927_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10928_CMP0  (
    .A(state_q),
    .Y(\$procmux$10928_CMP )
  );
  /* src = "../rtl/common_cells/cdc_4phase.sv:145.22-149.12|../rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10932  (
    .A(state_q),
    .B(2'h1),
    .S(\$procmux$10933_CMP ),
    .Y(\$procmux$10932_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10934  (
    .A(2'hx),
    .B(\$procmux$10932_Y ),
    .S(\$procmux$10935_CMP ),
    .Y(\$procmux$10934_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10935_CMP0  (
    .A(state_q),
    .Y(\$procmux$10935_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10939  (
    .A(1'hx),
    .B(1'h0),
    .S(\$procmux$10940_CMP ),
    .Y(\$procmux$10939_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:136.13-150.10|../rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10940_CMP0  (
    .A(state_q),
    .Y(\$procmux$10940_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign state_d = \$auto$slang_frontend.cc:694:finish$\state_d$10694 ;
  assign ready_o = \$auto$slang_frontend.cc:694:finish$\ready_o$10695 ;
  assign req_src_d = \$auto$slang_frontend.cc:694:finish$\req_src_d$10696 ;
  assign data_src_d = \$auto$slang_frontend.cc:694:finish$\data_src_d$10697 ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_q$10707  = 2'h1;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_q$10706  = 1'h1;
  assign \$procmux$10859_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10690 ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10691  = \$procmux$10860_Y ;
  assign \$procmux$10864_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10690 ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10693  = \$procmux$10865_Y ;
  assign \$procmux$10869_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10690 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10692  = \$procmux$10870_Y ;
  assign \$procmux$10875_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10684 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10686  = \$procmux$10876_Y ;
  assign \$procmux$10881_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10684 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10685  = \$procmux$10882_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$10697  = \$procmux$10890_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10696  = \$procmux$10896_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10695  = \$procmux$10902_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10694  = \$procmux$10909_Y ;
  assign \$procmux$10919_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10677 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_src_d$10680  = \$procmux$10920_Y ;
  assign \$procmux$10926_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10677 ;
  assign \$auto$slang_frontend.cc:694:finish$\req_src_d$10679  = \$procmux$10927_Y ;
  assign \$procmux$10933_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10677 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$10678  = \$procmux$10934_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\ready_o$10675  = \$procmux$10939_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10690  = \$auto$builder.cc:338:Biop$10688 ;
  assign \$auto$builder.cc:338:Biop$10682  = ack_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10684  = ack_synced;
  assign \$auto$rtlil.cc:2746:ReduceBool$10677  = valid_i;
  assign \$auto$rtlil.cc:2747:LogicNot$10702  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10709  = rst_ni;
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:109.8" */
module \cdc_reset_ctrlr$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr (a_clk_i, a_rst_ni, a_clear_i, a_clear_o, a_clear_ack_i, a_isolate_o, a_isolate_ack_i, b_clk_i, b_rst_ni, b_clear_i, b_clear_o, b_clear_ack_i, b_isolate_o, b_isolate_ack_i);
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:125.15" */
  input a_clear_ack_i;
  wire a_clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:123.16" */
  input a_clear_i;
  wire a_clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:124.16" */
  output a_clear_o;
  wire a_clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:121.16" */
  input a_clk_i;
  wire a_clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:127.16" */
  input a_isolate_ack_i;
  wire a_isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:126.16" */
  output a_isolate_o;
  wire a_isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:122.16" */
  input a_rst_ni;
  wire a_rst_ni;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:143.31" */
  wire async_a2b_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:141.21" */
  wire [1:0] async_a2b_next_phase;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:139.16" */
  wire async_a2b_req;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:139.31" */
  wire async_b2a_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:145.21" */
  wire [1:0] async_b2a_next_phase;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:143.16" */
  wire async_b2a_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:133.16" */
  input b_clear_ack_i;
  wire b_clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:131.16" */
  input b_clear_i;
  wire b_clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:132.16" */
  output b_clear_o;
  wire b_clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:129.16" */
  input b_clk_i;
  wire b_clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:135.16" */
  input b_isolate_ack_i;
  wire b_isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:134.16" */
  output b_isolate_o;
  wire b_isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:130.16" */
  input b_rst_ni;
  wire b_rst_ni;
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:150.5" */
  \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a  i_cdc_reset_ctrlr_half_a (
    .async_ack_i(async_b2a_ack),
    .async_ack_o(async_a2b_ack),
    .async_next_phase_i(async_b2a_next_phase),
    .async_next_phase_o(async_a2b_next_phase),
    .async_req_i(async_b2a_req),
    .async_req_o(async_a2b_req),
    .clear_ack_i(a_clear_ack_i),
    .clear_i(a_clear_i),
    .clear_o(a_clear_o),
    .clk_i(a_clk_i),
    .isolate_ack_i(a_isolate_ack_i),
    .isolate_o(a_isolate_o),
    .rst_ni(a_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:169.5" */
  \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b  i_cdc_reset_ctrlr_half_b (
    .async_ack_i(async_a2b_ack),
    .async_ack_o(async_b2a_ack),
    .async_next_phase_i(async_a2b_next_phase),
    .async_next_phase_o(async_b2a_next_phase),
    .async_req_i(async_a2b_req),
    .async_req_o(async_b2a_req),
    .clear_ack_i(b_clear_ack_i),
    .clear_i(b_clear_i),
    .clear_o(b_clear_o),
    .clk_i(b_clk_i),
    .isolate_ack_i(b_isolate_ack_i),
    .isolate_o(b_isolate_o),
    .rst_ni(b_rst_ni)
  );
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:109.8" */
module \cdc_reset_ctrlr$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr (a_clk_i, a_rst_ni, a_clear_i, a_clear_o, a_clear_ack_i, a_isolate_o, a_isolate_ack_i, b_clk_i, b_rst_ni, b_clear_i, b_clear_o, b_clear_ack_i, b_isolate_o, b_isolate_ack_i);
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:125.15" */
  input a_clear_ack_i;
  wire a_clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:123.16" */
  input a_clear_i;
  wire a_clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:124.16" */
  output a_clear_o;
  wire a_clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:121.16" */
  input a_clk_i;
  wire a_clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:127.16" */
  input a_isolate_ack_i;
  wire a_isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:126.16" */
  output a_isolate_o;
  wire a_isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:122.16" */
  input a_rst_ni;
  wire a_rst_ni;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:143.31" */
  wire async_a2b_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:141.21" */
  wire [1:0] async_a2b_next_phase;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:139.16" */
  wire async_a2b_req;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:139.31" */
  wire async_b2a_ack;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:145.21" */
  wire [1:0] async_b2a_next_phase;
  /* keep = "true" */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:143.16" */
  wire async_b2a_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:133.16" */
  input b_clear_ack_i;
  wire b_clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:131.16" */
  input b_clear_i;
  wire b_clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:132.16" */
  output b_clear_o;
  wire b_clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:129.16" */
  input b_clk_i;
  wire b_clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:135.16" */
  input b_isolate_ack_i;
  wire b_isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:134.16" */
  output b_isolate_o;
  wire b_isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:130.16" */
  input b_rst_ni;
  wire b_rst_ni;
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:150.5" */
  \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a  i_cdc_reset_ctrlr_half_a (
    .async_ack_i(async_b2a_ack),
    .async_ack_o(async_a2b_ack),
    .async_next_phase_i(async_b2a_next_phase),
    .async_next_phase_o(async_a2b_next_phase),
    .async_req_i(async_b2a_req),
    .async_req_o(async_a2b_req),
    .clear_ack_i(a_clear_ack_i),
    .clear_i(a_clear_i),
    .clear_o(a_clear_o),
    .clk_i(a_clk_i),
    .isolate_ack_i(a_isolate_ack_i),
    .isolate_o(a_isolate_o),
    .rst_ni(a_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:169.5" */
  \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b  i_cdc_reset_ctrlr_half_b (
    .async_ack_i(async_a2b_ack),
    .async_ack_o(async_b2a_ack),
    .async_next_phase_i(async_a2b_next_phase),
    .async_next_phase_o(async_b2a_next_phase),
    .async_req_i(async_a2b_req),
    .async_req_o(async_b2a_req),
    .clear_ack_i(b_clear_ack_i),
    .clear_i(b_clear_i),
    .clear_o(b_clear_o),
    .clk_i(b_clk_i),
    .isolate_ack_i(b_isolate_ack_i),
    .isolate_o(b_isolate_o),
    .rst_ni(b_rst_ni)
  );
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$auto$builder.cc:338:Biop$10126 ;
  wire \$auto$builder.cc:338:Biop$10143 ;
  wire \$auto$builder.cc:338:Biop$10182 ;
  wire \$auto$builder.cc:338:Biop$10199 ;
  wire \$auto$builder.cc:338:Biop$10201 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10123 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10128 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10130 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10132 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10137 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10140 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10145 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10147 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10149 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10154 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10157 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10160 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10163 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10184 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10188 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10172 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10175 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10178 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10180 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10169 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10166 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10168 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10167 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10124 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10133 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10134 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10135 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10138 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10141 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10150 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10151 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10152 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10155 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10158 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10161 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10164 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10165 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:373.7-378.10" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_q$10173 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10191 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10194 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10197 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10190 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10193 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10196 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10189 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10192 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10195 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10185 ;
  wire \$procmux$12291_Y ;
  wire \$procmux$12292_CMP ;
  wire \$procmux$12293_CMP ;
  wire \$procmux$12294_CMP ;
  wire \$procmux$12295_CMP ;
  wire \$procmux$12297_Y ;
  wire \$procmux$12298_CMP ;
  wire \$procmux$12299_Y ;
  wire \$procmux$12300_CMP ;
  wire \$procmux$12301_CMP ;
  wire \$procmux$12302_CMP ;
  wire \$procmux$12303_CMP ;
  wire \$procmux$12305_Y ;
  wire \$procmux$12306_CMP ;
  wire \$procmux$12308_Y ;
  wire \$procmux$12309_CMP ;
  wire \$procmux$12313_Y ;
  wire \$procmux$12314_CMP ;
  wire \$procmux$12318_Y ;
  wire \$procmux$12319_CMP ;
  wire \$procmux$12323_Y ;
  wire \$procmux$12324_CMP ;
  wire \$procmux$12326_Y ;
  wire \$procmux$12327_CMP ;
  wire \$procmux$12328_CMP ;
  wire \$procmux$12329_CMP ;
  wire \$procmux$12330_CMP ;
  wire \$procmux$12331_Y ;
  wire \$procmux$12332_CMP ;
  wire \$procmux$12334_Y ;
  wire \$procmux$12335_CMP ;
  wire \$procmux$12336_CMP ;
  wire \$procmux$12337_CMP ;
  wire \$procmux$12338_CMP ;
  wire \$procmux$12339_Y ;
  wire \$procmux$12340_CMP ;
  wire \$procmux$12342_Y ;
  wire \$procmux$12343_CMP ;
  wire \$procmux$12344_CMP ;
  wire \$procmux$12345_CMP ;
  wire \$procmux$12346_CMP ;
  wire \$procmux$12347_Y ;
  wire \$procmux$12348_CMP ;
  wire [1:0] \$procmux$12349_Y ;
  wire \$procmux$12350_CMP ;
  wire [3:0] \$procmux$12352_Y ;
  wire \$procmux$12353_CMP ;
  wire [3:0] \$procmux$12354_Y ;
  wire \$procmux$12355_CMP ;
  wire [3:0] \$procmux$12358_Y ;
  wire \$procmux$12359_CMP ;
  wire [3:0] \$procmux$12360_Y ;
  wire \$procmux$12361_CMP ;
  wire [3:0] \$procmux$12365_Y ;
  wire \$procmux$12366_CMP ;
  wire [3:0] \$procmux$12367_Y ;
  wire \$procmux$12368_CMP ;
  wire [3:0] \$procmux$12373_Y ;
  wire \$procmux$12374_CMP ;
  wire [3:0] \$procmux$12375_Y ;
  wire \$procmux$12376_CMP ;
  wire [3:0] \$procmux$12382_Y ;
  wire \$procmux$12383_CMP ;
  wire [3:0] \$procmux$12385_Y ;
  wire \$procmux$12386_CMP ;
  wire [3:0] \$procmux$12388_Y ;
  wire \$procmux$12389_CMP ;
  wire [3:0] \$procmux$12390_Y ;
  wire \$procmux$12391_CMP ;
  wire [3:0] \$procmux$12399_Y ;
  wire \$procmux$12400_CMP ;
  wire [3:0] \$procmux$12402_Y ;
  wire \$procmux$12403_CMP ;
  wire [3:0] \$procmux$12404_Y ;
  wire \$procmux$12405_CMP ;
  wire [3:0] \$procmux$12413_Y ;
  wire \$procmux$12414_CMP ;
  wire [3:0] \$procmux$12415_Y ;
  wire \$procmux$12416_CMP ;
  wire [3:0] \$procmux$12423_Y ;
  wire \$procmux$12424_CMP ;
  wire [3:0] \$procmux$12425_Y ;
  wire \$procmux$12426_CMP ;
  wire [3:0] \$procmux$12434_Y ;
  wire \$procmux$12435_CMP ;
  wire [3:0] \$procmux$12436_Y ;
  wire \$procmux$12437_CMP ;
  wire [3:0] \$procmux$12446_Y ;
  wire \$procmux$12447_CMP ;
  wire [3:0] \$procmux$12449_Y ;
  wire \$procmux$12450_CMP ;
  wire [3:0] \$procmux$12452_Y ;
  wire \$procmux$12453_CMP ;
  wire [3:0] \$procmux$12454_Y ;
  wire \$procmux$12455_CMP ;
  wire [3:0] \$procmux$12466_Y ;
  wire \$procmux$12467_CMP ;
  wire [3:0] \$procmux$12469_Y ;
  wire \$procmux$12470_CMP ;
  wire [3:0] \$procmux$12471_Y ;
  wire \$procmux$12472_CMP ;
  wire [3:0] \$procmux$12483_Y ;
  wire \$procmux$12484_CMP ;
  wire [3:0] \$procmux$12485_Y ;
  wire \$procmux$12486_CMP ;
  wire [3:0] \$procmux$12489_Y ;
  wire \$procmux$12490_CMP ;
  wire \$procmux$12492_CMP ;
  wire \$procmux$12494_CMP ;
  wire \$procmux$12496_CMP ;
  wire \$procmux$12498_CMP ;
  wire \$procmux$12500_CMP ;
  wire \$procmux$12502_CMP ;
  wire \$procmux$12504_CMP ;
  wire \$procmux$12506_CMP ;
  wire [3:0] \$procmux$12516_Y ;
  wire \$procmux$12517_CMP ;
  wire [3:0] \$procmux$12518_Y ;
  wire \$procmux$12519_CMP ;
  wire \$procmux$12526_Y ;
  wire \$procmux$12527_CMP ;
  wire \$procmux$12529_CMP ;
  wire \$procmux$12531_CMP ;
  wire \$procmux$12537_Y ;
  wire \$procmux$12538_CMP ;
  wire \$procmux$12540_CMP ;
  wire \$procmux$12542_CMP ;
  wire \$procmux$12544_CMP ;
  wire \$procmux$12546_CMP ;
  wire \$procmux$12548_CMP ;
  wire \$procmux$12550_CMP ;
  wire \$procmux$12552_CMP ;
  wire \$procmux$12555_Y ;
  wire \$procmux$12556_CMP ;
  wire \$procmux$12558_CMP ;
  wire \$procmux$12560_CMP ;
  wire \$procmux$12563_CMP ;
  wire \$procmux$12565_CMP ;
  wire \$procmux$12568_CMP ;
  wire [1:0] \$procmux$12573_Y ;
  wire \$procmux$12574_CMP ;
  wire \$procmux$12576_CMP ;
  wire \$procmux$12578_CMP ;
  wire \$procmux$12580_CMP ;
  wire \$procmux$12582_CMP ;
  wire \$procmux$12584_CMP ;
  wire \$procmux$12586_CMP ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10171  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10172 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10177  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10178 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10125  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$auto$builder.cc:338:Biop$10126 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10142  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$auto$builder.cc:338:Biop$10143 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10181  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$auto$builder.cc:338:Biop$10182 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10198  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(\$auto$builder.cc:338:Biop$10199 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10200  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(\$auto$builder.cc:338:Biop$10201 )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$initiator_state_q  (
    .AD(4'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .Q(initiator_state_q)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$receiver_phase_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10185 ),
    .Q(receiver_phase_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$12291  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$12295_CMP , \$procmux$12294_CMP , \$procmux$12293_CMP , \$procmux$12292_CMP  }),
    .Y(\$procmux$12291_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12292_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$12292_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12293_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$12293_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12294_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$12294_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12295_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$12295_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12297  (
    .A(\$procmux$12291_Y ),
    .B(1'hx),
    .S(\$procmux$12298_CMP ),
    .Y(\$procmux$12297_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$12299  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$12303_CMP , \$procmux$12302_CMP , \$procmux$12301_CMP , \$procmux$12300_CMP  }),
    .Y(\$procmux$12299_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12300_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$12300_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12301_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$12301_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12302_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$12302_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12303_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$12303_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12305  (
    .A(\$procmux$12299_Y ),
    .B(1'hx),
    .S(\$procmux$12306_CMP ),
    .Y(\$procmux$12305_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12308  (
    .A(1'h0),
    .B(1'hx),
    .S(\$procmux$12309_CMP ),
    .Y(\$procmux$12308_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12313  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10194 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10191 ),
    .S(\$procmux$12314_CMP ),
    .Y(\$procmux$12313_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12318  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10193 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10190 ),
    .S(\$procmux$12319_CMP ),
    .Y(\$procmux$12318_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12323  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10192 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10189 ),
    .S(\$procmux$12324_CMP ),
    .Y(\$procmux$12323_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$12326  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$12330_CMP , \$procmux$12329_CMP , \$procmux$12328_CMP , \$procmux$12327_CMP  }),
    .Y(\$procmux$12326_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12327_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$12327_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12328_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$12328_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12329_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$12329_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12330_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$12330_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12331  (
    .A(1'hx),
    .B(\$procmux$12326_Y ),
    .S(\$procmux$12332_CMP ),
    .Y(\$procmux$12331_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$12334  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$12338_CMP , \$procmux$12337_CMP , \$procmux$12336_CMP , \$procmux$12335_CMP  }),
    .Y(\$procmux$12334_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12335_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$12335_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12336_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$12336_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12337_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$12337_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12338_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$12338_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12339  (
    .A(1'hx),
    .B(\$procmux$12334_Y ),
    .S(\$procmux$12340_CMP ),
    .Y(\$procmux$12339_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$12342  (
    .A(1'hx),
    .B({ 1'h1, isolate_ack_i, clear_ack_i, 1'h1 }),
    .S({ \$procmux$12346_CMP , \$procmux$12345_CMP , \$procmux$12344_CMP , \$procmux$12343_CMP  }),
    .Y(\$procmux$12342_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12343_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$12343_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12344_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$12344_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12345_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$12345_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12346_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$12346_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12347  (
    .A(1'hx),
    .B(\$procmux$12342_Y ),
    .S(\$procmux$12348_CMP ),
    .Y(\$procmux$12347_Y )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:442.7-442.47|../rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12349  (
    .A(receiver_phase_q),
    .B(receiver_next_phase),
    .S(\$procmux$12350_CMP ),
    .Y(\$procmux$12349_Y )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:361.11-361.36|../rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12352  (
    .A(initiator_state_q),
    .B(4'h0),
    .S(\$procmux$12353_CMP ),
    .Y(\$procmux$12352_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12354  (
    .A(4'hx),
    .B(\$procmux$12352_Y ),
    .S(\$procmux$12355_CMP ),
    .Y(\$procmux$12354_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12355_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$12355_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:351.11-351.40|../rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12358  (
    .A(initiator_state_q),
    .B(4'h8),
    .S(\$procmux$12359_CMP ),
    .Y(\$procmux$12358_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12360  (
    .A(4'hx),
    .B(\$procmux$12358_Y ),
    .S(\$procmux$12361_CMP ),
    .Y(\$procmux$12360_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12361_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$12361_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:341.11-341.42|../rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12365  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$12366_CMP ),
    .Y(\$procmux$12365_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12367  (
    .A(4'hx),
    .B(\$procmux$12365_Y ),
    .S(\$procmux$12368_CMP ),
    .Y(\$procmux$12367_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12368_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12368_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:331.11-331.42|../rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12373  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$12374_CMP ),
    .Y(\$procmux$12373_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12375  (
    .A(4'hx),
    .B(\$procmux$12373_Y ),
    .S(\$procmux$12376_CMP ),
    .Y(\$procmux$12375_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12376_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$12376_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:322.11-322.52|../rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12382  (
    .A(initiator_state_q),
    .B(4'h5),
    .S(\$procmux$12383_CMP ),
    .Y(\$procmux$12382_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12385  (
    .A(\$procmux$12382_Y ),
    .B(4'hx),
    .S(\$procmux$12386_CMP ),
    .Y(\$procmux$12385_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12388  (
    .A(\$procmux$12385_Y ),
    .B(4'hx),
    .S(\$procmux$12389_CMP ),
    .Y(\$procmux$12388_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12390  (
    .A(4'hx),
    .B(\$procmux$12388_Y ),
    .S(\$procmux$12391_CMP ),
    .Y(\$procmux$12390_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12391_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12391_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12399  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10150 ),
    .B(4'h6),
    .S(\$procmux$12400_CMP ),
    .Y(\$procmux$12399_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12402  (
    .A(\$procmux$12399_Y ),
    .B(4'hx),
    .S(\$procmux$12403_CMP ),
    .Y(\$procmux$12402_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12404  (
    .A(4'hx),
    .B(\$procmux$12402_Y ),
    .S(\$procmux$12405_CMP ),
    .Y(\$procmux$12404_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12405_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12405_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12413  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10151 ),
    .B(4'h7),
    .S(\$procmux$12414_CMP ),
    .Y(\$procmux$12413_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12415  (
    .A(4'hx),
    .B(\$procmux$12413_Y ),
    .S(\$procmux$12416_CMP ),
    .Y(\$procmux$12415_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12416_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12416_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:308.11-308.37|../rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12423  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$12424_CMP ),
    .Y(\$procmux$12423_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12425  (
    .A(4'hx),
    .B(\$procmux$12423_Y ),
    .S(\$procmux$12426_CMP ),
    .Y(\$procmux$12425_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12426_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$12426_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:298.11-298.37|../rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12434  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$12435_CMP ),
    .Y(\$procmux$12434_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12436  (
    .A(4'hx),
    .B(\$procmux$12434_Y ),
    .S(\$procmux$12437_CMP ),
    .Y(\$procmux$12436_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12437_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$12437_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:289.11-289.54|../rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12446  (
    .A(initiator_state_q),
    .B(4'h2),
    .S(\$procmux$12447_CMP ),
    .Y(\$procmux$12446_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12449  (
    .A(\$procmux$12446_Y ),
    .B(4'hx),
    .S(\$procmux$12450_CMP ),
    .Y(\$procmux$12449_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12452  (
    .A(\$procmux$12449_Y ),
    .B(4'hx),
    .S(\$procmux$12453_CMP ),
    .Y(\$procmux$12452_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12454  (
    .A(4'hx),
    .B(\$procmux$12452_Y ),
    .S(\$procmux$12455_CMP ),
    .Y(\$procmux$12454_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12455_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12455_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12466  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10133 ),
    .B(4'h3),
    .S(\$procmux$12467_CMP ),
    .Y(\$procmux$12466_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12469  (
    .A(\$procmux$12466_Y ),
    .B(4'hx),
    .S(\$procmux$12470_CMP ),
    .Y(\$procmux$12469_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12471  (
    .A(4'hx),
    .B(\$procmux$12469_Y ),
    .S(\$procmux$12472_CMP ),
    .Y(\$procmux$12471_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12472_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12472_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12483  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10134 ),
    .B(4'h4),
    .S(\$procmux$12484_CMP ),
    .Y(\$procmux$12483_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12485  (
    .A(4'hx),
    .B(\$procmux$12483_Y ),
    .S(\$procmux$12486_CMP ),
    .Y(\$procmux$12485_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12486_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12486_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd9),
    .WIDTH(32'd4)
  ) \$procmux$12489  (
    .A(4'h1),
    .B({ \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10124 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10135 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10138 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10141 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10152 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10155 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10158 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10161 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10164  }),
    .S({ \$procmux$12506_CMP , \$procmux$12504_CMP , \$procmux$12502_CMP , \$procmux$12500_CMP , \$procmux$12498_CMP , \$procmux$12496_CMP , \$procmux$12494_CMP , \$procmux$12492_CMP , \$procmux$12490_CMP  }),
    .Y(\$procmux$12489_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12490_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$12490_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12492_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$12492_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12494_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12494_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12496_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$12496_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12498_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12498_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12500_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$12500_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12502_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$12502_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12504_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12504_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12506_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$12506_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:275.11-275.39|../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12516  (
    .A(initiator_state_q),
    .B(4'h1),
    .S(\$procmux$12517_CMP ),
    .Y(\$procmux$12516_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12518  (
    .A(4'hx),
    .B(\$procmux$12516_Y ),
    .S(\$procmux$12519_CMP ),
    .Y(\$procmux$12518_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12519_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$12519_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$12526  (
    .A(1'h0),
    .B(3'h7),
    .S({ \$procmux$12531_CMP , \$procmux$12529_CMP , \$procmux$12527_CMP  }),
    .Y(\$procmux$12526_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12527_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12527_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12529_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$12529_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12531_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12531_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd1)
  ) \$procmux$12537  (
    .A(1'h0),
    .B(8'hff),
    .S({ \$procmux$12552_CMP , \$procmux$12550_CMP , \$procmux$12548_CMP , \$procmux$12546_CMP , \$procmux$12544_CMP , \$procmux$12542_CMP , \$procmux$12540_CMP , \$procmux$12538_CMP  }),
    .Y(\$procmux$12537_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12538_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$12538_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12540_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$12540_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12542_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12542_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12544_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$12544_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12546_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12546_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12548_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$12548_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12550_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$12550_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12552_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12552_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd1)
  ) \$procmux$12555  (
    .A(1'h0),
    .B(6'h3f),
    .S({ \$procmux$12568_CMP , \$procmux$12565_CMP , \$procmux$12563_CMP , \$procmux$12560_CMP , \$procmux$12558_CMP , \$procmux$12556_CMP  }),
    .Y(\$procmux$12555_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12556_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$12556_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12558_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$12558_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12560_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12560_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12563_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12563_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12565_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$12565_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12568_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12568_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd2)
  ) \$procmux$12573  (
    .A(2'h0),
    .B(14'h15ab),
    .S({ \$procmux$12586_CMP , \$procmux$12584_CMP , \$procmux$12582_CMP , \$procmux$12580_CMP , \$procmux$12578_CMP , \$procmux$12576_CMP , \$procmux$12574_CMP  }),
    .Y(\$procmux$12573_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12574_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$12574_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12576_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12576_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12578_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$12578_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12580_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12580_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12582_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$12582_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12584_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$12584_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12586_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12586_CMP )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign initiator_state_d = \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10165 ;
  assign initiator_clear_seq_phase = \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10166 ;
  assign initiator_phase_transition_req = \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10167 ;
  assign initiator_isolate_out = \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10168 ;
  assign initiator_clear_out = \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10169 ;
  assign receiver_phase_ack = \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10195 ;
  assign receiver_isolate_out = \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10196 ;
  assign receiver_clear_out = \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10197 ;
  assign clear_o = \$auto$builder.cc:338:Biop$10199 ;
  assign isolate_o = \$auto$builder.cc:338:Biop$10201 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_q$10173  = 4'h1;
  assign \$procmux$12298_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10188 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10194  = \$procmux$12297_Y ;
  assign \$procmux$12306_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10188 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10193  = \$procmux$12305_Y ;
  assign \$procmux$12309_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10188 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10192  = \$procmux$12308_Y ;
  assign \$procmux$12314_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10188 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10197  = \$procmux$12313_Y ;
  assign \$procmux$12319_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10188 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10196  = \$procmux$12318_Y ;
  assign \$procmux$12324_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10188 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10195  = \$procmux$12323_Y ;
  assign \$procmux$12332_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10188 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10191  = \$procmux$12331_Y ;
  assign \$procmux$12340_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10188 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10190  = \$procmux$12339_Y ;
  assign \$procmux$12348_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10188 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10189  = \$procmux$12347_Y ;
  assign \$procmux$12350_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10184 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10185  = \$procmux$12349_Y ;
  assign \$procmux$12353_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10163 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10164  = \$procmux$12354_Y ;
  assign \$procmux$12359_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10160 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10161  = \$procmux$12360_Y ;
  assign \$procmux$12366_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10157 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10158  = \$procmux$12367_Y ;
  assign \$procmux$12374_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10154 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10155  = \$procmux$12375_Y ;
  assign \$procmux$12383_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10149 ;
  assign \$procmux$12386_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10147 ;
  assign \$procmux$12389_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10145 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10150  = \$procmux$12390_Y ;
  assign \$procmux$12400_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10147 ;
  assign \$procmux$12403_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10145 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10151  = \$procmux$12404_Y ;
  assign \$procmux$12414_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10145 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10152  = \$procmux$12415_Y ;
  assign \$procmux$12424_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10140 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10141  = \$procmux$12425_Y ;
  assign \$procmux$12435_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10137 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10138  = \$procmux$12436_Y ;
  assign \$procmux$12447_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10132 ;
  assign \$procmux$12450_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10130 ;
  assign \$procmux$12453_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10128 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10133  = \$procmux$12454_Y ;
  assign \$procmux$12467_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10130 ;
  assign \$procmux$12470_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10128 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10134  = \$procmux$12471_Y ;
  assign \$procmux$12484_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10128 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10135  = \$procmux$12485_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10165  = \$procmux$12489_Y ;
  assign \$procmux$12517_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10123 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10124  = \$procmux$12518_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10169  = \$procmux$12526_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10168  = \$procmux$12537_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10167  = \$procmux$12555_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10166  = \$procmux$12573_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10123  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10128  = \$auto$builder.cc:338:Biop$10126 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10130  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10132  = isolate_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10137  = isolate_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10140  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10145  = \$auto$builder.cc:338:Biop$10143 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10147  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10149  = clear_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10154  = clear_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10157  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10160  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10163  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2747:LogicNot$10175  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10180  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$10188  = receiver_phase_req;
  assign \$auto$rtlil.cc:2746:ReduceBool$10184  = \$auto$builder.cc:338:Biop$10182 ;
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$auto$builder.cc:338:Biop$10207 ;
  wire \$auto$builder.cc:338:Biop$10224 ;
  wire \$auto$builder.cc:338:Biop$10263 ;
  wire \$auto$builder.cc:338:Biop$10280 ;
  wire \$auto$builder.cc:338:Biop$10282 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10204 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10209 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10211 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10213 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10218 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10221 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10226 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10228 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10230 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10235 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10238 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10241 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10244 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10265 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10269 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10253 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10256 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10259 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10261 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10250 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10247 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10249 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10248 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10205 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10214 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10215 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10216 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10219 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10222 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10231 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10232 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10233 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10236 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10239 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10242 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10245 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10246 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:373.7-378.10" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_q$10254 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10272 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10275 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10278 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10271 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10274 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10277 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10270 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10273 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10276 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10266 ;
  wire \$procmux$11995_Y ;
  wire \$procmux$11996_CMP ;
  wire \$procmux$11997_CMP ;
  wire \$procmux$11998_CMP ;
  wire \$procmux$11999_CMP ;
  wire \$procmux$12001_Y ;
  wire \$procmux$12002_CMP ;
  wire \$procmux$12003_Y ;
  wire \$procmux$12004_CMP ;
  wire \$procmux$12005_CMP ;
  wire \$procmux$12006_CMP ;
  wire \$procmux$12007_CMP ;
  wire \$procmux$12009_Y ;
  wire \$procmux$12010_CMP ;
  wire \$procmux$12012_Y ;
  wire \$procmux$12013_CMP ;
  wire \$procmux$12017_Y ;
  wire \$procmux$12018_CMP ;
  wire \$procmux$12022_Y ;
  wire \$procmux$12023_CMP ;
  wire \$procmux$12027_Y ;
  wire \$procmux$12028_CMP ;
  wire \$procmux$12030_Y ;
  wire \$procmux$12031_CMP ;
  wire \$procmux$12032_CMP ;
  wire \$procmux$12033_CMP ;
  wire \$procmux$12034_CMP ;
  wire \$procmux$12035_Y ;
  wire \$procmux$12036_CMP ;
  wire \$procmux$12038_Y ;
  wire \$procmux$12039_CMP ;
  wire \$procmux$12040_CMP ;
  wire \$procmux$12041_CMP ;
  wire \$procmux$12042_CMP ;
  wire \$procmux$12043_Y ;
  wire \$procmux$12044_CMP ;
  wire \$procmux$12046_Y ;
  wire \$procmux$12047_CMP ;
  wire \$procmux$12048_CMP ;
  wire \$procmux$12049_CMP ;
  wire \$procmux$12050_CMP ;
  wire \$procmux$12051_Y ;
  wire \$procmux$12052_CMP ;
  wire [1:0] \$procmux$12053_Y ;
  wire \$procmux$12054_CMP ;
  wire [3:0] \$procmux$12056_Y ;
  wire \$procmux$12057_CMP ;
  wire [3:0] \$procmux$12058_Y ;
  wire \$procmux$12059_CMP ;
  wire [3:0] \$procmux$12062_Y ;
  wire \$procmux$12063_CMP ;
  wire [3:0] \$procmux$12064_Y ;
  wire \$procmux$12065_CMP ;
  wire [3:0] \$procmux$12069_Y ;
  wire \$procmux$12070_CMP ;
  wire [3:0] \$procmux$12071_Y ;
  wire \$procmux$12072_CMP ;
  wire [3:0] \$procmux$12077_Y ;
  wire \$procmux$12078_CMP ;
  wire [3:0] \$procmux$12079_Y ;
  wire \$procmux$12080_CMP ;
  wire [3:0] \$procmux$12086_Y ;
  wire \$procmux$12087_CMP ;
  wire [3:0] \$procmux$12089_Y ;
  wire \$procmux$12090_CMP ;
  wire [3:0] \$procmux$12092_Y ;
  wire \$procmux$12093_CMP ;
  wire [3:0] \$procmux$12094_Y ;
  wire \$procmux$12095_CMP ;
  wire [3:0] \$procmux$12103_Y ;
  wire \$procmux$12104_CMP ;
  wire [3:0] \$procmux$12106_Y ;
  wire \$procmux$12107_CMP ;
  wire [3:0] \$procmux$12108_Y ;
  wire \$procmux$12109_CMP ;
  wire [3:0] \$procmux$12117_Y ;
  wire \$procmux$12118_CMP ;
  wire [3:0] \$procmux$12119_Y ;
  wire \$procmux$12120_CMP ;
  wire [3:0] \$procmux$12127_Y ;
  wire \$procmux$12128_CMP ;
  wire [3:0] \$procmux$12129_Y ;
  wire \$procmux$12130_CMP ;
  wire [3:0] \$procmux$12138_Y ;
  wire \$procmux$12139_CMP ;
  wire [3:0] \$procmux$12140_Y ;
  wire \$procmux$12141_CMP ;
  wire [3:0] \$procmux$12150_Y ;
  wire \$procmux$12151_CMP ;
  wire [3:0] \$procmux$12153_Y ;
  wire \$procmux$12154_CMP ;
  wire [3:0] \$procmux$12156_Y ;
  wire \$procmux$12157_CMP ;
  wire [3:0] \$procmux$12158_Y ;
  wire \$procmux$12159_CMP ;
  wire [3:0] \$procmux$12170_Y ;
  wire \$procmux$12171_CMP ;
  wire [3:0] \$procmux$12173_Y ;
  wire \$procmux$12174_CMP ;
  wire [3:0] \$procmux$12175_Y ;
  wire \$procmux$12176_CMP ;
  wire [3:0] \$procmux$12187_Y ;
  wire \$procmux$12188_CMP ;
  wire [3:0] \$procmux$12189_Y ;
  wire \$procmux$12190_CMP ;
  wire [3:0] \$procmux$12193_Y ;
  wire \$procmux$12194_CMP ;
  wire \$procmux$12196_CMP ;
  wire \$procmux$12198_CMP ;
  wire \$procmux$12200_CMP ;
  wire \$procmux$12202_CMP ;
  wire \$procmux$12204_CMP ;
  wire \$procmux$12206_CMP ;
  wire \$procmux$12208_CMP ;
  wire \$procmux$12210_CMP ;
  wire [3:0] \$procmux$12220_Y ;
  wire \$procmux$12221_CMP ;
  wire [3:0] \$procmux$12222_Y ;
  wire \$procmux$12223_CMP ;
  wire \$procmux$12230_Y ;
  wire \$procmux$12231_CMP ;
  wire \$procmux$12233_CMP ;
  wire \$procmux$12235_CMP ;
  wire \$procmux$12241_Y ;
  wire \$procmux$12242_CMP ;
  wire \$procmux$12244_CMP ;
  wire \$procmux$12246_CMP ;
  wire \$procmux$12248_CMP ;
  wire \$procmux$12250_CMP ;
  wire \$procmux$12252_CMP ;
  wire \$procmux$12254_CMP ;
  wire \$procmux$12256_CMP ;
  wire \$procmux$12259_Y ;
  wire \$procmux$12260_CMP ;
  wire \$procmux$12262_CMP ;
  wire \$procmux$12264_CMP ;
  wire \$procmux$12267_CMP ;
  wire \$procmux$12269_CMP ;
  wire \$procmux$12272_CMP ;
  wire [1:0] \$procmux$12277_Y ;
  wire \$procmux$12278_CMP ;
  wire \$procmux$12280_CMP ;
  wire \$procmux$12282_CMP ;
  wire \$procmux$12284_CMP ;
  wire \$procmux$12286_CMP ;
  wire \$procmux$12288_CMP ;
  wire \$procmux$12290_CMP ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10252  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10253 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10258  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10259 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10206  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$auto$builder.cc:338:Biop$10207 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10223  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$auto$builder.cc:338:Biop$10224 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10262  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$auto$builder.cc:338:Biop$10263 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10279  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(\$auto$builder.cc:338:Biop$10280 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10281  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(\$auto$builder.cc:338:Biop$10282 )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$initiator_state_q  (
    .AD(4'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .Q(initiator_state_q)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$receiver_phase_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10266 ),
    .Q(receiver_phase_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$11995  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$11999_CMP , \$procmux$11998_CMP , \$procmux$11997_CMP , \$procmux$11996_CMP  }),
    .Y(\$procmux$11995_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11996_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$11996_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11997_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$11997_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11998_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$11998_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11999_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$11999_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12001  (
    .A(\$procmux$11995_Y ),
    .B(1'hx),
    .S(\$procmux$12002_CMP ),
    .Y(\$procmux$12001_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$12003  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$12007_CMP , \$procmux$12006_CMP , \$procmux$12005_CMP , \$procmux$12004_CMP  }),
    .Y(\$procmux$12003_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12004_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$12004_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12005_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$12005_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12006_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$12006_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12007_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$12007_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12009  (
    .A(\$procmux$12003_Y ),
    .B(1'hx),
    .S(\$procmux$12010_CMP ),
    .Y(\$procmux$12009_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12012  (
    .A(1'h0),
    .B(1'hx),
    .S(\$procmux$12013_CMP ),
    .Y(\$procmux$12012_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12017  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10275 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10272 ),
    .S(\$procmux$12018_CMP ),
    .Y(\$procmux$12017_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12022  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10274 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10271 ),
    .S(\$procmux$12023_CMP ),
    .Y(\$procmux$12022_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12027  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10273 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10270 ),
    .S(\$procmux$12028_CMP ),
    .Y(\$procmux$12027_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$12030  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$12034_CMP , \$procmux$12033_CMP , \$procmux$12032_CMP , \$procmux$12031_CMP  }),
    .Y(\$procmux$12030_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12031_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$12031_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12032_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$12032_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12033_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$12033_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12034_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$12034_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12035  (
    .A(1'hx),
    .B(\$procmux$12030_Y ),
    .S(\$procmux$12036_CMP ),
    .Y(\$procmux$12035_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$12038  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$12042_CMP , \$procmux$12041_CMP , \$procmux$12040_CMP , \$procmux$12039_CMP  }),
    .Y(\$procmux$12038_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12039_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$12039_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12040_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$12040_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12041_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$12041_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12042_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$12042_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12043  (
    .A(1'hx),
    .B(\$procmux$12038_Y ),
    .S(\$procmux$12044_CMP ),
    .Y(\$procmux$12043_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$12046  (
    .A(1'hx),
    .B({ 1'h1, isolate_ack_i, clear_ack_i, 1'h1 }),
    .S({ \$procmux$12050_CMP , \$procmux$12049_CMP , \$procmux$12048_CMP , \$procmux$12047_CMP  }),
    .Y(\$procmux$12046_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12047_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$12047_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12048_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$12048_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12049_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$12049_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12050_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$12050_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12051  (
    .A(1'hx),
    .B(\$procmux$12046_Y ),
    .S(\$procmux$12052_CMP ),
    .Y(\$procmux$12051_Y )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:442.7-442.47|../rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12053  (
    .A(receiver_phase_q),
    .B(receiver_next_phase),
    .S(\$procmux$12054_CMP ),
    .Y(\$procmux$12053_Y )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:361.11-361.36|../rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12056  (
    .A(initiator_state_q),
    .B(4'h0),
    .S(\$procmux$12057_CMP ),
    .Y(\$procmux$12056_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12058  (
    .A(4'hx),
    .B(\$procmux$12056_Y ),
    .S(\$procmux$12059_CMP ),
    .Y(\$procmux$12058_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12059_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$12059_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:351.11-351.40|../rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12062  (
    .A(initiator_state_q),
    .B(4'h8),
    .S(\$procmux$12063_CMP ),
    .Y(\$procmux$12062_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12064  (
    .A(4'hx),
    .B(\$procmux$12062_Y ),
    .S(\$procmux$12065_CMP ),
    .Y(\$procmux$12064_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12065_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$12065_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:341.11-341.42|../rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12069  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$12070_CMP ),
    .Y(\$procmux$12069_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12071  (
    .A(4'hx),
    .B(\$procmux$12069_Y ),
    .S(\$procmux$12072_CMP ),
    .Y(\$procmux$12071_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12072_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12072_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:331.11-331.42|../rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12077  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$12078_CMP ),
    .Y(\$procmux$12077_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12079  (
    .A(4'hx),
    .B(\$procmux$12077_Y ),
    .S(\$procmux$12080_CMP ),
    .Y(\$procmux$12079_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12080_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$12080_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:322.11-322.52|../rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12086  (
    .A(initiator_state_q),
    .B(4'h5),
    .S(\$procmux$12087_CMP ),
    .Y(\$procmux$12086_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12089  (
    .A(\$procmux$12086_Y ),
    .B(4'hx),
    .S(\$procmux$12090_CMP ),
    .Y(\$procmux$12089_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12092  (
    .A(\$procmux$12089_Y ),
    .B(4'hx),
    .S(\$procmux$12093_CMP ),
    .Y(\$procmux$12092_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12094  (
    .A(4'hx),
    .B(\$procmux$12092_Y ),
    .S(\$procmux$12095_CMP ),
    .Y(\$procmux$12094_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12095_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12095_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12103  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10231 ),
    .B(4'h6),
    .S(\$procmux$12104_CMP ),
    .Y(\$procmux$12103_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12106  (
    .A(\$procmux$12103_Y ),
    .B(4'hx),
    .S(\$procmux$12107_CMP ),
    .Y(\$procmux$12106_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12108  (
    .A(4'hx),
    .B(\$procmux$12106_Y ),
    .S(\$procmux$12109_CMP ),
    .Y(\$procmux$12108_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12109_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12109_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12117  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10232 ),
    .B(4'h7),
    .S(\$procmux$12118_CMP ),
    .Y(\$procmux$12117_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12119  (
    .A(4'hx),
    .B(\$procmux$12117_Y ),
    .S(\$procmux$12120_CMP ),
    .Y(\$procmux$12119_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12120_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12120_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:308.11-308.37|../rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12127  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$12128_CMP ),
    .Y(\$procmux$12127_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12129  (
    .A(4'hx),
    .B(\$procmux$12127_Y ),
    .S(\$procmux$12130_CMP ),
    .Y(\$procmux$12129_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12130_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$12130_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:298.11-298.37|../rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12138  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$12139_CMP ),
    .Y(\$procmux$12138_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12140  (
    .A(4'hx),
    .B(\$procmux$12138_Y ),
    .S(\$procmux$12141_CMP ),
    .Y(\$procmux$12140_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12141_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$12141_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:289.11-289.54|../rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12150  (
    .A(initiator_state_q),
    .B(4'h2),
    .S(\$procmux$12151_CMP ),
    .Y(\$procmux$12150_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12153  (
    .A(\$procmux$12150_Y ),
    .B(4'hx),
    .S(\$procmux$12154_CMP ),
    .Y(\$procmux$12153_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12156  (
    .A(\$procmux$12153_Y ),
    .B(4'hx),
    .S(\$procmux$12157_CMP ),
    .Y(\$procmux$12156_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12158  (
    .A(4'hx),
    .B(\$procmux$12156_Y ),
    .S(\$procmux$12159_CMP ),
    .Y(\$procmux$12158_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12159_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12159_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12170  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10214 ),
    .B(4'h3),
    .S(\$procmux$12171_CMP ),
    .Y(\$procmux$12170_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12173  (
    .A(\$procmux$12170_Y ),
    .B(4'hx),
    .S(\$procmux$12174_CMP ),
    .Y(\$procmux$12173_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12175  (
    .A(4'hx),
    .B(\$procmux$12173_Y ),
    .S(\$procmux$12176_CMP ),
    .Y(\$procmux$12175_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12176_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12176_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12187  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10215 ),
    .B(4'h4),
    .S(\$procmux$12188_CMP ),
    .Y(\$procmux$12187_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12189  (
    .A(4'hx),
    .B(\$procmux$12187_Y ),
    .S(\$procmux$12190_CMP ),
    .Y(\$procmux$12189_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12190_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12190_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd9),
    .WIDTH(32'd4)
  ) \$procmux$12193  (
    .A(4'h1),
    .B({ \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10205 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10216 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10219 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10222 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10233 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10236 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10239 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10242 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10245  }),
    .S({ \$procmux$12210_CMP , \$procmux$12208_CMP , \$procmux$12206_CMP , \$procmux$12204_CMP , \$procmux$12202_CMP , \$procmux$12200_CMP , \$procmux$12198_CMP , \$procmux$12196_CMP , \$procmux$12194_CMP  }),
    .Y(\$procmux$12193_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12194_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$12194_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12196_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$12196_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12198_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12198_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12200_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$12200_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12202_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12202_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12204_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$12204_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12206_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$12206_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12208_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12208_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12210_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$12210_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:275.11-275.39|../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12220  (
    .A(initiator_state_q),
    .B(4'h1),
    .S(\$procmux$12221_CMP ),
    .Y(\$procmux$12220_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12222  (
    .A(4'hx),
    .B(\$procmux$12220_Y ),
    .S(\$procmux$12223_CMP ),
    .Y(\$procmux$12222_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12223_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$12223_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$12230  (
    .A(1'h0),
    .B(3'h7),
    .S({ \$procmux$12235_CMP , \$procmux$12233_CMP , \$procmux$12231_CMP  }),
    .Y(\$procmux$12230_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12231_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12231_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12233_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$12233_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12235_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12235_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd1)
  ) \$procmux$12241  (
    .A(1'h0),
    .B(8'hff),
    .S({ \$procmux$12256_CMP , \$procmux$12254_CMP , \$procmux$12252_CMP , \$procmux$12250_CMP , \$procmux$12248_CMP , \$procmux$12246_CMP , \$procmux$12244_CMP , \$procmux$12242_CMP  }),
    .Y(\$procmux$12241_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12242_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$12242_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12244_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$12244_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12246_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12246_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12248_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$12248_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12250_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12250_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12252_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$12252_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12254_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$12254_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12256_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12256_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd1)
  ) \$procmux$12259  (
    .A(1'h0),
    .B(6'h3f),
    .S({ \$procmux$12272_CMP , \$procmux$12269_CMP , \$procmux$12267_CMP , \$procmux$12264_CMP , \$procmux$12262_CMP , \$procmux$12260_CMP  }),
    .Y(\$procmux$12259_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12260_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$12260_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12262_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$12262_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12264_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12264_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12267_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12267_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12269_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$12269_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12272_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12272_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd2)
  ) \$procmux$12277  (
    .A(2'h0),
    .B(14'h15ab),
    .S({ \$procmux$12290_CMP , \$procmux$12288_CMP , \$procmux$12286_CMP , \$procmux$12284_CMP , \$procmux$12282_CMP , \$procmux$12280_CMP , \$procmux$12278_CMP  }),
    .Y(\$procmux$12277_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12278_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$12278_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12280_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$12280_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12282_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$12282_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12284_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$12284_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12286_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$12286_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12288_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$12288_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12290_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$12290_CMP )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign initiator_state_d = \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10246 ;
  assign initiator_clear_seq_phase = \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10247 ;
  assign initiator_phase_transition_req = \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10248 ;
  assign initiator_isolate_out = \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10249 ;
  assign initiator_clear_out = \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10250 ;
  assign receiver_phase_ack = \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10276 ;
  assign receiver_isolate_out = \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10277 ;
  assign receiver_clear_out = \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10278 ;
  assign clear_o = \$auto$builder.cc:338:Biop$10280 ;
  assign isolate_o = \$auto$builder.cc:338:Biop$10282 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_q$10254  = 4'h1;
  assign \$procmux$12002_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10269 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10275  = \$procmux$12001_Y ;
  assign \$procmux$12010_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10269 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10274  = \$procmux$12009_Y ;
  assign \$procmux$12013_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10269 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10273  = \$procmux$12012_Y ;
  assign \$procmux$12018_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10269 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10278  = \$procmux$12017_Y ;
  assign \$procmux$12023_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10269 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10277  = \$procmux$12022_Y ;
  assign \$procmux$12028_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10269 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10276  = \$procmux$12027_Y ;
  assign \$procmux$12036_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10269 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10272  = \$procmux$12035_Y ;
  assign \$procmux$12044_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10269 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10271  = \$procmux$12043_Y ;
  assign \$procmux$12052_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10269 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10270  = \$procmux$12051_Y ;
  assign \$procmux$12054_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10265 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10266  = \$procmux$12053_Y ;
  assign \$procmux$12057_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10244 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10245  = \$procmux$12058_Y ;
  assign \$procmux$12063_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10241 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10242  = \$procmux$12064_Y ;
  assign \$procmux$12070_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10238 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10239  = \$procmux$12071_Y ;
  assign \$procmux$12078_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10235 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10236  = \$procmux$12079_Y ;
  assign \$procmux$12087_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10230 ;
  assign \$procmux$12090_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10228 ;
  assign \$procmux$12093_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10226 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10231  = \$procmux$12094_Y ;
  assign \$procmux$12104_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10228 ;
  assign \$procmux$12107_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10226 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10232  = \$procmux$12108_Y ;
  assign \$procmux$12118_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10226 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10233  = \$procmux$12119_Y ;
  assign \$procmux$12128_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10221 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10222  = \$procmux$12129_Y ;
  assign \$procmux$12139_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10218 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10219  = \$procmux$12140_Y ;
  assign \$procmux$12151_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10213 ;
  assign \$procmux$12154_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10211 ;
  assign \$procmux$12157_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10209 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10214  = \$procmux$12158_Y ;
  assign \$procmux$12171_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10211 ;
  assign \$procmux$12174_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10209 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10215  = \$procmux$12175_Y ;
  assign \$procmux$12188_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10209 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10216  = \$procmux$12189_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10246  = \$procmux$12193_Y ;
  assign \$procmux$12221_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10204 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10205  = \$procmux$12222_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10250  = \$procmux$12230_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10249  = \$procmux$12241_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10248  = \$procmux$12259_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10247  = \$procmux$12277_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10204  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10209  = \$auto$builder.cc:338:Biop$10207 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10211  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10213  = isolate_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10218  = isolate_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10221  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10226  = \$auto$builder.cc:338:Biop$10224 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10228  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10230  = clear_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10235  = clear_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10238  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10241  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10244  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2747:LogicNot$10256  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10261  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$10269  = receiver_phase_req;
  assign \$auto$rtlil.cc:2746:ReduceBool$10265  = \$auto$builder.cc:338:Biop$10263 ;
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$auto$builder.cc:338:Biop$10298 ;
  wire \$auto$builder.cc:338:Biop$10315 ;
  wire \$auto$builder.cc:338:Biop$10354 ;
  wire \$auto$builder.cc:338:Biop$10371 ;
  wire \$auto$builder.cc:338:Biop$10373 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10295 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10300 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10302 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10304 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10309 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10312 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10317 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10319 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10321 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10326 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10329 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10332 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10335 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10356 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10360 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10344 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10347 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10350 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10352 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10341 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10338 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10340 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10339 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10296 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10305 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10306 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10307 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10310 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10313 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10322 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10323 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10324 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10327 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10330 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10333 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10336 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10337 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:373.7-378.10" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_q$10345 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10363 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10366 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10369 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10362 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10365 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10368 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10361 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10364 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10367 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10357 ;
  wire \$procmux$11699_Y ;
  wire \$procmux$11700_CMP ;
  wire \$procmux$11701_CMP ;
  wire \$procmux$11702_CMP ;
  wire \$procmux$11703_CMP ;
  wire \$procmux$11705_Y ;
  wire \$procmux$11706_CMP ;
  wire \$procmux$11707_Y ;
  wire \$procmux$11708_CMP ;
  wire \$procmux$11709_CMP ;
  wire \$procmux$11710_CMP ;
  wire \$procmux$11711_CMP ;
  wire \$procmux$11713_Y ;
  wire \$procmux$11714_CMP ;
  wire \$procmux$11716_Y ;
  wire \$procmux$11717_CMP ;
  wire \$procmux$11721_Y ;
  wire \$procmux$11722_CMP ;
  wire \$procmux$11726_Y ;
  wire \$procmux$11727_CMP ;
  wire \$procmux$11731_Y ;
  wire \$procmux$11732_CMP ;
  wire \$procmux$11734_Y ;
  wire \$procmux$11735_CMP ;
  wire \$procmux$11736_CMP ;
  wire \$procmux$11737_CMP ;
  wire \$procmux$11738_CMP ;
  wire \$procmux$11739_Y ;
  wire \$procmux$11740_CMP ;
  wire \$procmux$11742_Y ;
  wire \$procmux$11743_CMP ;
  wire \$procmux$11744_CMP ;
  wire \$procmux$11745_CMP ;
  wire \$procmux$11746_CMP ;
  wire \$procmux$11747_Y ;
  wire \$procmux$11748_CMP ;
  wire \$procmux$11750_Y ;
  wire \$procmux$11751_CMP ;
  wire \$procmux$11752_CMP ;
  wire \$procmux$11753_CMP ;
  wire \$procmux$11754_CMP ;
  wire \$procmux$11755_Y ;
  wire \$procmux$11756_CMP ;
  wire [1:0] \$procmux$11757_Y ;
  wire \$procmux$11758_CMP ;
  wire [3:0] \$procmux$11760_Y ;
  wire \$procmux$11761_CMP ;
  wire [3:0] \$procmux$11762_Y ;
  wire \$procmux$11763_CMP ;
  wire [3:0] \$procmux$11766_Y ;
  wire \$procmux$11767_CMP ;
  wire [3:0] \$procmux$11768_Y ;
  wire \$procmux$11769_CMP ;
  wire [3:0] \$procmux$11773_Y ;
  wire \$procmux$11774_CMP ;
  wire [3:0] \$procmux$11775_Y ;
  wire \$procmux$11776_CMP ;
  wire [3:0] \$procmux$11781_Y ;
  wire \$procmux$11782_CMP ;
  wire [3:0] \$procmux$11783_Y ;
  wire \$procmux$11784_CMP ;
  wire [3:0] \$procmux$11790_Y ;
  wire \$procmux$11791_CMP ;
  wire [3:0] \$procmux$11793_Y ;
  wire \$procmux$11794_CMP ;
  wire [3:0] \$procmux$11796_Y ;
  wire \$procmux$11797_CMP ;
  wire [3:0] \$procmux$11798_Y ;
  wire \$procmux$11799_CMP ;
  wire [3:0] \$procmux$11807_Y ;
  wire \$procmux$11808_CMP ;
  wire [3:0] \$procmux$11810_Y ;
  wire \$procmux$11811_CMP ;
  wire [3:0] \$procmux$11812_Y ;
  wire \$procmux$11813_CMP ;
  wire [3:0] \$procmux$11821_Y ;
  wire \$procmux$11822_CMP ;
  wire [3:0] \$procmux$11823_Y ;
  wire \$procmux$11824_CMP ;
  wire [3:0] \$procmux$11831_Y ;
  wire \$procmux$11832_CMP ;
  wire [3:0] \$procmux$11833_Y ;
  wire \$procmux$11834_CMP ;
  wire [3:0] \$procmux$11842_Y ;
  wire \$procmux$11843_CMP ;
  wire [3:0] \$procmux$11844_Y ;
  wire \$procmux$11845_CMP ;
  wire [3:0] \$procmux$11854_Y ;
  wire \$procmux$11855_CMP ;
  wire [3:0] \$procmux$11857_Y ;
  wire \$procmux$11858_CMP ;
  wire [3:0] \$procmux$11860_Y ;
  wire \$procmux$11861_CMP ;
  wire [3:0] \$procmux$11862_Y ;
  wire \$procmux$11863_CMP ;
  wire [3:0] \$procmux$11874_Y ;
  wire \$procmux$11875_CMP ;
  wire [3:0] \$procmux$11877_Y ;
  wire \$procmux$11878_CMP ;
  wire [3:0] \$procmux$11879_Y ;
  wire \$procmux$11880_CMP ;
  wire [3:0] \$procmux$11891_Y ;
  wire \$procmux$11892_CMP ;
  wire [3:0] \$procmux$11893_Y ;
  wire \$procmux$11894_CMP ;
  wire [3:0] \$procmux$11897_Y ;
  wire \$procmux$11898_CMP ;
  wire \$procmux$11900_CMP ;
  wire \$procmux$11902_CMP ;
  wire \$procmux$11904_CMP ;
  wire \$procmux$11906_CMP ;
  wire \$procmux$11908_CMP ;
  wire \$procmux$11910_CMP ;
  wire \$procmux$11912_CMP ;
  wire \$procmux$11914_CMP ;
  wire [3:0] \$procmux$11924_Y ;
  wire \$procmux$11925_CMP ;
  wire [3:0] \$procmux$11926_Y ;
  wire \$procmux$11927_CMP ;
  wire \$procmux$11934_Y ;
  wire \$procmux$11935_CMP ;
  wire \$procmux$11937_CMP ;
  wire \$procmux$11939_CMP ;
  wire \$procmux$11945_Y ;
  wire \$procmux$11946_CMP ;
  wire \$procmux$11948_CMP ;
  wire \$procmux$11950_CMP ;
  wire \$procmux$11952_CMP ;
  wire \$procmux$11954_CMP ;
  wire \$procmux$11956_CMP ;
  wire \$procmux$11958_CMP ;
  wire \$procmux$11960_CMP ;
  wire \$procmux$11963_Y ;
  wire \$procmux$11964_CMP ;
  wire \$procmux$11966_CMP ;
  wire \$procmux$11968_CMP ;
  wire \$procmux$11971_CMP ;
  wire \$procmux$11973_CMP ;
  wire \$procmux$11976_CMP ;
  wire [1:0] \$procmux$11981_Y ;
  wire \$procmux$11982_CMP ;
  wire \$procmux$11984_CMP ;
  wire \$procmux$11986_CMP ;
  wire \$procmux$11988_CMP ;
  wire \$procmux$11990_CMP ;
  wire \$procmux$11992_CMP ;
  wire \$procmux$11994_CMP ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10343  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10344 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10349  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10350 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10297  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$auto$builder.cc:338:Biop$10298 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10314  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$auto$builder.cc:338:Biop$10315 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10353  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$auto$builder.cc:338:Biop$10354 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10370  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(\$auto$builder.cc:338:Biop$10371 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10372  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(\$auto$builder.cc:338:Biop$10373 )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$initiator_state_q  (
    .AD(4'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .Q(initiator_state_q)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$receiver_phase_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10357 ),
    .Q(receiver_phase_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$11699  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$11703_CMP , \$procmux$11702_CMP , \$procmux$11701_CMP , \$procmux$11700_CMP  }),
    .Y(\$procmux$11699_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11700_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$11700_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11701_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$11701_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11702_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$11702_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11703_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$11703_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11705  (
    .A(\$procmux$11699_Y ),
    .B(1'hx),
    .S(\$procmux$11706_CMP ),
    .Y(\$procmux$11705_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$11707  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$11711_CMP , \$procmux$11710_CMP , \$procmux$11709_CMP , \$procmux$11708_CMP  }),
    .Y(\$procmux$11707_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11708_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$11708_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11709_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$11709_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11710_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$11710_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11711_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$11711_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11713  (
    .A(\$procmux$11707_Y ),
    .B(1'hx),
    .S(\$procmux$11714_CMP ),
    .Y(\$procmux$11713_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11716  (
    .A(1'h0),
    .B(1'hx),
    .S(\$procmux$11717_CMP ),
    .Y(\$procmux$11716_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11721  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10366 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10363 ),
    .S(\$procmux$11722_CMP ),
    .Y(\$procmux$11721_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11726  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10365 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10362 ),
    .S(\$procmux$11727_CMP ),
    .Y(\$procmux$11726_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11731  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10364 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10361 ),
    .S(\$procmux$11732_CMP ),
    .Y(\$procmux$11731_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$11734  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$11738_CMP , \$procmux$11737_CMP , \$procmux$11736_CMP , \$procmux$11735_CMP  }),
    .Y(\$procmux$11734_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11735_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$11735_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11736_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$11736_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11737_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$11737_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11738_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$11738_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11739  (
    .A(1'hx),
    .B(\$procmux$11734_Y ),
    .S(\$procmux$11740_CMP ),
    .Y(\$procmux$11739_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$11742  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$11746_CMP , \$procmux$11745_CMP , \$procmux$11744_CMP , \$procmux$11743_CMP  }),
    .Y(\$procmux$11742_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11743_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$11743_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11744_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$11744_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11745_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$11745_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11746_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$11746_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11747  (
    .A(1'hx),
    .B(\$procmux$11742_Y ),
    .S(\$procmux$11748_CMP ),
    .Y(\$procmux$11747_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$11750  (
    .A(1'hx),
    .B({ 1'h1, isolate_ack_i, clear_ack_i, 1'h1 }),
    .S({ \$procmux$11754_CMP , \$procmux$11753_CMP , \$procmux$11752_CMP , \$procmux$11751_CMP  }),
    .Y(\$procmux$11750_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11751_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$11751_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11752_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$11752_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11753_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$11753_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11754_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$11754_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11755  (
    .A(1'hx),
    .B(\$procmux$11750_Y ),
    .S(\$procmux$11756_CMP ),
    .Y(\$procmux$11755_Y )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:442.7-442.47|../rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11757  (
    .A(receiver_phase_q),
    .B(receiver_next_phase),
    .S(\$procmux$11758_CMP ),
    .Y(\$procmux$11757_Y )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:361.11-361.36|../rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11760  (
    .A(initiator_state_q),
    .B(4'h0),
    .S(\$procmux$11761_CMP ),
    .Y(\$procmux$11760_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11762  (
    .A(4'hx),
    .B(\$procmux$11760_Y ),
    .S(\$procmux$11763_CMP ),
    .Y(\$procmux$11762_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11763_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$11763_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:351.11-351.40|../rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11766  (
    .A(initiator_state_q),
    .B(4'h8),
    .S(\$procmux$11767_CMP ),
    .Y(\$procmux$11766_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11768  (
    .A(4'hx),
    .B(\$procmux$11766_Y ),
    .S(\$procmux$11769_CMP ),
    .Y(\$procmux$11768_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11769_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$11769_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:341.11-341.42|../rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11773  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$11774_CMP ),
    .Y(\$procmux$11773_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11775  (
    .A(4'hx),
    .B(\$procmux$11773_Y ),
    .S(\$procmux$11776_CMP ),
    .Y(\$procmux$11775_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11776_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11776_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:331.11-331.42|../rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11781  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$11782_CMP ),
    .Y(\$procmux$11781_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11783  (
    .A(4'hx),
    .B(\$procmux$11781_Y ),
    .S(\$procmux$11784_CMP ),
    .Y(\$procmux$11783_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11784_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$11784_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:322.11-322.52|../rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11790  (
    .A(initiator_state_q),
    .B(4'h5),
    .S(\$procmux$11791_CMP ),
    .Y(\$procmux$11790_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11793  (
    .A(\$procmux$11790_Y ),
    .B(4'hx),
    .S(\$procmux$11794_CMP ),
    .Y(\$procmux$11793_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11796  (
    .A(\$procmux$11793_Y ),
    .B(4'hx),
    .S(\$procmux$11797_CMP ),
    .Y(\$procmux$11796_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11798  (
    .A(4'hx),
    .B(\$procmux$11796_Y ),
    .S(\$procmux$11799_CMP ),
    .Y(\$procmux$11798_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11799_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11799_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11807  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10322 ),
    .B(4'h6),
    .S(\$procmux$11808_CMP ),
    .Y(\$procmux$11807_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11810  (
    .A(\$procmux$11807_Y ),
    .B(4'hx),
    .S(\$procmux$11811_CMP ),
    .Y(\$procmux$11810_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11812  (
    .A(4'hx),
    .B(\$procmux$11810_Y ),
    .S(\$procmux$11813_CMP ),
    .Y(\$procmux$11812_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11813_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11813_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11821  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10323 ),
    .B(4'h7),
    .S(\$procmux$11822_CMP ),
    .Y(\$procmux$11821_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11823  (
    .A(4'hx),
    .B(\$procmux$11821_Y ),
    .S(\$procmux$11824_CMP ),
    .Y(\$procmux$11823_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11824_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11824_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:308.11-308.37|../rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11831  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$11832_CMP ),
    .Y(\$procmux$11831_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11833  (
    .A(4'hx),
    .B(\$procmux$11831_Y ),
    .S(\$procmux$11834_CMP ),
    .Y(\$procmux$11833_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11834_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$11834_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:298.11-298.37|../rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11842  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$11843_CMP ),
    .Y(\$procmux$11842_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11844  (
    .A(4'hx),
    .B(\$procmux$11842_Y ),
    .S(\$procmux$11845_CMP ),
    .Y(\$procmux$11844_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11845_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$11845_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:289.11-289.54|../rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11854  (
    .A(initiator_state_q),
    .B(4'h2),
    .S(\$procmux$11855_CMP ),
    .Y(\$procmux$11854_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11857  (
    .A(\$procmux$11854_Y ),
    .B(4'hx),
    .S(\$procmux$11858_CMP ),
    .Y(\$procmux$11857_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11860  (
    .A(\$procmux$11857_Y ),
    .B(4'hx),
    .S(\$procmux$11861_CMP ),
    .Y(\$procmux$11860_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11862  (
    .A(4'hx),
    .B(\$procmux$11860_Y ),
    .S(\$procmux$11863_CMP ),
    .Y(\$procmux$11862_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11863_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11863_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11874  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10305 ),
    .B(4'h3),
    .S(\$procmux$11875_CMP ),
    .Y(\$procmux$11874_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11877  (
    .A(\$procmux$11874_Y ),
    .B(4'hx),
    .S(\$procmux$11878_CMP ),
    .Y(\$procmux$11877_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11879  (
    .A(4'hx),
    .B(\$procmux$11877_Y ),
    .S(\$procmux$11880_CMP ),
    .Y(\$procmux$11879_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11880_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11880_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11891  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10306 ),
    .B(4'h4),
    .S(\$procmux$11892_CMP ),
    .Y(\$procmux$11891_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11893  (
    .A(4'hx),
    .B(\$procmux$11891_Y ),
    .S(\$procmux$11894_CMP ),
    .Y(\$procmux$11893_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11894_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11894_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd9),
    .WIDTH(32'd4)
  ) \$procmux$11897  (
    .A(4'h1),
    .B({ \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10296 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10307 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10310 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10313 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10324 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10327 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10330 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10333 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10336  }),
    .S({ \$procmux$11914_CMP , \$procmux$11912_CMP , \$procmux$11910_CMP , \$procmux$11908_CMP , \$procmux$11906_CMP , \$procmux$11904_CMP , \$procmux$11902_CMP , \$procmux$11900_CMP , \$procmux$11898_CMP  }),
    .Y(\$procmux$11897_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11898_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$11898_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11900_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$11900_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11902_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11902_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11904_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$11904_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11906_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11906_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11908_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$11908_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11910_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$11910_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11912_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11912_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11914_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$11914_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:275.11-275.39|../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11924  (
    .A(initiator_state_q),
    .B(4'h1),
    .S(\$procmux$11925_CMP ),
    .Y(\$procmux$11924_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11926  (
    .A(4'hx),
    .B(\$procmux$11924_Y ),
    .S(\$procmux$11927_CMP ),
    .Y(\$procmux$11926_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11927_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$11927_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$11934  (
    .A(1'h0),
    .B(3'h7),
    .S({ \$procmux$11939_CMP , \$procmux$11937_CMP , \$procmux$11935_CMP  }),
    .Y(\$procmux$11934_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11935_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11935_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11937_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$11937_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11939_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11939_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd1)
  ) \$procmux$11945  (
    .A(1'h0),
    .B(8'hff),
    .S({ \$procmux$11960_CMP , \$procmux$11958_CMP , \$procmux$11956_CMP , \$procmux$11954_CMP , \$procmux$11952_CMP , \$procmux$11950_CMP , \$procmux$11948_CMP , \$procmux$11946_CMP  }),
    .Y(\$procmux$11945_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11946_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$11946_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11948_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$11948_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11950_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11950_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11952_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$11952_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11954_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11954_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11956_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$11956_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11958_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$11958_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11960_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11960_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd1)
  ) \$procmux$11963  (
    .A(1'h0),
    .B(6'h3f),
    .S({ \$procmux$11976_CMP , \$procmux$11973_CMP , \$procmux$11971_CMP , \$procmux$11968_CMP , \$procmux$11966_CMP , \$procmux$11964_CMP  }),
    .Y(\$procmux$11963_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11964_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$11964_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11966_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$11966_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11968_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11968_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11971_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11971_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11973_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$11973_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11976_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11976_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd2)
  ) \$procmux$11981  (
    .A(2'h0),
    .B(14'h15ab),
    .S({ \$procmux$11994_CMP , \$procmux$11992_CMP , \$procmux$11990_CMP , \$procmux$11988_CMP , \$procmux$11986_CMP , \$procmux$11984_CMP , \$procmux$11982_CMP  }),
    .Y(\$procmux$11981_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11982_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$11982_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11984_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11984_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11986_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$11986_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11988_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11988_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11990_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$11990_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11992_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$11992_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11994_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11994_CMP )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign initiator_state_d = \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10337 ;
  assign initiator_clear_seq_phase = \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10338 ;
  assign initiator_phase_transition_req = \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10339 ;
  assign initiator_isolate_out = \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10340 ;
  assign initiator_clear_out = \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10341 ;
  assign receiver_phase_ack = \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10367 ;
  assign receiver_isolate_out = \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10368 ;
  assign receiver_clear_out = \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10369 ;
  assign clear_o = \$auto$builder.cc:338:Biop$10371 ;
  assign isolate_o = \$auto$builder.cc:338:Biop$10373 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_q$10345  = 4'h1;
  assign \$procmux$11706_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10360 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10366  = \$procmux$11705_Y ;
  assign \$procmux$11714_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10360 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10365  = \$procmux$11713_Y ;
  assign \$procmux$11717_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10360 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10364  = \$procmux$11716_Y ;
  assign \$procmux$11722_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10360 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10369  = \$procmux$11721_Y ;
  assign \$procmux$11727_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10360 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10368  = \$procmux$11726_Y ;
  assign \$procmux$11732_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10360 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10367  = \$procmux$11731_Y ;
  assign \$procmux$11740_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10360 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10363  = \$procmux$11739_Y ;
  assign \$procmux$11748_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10360 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10362  = \$procmux$11747_Y ;
  assign \$procmux$11756_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10360 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10361  = \$procmux$11755_Y ;
  assign \$procmux$11758_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10356 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10357  = \$procmux$11757_Y ;
  assign \$procmux$11761_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10335 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10336  = \$procmux$11762_Y ;
  assign \$procmux$11767_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10332 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10333  = \$procmux$11768_Y ;
  assign \$procmux$11774_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10329 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10330  = \$procmux$11775_Y ;
  assign \$procmux$11782_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10326 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10327  = \$procmux$11783_Y ;
  assign \$procmux$11791_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10321 ;
  assign \$procmux$11794_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10319 ;
  assign \$procmux$11797_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10317 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10322  = \$procmux$11798_Y ;
  assign \$procmux$11808_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10319 ;
  assign \$procmux$11811_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10317 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10323  = \$procmux$11812_Y ;
  assign \$procmux$11822_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10317 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10324  = \$procmux$11823_Y ;
  assign \$procmux$11832_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10312 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10313  = \$procmux$11833_Y ;
  assign \$procmux$11843_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10309 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10310  = \$procmux$11844_Y ;
  assign \$procmux$11855_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10304 ;
  assign \$procmux$11858_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10302 ;
  assign \$procmux$11861_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10300 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10305  = \$procmux$11862_Y ;
  assign \$procmux$11875_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10302 ;
  assign \$procmux$11878_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10300 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10306  = \$procmux$11879_Y ;
  assign \$procmux$11892_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10300 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10307  = \$procmux$11893_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10337  = \$procmux$11897_Y ;
  assign \$procmux$11925_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10295 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10296  = \$procmux$11926_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10341  = \$procmux$11934_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10340  = \$procmux$11945_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10339  = \$procmux$11963_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10338  = \$procmux$11981_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10295  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10300  = \$auto$builder.cc:338:Biop$10298 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10302  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10304  = isolate_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10309  = isolate_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10312  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10317  = \$auto$builder.cc:338:Biop$10315 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10319  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10321  = clear_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10326  = clear_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10329  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10332  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10335  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2747:LogicNot$10347  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10352  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$10360  = receiver_phase_req;
  assign \$auto$rtlil.cc:2746:ReduceBool$10356  = \$auto$builder.cc:338:Biop$10354 ;
endmodule

/* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$auto$builder.cc:338:Biop$10379 ;
  wire \$auto$builder.cc:338:Biop$10396 ;
  wire \$auto$builder.cc:338:Biop$10435 ;
  wire \$auto$builder.cc:338:Biop$10452 ;
  wire \$auto$builder.cc:338:Biop$10454 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10376 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10381 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10383 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10385 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10390 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10393 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10398 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10400 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10402 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10407 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10410 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10413 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10416 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10437 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10441 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10425 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10428 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10431 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10433 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10422 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10419 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10421 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10420 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10377 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10386 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10387 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10388 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10391 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10394 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10403 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10404 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10405 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10408 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10411 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10414 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10417 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10418 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:373.7-378.10" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\initiator_state_q$10426 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10444 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10447 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10450 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10443 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10446 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10449 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10442 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10445 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10448 ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10438 ;
  wire \$procmux$11403_Y ;
  wire \$procmux$11404_CMP ;
  wire \$procmux$11405_CMP ;
  wire \$procmux$11406_CMP ;
  wire \$procmux$11407_CMP ;
  wire \$procmux$11409_Y ;
  wire \$procmux$11410_CMP ;
  wire \$procmux$11411_Y ;
  wire \$procmux$11412_CMP ;
  wire \$procmux$11413_CMP ;
  wire \$procmux$11414_CMP ;
  wire \$procmux$11415_CMP ;
  wire \$procmux$11417_Y ;
  wire \$procmux$11418_CMP ;
  wire \$procmux$11420_Y ;
  wire \$procmux$11421_CMP ;
  wire \$procmux$11425_Y ;
  wire \$procmux$11426_CMP ;
  wire \$procmux$11430_Y ;
  wire \$procmux$11431_CMP ;
  wire \$procmux$11435_Y ;
  wire \$procmux$11436_CMP ;
  wire \$procmux$11438_Y ;
  wire \$procmux$11439_CMP ;
  wire \$procmux$11440_CMP ;
  wire \$procmux$11441_CMP ;
  wire \$procmux$11442_CMP ;
  wire \$procmux$11443_Y ;
  wire \$procmux$11444_CMP ;
  wire \$procmux$11446_Y ;
  wire \$procmux$11447_CMP ;
  wire \$procmux$11448_CMP ;
  wire \$procmux$11449_CMP ;
  wire \$procmux$11450_CMP ;
  wire \$procmux$11451_Y ;
  wire \$procmux$11452_CMP ;
  wire \$procmux$11454_Y ;
  wire \$procmux$11455_CMP ;
  wire \$procmux$11456_CMP ;
  wire \$procmux$11457_CMP ;
  wire \$procmux$11458_CMP ;
  wire \$procmux$11459_Y ;
  wire \$procmux$11460_CMP ;
  wire [1:0] \$procmux$11461_Y ;
  wire \$procmux$11462_CMP ;
  wire [3:0] \$procmux$11464_Y ;
  wire \$procmux$11465_CMP ;
  wire [3:0] \$procmux$11466_Y ;
  wire \$procmux$11467_CMP ;
  wire [3:0] \$procmux$11470_Y ;
  wire \$procmux$11471_CMP ;
  wire [3:0] \$procmux$11472_Y ;
  wire \$procmux$11473_CMP ;
  wire [3:0] \$procmux$11477_Y ;
  wire \$procmux$11478_CMP ;
  wire [3:0] \$procmux$11479_Y ;
  wire \$procmux$11480_CMP ;
  wire [3:0] \$procmux$11485_Y ;
  wire \$procmux$11486_CMP ;
  wire [3:0] \$procmux$11487_Y ;
  wire \$procmux$11488_CMP ;
  wire [3:0] \$procmux$11494_Y ;
  wire \$procmux$11495_CMP ;
  wire [3:0] \$procmux$11497_Y ;
  wire \$procmux$11498_CMP ;
  wire [3:0] \$procmux$11500_Y ;
  wire \$procmux$11501_CMP ;
  wire [3:0] \$procmux$11502_Y ;
  wire \$procmux$11503_CMP ;
  wire [3:0] \$procmux$11511_Y ;
  wire \$procmux$11512_CMP ;
  wire [3:0] \$procmux$11514_Y ;
  wire \$procmux$11515_CMP ;
  wire [3:0] \$procmux$11516_Y ;
  wire \$procmux$11517_CMP ;
  wire [3:0] \$procmux$11525_Y ;
  wire \$procmux$11526_CMP ;
  wire [3:0] \$procmux$11527_Y ;
  wire \$procmux$11528_CMP ;
  wire [3:0] \$procmux$11535_Y ;
  wire \$procmux$11536_CMP ;
  wire [3:0] \$procmux$11537_Y ;
  wire \$procmux$11538_CMP ;
  wire [3:0] \$procmux$11546_Y ;
  wire \$procmux$11547_CMP ;
  wire [3:0] \$procmux$11548_Y ;
  wire \$procmux$11549_CMP ;
  wire [3:0] \$procmux$11558_Y ;
  wire \$procmux$11559_CMP ;
  wire [3:0] \$procmux$11561_Y ;
  wire \$procmux$11562_CMP ;
  wire [3:0] \$procmux$11564_Y ;
  wire \$procmux$11565_CMP ;
  wire [3:0] \$procmux$11566_Y ;
  wire \$procmux$11567_CMP ;
  wire [3:0] \$procmux$11578_Y ;
  wire \$procmux$11579_CMP ;
  wire [3:0] \$procmux$11581_Y ;
  wire \$procmux$11582_CMP ;
  wire [3:0] \$procmux$11583_Y ;
  wire \$procmux$11584_CMP ;
  wire [3:0] \$procmux$11595_Y ;
  wire \$procmux$11596_CMP ;
  wire [3:0] \$procmux$11597_Y ;
  wire \$procmux$11598_CMP ;
  wire [3:0] \$procmux$11601_Y ;
  wire \$procmux$11602_CMP ;
  wire \$procmux$11604_CMP ;
  wire \$procmux$11606_CMP ;
  wire \$procmux$11608_CMP ;
  wire \$procmux$11610_CMP ;
  wire \$procmux$11612_CMP ;
  wire \$procmux$11614_CMP ;
  wire \$procmux$11616_CMP ;
  wire \$procmux$11618_CMP ;
  wire [3:0] \$procmux$11628_Y ;
  wire \$procmux$11629_CMP ;
  wire [3:0] \$procmux$11630_Y ;
  wire \$procmux$11631_CMP ;
  wire \$procmux$11638_Y ;
  wire \$procmux$11639_CMP ;
  wire \$procmux$11641_CMP ;
  wire \$procmux$11643_CMP ;
  wire \$procmux$11649_Y ;
  wire \$procmux$11650_CMP ;
  wire \$procmux$11652_CMP ;
  wire \$procmux$11654_CMP ;
  wire \$procmux$11656_CMP ;
  wire \$procmux$11658_CMP ;
  wire \$procmux$11660_CMP ;
  wire \$procmux$11662_CMP ;
  wire \$procmux$11664_CMP ;
  wire \$procmux$11667_Y ;
  wire \$procmux$11668_CMP ;
  wire \$procmux$11670_CMP ;
  wire \$procmux$11672_CMP ;
  wire \$procmux$11675_CMP ;
  wire \$procmux$11677_CMP ;
  wire \$procmux$11680_CMP ;
  wire [1:0] \$procmux$11685_Y ;
  wire \$procmux$11686_CMP ;
  wire \$procmux$11688_CMP ;
  wire \$procmux$11690_CMP ;
  wire \$procmux$11692_CMP ;
  wire \$procmux$11694_CMP ;
  wire \$procmux$11696_CMP ;
  wire \$procmux$11698_CMP ;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10424  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10425 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10430  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10431 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10378  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$auto$builder.cc:338:Biop$10379 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10395  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$auto$builder.cc:338:Biop$10396 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10434  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$auto$builder.cc:338:Biop$10435 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10451  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(\$auto$builder.cc:338:Biop$10452 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10453  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(\$auto$builder.cc:338:Biop$10454 )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$initiator_state_q  (
    .AD(4'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .Q(initiator_state_q)
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$receiver_phase_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10438 ),
    .Q(receiver_phase_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$11403  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$11407_CMP , \$procmux$11406_CMP , \$procmux$11405_CMP , \$procmux$11404_CMP  }),
    .Y(\$procmux$11403_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11404_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$11404_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11405_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$11405_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11406_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$11406_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11407_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$11407_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11409  (
    .A(\$procmux$11403_Y ),
    .B(1'hx),
    .S(\$procmux$11410_CMP ),
    .Y(\$procmux$11409_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$11411  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$11415_CMP , \$procmux$11414_CMP , \$procmux$11413_CMP , \$procmux$11412_CMP  }),
    .Y(\$procmux$11411_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11412_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$11412_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11413_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$11413_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11414_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$11414_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|../rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11415_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$11415_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11417  (
    .A(\$procmux$11411_Y ),
    .B(1'hx),
    .S(\$procmux$11418_CMP ),
    .Y(\$procmux$11417_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11420  (
    .A(1'h0),
    .B(1'hx),
    .S(\$procmux$11421_CMP ),
    .Y(\$procmux$11420_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11425  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10447 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10444 ),
    .S(\$procmux$11426_CMP ),
    .Y(\$procmux$11425_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11430  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10446 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10443 ),
    .S(\$procmux$11431_CMP ),
    .Y(\$procmux$11430_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11435  (
    .A(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10445 ),
    .B(\$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10442 ),
    .S(\$procmux$11436_CMP ),
    .Y(\$procmux$11435_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$11438  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$11442_CMP , \$procmux$11441_CMP , \$procmux$11440_CMP , \$procmux$11439_CMP  }),
    .Y(\$procmux$11438_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11439_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$11439_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11440_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$11440_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11441_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$11441_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11442_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$11442_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11443  (
    .A(1'hx),
    .B(\$procmux$11438_Y ),
    .S(\$procmux$11444_CMP ),
    .Y(\$procmux$11443_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$11446  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$11450_CMP , \$procmux$11449_CMP , \$procmux$11448_CMP , \$procmux$11447_CMP  }),
    .Y(\$procmux$11446_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11447_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$11447_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11448_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$11448_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11449_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$11449_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11450_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$11450_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11451  (
    .A(1'hx),
    .B(\$procmux$11446_Y ),
    .S(\$procmux$11452_CMP ),
    .Y(\$procmux$11451_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$11454  (
    .A(1'hx),
    .B({ 1'h1, isolate_ack_i, clear_ack_i, 1'h1 }),
    .S({ \$procmux$11458_CMP , \$procmux$11457_CMP , \$procmux$11456_CMP , \$procmux$11455_CMP  }),
    .Y(\$procmux$11454_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11455_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$11455_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11456_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$11456_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11457_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$11457_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11458_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$11458_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|../rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11459  (
    .A(1'hx),
    .B(\$procmux$11454_Y ),
    .S(\$procmux$11460_CMP ),
    .Y(\$procmux$11459_Y )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:442.7-442.47|../rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11461  (
    .A(receiver_phase_q),
    .B(receiver_next_phase),
    .S(\$procmux$11462_CMP ),
    .Y(\$procmux$11461_Y )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:361.11-361.36|../rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11464  (
    .A(initiator_state_q),
    .B(4'h0),
    .S(\$procmux$11465_CMP ),
    .Y(\$procmux$11464_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11466  (
    .A(4'hx),
    .B(\$procmux$11464_Y ),
    .S(\$procmux$11467_CMP ),
    .Y(\$procmux$11466_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11467_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$11467_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:351.11-351.40|../rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11470  (
    .A(initiator_state_q),
    .B(4'h8),
    .S(\$procmux$11471_CMP ),
    .Y(\$procmux$11470_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11472  (
    .A(4'hx),
    .B(\$procmux$11470_Y ),
    .S(\$procmux$11473_CMP ),
    .Y(\$procmux$11472_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11473_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$11473_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:341.11-341.42|../rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11477  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$11478_CMP ),
    .Y(\$procmux$11477_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11479  (
    .A(4'hx),
    .B(\$procmux$11477_Y ),
    .S(\$procmux$11480_CMP ),
    .Y(\$procmux$11479_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11480_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11480_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:331.11-331.42|../rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11485  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$11486_CMP ),
    .Y(\$procmux$11485_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11487  (
    .A(4'hx),
    .B(\$procmux$11485_Y ),
    .S(\$procmux$11488_CMP ),
    .Y(\$procmux$11487_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11488_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$11488_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:322.11-322.52|../rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11494  (
    .A(initiator_state_q),
    .B(4'h5),
    .S(\$procmux$11495_CMP ),
    .Y(\$procmux$11494_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11497  (
    .A(\$procmux$11494_Y ),
    .B(4'hx),
    .S(\$procmux$11498_CMP ),
    .Y(\$procmux$11497_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11500  (
    .A(\$procmux$11497_Y ),
    .B(4'hx),
    .S(\$procmux$11501_CMP ),
    .Y(\$procmux$11500_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11502  (
    .A(4'hx),
    .B(\$procmux$11500_Y ),
    .S(\$procmux$11503_CMP ),
    .Y(\$procmux$11502_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11503_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11503_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|../rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11511  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10403 ),
    .B(4'h6),
    .S(\$procmux$11512_CMP ),
    .Y(\$procmux$11511_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11514  (
    .A(\$procmux$11511_Y ),
    .B(4'hx),
    .S(\$procmux$11515_CMP ),
    .Y(\$procmux$11514_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11516  (
    .A(4'hx),
    .B(\$procmux$11514_Y ),
    .S(\$procmux$11517_CMP ),
    .Y(\$procmux$11516_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11517_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11517_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|../rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11525  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10404 ),
    .B(4'h7),
    .S(\$procmux$11526_CMP ),
    .Y(\$procmux$11525_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11527  (
    .A(4'hx),
    .B(\$procmux$11525_Y ),
    .S(\$procmux$11528_CMP ),
    .Y(\$procmux$11527_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11528_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11528_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:308.11-308.37|../rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11535  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$11536_CMP ),
    .Y(\$procmux$11535_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11537  (
    .A(4'hx),
    .B(\$procmux$11535_Y ),
    .S(\$procmux$11538_CMP ),
    .Y(\$procmux$11537_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11538_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$11538_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:298.11-298.37|../rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11546  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$11547_CMP ),
    .Y(\$procmux$11546_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11548  (
    .A(4'hx),
    .B(\$procmux$11546_Y ),
    .S(\$procmux$11549_CMP ),
    .Y(\$procmux$11548_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11549_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$11549_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:289.11-289.54|../rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11558  (
    .A(initiator_state_q),
    .B(4'h2),
    .S(\$procmux$11559_CMP ),
    .Y(\$procmux$11558_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11561  (
    .A(\$procmux$11558_Y ),
    .B(4'hx),
    .S(\$procmux$11562_CMP ),
    .Y(\$procmux$11561_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11564  (
    .A(\$procmux$11561_Y ),
    .B(4'hx),
    .S(\$procmux$11565_CMP ),
    .Y(\$procmux$11564_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11566  (
    .A(4'hx),
    .B(\$procmux$11564_Y ),
    .S(\$procmux$11567_CMP ),
    .Y(\$procmux$11566_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11567_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11567_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|../rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11578  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10386 ),
    .B(4'h3),
    .S(\$procmux$11579_CMP ),
    .Y(\$procmux$11578_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11581  (
    .A(\$procmux$11578_Y ),
    .B(4'hx),
    .S(\$procmux$11582_CMP ),
    .Y(\$procmux$11581_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11583  (
    .A(4'hx),
    .B(\$procmux$11581_Y ),
    .S(\$procmux$11584_CMP ),
    .Y(\$procmux$11583_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11584_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11584_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|../rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11595  (
    .A(\$auto$slang_frontend.cc:694:finish$\initiator_state_d$10387 ),
    .B(4'h4),
    .S(\$procmux$11596_CMP ),
    .Y(\$procmux$11595_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11597  (
    .A(4'hx),
    .B(\$procmux$11595_Y ),
    .S(\$procmux$11598_CMP ),
    .Y(\$procmux$11597_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11598_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11598_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd9),
    .WIDTH(32'd4)
  ) \$procmux$11601  (
    .A(4'h1),
    .B({ \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10377 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10388 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10391 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10394 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10405 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10408 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10411 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10414 , \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10417  }),
    .S({ \$procmux$11618_CMP , \$procmux$11616_CMP , \$procmux$11614_CMP , \$procmux$11612_CMP , \$procmux$11610_CMP , \$procmux$11608_CMP , \$procmux$11606_CMP , \$procmux$11604_CMP , \$procmux$11602_CMP  }),
    .Y(\$procmux$11601_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11602_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$11602_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11604_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$11604_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11606_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11606_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11608_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$11608_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11610_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11610_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11612_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$11612_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11614_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$11614_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11616_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11616_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11618_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$11618_CMP )
  );
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:275.11-275.39|../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11628  (
    .A(initiator_state_q),
    .B(4'h1),
    .S(\$procmux$11629_CMP ),
    .Y(\$procmux$11628_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11630  (
    .A(4'hx),
    .B(\$procmux$11628_Y ),
    .S(\$procmux$11631_CMP ),
    .Y(\$procmux$11630_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11631_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$11631_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$11638  (
    .A(1'h0),
    .B(3'h7),
    .S({ \$procmux$11643_CMP , \$procmux$11641_CMP , \$procmux$11639_CMP  }),
    .Y(\$procmux$11638_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11639_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11639_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11641_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$11641_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11643_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11643_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd1)
  ) \$procmux$11649  (
    .A(1'h0),
    .B(8'hff),
    .S({ \$procmux$11664_CMP , \$procmux$11662_CMP , \$procmux$11660_CMP , \$procmux$11658_CMP , \$procmux$11656_CMP , \$procmux$11654_CMP , \$procmux$11652_CMP , \$procmux$11650_CMP  }),
    .Y(\$procmux$11649_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11650_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$11650_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11652_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$11652_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11654_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11654_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11656_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$11656_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11658_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11658_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11660_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$11660_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11662_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$11662_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11664_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11664_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd1)
  ) \$procmux$11667  (
    .A(1'h0),
    .B(6'h3f),
    .S({ \$procmux$11680_CMP , \$procmux$11677_CMP , \$procmux$11675_CMP , \$procmux$11672_CMP , \$procmux$11670_CMP , \$procmux$11668_CMP  }),
    .Y(\$procmux$11667_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11668_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$11668_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11670_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$11670_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11672_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11672_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11675_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11675_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11677_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$11677_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11680_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11680_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd2)
  ) \$procmux$11685  (
    .A(2'h0),
    .B(14'h15ab),
    .S({ \$procmux$11698_CMP , \$procmux$11696_CMP , \$procmux$11694_CMP , \$procmux$11692_CMP , \$procmux$11690_CMP , \$procmux$11688_CMP , \$procmux$11686_CMP  }),
    .Y(\$procmux$11685_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11686_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$11686_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11688_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$11688_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11690_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$11690_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11692_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$11692_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11694_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$11694_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11696_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$11696_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|../rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11698_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$11698_CMP )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign initiator_state_d = \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10418 ;
  assign initiator_clear_seq_phase = \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10419 ;
  assign initiator_phase_transition_req = \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10420 ;
  assign initiator_isolate_out = \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10421 ;
  assign initiator_clear_out = \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10422 ;
  assign receiver_phase_ack = \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10448 ;
  assign receiver_isolate_out = \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10449 ;
  assign receiver_clear_out = \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10450 ;
  assign clear_o = \$auto$builder.cc:338:Biop$10452 ;
  assign isolate_o = \$auto$builder.cc:338:Biop$10454 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_q$10426  = 4'h1;
  assign \$procmux$11410_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10441 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10447  = \$procmux$11409_Y ;
  assign \$procmux$11418_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10441 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10446  = \$procmux$11417_Y ;
  assign \$procmux$11421_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10441 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10445  = \$procmux$11420_Y ;
  assign \$procmux$11426_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10441 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10450  = \$procmux$11425_Y ;
  assign \$procmux$11431_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10441 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10449  = \$procmux$11430_Y ;
  assign \$procmux$11436_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10441 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10448  = \$procmux$11435_Y ;
  assign \$procmux$11444_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10441 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_clear_out$10444  = \$procmux$11443_Y ;
  assign \$procmux$11452_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10441 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_isolate_out$10443  = \$procmux$11451_Y ;
  assign \$procmux$11460_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10441 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_ack$10442  = \$procmux$11459_Y ;
  assign \$procmux$11462_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10437 ;
  assign \$auto$slang_frontend.cc:694:finish$\receiver_phase_q$10438  = \$procmux$11461_Y ;
  assign \$procmux$11465_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10416 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10417  = \$procmux$11466_Y ;
  assign \$procmux$11471_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10413 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10414  = \$procmux$11472_Y ;
  assign \$procmux$11478_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10410 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10411  = \$procmux$11479_Y ;
  assign \$procmux$11486_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10407 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10408  = \$procmux$11487_Y ;
  assign \$procmux$11495_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10402 ;
  assign \$procmux$11498_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10400 ;
  assign \$procmux$11501_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10398 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10403  = \$procmux$11502_Y ;
  assign \$procmux$11512_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10400 ;
  assign \$procmux$11515_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10398 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10404  = \$procmux$11516_Y ;
  assign \$procmux$11526_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10398 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10405  = \$procmux$11527_Y ;
  assign \$procmux$11536_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10393 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10394  = \$procmux$11537_Y ;
  assign \$procmux$11547_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10390 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10391  = \$procmux$11548_Y ;
  assign \$procmux$11559_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10385 ;
  assign \$procmux$11562_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10383 ;
  assign \$procmux$11565_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10381 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10386  = \$procmux$11566_Y ;
  assign \$procmux$11579_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10383 ;
  assign \$procmux$11582_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10381 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10387  = \$procmux$11583_Y ;
  assign \$procmux$11596_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10381 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10388  = \$procmux$11597_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10418  = \$procmux$11601_Y ;
  assign \$procmux$11629_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10376 ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_state_d$10377  = \$procmux$11630_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_clear_out$10422  = \$procmux$11638_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_isolate_out$10421  = \$procmux$11649_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_phase_transition_req$10420  = \$procmux$11667_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\initiator_clear_seq_phase$10419  = \$procmux$11685_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10376  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10381  = \$auto$builder.cc:338:Biop$10379 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10383  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10385  = isolate_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10390  = isolate_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10393  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10398  = \$auto$builder.cc:338:Biop$10396 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10400  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10402  = clear_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10407  = clear_ack_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$10410  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10413  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2746:ReduceBool$10416  = initiator_phase_transition_ack;
  assign \$auto$rtlil.cc:2747:LogicNot$10428  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$10433  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$10441  = receiver_phase_req;
  assign \$auto$rtlil.cc:2746:ReduceBool$10437  = \$auto$builder.cc:338:Biop$10435 ;
endmodule

/* src = "../rtl/core_wrap.sv:8.8" */
module \core_wrap$croc_chip.i_croc_soc.i_croc.i_core_wrap (clk_i, rst_ni, ref_clk_i, instr_req_o, instr_gnt_i, instr_rvalid_i, instr_err_i, data_req_o, data_gnt_i, data_rvalid_i, data_we_o, data_err_i, debug_req_i, fetch_enable_i, core_busy_o, test_enable_i, irqs_i, timer0_irq_i, boot_addr_i, instr_addr_o, instr_rdata_i
, data_be_o, data_addr_o, data_wdata_o, data_rdata_i);
  wire [31:0] \$auto$builder.cc:338:Biop$21 ;
  /* src = "../rtl/core_wrap.sv:17.23" */
  input [31:0] boot_addr_i;
  wire [31:0] boot_addr_i;
  /* src = "../rtl/core_wrap.sv:9.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/core_wrap.sv:44.23" */
  output core_busy_o;
  wire core_busy_o;
  /* src = "../rtl/core_wrap.sv:33.23" */
  output [31:0] data_addr_o;
  wire [31:0] data_addr_o;
  /* src = "../rtl/core_wrap.sv:32.23" */
  output [3:0] data_be_o;
  wire [3:0] data_be_o;
  /* src = "../rtl/core_wrap.sv:36.23" */
  input data_err_i;
  wire data_err_i;
  /* src = "../rtl/core_wrap.sv:29.23" */
  input data_gnt_i;
  wire data_gnt_i;
  /* src = "../rtl/core_wrap.sv:35.23" */
  input [31:0] data_rdata_i;
  wire [31:0] data_rdata_i;
  /* src = "../rtl/core_wrap.sv:28.23" */
  output data_req_o;
  wire data_req_o;
  /* src = "../rtl/core_wrap.sv:30.23" */
  input data_rvalid_i;
  wire data_rvalid_i;
  /* src = "../rtl/core_wrap.sv:34.23" */
  output [31:0] data_wdata_o;
  wire [31:0] data_wdata_o;
  /* src = "../rtl/core_wrap.sv:31.23" */
  output data_we_o;
  wire data_we_o;
  /* src = "../rtl/core_wrap.sv:39.23" */
  input debug_req_i;
  wire debug_req_i;
  /* src = "../rtl/core_wrap.sv:42.23" */
  input fetch_enable_i;
  wire fetch_enable_i;
  /* src = "../rtl/core_wrap.sv:48.15" */
  wire [31:0] ibex_boot_addr;
  /* src = "../rtl/core_wrap.sv:23.23" */
  output [31:0] instr_addr_o;
  wire [31:0] instr_addr_o;
  /* src = "../rtl/core_wrap.sv:25.23" */
  input instr_err_i;
  wire instr_err_i;
  /* src = "../rtl/core_wrap.sv:21.23" */
  input instr_gnt_i;
  wire instr_gnt_i;
  /* src = "../rtl/core_wrap.sv:24.23" */
  input [31:0] instr_rdata_i;
  wire [31:0] instr_rdata_i;
  /* src = "../rtl/core_wrap.sv:20.23" */
  output instr_req_o;
  wire instr_req_o;
  /* src = "../rtl/core_wrap.sv:22.23" */
  input instr_rvalid_i;
  wire instr_rvalid_i;
  /* src = "../rtl/core_wrap.sv:14.22" */
  input [15:0] irqs_i;
  wire [15:0] irqs_i;
  /* src = "../rtl/core_wrap.sv:11.16" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "../rtl/core_wrap.sv:10.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/core_wrap.sv:12.16" */
  input test_enable_i;
  wire test_enable_i;
  /* src = "../rtl/core_wrap.sv:15.15" */
  input timer0_irq_i;
  wire timer0_irq_i;
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/core_wrap.sv:68.5" */
  \cve2_core$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex  i_ibex (
    .boot_addr_i(ibex_boot_addr),
    .clk_i(clk_i),
    .core_busy_o(core_busy_o),
    .data_addr_o(data_addr_o),
    .data_be_o(data_be_o),
    .data_err_i(data_err_i),
    .data_gnt_i(data_gnt_i),
    .data_rdata_i(data_rdata_i),
    .data_req_o(data_req_o),
    .data_rvalid_i(data_rvalid_i),
    .data_wdata_o(data_wdata_o),
    .data_we_o(data_we_o),
    .debug_req_i(debug_req_i),
    .fetch_enable_i(fetch_enable_i),
    .hart_id_i(32'd0),
    .instr_addr_o(instr_addr_o),
    .instr_err_i(instr_err_i),
    .instr_gnt_i(instr_gnt_i),
    .instr_rdata_i(instr_rdata_i),
    .instr_req_o(instr_req_o),
    .instr_rvalid_i(instr_rvalid_i),
    .irq_external_i(1'h0),
    .irq_fast_i(irqs_i),
    .irq_nm_i(1'h0),
    .irq_software_i(1'h0),
    .irq_timer_i(timer0_irq_i),
    .rst_ni(rst_ni),
    .test_en_i(test_enable_i)
  );
  assign ibex_boot_addr = \$auto$builder.cc:338:Biop$21 ;
  assign \$auto$builder.cc:338:Biop$21 [7:0] = 8'h00;
  assign \$auto$builder.cc:338:Biop$21 [31:8] = boot_addr_i[31:8];
endmodule

/* top =  1  */
/* src = "../rtl/croc_chip.sv:8.8" */
module croc_chip(clk_i, rst_ni, ref_clk_i, jtag_tck_i, jtag_trst_ni, jtag_tms_i, jtag_tdi_i, jtag_tdo_o, uart_rx_i, uart_tx_o, fetch_en_i, status_o, gpio0_io, gpio1_io, gpio2_io, gpio3_io, gpio4_io, gpio5_io, gpio6_io, gpio7_io, gpio8_io
, gpio9_io, gpio10_io, gpio11_io, gpio12_io, gpio13_io, gpio14_io, gpio15_io, gpio16_io, gpio17_io, gpio18_io, gpio19_io, gpio20_io, gpio21_io, gpio22_io, gpio23_io, gpio24_io, gpio25_io, gpio26_io, gpio27_io, gpio28_io, gpio29_io
, gpio30_io, gpio31_io, unused0_o, unused1_o, unused2_o, unused3_o);
  /* src = "../rtl/croc_chip.sv:9.15" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/croc_chip.sv:22.15" */
  input fetch_en_i;
  wire fetch_en_i;
  /* src = "../rtl/croc_chip.sv:25.15" */
  inout gpio0_io;
  wire gpio0_io;
  /* src = "../rtl/croc_chip.sv:35.15" */
  inout gpio10_io;
  wire gpio10_io;
  /* src = "../rtl/croc_chip.sv:36.15" */
  inout gpio11_io;
  wire gpio11_io;
  /* src = "../rtl/croc_chip.sv:37.15" */
  inout gpio12_io;
  wire gpio12_io;
  /* src = "../rtl/croc_chip.sv:38.15" */
  inout gpio13_io;
  wire gpio13_io;
  /* src = "../rtl/croc_chip.sv:39.15" */
  inout gpio14_io;
  wire gpio14_io;
  /* src = "../rtl/croc_chip.sv:40.15" */
  inout gpio15_io;
  wire gpio15_io;
  /* src = "../rtl/croc_chip.sv:41.15" */
  inout gpio16_io;
  wire gpio16_io;
  /* src = "../rtl/croc_chip.sv:42.15" */
  inout gpio17_io;
  wire gpio17_io;
  /* src = "../rtl/croc_chip.sv:43.15" */
  inout gpio18_io;
  wire gpio18_io;
  /* src = "../rtl/croc_chip.sv:44.15" */
  inout gpio19_io;
  wire gpio19_io;
  /* src = "../rtl/croc_chip.sv:26.15" */
  inout gpio1_io;
  wire gpio1_io;
  /* src = "../rtl/croc_chip.sv:45.15" */
  inout gpio20_io;
  wire gpio20_io;
  /* src = "../rtl/croc_chip.sv:46.15" */
  inout gpio21_io;
  wire gpio21_io;
  /* src = "../rtl/croc_chip.sv:47.15" */
  inout gpio22_io;
  wire gpio22_io;
  /* src = "../rtl/croc_chip.sv:48.15" */
  inout gpio23_io;
  wire gpio23_io;
  /* src = "../rtl/croc_chip.sv:49.15" */
  inout gpio24_io;
  wire gpio24_io;
  /* src = "../rtl/croc_chip.sv:50.15" */
  inout gpio25_io;
  wire gpio25_io;
  /* src = "../rtl/croc_chip.sv:51.15" */
  inout gpio26_io;
  wire gpio26_io;
  /* src = "../rtl/croc_chip.sv:52.15" */
  inout gpio27_io;
  wire gpio27_io;
  /* src = "../rtl/croc_chip.sv:53.15" */
  inout gpio28_io;
  wire gpio28_io;
  /* src = "../rtl/croc_chip.sv:54.15" */
  inout gpio29_io;
  wire gpio29_io;
  /* src = "../rtl/croc_chip.sv:27.15" */
  inout gpio2_io;
  wire gpio2_io;
  /* src = "../rtl/croc_chip.sv:55.15" */
  inout gpio30_io;
  wire gpio30_io;
  /* src = "../rtl/croc_chip.sv:56.15" */
  inout gpio31_io;
  wire gpio31_io;
  /* src = "../rtl/croc_chip.sv:28.15" */
  inout gpio3_io;
  wire gpio3_io;
  /* src = "../rtl/croc_chip.sv:29.15" */
  inout gpio4_io;
  wire gpio4_io;
  /* src = "../rtl/croc_chip.sv:30.15" */
  inout gpio5_io;
  wire gpio5_io;
  /* src = "../rtl/croc_chip.sv:31.15" */
  inout gpio6_io;
  wire gpio6_io;
  /* src = "../rtl/croc_chip.sv:32.15" */
  inout gpio7_io;
  wire gpio7_io;
  /* src = "../rtl/croc_chip.sv:33.15" */
  inout gpio8_io;
  wire gpio8_io;
  /* src = "../rtl/croc_chip.sv:34.15" */
  inout gpio9_io;
  wire gpio9_io;
  /* src = "../rtl/croc_chip.sv:13.15" */
  input jtag_tck_i;
  wire jtag_tck_i;
  /* src = "../rtl/croc_chip.sv:16.15" */
  input jtag_tdi_i;
  wire jtag_tdi_i;
  /* src = "../rtl/croc_chip.sv:17.15" */
  output jtag_tdo_o;
  wire jtag_tdo_o;
  /* src = "../rtl/croc_chip.sv:15.15" */
  input jtag_tms_i;
  wire jtag_tms_i;
  /* src = "../rtl/croc_chip.sv:14.15" */
  input jtag_trst_ni;
  wire jtag_trst_ni;
  /* src = "../rtl/croc_chip.sv:11.15" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "../rtl/croc_chip.sv:10.15" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/croc_chip.sv:62.11" */
  wire soc_clk_i;
  /* src = "../rtl/croc_chip.sv:73.11" */
  wire soc_fetch_en_i;
  /* src = "../rtl/croc_chip.sv:78.27" */
  wire [31:0] soc_gpio_i;
  /* src = "../rtl/croc_chip.sv:79.27" */
  wire [31:0] soc_gpio_o;
  /* src = "../rtl/croc_chip.sv:80.27" */
  wire [31:0] soc_gpio_out_en_o;
  /* src = "../rtl/croc_chip.sv:67.11" */
  wire soc_jtag_tck_i;
  /* src = "../rtl/croc_chip.sv:70.11" */
  wire soc_jtag_tdi_i;
  /* src = "../rtl/croc_chip.sv:71.11" */
  wire soc_jtag_tdo_o;
  /* src = "../rtl/croc_chip.sv:69.11" */
  wire soc_jtag_tms_i;
  /* src = "../rtl/croc_chip.sv:68.11" */
  wire soc_jtag_trst_ni;
  /* src = "../rtl/croc_chip.sv:64.11" */
  wire soc_ref_clk_i;
  /* src = "../rtl/croc_chip.sv:63.11" */
  wire soc_rst_ni;
  /* src = "../rtl/croc_chip.sv:74.11" */
  wire soc_status_o;
  /* src = "../rtl/croc_chip.sv:65.11" */
  wire soc_testmode;
  /* src = "../rtl/croc_chip.sv:85.12" */
  wire soc_testmode_i;
  /* src = "../rtl/croc_chip.sv:93.70" */
  wire soc_uart_rx_i;
  /* src = "../rtl/croc_chip.sv:94.70" */
  wire soc_uart_tx_o;
  /* src = "../rtl/croc_chip.sv:23.15" */
  output status_o;
  wire status_o;
  /* src = "../rtl/croc_chip.sv:19.15" */
  input uart_rx_i;
  wire uart_rx_i;
  /* src = "../rtl/croc_chip.sv:20.15" */
  output uart_tx_o;
  wire uart_tx_o;
  /* src = "../rtl/croc_chip.sv:57.15" */
  output unused0_o;
  wire unused0_o;
  /* src = "../rtl/croc_chip.sv:58.15" */
  output unused1_o;
  wire unused1_o;
  /* src = "../rtl/croc_chip.sv:59.15" */
  output unused2_o;
  wire unused2_o;
  /* src = "../rtl/croc_chip.sv:60.15" */
  output unused3_o;
  wire unused3_o;
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_chip.sv:159.3" */
  \croc_soc$croc_chip.i_croc_soc  i_croc_soc (
    .clk_i(soc_clk_i),
    .fetch_en_i(soc_fetch_en_i),
    .gpio_i(soc_gpio_i),
    .gpio_o(soc_gpio_o),
    .gpio_out_en_o(soc_gpio_out_en_o),
    .jtag_tck_i(soc_jtag_tck_i),
    .jtag_tdi_i(soc_jtag_tdi_i),
    .jtag_tdo_o(soc_jtag_tdo_o),
    .jtag_tms_i(soc_jtag_tms_i),
    .jtag_trst_ni(soc_jtag_trst_ni),
    .ref_clk_i(soc_ref_clk_i),
    .rst_ni(soc_rst_ni),
    .status_o(soc_status_o),
    .testmode_i(1'h0),
    .uart_rx_i(soc_uart_rx_i),
    .uart_tx_o(soc_uart_tx_o)
  );
  /* src = "../rtl/croc_chip.sv:82.27" */
  sg13g2_IOPadIn pad_clk_i (
    .p2c(soc_clk_i),
    .pad(clk_i)
  );
  /* src = "../rtl/croc_chip.sv:96.27" */
  sg13g2_IOPadIn pad_fetch_en_i (
    .p2c(soc_fetch_en_i),
    .pad(fetch_en_i)
  );
  /* src = "../rtl/croc_chip.sv:99.27" */
  sg13g2_IOPadInOut30mA pad_gpio0_io (
    .c2p(soc_gpio_o[0]),
    .c2p_en(soc_gpio_out_en_o[0]),
    .p2c(soc_gpio_i[0]),
    .pad(gpio0_io)
  );
  /* src = "../rtl/croc_chip.sv:109.27" */
  sg13g2_IOPadInOut30mA pad_gpio10_io (
    .c2p(soc_gpio_o[10]),
    .c2p_en(soc_gpio_out_en_o[10]),
    .p2c(soc_gpio_i[10]),
    .pad(gpio10_io)
  );
  /* src = "../rtl/croc_chip.sv:110.27" */
  sg13g2_IOPadInOut30mA pad_gpio11_io (
    .c2p(soc_gpio_o[11]),
    .c2p_en(soc_gpio_out_en_o[11]),
    .p2c(soc_gpio_i[11]),
    .pad(gpio11_io)
  );
  /* src = "../rtl/croc_chip.sv:111.27" */
  sg13g2_IOPadInOut30mA pad_gpio12_io (
    .c2p(soc_gpio_o[12]),
    .c2p_en(soc_gpio_out_en_o[12]),
    .p2c(soc_gpio_i[12]),
    .pad(gpio12_io)
  );
  /* src = "../rtl/croc_chip.sv:112.27" */
  sg13g2_IOPadInOut30mA pad_gpio13_io (
    .c2p(soc_gpio_o[13]),
    .c2p_en(soc_gpio_out_en_o[13]),
    .p2c(soc_gpio_i[13]),
    .pad(gpio13_io)
  );
  /* src = "../rtl/croc_chip.sv:113.27" */
  sg13g2_IOPadInOut30mA pad_gpio14_io (
    .c2p(soc_gpio_o[14]),
    .c2p_en(soc_gpio_out_en_o[14]),
    .p2c(soc_gpio_i[14]),
    .pad(gpio14_io)
  );
  /* src = "../rtl/croc_chip.sv:114.27" */
  sg13g2_IOPadInOut30mA pad_gpio15_io (
    .c2p(soc_gpio_o[15]),
    .c2p_en(soc_gpio_out_en_o[15]),
    .p2c(soc_gpio_i[15]),
    .pad(gpio15_io)
  );
  /* src = "../rtl/croc_chip.sv:115.27" */
  sg13g2_IOPadInOut30mA pad_gpio16_io (
    .c2p(soc_gpio_o[16]),
    .c2p_en(soc_gpio_out_en_o[16]),
    .p2c(soc_gpio_i[16]),
    .pad(gpio16_io)
  );
  /* src = "../rtl/croc_chip.sv:116.27" */
  sg13g2_IOPadInOut30mA pad_gpio17_io (
    .c2p(soc_gpio_o[17]),
    .c2p_en(soc_gpio_out_en_o[17]),
    .p2c(soc_gpio_i[17]),
    .pad(gpio17_io)
  );
  /* src = "../rtl/croc_chip.sv:117.27" */
  sg13g2_IOPadInOut30mA pad_gpio18_io (
    .c2p(soc_gpio_o[18]),
    .c2p_en(soc_gpio_out_en_o[18]),
    .p2c(soc_gpio_i[18]),
    .pad(gpio18_io)
  );
  /* src = "../rtl/croc_chip.sv:118.27" */
  sg13g2_IOPadInOut30mA pad_gpio19_io (
    .c2p(soc_gpio_o[19]),
    .c2p_en(soc_gpio_out_en_o[19]),
    .p2c(soc_gpio_i[19]),
    .pad(gpio19_io)
  );
  /* src = "../rtl/croc_chip.sv:100.27" */
  sg13g2_IOPadInOut30mA pad_gpio1_io (
    .c2p(soc_gpio_o[1]),
    .c2p_en(soc_gpio_out_en_o[1]),
    .p2c(soc_gpio_i[1]),
    .pad(gpio1_io)
  );
  /* src = "../rtl/croc_chip.sv:119.27" */
  sg13g2_IOPadInOut30mA pad_gpio20_io (
    .c2p(soc_gpio_o[20]),
    .c2p_en(soc_gpio_out_en_o[20]),
    .p2c(soc_gpio_i[20]),
    .pad(gpio20_io)
  );
  /* src = "../rtl/croc_chip.sv:120.27" */
  sg13g2_IOPadInOut30mA pad_gpio21_io (
    .c2p(soc_gpio_o[21]),
    .c2p_en(soc_gpio_out_en_o[21]),
    .p2c(soc_gpio_i[21]),
    .pad(gpio21_io)
  );
  /* src = "../rtl/croc_chip.sv:121.27" */
  sg13g2_IOPadInOut30mA pad_gpio22_io (
    .c2p(soc_gpio_o[22]),
    .c2p_en(soc_gpio_out_en_o[22]),
    .p2c(soc_gpio_i[22]),
    .pad(gpio22_io)
  );
  /* src = "../rtl/croc_chip.sv:122.27" */
  sg13g2_IOPadInOut30mA pad_gpio23_io (
    .c2p(soc_gpio_o[23]),
    .c2p_en(soc_gpio_out_en_o[23]),
    .p2c(soc_gpio_i[23]),
    .pad(gpio23_io)
  );
  /* src = "../rtl/croc_chip.sv:123.27" */
  sg13g2_IOPadInOut30mA pad_gpio24_io (
    .c2p(soc_gpio_o[24]),
    .c2p_en(soc_gpio_out_en_o[24]),
    .p2c(soc_gpio_i[24]),
    .pad(gpio24_io)
  );
  /* src = "../rtl/croc_chip.sv:124.27" */
  sg13g2_IOPadInOut30mA pad_gpio25_io (
    .c2p(soc_gpio_o[25]),
    .c2p_en(soc_gpio_out_en_o[25]),
    .p2c(soc_gpio_i[25]),
    .pad(gpio25_io)
  );
  /* src = "../rtl/croc_chip.sv:125.27" */
  sg13g2_IOPadInOut30mA pad_gpio26_io (
    .c2p(soc_gpio_o[26]),
    .c2p_en(soc_gpio_out_en_o[26]),
    .p2c(soc_gpio_i[26]),
    .pad(gpio26_io)
  );
  /* src = "../rtl/croc_chip.sv:126.27" */
  sg13g2_IOPadInOut30mA pad_gpio27_io (
    .c2p(soc_gpio_o[27]),
    .c2p_en(soc_gpio_out_en_o[27]),
    .p2c(soc_gpio_i[27]),
    .pad(gpio27_io)
  );
  /* src = "../rtl/croc_chip.sv:127.27" */
  sg13g2_IOPadInOut30mA pad_gpio28_io (
    .c2p(soc_gpio_o[28]),
    .c2p_en(soc_gpio_out_en_o[28]),
    .p2c(soc_gpio_i[28]),
    .pad(gpio28_io)
  );
  /* src = "../rtl/croc_chip.sv:128.27" */
  sg13g2_IOPadInOut30mA pad_gpio29_io (
    .c2p(soc_gpio_o[29]),
    .c2p_en(soc_gpio_out_en_o[29]),
    .p2c(soc_gpio_i[29]),
    .pad(gpio29_io)
  );
  /* src = "../rtl/croc_chip.sv:101.27" */
  sg13g2_IOPadInOut30mA pad_gpio2_io (
    .c2p(soc_gpio_o[2]),
    .c2p_en(soc_gpio_out_en_o[2]),
    .p2c(soc_gpio_i[2]),
    .pad(gpio2_io)
  );
  /* src = "../rtl/croc_chip.sv:129.27" */
  sg13g2_IOPadInOut30mA pad_gpio30_io (
    .c2p(soc_gpio_o[30]),
    .c2p_en(soc_gpio_out_en_o[30]),
    .p2c(soc_gpio_i[30]),
    .pad(gpio30_io)
  );
  /* src = "../rtl/croc_chip.sv:130.27" */
  sg13g2_IOPadInOut30mA pad_gpio31_io (
    .c2p(soc_gpio_o[31]),
    .c2p_en(soc_gpio_out_en_o[31]),
    .p2c(soc_gpio_i[31]),
    .pad(gpio31_io)
  );
  /* src = "../rtl/croc_chip.sv:102.27" */
  sg13g2_IOPadInOut30mA pad_gpio3_io (
    .c2p(soc_gpio_o[3]),
    .c2p_en(soc_gpio_out_en_o[3]),
    .p2c(soc_gpio_i[3]),
    .pad(gpio3_io)
  );
  /* src = "../rtl/croc_chip.sv:103.27" */
  sg13g2_IOPadInOut30mA pad_gpio4_io (
    .c2p(soc_gpio_o[4]),
    .c2p_en(soc_gpio_out_en_o[4]),
    .p2c(soc_gpio_i[4]),
    .pad(gpio4_io)
  );
  /* src = "../rtl/croc_chip.sv:104.27" */
  sg13g2_IOPadInOut30mA pad_gpio5_io (
    .c2p(soc_gpio_o[5]),
    .c2p_en(soc_gpio_out_en_o[5]),
    .p2c(soc_gpio_i[5]),
    .pad(gpio5_io)
  );
  /* src = "../rtl/croc_chip.sv:105.27" */
  sg13g2_IOPadInOut30mA pad_gpio6_io (
    .c2p(soc_gpio_o[6]),
    .c2p_en(soc_gpio_out_en_o[6]),
    .p2c(soc_gpio_i[6]),
    .pad(gpio6_io)
  );
  /* src = "../rtl/croc_chip.sv:106.27" */
  sg13g2_IOPadInOut30mA pad_gpio7_io (
    .c2p(soc_gpio_o[7]),
    .c2p_en(soc_gpio_out_en_o[7]),
    .p2c(soc_gpio_i[7]),
    .pad(gpio7_io)
  );
  /* src = "../rtl/croc_chip.sv:107.27" */
  sg13g2_IOPadInOut30mA pad_gpio8_io (
    .c2p(soc_gpio_o[8]),
    .c2p_en(soc_gpio_out_en_o[8]),
    .p2c(soc_gpio_i[8]),
    .pad(gpio8_io)
  );
  /* src = "../rtl/croc_chip.sv:108.27" */
  sg13g2_IOPadInOut30mA pad_gpio9_io (
    .c2p(soc_gpio_o[9]),
    .c2p_en(soc_gpio_out_en_o[9]),
    .p2c(soc_gpio_i[9]),
    .pad(gpio9_io)
  );
  /* src = "../rtl/croc_chip.sv:87.27" */
  sg13g2_IOPadIn pad_jtag_tck_i (
    .p2c(soc_jtag_tck_i),
    .pad(jtag_tck_i)
  );
  /* src = "../rtl/croc_chip.sv:90.27" */
  sg13g2_IOPadIn pad_jtag_tdi_i (
    .p2c(soc_jtag_tdi_i),
    .pad(jtag_tdi_i)
  );
  /* src = "../rtl/croc_chip.sv:91.27" */
  sg13g2_IOPadOut16mA pad_jtag_tdo_o (
    .c2p(soc_jtag_tdo_o),
    .pad(jtag_tdo_o)
  );
  /* src = "../rtl/croc_chip.sv:89.27" */
  sg13g2_IOPadIn pad_jtag_tms_i (
    .p2c(soc_jtag_tms_i),
    .pad(jtag_tms_i)
  );
  /* src = "../rtl/croc_chip.sv:88.27" */
  sg13g2_IOPadIn pad_jtag_trst_ni (
    .p2c(soc_jtag_trst_ni),
    .pad(jtag_trst_ni)
  );
  /* src = "../rtl/croc_chip.sv:84.27" */
  sg13g2_IOPadIn pad_ref_clk_i (
    .p2c(soc_ref_clk_i),
    .pad(ref_clk_i)
  );
  /* src = "../rtl/croc_chip.sv:83.27" */
  sg13g2_IOPadIn pad_rst_ni (
    .p2c(soc_rst_ni),
    .pad(rst_ni)
  );
  /* src = "../rtl/croc_chip.sv:97.27" */
  sg13g2_IOPadOut16mA pad_status_o (
    .c2p(soc_status_o),
    .pad(status_o)
  );
  /* src = "../rtl/croc_chip.sv:93.27" */
  sg13g2_IOPadIn pad_uart_rx_i (
    .p2c(soc_uart_rx_i),
    .pad(uart_rx_i)
  );
  /* src = "../rtl/croc_chip.sv:94.27" */
  sg13g2_IOPadOut16mA pad_uart_tx_o (
    .c2p(soc_uart_tx_o),
    .pad(uart_tx_o)
  );
  /* src = "../rtl/croc_chip.sv:131.25" */
  sg13g2_IOPadOut16mA pad_unused0_o (
    .c2p(soc_status_o),
    .pad(unused0_o)
  );
  /* src = "../rtl/croc_chip.sv:132.25" */
  sg13g2_IOPadOut16mA pad_unused1_o (
    .c2p(soc_status_o),
    .pad(unused1_o)
  );
  /* src = "../rtl/croc_chip.sv:133.25" */
  sg13g2_IOPadOut16mA pad_unused2_o (
    .c2p(soc_status_o),
    .pad(unused2_o)
  );
  /* src = "../rtl/croc_chip.sv:134.25" */
  sg13g2_IOPadOut16mA pad_unused3_o (
    .c2p(soc_status_o),
    .pad(unused3_o)
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:136.46" */
  sg13g2_IOPadVdd pad_vdd0 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:137.46" */
  sg13g2_IOPadVdd pad_vdd1 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:138.46" */
  sg13g2_IOPadVdd pad_vdd2 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:139.46" */
  sg13g2_IOPadVdd pad_vdd3 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:146.48" */
  sg13g2_IOPadIOVdd pad_vddio0 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:147.48" */
  sg13g2_IOPadIOVdd pad_vddio1 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:148.48" */
  sg13g2_IOPadIOVdd pad_vddio2 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:149.48" */
  sg13g2_IOPadIOVdd pad_vddio3 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:141.46" */
  sg13g2_IOPadVss pad_vss0 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:142.46" */
  sg13g2_IOPadVss pad_vss1 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:143.46" */
  sg13g2_IOPadVss pad_vss2 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:144.46" */
  sg13g2_IOPadVss pad_vss3 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:151.48" */
  sg13g2_IOPadIOVss pad_vssio0 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:152.48" */
  sg13g2_IOPadIOVss pad_vssio1 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:153.48" */
  sg13g2_IOPadIOVss pad_vssio2 (
  );
  /* keep = "true" */
  /* src = "../rtl/croc_chip.sv:154.48" */
  sg13g2_IOPadIOVss pad_vssio3 (
  );
  assign soc_testmode_i = 1'h0;
endmodule

/* src = "../rtl/croc_domain.sv:8.8" */
module \croc_domain$croc_chip.i_croc_soc.i_croc (clk_i, rst_ni, testmode_i, ref_clk_i, core_busy_o, jtag_tck_i, jtag_trst_ni, jtag_tms_i, jtag_tdi_i, jtag_tdo_o, uart_rx_i, uart_tx_o, fetch_en_i, gpio_i, gpio_o, gpio_out_en_o, gpio_in_sync_o, user_sbr_obi_req_o, user_sbr_obi_rsp_i, user_mgr_obi_req_i, user_mgr_obi_rsp_o
, interrupts_i);
  wire \$auto$builder.cc:338:Biop$10 ;
  wire \$auto$builder.cc:364:Unop$12 ;
  wire \$auto$builder.cc:364:Unop$14 ;
  wire \$auto$builder.cc:364:Unop$8 ;
  /* src = "../rtl/croc_domain.sv:133.34" */
  wire [443:0] all_periph_obi_req;
  /* src = "../rtl/croc_domain.sv:134.34" */
  wire [233:0] all_periph_obi_rsp;
  /* src = "../rtl/croc_domain.sv:97.34" */
  wire [369:0] all_sbr_obi_req;
  /* src = "../rtl/croc_domain.sv:98.34" */
  wire [194:0] all_sbr_obi_rsp;
  /* src = "../rtl/croc_domain.sv:52.16" */
  wire [31:0] boot_addr;
  /* src = "../rtl/croc_domain.sv:11.21" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/croc_domain.sv:43.16" */
  output core_busy_o;
  wire core_busy_o;
  /* src = "../rtl/croc_domain.sv:82.17" */
  wire [71:0] core_data_obi_req;
  /* src = "../rtl/croc_domain.sv:83.17" */
  wire [36:0] core_data_obi_rsp;
  /* src = "../rtl/croc_domain.sv:73.17" */
  wire [71:0] core_instr_obi_req;
  /* src = "../rtl/croc_domain.sv:74.17" */
  wire [36:0] core_instr_obi_rsp;
  /* src = "../rtl/croc_domain.sv:141.17" */
  wire [73:0] dbg_mem_obi_req;
  /* src = "../rtl/croc_domain.sv:142.17" */
  wire [38:0] dbg_mem_obi_rsp;
  /* src = "../rtl/croc_domain.sv:88.17" */
  wire [71:0] dbg_req_obi_req;
  /* src = "../rtl/croc_domain.sv:89.17" */
  wire [36:0] dbg_req_obi_rsp;
  /* src = "../rtl/croc_domain.sv:50.9" */
  wire debug_req;
  /* src = "../rtl/croc_domain.sv:228.17" */
  wire [40:0] dmi_req;
  /* src = "../rtl/croc_domain.sv:227.35" */
  wire dmi_req_ready;
  /* src = "../rtl/croc_domain.sv:227.20" */
  wire dmi_req_valid;
  /* src = "../rtl/croc_domain.sv:229.18" */
  wire [33:0] dmi_resp;
  /* src = "../rtl/croc_domain.sv:227.66" */
  wire dmi_resp_ready;
  /* src = "../rtl/croc_domain.sv:227.50" */
  wire dmi_resp_valid;
  /* src = "../rtl/croc_domain.sv:227.9" */
  wire dmi_rst_n;
  /* src = "../rtl/croc_domain.sv:137.17" */
  wire [73:0] error_obi_req;
  /* src = "../rtl/croc_domain.sv:138.17" */
  wire [38:0] error_obi_rsp;
  /* src = "../rtl/croc_domain.sv:15.21" */
  input fetch_en_i;
  wire fetch_en_i;
  /* src = "../rtl/croc_domain.sv:51.9" */
  wire fetch_enable;
  /* src = "../rtl/croc_domain.sv:347.39" */
  wire [3:0] \gen_sram_bank[0].bank_be ;
  /* src = "../rtl/croc_domain.sv:344.37" */
  wire [31:0] \gen_sram_bank[0].bank_byte_addr ;
  /* src = "../rtl/croc_domain.sv:343.30" */
  wire \gen_sram_bank[0].bank_gnt ;
  /* src = "../rtl/croc_domain.sv:346.49" */
  wire [31:0] \gen_sram_bank[0].bank_rdata ;
  /* src = "../rtl/croc_domain.sv:343.11" */
  wire \gen_sram_bank[0].bank_req ;
  /* src = "../rtl/croc_domain.sv:343.40" */
  wire \gen_sram_bank[0].bank_single_err ;
  /* src = "../rtl/croc_domain.sv:346.37" */
  wire [31:0] \gen_sram_bank[0].bank_wdata ;
  /* src = "../rtl/croc_domain.sv:343.21" */
  wire \gen_sram_bank[0].bank_we ;
  /* src = "../rtl/croc_domain.sv:345.35" */
  wire [8:0] \gen_sram_bank[0].bank_word_addr ;
  /* src = "../rtl/croc_domain.sv:347.39" */
  wire [3:0] \gen_sram_bank[1].bank_be ;
  /* src = "../rtl/croc_domain.sv:344.37" */
  wire [31:0] \gen_sram_bank[1].bank_byte_addr ;
  /* src = "../rtl/croc_domain.sv:343.30" */
  wire \gen_sram_bank[1].bank_gnt ;
  /* src = "../rtl/croc_domain.sv:346.49" */
  wire [31:0] \gen_sram_bank[1].bank_rdata ;
  /* src = "../rtl/croc_domain.sv:343.11" */
  wire \gen_sram_bank[1].bank_req ;
  /* src = "../rtl/croc_domain.sv:343.40" */
  wire \gen_sram_bank[1].bank_single_err ;
  /* src = "../rtl/croc_domain.sv:346.37" */
  wire [31:0] \gen_sram_bank[1].bank_wdata ;
  /* src = "../rtl/croc_domain.sv:343.21" */
  wire \gen_sram_bank[1].bank_we ;
  /* src = "../rtl/croc_domain.sv:345.35" */
  wire [8:0] \gen_sram_bank[1].bank_word_addr ;
  /* src = "../rtl/croc_domain.sv:26.32" */
  input [31:0] gpio_i;
  wire [31:0] gpio_i;
  /* src = "../rtl/croc_domain.sv:30.32" */
  output [31:0] gpio_in_sync_o;
  wire [31:0] gpio_in_sync_o;
  /* src = "../rtl/croc_domain.sv:56.9" */
  wire gpio_irq;
  /* src = "../rtl/croc_domain.sv:27.32" */
  output [31:0] gpio_o;
  wire [31:0] gpio_o;
  /* src = "../rtl/croc_domain.sv:153.17" */
  wire [73:0] gpio_obi_req;
  /* src = "../rtl/croc_domain.sv:154.17" */
  wire [38:0] gpio_obi_rsp;
  /* src = "../rtl/croc_domain.sv:28.32" */
  output [31:0] gpio_out_en_o;
  wire [31:0] gpio_out_en_o;
  /* init = 32'd2171776 */
  /* src = "../rtl/croc_domain.sv:225.18" */
  wire [31:0] hartinfo;
  /* src = "../rtl/croc_domain.sv:59.16" */
  wire [15:0] interrupts;
  /* src = "../rtl/croc_domain.sv:42.38" */
  input [3:0] interrupts_i;
  wire [3:0] interrupts_i;
  /* src = "../rtl/croc_domain.sv:17.21" */
  input jtag_tck_i;
  wire jtag_tck_i;
  /* src = "../rtl/croc_domain.sv:18.21" */
  input jtag_tdi_i;
  wire jtag_tdi_i;
  /* src = "../rtl/croc_domain.sv:19.21" */
  output jtag_tdo_o;
  wire jtag_tdo_o;
  /* src = "../rtl/croc_domain.sv:20.21" */
  input jtag_tms_i;
  wire jtag_tms_i;
  /* src = "../rtl/croc_domain.sv:21.21" */
  input jtag_trst_ni;
  wire jtag_trst_ni;
  /* src = "../rtl/croc_domain.sv:418.50" */
  wire [2:0] periph_idx;
  /* src = "../rtl/croc_domain.sv:13.21" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "../rtl/croc_domain.sv:12.21" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/croc_domain.sv:503.39" */
  wire [3:0] soc_ctrl_hw2reg;
  /* src = "../rtl/croc_domain.sv:145.17" */
  wire [73:0] soc_ctrl_obi_req;
  /* src = "../rtl/croc_domain.sv:146.17" */
  wire [38:0] soc_ctrl_obi_rsp;
  /* src = "../rtl/croc_domain.sv:502.39" */
  wire [66:0] soc_ctrl_reg2hw;
  /* src = "../rtl/croc_domain.sv:470.13" */
  wire [69:0] soc_ctrl_reg_req;
  /* src = "../rtl/croc_domain.sv:471.13" */
  wire [33:0] soc_ctrl_reg_rsp;
  /* src = "../rtl/croc_domain.sv:49.9" */
  wire sram_impl;
  /* src = "../rtl/croc_domain.sv:14.21" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/croc_domain.sv:57.9" */
  wire timer0_irq0;
  /* src = "../rtl/croc_domain.sv:58.9" */
  wire timer0_irq1;
  /* src = "../rtl/croc_domain.sv:157.17" */
  wire [73:0] timer_obi_req;
  /* src = "../rtl/croc_domain.sv:158.17" */
  wire [38:0] timer_obi_rsp;
  /* src = "../rtl/croc_domain.sv:55.9" */
  wire uart_irq;
  /* src = "../rtl/croc_domain.sv:149.17" */
  wire [73:0] uart_obi_req;
  /* src = "../rtl/croc_domain.sv:150.17" */
  wire [38:0] uart_obi_rsp;
  /* src = "../rtl/croc_domain.sv:524.13" */
  wire [69:0] uart_reg_req;
  /* src = "../rtl/croc_domain.sv:525.13" */
  wire [33:0] uart_reg_rsp;
  /* src = "../rtl/croc_domain.sv:23.21" */
  input uart_rx_i;
  wire uart_rx_i;
  /* src = "../rtl/croc_domain.sv:24.21" */
  output uart_tx_o;
  wire uart_tx_o;
  /* src = "../rtl/croc_domain.sv:39.24" */
  input [71:0] user_mgr_obi_req_i;
  wire [71:0] user_mgr_obi_req_i;
  /* src = "../rtl/croc_domain.sv:40.24" */
  output [36:0] user_mgr_obi_rsp_o;
  wire [36:0] user_mgr_obi_rsp_o;
  /* src = "../rtl/croc_domain.sv:35.24" */
  output [73:0] user_sbr_obi_req_o;
  wire [73:0] user_sbr_obi_req_o;
  /* src = "../rtl/croc_domain.sv:36.24" */
  input [38:0] user_sbr_obi_rsp_i;
  wire [38:0] user_sbr_obi_rsp_i;
  /* src = "../rtl/croc_domain.sv:111.17" */
  wire [73:0] xbar_error_obi_req;
  /* src = "../rtl/croc_domain.sv:112.17" */
  wire [38:0] xbar_error_obi_rsp;
  /* src = "../rtl/croc_domain.sv:103.36" */
  wire [147:0] xbar_mem_bank_obi_req;
  /* src = "../rtl/croc_domain.sv:104.36" */
  wire [77:0] xbar_mem_bank_obi_rsp;
  /* src = "../rtl/croc_domain.sv:107.17" */
  wire [73:0] xbar_periph_obi_req;
  /* src = "../rtl/croc_domain.sv:108.17" */
  wire [38:0] xbar_periph_obi_rsp;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9  (
    .A(soc_ctrl_reg2hw[34]),
    .B(fetch_en_i),
    .Y(\$auto$builder.cc:338:Biop$10 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$11  (
    .A(uart_obi_req[41]),
    .Y(\$auto$builder.cc:364:Unop$12 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$13  (
    .A(timer_obi_req[41]),
    .Y(\$auto$builder.cc:364:Unop$14 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7  (
    .A(soc_ctrl_obi_req[41]),
    .Y(\$auto$builder.cc:364:Unop$8 )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_domain.sv:377.7" */
  \tc_sram_impl$croc_chip.i_croc_soc.i_croc.gen_sram_bank[0].i_sram  \gen_sram_bank[0].i_sram  (
    .addr_i(\gen_sram_bank[0].bank_word_addr ),
    .be_i(\gen_sram_bank[0].bank_be ),
    .clk_i(clk_i),
    .impl_i(sram_impl),
    .rdata_o(\gen_sram_bank[0].bank_rdata ),
    .req_i(\gen_sram_bank[0].bank_req ),
    .rst_ni(rst_ni),
    .wdata_i(\gen_sram_bank[0].bank_wdata ),
    .we_i(\gen_sram_bank[0].bank_we )
  );
  /* src = "../rtl/croc_domain.sv:353.7" */
  \obi_sram_shim$croc_chip.i_croc_soc.i_croc.gen_sram_bank[0].i_sram_shim  \gen_sram_bank[0].i_sram_shim  (
    .addr_o(\gen_sram_bank[0].bank_byte_addr ),
    .be_o(\gen_sram_bank[0].bank_be ),
    .clk_i(clk_i),
    .gnt_i(1'h1),
    .obi_req_i(xbar_mem_bank_obi_req[73:0]),
    .obi_rsp_o(xbar_mem_bank_obi_rsp[38:0]),
    .rdata_i(\gen_sram_bank[0].bank_rdata ),
    .req_o(\gen_sram_bank[0].bank_req ),
    .rst_ni(rst_ni),
    .wdata_o(\gen_sram_bank[0].bank_wdata ),
    .we_o(\gen_sram_bank[0].bank_we )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_domain.sv:377.7" */
  \tc_sram_impl$croc_chip.i_croc_soc.i_croc.gen_sram_bank[1].i_sram  \gen_sram_bank[1].i_sram  (
    .addr_i(\gen_sram_bank[1].bank_word_addr ),
    .be_i(\gen_sram_bank[1].bank_be ),
    .clk_i(clk_i),
    .impl_i(sram_impl),
    .rdata_o(\gen_sram_bank[1].bank_rdata ),
    .req_i(\gen_sram_bank[1].bank_req ),
    .rst_ni(rst_ni),
    .wdata_i(\gen_sram_bank[1].bank_wdata ),
    .we_i(\gen_sram_bank[1].bank_we )
  );
  /* src = "../rtl/croc_domain.sv:353.7" */
  \obi_sram_shim$croc_chip.i_croc_soc.i_croc.gen_sram_bank[1].i_sram_shim  \gen_sram_bank[1].i_sram_shim  (
    .addr_o(\gen_sram_bank[1].bank_byte_addr ),
    .be_o(\gen_sram_bank[1].bank_be ),
    .clk_i(clk_i),
    .gnt_i(1'h1),
    .obi_req_i(xbar_mem_bank_obi_req[147:74]),
    .obi_rsp_o(xbar_mem_bank_obi_rsp[77:39]),
    .rdata_i(\gen_sram_bank[1].bank_rdata ),
    .req_o(\gen_sram_bank[1].bank_req ),
    .rst_ni(rst_ni),
    .wdata_o(\gen_sram_bank[1].bank_wdata ),
    .we_o(\gen_sram_bank[1].bank_we )
  );
  /* src = "../rtl/croc_domain.sv:426.5" */
  \addr_decode$croc_chip.i_croc_soc.i_croc.i_addr_decode_periphs  i_addr_decode_periphs (
    .addr_i(xbar_periph_obi_req[73:42]),
    .addr_map_i(480'h000000010000000000040000000000020300000003001000000000030300200003003000000000040300500003006000000000050300a0000300b000),
    .default_idx_i(3'h0),
    .en_default_idx_i(1'h1),
    .idx_o(periph_idx)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_domain.sv:179.5" */
  \core_wrap$croc_chip.i_croc_soc.i_croc.i_core_wrap  i_core_wrap (
    .boot_addr_i(boot_addr),
    .clk_i(clk_i),
    .core_busy_o(core_busy_o),
    .data_addr_o(core_data_obi_req[71:40]),
    .data_be_o(core_data_obi_req[38:35]),
    .data_err_i(core_data_obi_rsp[3]),
    .data_gnt_i(core_data_obi_rsp[1]),
    .data_rdata_i(core_data_obi_rsp[36:5]),
    .data_req_o(core_data_obi_req[0]),
    .data_rvalid_i(core_data_obi_rsp[0]),
    .data_wdata_o(core_data_obi_req[34:3]),
    .data_we_o(core_data_obi_req[39]),
    .debug_req_i(debug_req),
    .fetch_enable_i(fetch_enable),
    .instr_addr_o(core_instr_obi_req[71:40]),
    .instr_err_i(core_instr_obi_rsp[3]),
    .instr_gnt_i(core_instr_obi_rsp[1]),
    .instr_rdata_i(core_instr_obi_rsp[36:5]),
    .instr_req_o(core_instr_obi_req[0]),
    .instr_rvalid_i(core_instr_obi_rsp[0]),
    .irqs_i(interrupts),
    .ref_clk_i(ref_clk_i),
    .rst_ni(rst_ni),
    .test_enable_i(testmode_i),
    .timer0_irq_i(timer0_irq0)
  );
  /* src = "../rtl/croc_domain.sv:258.5" */
  \dm_obi_top$croc_chip.i_croc_soc.i_croc.i_dm_top  i_dm_top (
    .clk_i(clk_i),
    .debug_req_o(debug_req),
    .dmi_req_i(dmi_req),
    .dmi_req_ready_o(dmi_req_ready),
    .dmi_req_valid_i(dmi_req_valid),
    .dmi_resp_o(dmi_resp),
    .dmi_resp_ready_i(dmi_resp_ready),
    .dmi_resp_valid_o(dmi_resp_valid),
    .dmi_rst_ni(dmi_rst_n),
    .hartinfo_i(32'd2171776),
    .master_addr_o(dbg_req_obi_req[71:40]),
    .master_be_o(dbg_req_obi_req[38:35]),
    .master_err_i(dbg_req_obi_rsp[3]),
    .master_gnt_i(dbg_req_obi_rsp[1]),
    .master_other_err_i(1'h0),
    .master_rdata_i(dbg_req_obi_rsp[36:5]),
    .master_req_o(dbg_req_obi_req[0]),
    .master_rvalid_i(dbg_req_obi_rsp[0]),
    .master_wdata_o(dbg_req_obi_req[34:3]),
    .master_we_o(dbg_req_obi_req[39]),
    .rst_ni(rst_ni),
    .slave_addr_i(dbg_mem_obi_req[73:42]),
    .slave_aid_i(dbg_mem_obi_req[4:2]),
    .slave_be_i(dbg_mem_obi_req[40:37]),
    .slave_gnt_o(dbg_mem_obi_rsp[1]),
    .slave_rdata_o(dbg_mem_obi_rsp[38:7]),
    .slave_req_i(dbg_mem_obi_req[0]),
    .slave_rid_o(dbg_mem_obi_rsp[6:4]),
    .slave_rvalid_o(dbg_mem_obi_rsp[0]),
    .slave_wdata_i(dbg_mem_obi_req[36:5]),
    .slave_we_i(dbg_mem_obi_req[41]),
    .testmode_i(testmode_i),
    .unavailable_i(1'h0)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_domain.sv:233.5" */
  \dmi_jtag$croc_chip.i_croc_soc.i_croc.i_dmi_jtag  i_dmi_jtag (
    .clk_i(clk_i),
    .dmi_req_o(dmi_req),
    .dmi_req_ready_i(dmi_req_ready),
    .dmi_req_valid_o(dmi_req_valid),
    .dmi_resp_i(dmi_resp),
    .dmi_resp_ready_o(dmi_resp_ready),
    .dmi_resp_valid_i(dmi_resp_valid),
    .dmi_rst_no(dmi_rst_n),
    .rst_ni(rst_ni),
    .tck_i(jtag_tck_i),
    .td_i(jtag_tdi_i),
    .td_o(jtag_tdo_o),
    .testmode_i(testmode_i),
    .tms_i(jtag_tms_i),
    .trst_ni(jtag_trst_ni)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_domain.sv:584.5" */
  \gpio$croc_chip.i_croc_soc.i_croc.i_gpio  i_gpio (
    .clk_i(clk_i),
    .gpio_i(gpio_i),
    .gpio_in_sync_o(gpio_in_sync_o),
    .gpio_o(gpio_o),
    .gpio_out_en_o(gpio_out_en_o),
    .interrupt_o(gpio_irq),
    .obi_req_i(gpio_obi_req),
    .obi_rsp_o(gpio_obi_rsp),
    .rst_ni(rst_ni)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_domain.sv:323.5" */
  \obi_xbar$croc_chip.i_croc_soc.i_croc.i_main_xbar  i_main_xbar (
    .addr_map_i(384'h000000042000000080000000000000031000080010001000000000021000000010000800000000010000000010000000),
    .clk_i(clk_i),
    .default_idx_i(12'h000),
    .en_default_idx_i(4'hf),
    .mgr_ports_req_o(all_sbr_obi_req),
    .mgr_ports_rsp_i(all_sbr_obi_rsp),
    .rst_ni(rst_ni),
    .sbr_ports_req_i({ core_instr_obi_req, core_data_obi_req, dbg_req_obi_req, user_mgr_obi_req_i }),
    .sbr_ports_rsp_o({ core_instr_obi_rsp, core_data_obi_rsp, dbg_req_obi_rsp, user_mgr_obi_rsp_o }),
    .testmode_i(testmode_i)
  );
  /* src = "../rtl/croc_domain.sv:442.5" */
  \obi_demux$croc_chip.i_croc_soc.i_croc.i_obi_demux  i_obi_demux (
    .clk_i(clk_i),
    .mgr_ports_req_o(all_periph_obi_req),
    .mgr_ports_rsp_i(all_periph_obi_rsp),
    .rst_ni(rst_ni),
    .sbr_port_req_i(xbar_periph_obi_req),
    .sbr_port_rsp_o(xbar_periph_obi_rsp),
    .sbr_port_select_i(periph_idx)
  );
  /* src = "../rtl/croc_domain.sv:461.5" */
  \obi_err_sbr$croc_chip.i_croc_soc.i_croc.i_periph_err  i_periph_err (
    .clk_i(clk_i),
    .obi_req_i(error_obi_req),
    .obi_rsp_o(error_obi_rsp),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_domain.sv:513.5" */
  \soc_ctrl_reg_top$croc_chip.i_croc_soc.i_croc.i_soc_ctrl  i_soc_ctrl (
    .clk_i(clk_i),
    .devmode_i(1'h0),
    .hw2reg(4'h0),
    .reg2hw(soc_ctrl_reg2hw),
    .reg_req_i(soc_ctrl_reg_req),
    .reg_rsp_o(soc_ctrl_reg_rsp),
    .rst_ni(rst_ni)
  );
  /* src = "../rtl/croc_domain.sv:480.5" */
  \periph_to_reg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl_translate  i_soc_ctrl_translate (
    .add_i(soc_ctrl_obi_req[73:42]),
    .be_i(soc_ctrl_obi_req[40:37]),
    .clk_i(clk_i),
    .gnt_o(soc_ctrl_obi_rsp[1]),
    .id_i(soc_ctrl_obi_req[4:2]),
    .r_id_o(soc_ctrl_obi_rsp[6:4]),
    .r_opc_o(soc_ctrl_obi_rsp[3]),
    .r_rdata_o(soc_ctrl_obi_rsp[38:7]),
    .r_valid_o(soc_ctrl_obi_rsp[0]),
    .reg_req_o(soc_ctrl_reg_req),
    .reg_rsp_i(soc_ctrl_reg_rsp),
    .req_i(soc_ctrl_obi_req[0]),
    .rst_ni(rst_ni),
    .wdata_i(soc_ctrl_obi_req[36:5]),
    .wen_i(\$auto$builder.cc:364:Unop$8 )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_domain.sv:599.5" */
  \timer_unit$croc_chip.i_croc_soc.i_croc.i_timer  i_timer (
    .addr_i(timer_obi_req[73:42]),
    .be_i(timer_obi_req[40:37]),
    .clk_i(clk_i),
    .event_hi_i(1'h0),
    .event_lo_i(1'h0),
    .gnt_o(timer_obi_rsp[1]),
    .id_i(timer_obi_req[4:2]),
    .irq_hi_o(timer0_irq1),
    .irq_lo_o(timer0_irq0),
    .r_id_o(timer_obi_rsp[6:4]),
    .r_rdata_o(timer_obi_rsp[38:7]),
    .r_valid_o(timer_obi_rsp[0]),
    .ref_clk_i(ref_clk_i),
    .req_i(timer_obi_req[0]),
    .rst_ni(rst_ni),
    .wdata_i(timer_obi_req[36:5]),
    .wen_i(\$auto$builder.cc:364:Unop$14 )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_domain.sv:559.5" */
  \reg_uart_wrap$croc_chip.i_croc_soc.i_croc.i_uart  i_uart (
    .clk_i(clk_i),
    .cts_ni(1'h0),
    .dcd_ni(1'h0),
    .dsr_ni(1'h0),
    .intr_o(uart_irq),
    .reg_req_i(uart_reg_req),
    .reg_rsp_o(uart_reg_rsp),
    .rin_ni(1'h0),
    .rst_ni(rst_ni),
    .sin_i(uart_rx_i),
    .sout_o(uart_tx_o)
  );
  /* src = "../rtl/croc_domain.sv:534.5" */
  \periph_to_reg$croc_chip.i_croc_soc.i_croc.i_uart_translate  i_uart_translate (
    .add_i(uart_obi_req[73:42]),
    .be_i(uart_obi_req[40:37]),
    .clk_i(clk_i),
    .gnt_o(uart_obi_rsp[1]),
    .id_i(uart_obi_req[4:2]),
    .r_id_o(uart_obi_rsp[6:4]),
    .r_opc_o(uart_obi_rsp[3]),
    .r_rdata_o(uart_obi_rsp[38:7]),
    .r_valid_o(uart_obi_rsp[0]),
    .reg_req_o(uart_reg_req),
    .reg_rsp_i(uart_reg_rsp),
    .req_i(uart_obi_req[0]),
    .rst_ni(rst_ni),
    .wdata_i(uart_obi_req[36:5]),
    .wen_i(\$auto$builder.cc:364:Unop$12 )
  );
  /* src = "../rtl/croc_domain.sv:404.5" */
  \obi_err_sbr$croc_chip.i_croc_soc.i_croc.i_xbar_err  i_xbar_err (
    .clk_i(clk_i),
    .obi_req_i(xbar_error_obi_req),
    .obi_rsp_o(xbar_error_obi_rsp),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  assign interrupts = { 9'h000, interrupts_i, gpio_irq, uart_irq, timer0_irq1 };
  assign core_instr_obi_req[2] = 1'h0;
  assign core_instr_obi_req[39] = 1'h0;
  assign core_instr_obi_req[38:35] = 4'hf;
  assign core_instr_obi_req[34:3] = 32'd0;
  assign core_instr_obi_req[1] = 1'h0;
  assign core_data_obi_req[2] = 1'h0;
  assign core_data_obi_req[1] = 1'h0;
  assign dbg_req_obi_req[2] = 1'h0;
  assign dbg_req_obi_req[1] = 1'h0;
  assign xbar_error_obi_req = all_sbr_obi_req[73:0];
  assign all_sbr_obi_rsp[38:0] = xbar_error_obi_rsp;
  assign xbar_periph_obi_req = all_sbr_obi_req[147:74];
  assign all_sbr_obi_rsp[77:39] = xbar_periph_obi_rsp;
  assign xbar_mem_bank_obi_req[73:0] = all_sbr_obi_req[221:148];
  assign all_sbr_obi_rsp[116:78] = xbar_mem_bank_obi_rsp[38:0];
  assign xbar_mem_bank_obi_req[147:74] = all_sbr_obi_req[295:222];
  assign all_sbr_obi_rsp[155:117] = xbar_mem_bank_obi_rsp[77:39];
  assign user_sbr_obi_req_o = all_sbr_obi_req[369:296];
  assign all_sbr_obi_rsp[194:156] = user_sbr_obi_rsp_i;
  assign error_obi_req = all_periph_obi_req[73:0];
  assign all_periph_obi_rsp[38:0] = error_obi_rsp;
  assign dbg_mem_obi_req = all_periph_obi_req[147:74];
  assign all_periph_obi_rsp[77:39] = dbg_mem_obi_rsp;
  assign soc_ctrl_obi_req = all_periph_obi_req[221:148];
  assign all_periph_obi_rsp[116:78] = soc_ctrl_obi_rsp;
  assign uart_obi_req = all_periph_obi_req[295:222];
  assign all_periph_obi_rsp[155:117] = uart_obi_rsp;
  assign gpio_obi_req = all_periph_obi_req[369:296];
  assign all_periph_obi_rsp[194:156] = gpio_obi_rsp;
  assign timer_obi_req = all_periph_obi_req[443:370];
  assign all_periph_obi_rsp[233:195] = timer_obi_rsp;
  assign dbg_mem_obi_rsp[2] = 1'h0;
  assign dbg_mem_obi_rsp[3] = 1'h0;
  assign \gen_sram_bank[0].bank_word_addr  = \gen_sram_bank[0].bank_byte_addr [10:2];
  assign \gen_sram_bank[0].bank_gnt  = 1'h1;
  assign \gen_sram_bank[1].bank_word_addr  = \gen_sram_bank[1].bank_byte_addr [10:2];
  assign \gen_sram_bank[1].bank_gnt  = 1'h1;
  assign soc_ctrl_obi_rsp[2] = 1'h0;
  assign fetch_enable = \$auto$builder.cc:338:Biop$10 ;
  assign boot_addr = soc_ctrl_reg2hw[66:35];
  assign sram_impl = soc_ctrl_reg2hw[0];
  assign soc_ctrl_hw2reg = 4'h0;
  assign uart_obi_rsp[2] = 1'h0;
  assign timer_obi_rsp[3] = 1'h0;
  assign timer_obi_rsp[2] = 1'h0;
  assign hartinfo[0] = 1'h0;
  assign hartinfo[1] = 1'h0;
  assign hartinfo[2] = 1'h0;
  assign hartinfo[3] = 1'h0;
  assign hartinfo[4] = 1'h0;
  assign hartinfo[5] = 1'h0;
  assign hartinfo[6] = 1'h0;
  assign hartinfo[7] = 1'h1;
  assign hartinfo[8] = 1'h1;
  assign hartinfo[9] = 1'h1;
  assign hartinfo[10] = 1'h0;
  assign hartinfo[11] = 1'h0;
  assign hartinfo[12] = 1'h0;
  assign hartinfo[13] = 1'h1;
  assign hartinfo[14] = 1'h0;
  assign hartinfo[15] = 1'h0;
  assign hartinfo[16] = 1'h1;
  assign hartinfo[17] = 1'h0;
  assign hartinfo[18] = 1'h0;
  assign hartinfo[19] = 1'h0;
  assign hartinfo[20] = 1'h0;
  assign hartinfo[21] = 1'h1;
  assign hartinfo[22] = 1'h0;
  assign hartinfo[23] = 1'h0;
  assign hartinfo[24] = 1'h0;
  assign hartinfo[25] = 1'h0;
  assign hartinfo[26] = 1'h0;
  assign hartinfo[27] = 1'h0;
  assign hartinfo[28] = 1'h0;
  assign hartinfo[29] = 1'h0;
  assign hartinfo[30] = 1'h0;
  assign hartinfo[31] = 1'h0;
endmodule

/* src = "../rtl/croc_soc.sv:8.8" */
module \croc_soc$croc_chip.i_croc_soc (clk_i, rst_ni, testmode_i, ref_clk_i, jtag_tck_i, jtag_trst_ni, jtag_tms_i, jtag_tdi_i, jtag_tdo_o, uart_rx_i, uart_tx_o, fetch_en_i, status_o, gpio_i, gpio_o, gpio_out_en_o);
  /* src = "../rtl/croc_soc.sv:11.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/croc_soc.sv:15.16" */
  input fetch_en_i;
  wire fetch_en_i;
  /* src = "../rtl/croc_soc.sv:27.32" */
  input [31:0] gpio_i;
  wire [31:0] gpio_i;
  /* src = "../rtl/croc_soc.sv:61.23" */
  wire [31:0] gpio_in_sync;
  /* src = "../rtl/croc_soc.sv:28.32" */
  output [31:0] gpio_o;
  wire [31:0] gpio_o;
  /* src = "../rtl/croc_soc.sv:29.32" */
  output [31:0] gpio_out_en_o;
  wire [31:0] gpio_out_en_o;
  /* src = "../rtl/croc_soc.sv:60.29" */
  wire [3:0] interrupts;
  /* src = "../rtl/croc_soc.sv:18.16" */
  input jtag_tck_i;
  wire jtag_tck_i;
  /* src = "../rtl/croc_soc.sv:19.16" */
  input jtag_tdi_i;
  wire jtag_tdi_i;
  /* src = "../rtl/croc_soc.sv:20.16" */
  output jtag_tdo_o;
  wire jtag_tdo_o;
  /* src = "../rtl/croc_soc.sv:21.16" */
  input jtag_tms_i;
  wire jtag_tms_i;
  /* src = "../rtl/croc_soc.sv:22.16" */
  input jtag_trst_ni;
  wire jtag_trst_ni;
  /* src = "../rtl/croc_soc.sv:13.16" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "../rtl/croc_soc.sv:12.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/croc_soc.sv:16.16" */
  output status_o;
  wire status_o;
  /* src = "../rtl/croc_soc.sv:32.23" */
  wire synced_fetch_en;
  /* src = "../rtl/croc_soc.sv:32.9" */
  wire synced_rst_n;
  /* src = "../rtl/croc_soc.sv:14.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/croc_soc.sv:24.16" */
  input uart_rx_i;
  wire uart_rx_i;
  /* src = "../rtl/croc_soc.sv:25.16" */
  output uart_tx_o;
  wire uart_tx_o;
  /* src = "../rtl/croc_soc.sv:57.15" */
  wire [71:0] user_mgr_obi_req;
  /* src = "../rtl/croc_soc.sv:58.15" */
  wire [36:0] user_mgr_obi_rsp;
  /* src = "../rtl/croc_soc.sv:53.15" */
  wire [73:0] user_sbr_obi_req;
  /* src = "../rtl/croc_soc.sv:54.15" */
  wire [38:0] user_sbr_obi_rsp;
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_soc.sv:65.3" */
  \croc_domain$croc_chip.i_croc_soc.i_croc  i_croc (
    .clk_i(clk_i),
    .core_busy_o(status_o),
    .fetch_en_i(synced_fetch_en),
    .gpio_i(gpio_i),
    .gpio_in_sync_o(gpio_in_sync),
    .gpio_o(gpio_o),
    .gpio_out_en_o(gpio_out_en_o),
    .interrupts_i(interrupts),
    .jtag_tck_i(jtag_tck_i),
    .jtag_tdi_i(jtag_tdi_i),
    .jtag_tdo_o(jtag_tdo_o),
    .jtag_tms_i(jtag_tms_i),
    .jtag_trst_ni(jtag_trst_ni),
    .ref_clk_i(ref_clk_i),
    .rst_ni(synced_rst_n),
    .testmode_i(testmode_i),
    .uart_rx_i(uart_rx_i),
    .uart_tx_o(uart_tx_o),
    .user_mgr_obi_req_i(user_mgr_obi_req),
    .user_mgr_obi_rsp_o(user_mgr_obi_rsp),
    .user_sbr_obi_req_o(user_sbr_obi_req),
    .user_sbr_obi_rsp_i(user_sbr_obi_rsp)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_soc.sv:45.7" */
  \sync$croc_chip.i_croc_soc.i_ext_intr_sync  i_ext_intr_sync (
    .clk_i(clk_i),
    .rst_ni(synced_rst_n),
    .serial_i(fetch_en_i),
    .serial_o(synced_fetch_en)
  );
  /* src = "../rtl/croc_soc.sv:34.10" */
  \rstgen$croc_chip.i_croc_soc.i_rstgen  i_rstgen (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .rst_no(synced_rst_n),
    .test_mode_i(testmode_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/croc_soc.sv:99.3" */
  \user_domain$croc_chip.i_croc_soc.i_user  i_user (
    .clk_i(clk_i),
    .gpio_in_sync_i(gpio_in_sync),
    .interrupts_o(interrupts),
    .ref_clk_i(ref_clk_i),
    .rst_ni(synced_rst_n),
    .testmode_i(testmode_i),
    .user_mgr_obi_req_o(user_mgr_obi_req),
    .user_mgr_obi_rsp_i(user_mgr_obi_rsp),
    .user_sbr_obi_req_i(user_sbr_obi_req),
    .user_sbr_obi_rsp_o(user_sbr_obi_rsp)
  );
endmodule

/* src = "../rtl/cve2/cve2_core_blackbox.sv:15.8" */
module \cve2_core$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex (clk_i, rst_ni, test_en_i, instr_req_o, instr_gnt_i, instr_rvalid_i, instr_err_i, data_req_o, data_gnt_i, data_rvalid_i, data_we_o, data_err_i, irq_software_i, irq_timer_i, irq_external_i, irq_nm_i, irq_pending_o, debug_req_i, fetch_enable_i, core_busy_o, boot_addr_i
, instr_addr_o, instr_rdata_i, data_be_o, data_addr_o, data_wdata_o, data_rdata_i, hart_id_i, irq_fast_i, crash_dump_o);
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:36.40" */
  input [31:0] boot_addr_i;
  wire [31:0] boot_addr_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:30.40" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:106.40" */
  output core_busy_o;
  wire core_busy_o;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:67.40" */
  output [127:0] crash_dump_o;
  wire [127:0] crash_dump_o;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:52.40" */
  output [31:0] data_addr_o;
  wire [31:0] data_addr_o;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:51.40" */
  output [3:0] data_be_o;
  wire [3:0] data_be_o;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:55.40" */
  input data_err_i;
  wire data_err_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:48.40" */
  input data_gnt_i;
  wire data_gnt_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:54.40" */
  input [31:0] data_rdata_i;
  wire [31:0] data_rdata_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:47.40" */
  output data_req_o;
  wire data_req_o;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:49.40" */
  input data_rvalid_i;
  wire data_rvalid_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:53.40" */
  output [31:0] data_wdata_o;
  wire [31:0] data_wdata_o;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:50.40" */
  output data_we_o;
  wire data_we_o;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:66.40" */
  input debug_req_i;
  wire debug_req_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:105.40" */
  input fetch_enable_i;
  wire fetch_enable_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:35.40" */
  input [31:0] hart_id_i;
  wire [31:0] hart_id_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:42.40" */
  output [31:0] instr_addr_o;
  wire [31:0] instr_addr_o;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:44.40" */
  input instr_err_i;
  wire instr_err_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:40.40" */
  input instr_gnt_i;
  wire instr_gnt_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:43.40" */
  input [31:0] instr_rdata_i;
  wire [31:0] instr_rdata_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:39.40" */
  output instr_req_o;
  wire instr_req_o;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:41.40" */
  input instr_rvalid_i;
  wire instr_rvalid_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:60.40" */
  input irq_external_i;
  wire irq_external_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:61.40" */
  input [15:0] irq_fast_i;
  wire [15:0] irq_fast_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:62.40" */
  input irq_nm_i;
  wire irq_nm_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:63.40" */
  output irq_pending_o;
  wire irq_pending_o;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:58.40" */
  input irq_software_i;
  wire irq_software_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:59.40" */
  input irq_timer_i;
  wire irq_timer_i;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:31.40" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/cve2/cve2_core_blackbox.sv:33.40" */
  input test_en_i;
  wire test_en_i;
endmodule

/* src = "../rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$auto$builder.cc:338:Biop$6235 ;
  wire [1:0] \$auto$builder.cc:338:Biop$6237 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6227 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6229 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6231 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6233 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6244 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6246 ;
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6238 ;
  /* src = "../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6239 ;
  /* src = "../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6240 ;
  /* src = "../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6241 ;
  wire [1:0] \$procmux$14038_Y ;
  wire \$procmux$14039_CMP ;
  wire [1:0] \$procmux$14040_Y ;
  wire \$procmux$14041_CMP ;
  wire [1:0] \$procmux$14043_Y ;
  wire \$procmux$14044_CMP ;
  wire [1:0] \$procmux$14046_Y ;
  wire \$procmux$14047_CMP ;
  wire [1:0] \$procmux$14049_Y ;
  wire \$procmux$14050_CMP ;
  wire [1:0] \$procmux$14052_Y ;
  wire \$procmux$14053_CMP ;
  wire [1:0] \$procmux$14055_Y ;
  wire \$procmux$14056_CMP ;
  wire [1:0] \$procmux$14059_Y ;
  wire \$procmux$14060_CMP ;
  wire [1:0] \$procmux$14062_Y ;
  wire \$procmux$14063_CMP ;
  wire [1:0] \$procmux$14066_Y ;
  wire \$procmux$14067_CMP ;
  /* src = "../rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "../rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "../rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "../rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "../rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "../rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "../rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "../rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "../rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "../rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6243  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6244 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$6234  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$6235 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$6236  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$6237 )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:69.17-69.49|../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14038  (
    .A(\$auto$builder.cc:338:Biop$6237 ),
    .B(\$auto$builder.cc:338:Biop$6235 ),
    .S(\$procmux$14039_CMP ),
    .Y(\$procmux$14038_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14040  (
    .A(2'hx),
    .B(\$procmux$14038_Y ),
    .S(\$procmux$14041_CMP ),
    .Y(\$procmux$14040_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14043  (
    .A(\$procmux$14040_Y ),
    .B(2'hx),
    .S(\$procmux$14044_CMP ),
    .Y(\$procmux$14043_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14046  (
    .A(\$procmux$14043_Y ),
    .B(2'hx),
    .S(\$procmux$14047_CMP ),
    .Y(\$procmux$14046_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14049  (
    .A(counter_q),
    .B(\$auto$slang_frontend.cc:694:finish$\counter_d$6238 ),
    .S(\$procmux$14050_CMP ),
    .Y(\$procmux$14049_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14052  (
    .A(\$procmux$14049_Y ),
    .B(2'hx),
    .S(\$procmux$14053_CMP ),
    .Y(\$procmux$14052_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14055  (
    .A(\$procmux$14052_Y ),
    .B(2'hx),
    .S(\$procmux$14056_CMP ),
    .Y(\$procmux$14055_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14059  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$6239 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$14060_CMP ),
    .Y(\$procmux$14059_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14062  (
    .A(\$procmux$14059_Y ),
    .B(2'hx),
    .S(\$procmux$14063_CMP ),
    .Y(\$procmux$14062_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14066  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$6240 ),
    .B(2'h0),
    .S(\$procmux$14067_CMP ),
    .Y(\$procmux$14066_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$auto$slang_frontend.cc:694:finish$\counter_d$6241 ;
  assign \$procmux$14039_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6233 ;
  assign \$procmux$14041_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6231 ;
  assign \$procmux$14044_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6229 ;
  assign \$procmux$14047_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6227 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6238  = \$procmux$14046_Y ;
  assign \$procmux$14050_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6231 ;
  assign \$procmux$14053_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6229 ;
  assign \$procmux$14056_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6227 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6239  = \$procmux$14055_Y ;
  assign \$procmux$14060_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6229 ;
  assign \$procmux$14063_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6227 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6240  = \$procmux$14062_Y ;
  assign \$procmux$14067_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6227 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6241  = \$procmux$14066_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6227  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6229  = load_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6231  = en_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6233  = down_i;
  assign \$auto$rtlil.cc:2747:LogicNot$6246  = rst_ni;
endmodule

/* src = "../rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$auto$builder.cc:338:Biop$6384 ;
  wire [1:0] \$auto$builder.cc:338:Biop$6386 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6376 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6378 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6380 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6382 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6393 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6395 ;
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6387 ;
  /* src = "../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6388 ;
  /* src = "../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6389 ;
  /* src = "../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6390 ;
  wire [1:0] \$procmux$13951_Y ;
  wire \$procmux$13952_CMP ;
  wire [1:0] \$procmux$13953_Y ;
  wire \$procmux$13954_CMP ;
  wire [1:0] \$procmux$13956_Y ;
  wire \$procmux$13957_CMP ;
  wire [1:0] \$procmux$13959_Y ;
  wire \$procmux$13960_CMP ;
  wire [1:0] \$procmux$13962_Y ;
  wire \$procmux$13963_CMP ;
  wire [1:0] \$procmux$13965_Y ;
  wire \$procmux$13966_CMP ;
  wire [1:0] \$procmux$13968_Y ;
  wire \$procmux$13969_CMP ;
  wire [1:0] \$procmux$13972_Y ;
  wire \$procmux$13973_CMP ;
  wire [1:0] \$procmux$13975_Y ;
  wire \$procmux$13976_CMP ;
  wire [1:0] \$procmux$13979_Y ;
  wire \$procmux$13980_CMP ;
  /* src = "../rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "../rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "../rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "../rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "../rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "../rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "../rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "../rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "../rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "../rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6392  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6393 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$6383  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$6384 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$6385  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$6386 )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:69.17-69.49|../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13951  (
    .A(\$auto$builder.cc:338:Biop$6386 ),
    .B(\$auto$builder.cc:338:Biop$6384 ),
    .S(\$procmux$13952_CMP ),
    .Y(\$procmux$13951_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13953  (
    .A(2'hx),
    .B(\$procmux$13951_Y ),
    .S(\$procmux$13954_CMP ),
    .Y(\$procmux$13953_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13956  (
    .A(\$procmux$13953_Y ),
    .B(2'hx),
    .S(\$procmux$13957_CMP ),
    .Y(\$procmux$13956_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13959  (
    .A(\$procmux$13956_Y ),
    .B(2'hx),
    .S(\$procmux$13960_CMP ),
    .Y(\$procmux$13959_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13962  (
    .A(counter_q),
    .B(\$auto$slang_frontend.cc:694:finish$\counter_d$6387 ),
    .S(\$procmux$13963_CMP ),
    .Y(\$procmux$13962_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13965  (
    .A(\$procmux$13962_Y ),
    .B(2'hx),
    .S(\$procmux$13966_CMP ),
    .Y(\$procmux$13965_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13968  (
    .A(\$procmux$13965_Y ),
    .B(2'hx),
    .S(\$procmux$13969_CMP ),
    .Y(\$procmux$13968_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13972  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$6388 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$13973_CMP ),
    .Y(\$procmux$13972_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13975  (
    .A(\$procmux$13972_Y ),
    .B(2'hx),
    .S(\$procmux$13976_CMP ),
    .Y(\$procmux$13975_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13979  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$6389 ),
    .B(2'h0),
    .S(\$procmux$13980_CMP ),
    .Y(\$procmux$13979_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$auto$slang_frontend.cc:694:finish$\counter_d$6390 ;
  assign \$procmux$13952_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6382 ;
  assign \$procmux$13954_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6380 ;
  assign \$procmux$13957_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6378 ;
  assign \$procmux$13960_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6376 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6387  = \$procmux$13959_Y ;
  assign \$procmux$13963_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6380 ;
  assign \$procmux$13966_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6378 ;
  assign \$procmux$13969_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6376 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6388  = \$procmux$13968_Y ;
  assign \$procmux$13973_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6378 ;
  assign \$procmux$13976_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6376 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6389  = \$procmux$13975_Y ;
  assign \$procmux$13980_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6376 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6390  = \$procmux$13979_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6376  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6378  = load_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6380  = en_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6382  = down_i;
  assign \$auto$rtlil.cc:2747:LogicNot$6395  = rst_ni;
endmodule

/* src = "../rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$auto$builder.cc:338:Biop$6533 ;
  wire [1:0] \$auto$builder.cc:338:Biop$6535 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6525 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6527 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6529 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6531 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6542 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6544 ;
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6536 ;
  /* src = "../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6537 ;
  /* src = "../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6538 ;
  /* src = "../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6539 ;
  wire [1:0] \$procmux$13864_Y ;
  wire \$procmux$13865_CMP ;
  wire [1:0] \$procmux$13866_Y ;
  wire \$procmux$13867_CMP ;
  wire [1:0] \$procmux$13869_Y ;
  wire \$procmux$13870_CMP ;
  wire [1:0] \$procmux$13872_Y ;
  wire \$procmux$13873_CMP ;
  wire [1:0] \$procmux$13875_Y ;
  wire \$procmux$13876_CMP ;
  wire [1:0] \$procmux$13878_Y ;
  wire \$procmux$13879_CMP ;
  wire [1:0] \$procmux$13881_Y ;
  wire \$procmux$13882_CMP ;
  wire [1:0] \$procmux$13885_Y ;
  wire \$procmux$13886_CMP ;
  wire [1:0] \$procmux$13888_Y ;
  wire \$procmux$13889_CMP ;
  wire [1:0] \$procmux$13892_Y ;
  wire \$procmux$13893_CMP ;
  /* src = "../rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "../rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "../rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "../rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "../rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "../rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "../rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "../rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "../rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "../rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6541  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6542 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$6532  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$6533 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$6534  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$6535 )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:69.17-69.49|../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13864  (
    .A(\$auto$builder.cc:338:Biop$6535 ),
    .B(\$auto$builder.cc:338:Biop$6533 ),
    .S(\$procmux$13865_CMP ),
    .Y(\$procmux$13864_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13866  (
    .A(2'hx),
    .B(\$procmux$13864_Y ),
    .S(\$procmux$13867_CMP ),
    .Y(\$procmux$13866_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13869  (
    .A(\$procmux$13866_Y ),
    .B(2'hx),
    .S(\$procmux$13870_CMP ),
    .Y(\$procmux$13869_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13872  (
    .A(\$procmux$13869_Y ),
    .B(2'hx),
    .S(\$procmux$13873_CMP ),
    .Y(\$procmux$13872_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13875  (
    .A(counter_q),
    .B(\$auto$slang_frontend.cc:694:finish$\counter_d$6536 ),
    .S(\$procmux$13876_CMP ),
    .Y(\$procmux$13875_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13878  (
    .A(\$procmux$13875_Y ),
    .B(2'hx),
    .S(\$procmux$13879_CMP ),
    .Y(\$procmux$13878_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13881  (
    .A(\$procmux$13878_Y ),
    .B(2'hx),
    .S(\$procmux$13882_CMP ),
    .Y(\$procmux$13881_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13885  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$6537 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$13886_CMP ),
    .Y(\$procmux$13885_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13888  (
    .A(\$procmux$13885_Y ),
    .B(2'hx),
    .S(\$procmux$13889_CMP ),
    .Y(\$procmux$13888_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13892  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$6538 ),
    .B(2'h0),
    .S(\$procmux$13893_CMP ),
    .Y(\$procmux$13892_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$auto$slang_frontend.cc:694:finish$\counter_d$6539 ;
  assign \$procmux$13865_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6531 ;
  assign \$procmux$13867_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6529 ;
  assign \$procmux$13870_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6527 ;
  assign \$procmux$13873_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6525 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6536  = \$procmux$13872_Y ;
  assign \$procmux$13876_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6529 ;
  assign \$procmux$13879_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6527 ;
  assign \$procmux$13882_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6525 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6537  = \$procmux$13881_Y ;
  assign \$procmux$13886_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6527 ;
  assign \$procmux$13889_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6525 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6538  = \$procmux$13888_Y ;
  assign \$procmux$13893_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6525 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6539  = \$procmux$13892_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6525  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6527  = load_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6529  = en_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6531  = down_i;
  assign \$auto$rtlil.cc:2747:LogicNot$6544  = rst_ni;
endmodule

/* src = "../rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$auto$builder.cc:338:Biop$6682 ;
  wire [1:0] \$auto$builder.cc:338:Biop$6684 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6674 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6676 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6678 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6680 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6691 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6693 ;
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6685 ;
  /* src = "../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6686 ;
  /* src = "../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6687 ;
  /* src = "../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$6688 ;
  wire [1:0] \$procmux$13777_Y ;
  wire \$procmux$13778_CMP ;
  wire [1:0] \$procmux$13779_Y ;
  wire \$procmux$13780_CMP ;
  wire [1:0] \$procmux$13782_Y ;
  wire \$procmux$13783_CMP ;
  wire [1:0] \$procmux$13785_Y ;
  wire \$procmux$13786_CMP ;
  wire [1:0] \$procmux$13788_Y ;
  wire \$procmux$13789_CMP ;
  wire [1:0] \$procmux$13791_Y ;
  wire \$procmux$13792_CMP ;
  wire [1:0] \$procmux$13794_Y ;
  wire \$procmux$13795_CMP ;
  wire [1:0] \$procmux$13798_Y ;
  wire \$procmux$13799_CMP ;
  wire [1:0] \$procmux$13801_Y ;
  wire \$procmux$13802_CMP ;
  wire [1:0] \$procmux$13805_Y ;
  wire \$procmux$13806_CMP ;
  /* src = "../rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "../rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "../rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "../rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "../rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "../rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "../rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "../rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "../rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "../rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6690  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6691 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$6681  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$6682 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$6683  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$6684 )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:69.17-69.49|../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13777  (
    .A(\$auto$builder.cc:338:Biop$6684 ),
    .B(\$auto$builder.cc:338:Biop$6682 ),
    .S(\$procmux$13778_CMP ),
    .Y(\$procmux$13777_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13779  (
    .A(2'hx),
    .B(\$procmux$13777_Y ),
    .S(\$procmux$13780_CMP ),
    .Y(\$procmux$13779_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13782  (
    .A(\$procmux$13779_Y ),
    .B(2'hx),
    .S(\$procmux$13783_CMP ),
    .Y(\$procmux$13782_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13785  (
    .A(\$procmux$13782_Y ),
    .B(2'hx),
    .S(\$procmux$13786_CMP ),
    .Y(\$procmux$13785_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13788  (
    .A(counter_q),
    .B(\$auto$slang_frontend.cc:694:finish$\counter_d$6685 ),
    .S(\$procmux$13789_CMP ),
    .Y(\$procmux$13788_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13791  (
    .A(\$procmux$13788_Y ),
    .B(2'hx),
    .S(\$procmux$13792_CMP ),
    .Y(\$procmux$13791_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13794  (
    .A(\$procmux$13791_Y ),
    .B(2'hx),
    .S(\$procmux$13795_CMP ),
    .Y(\$procmux$13794_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13798  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$6686 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$13799_CMP ),
    .Y(\$procmux$13798_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13801  (
    .A(\$procmux$13798_Y ),
    .B(2'hx),
    .S(\$procmux$13802_CMP ),
    .Y(\$procmux$13801_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13805  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$6687 ),
    .B(2'h0),
    .S(\$procmux$13806_CMP ),
    .Y(\$procmux$13805_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$auto$slang_frontend.cc:694:finish$\counter_d$6688 ;
  assign \$procmux$13778_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6680 ;
  assign \$procmux$13780_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6678 ;
  assign \$procmux$13783_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6676 ;
  assign \$procmux$13786_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6674 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6685  = \$procmux$13785_Y ;
  assign \$procmux$13789_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6678 ;
  assign \$procmux$13792_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6676 ;
  assign \$procmux$13795_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6674 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6686  = \$procmux$13794_Y ;
  assign \$procmux$13799_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6676 ;
  assign \$procmux$13802_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6674 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6687  = \$procmux$13801_Y ;
  assign \$procmux$13806_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6674 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$6688  = \$procmux$13805_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6674  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6676  = load_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6678  = en_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6680  = down_i;
  assign \$auto$rtlil.cc:2747:LogicNot$6693  = rst_ni;
endmodule

/* src = "../rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_croc.i_obi_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$auto$builder.cc:338:Biop$4023 ;
  wire [1:0] \$auto$builder.cc:338:Biop$4025 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4015 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4017 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4019 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4021 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4032 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4034 ;
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$4026 ;
  /* src = "../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$4027 ;
  /* src = "../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$4028 ;
  /* src = "../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$4029 ;
  wire [1:0] \$procmux$14848_Y ;
  wire \$procmux$14849_CMP ;
  wire [1:0] \$procmux$14850_Y ;
  wire \$procmux$14851_CMP ;
  wire [1:0] \$procmux$14853_Y ;
  wire \$procmux$14854_CMP ;
  wire [1:0] \$procmux$14856_Y ;
  wire \$procmux$14857_CMP ;
  wire [1:0] \$procmux$14859_Y ;
  wire \$procmux$14860_CMP ;
  wire [1:0] \$procmux$14862_Y ;
  wire \$procmux$14863_CMP ;
  wire [1:0] \$procmux$14865_Y ;
  wire \$procmux$14866_CMP ;
  wire [1:0] \$procmux$14869_Y ;
  wire \$procmux$14870_CMP ;
  wire [1:0] \$procmux$14872_Y ;
  wire \$procmux$14873_CMP ;
  wire [1:0] \$procmux$14876_Y ;
  wire \$procmux$14877_CMP ;
  /* src = "../rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "../rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "../rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "../rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "../rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "../rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "../rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "../rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "../rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "../rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4031  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4032 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$4022  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$4023 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$4024  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$4025 )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:69.17-69.49|../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14848  (
    .A(\$auto$builder.cc:338:Biop$4025 ),
    .B(\$auto$builder.cc:338:Biop$4023 ),
    .S(\$procmux$14849_CMP ),
    .Y(\$procmux$14848_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14850  (
    .A(2'hx),
    .B(\$procmux$14848_Y ),
    .S(\$procmux$14851_CMP ),
    .Y(\$procmux$14850_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14853  (
    .A(\$procmux$14850_Y ),
    .B(2'hx),
    .S(\$procmux$14854_CMP ),
    .Y(\$procmux$14853_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14856  (
    .A(\$procmux$14853_Y ),
    .B(2'hx),
    .S(\$procmux$14857_CMP ),
    .Y(\$procmux$14856_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14859  (
    .A(counter_q),
    .B(\$auto$slang_frontend.cc:694:finish$\counter_d$4026 ),
    .S(\$procmux$14860_CMP ),
    .Y(\$procmux$14859_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14862  (
    .A(\$procmux$14859_Y ),
    .B(2'hx),
    .S(\$procmux$14863_CMP ),
    .Y(\$procmux$14862_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14865  (
    .A(\$procmux$14862_Y ),
    .B(2'hx),
    .S(\$procmux$14866_CMP ),
    .Y(\$procmux$14865_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14869  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$4027 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$14870_CMP ),
    .Y(\$procmux$14869_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14872  (
    .A(\$procmux$14869_Y ),
    .B(2'hx),
    .S(\$procmux$14873_CMP ),
    .Y(\$procmux$14872_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14876  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$4028 ),
    .B(2'h0),
    .S(\$procmux$14877_CMP ),
    .Y(\$procmux$14876_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$auto$slang_frontend.cc:694:finish$\counter_d$4029 ;
  assign \$procmux$14849_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4021 ;
  assign \$procmux$14851_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4019 ;
  assign \$procmux$14854_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4017 ;
  assign \$procmux$14857_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4015 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$4026  = \$procmux$14856_Y ;
  assign \$procmux$14860_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4019 ;
  assign \$procmux$14863_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4017 ;
  assign \$procmux$14866_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4015 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$4027  = \$procmux$14865_Y ;
  assign \$procmux$14870_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4017 ;
  assign \$procmux$14873_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4015 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$4028  = \$procmux$14872_Y ;
  assign \$procmux$14877_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4015 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$4029  = \$procmux$14876_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4015  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$4017  = load_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$4019  = en_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$4021  = down_i;
  assign \$auto$rtlil.cc:2747:LogicNot$4034  = rst_ni;
endmodule

/* src = "../rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_user.i_obi_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$auto$builder.cc:338:Biop$5927 ;
  wire [1:0] \$auto$builder.cc:338:Biop$5929 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5919 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5921 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5923 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5925 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5936 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5938 ;
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$5930 ;
  /* src = "../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$5931 ;
  /* src = "../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$5932 ;
  /* src = "../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\counter_d$5933 ;
  wire [1:0] \$procmux$14183_Y ;
  wire \$procmux$14184_CMP ;
  wire [1:0] \$procmux$14185_Y ;
  wire \$procmux$14186_CMP ;
  wire [1:0] \$procmux$14188_Y ;
  wire \$procmux$14189_CMP ;
  wire [1:0] \$procmux$14191_Y ;
  wire \$procmux$14192_CMP ;
  wire [1:0] \$procmux$14194_Y ;
  wire \$procmux$14195_CMP ;
  wire [1:0] \$procmux$14197_Y ;
  wire \$procmux$14198_CMP ;
  wire [1:0] \$procmux$14200_Y ;
  wire \$procmux$14201_CMP ;
  wire [1:0] \$procmux$14204_Y ;
  wire \$procmux$14205_CMP ;
  wire [1:0] \$procmux$14207_Y ;
  wire \$procmux$14208_CMP ;
  wire [1:0] \$procmux$14211_Y ;
  wire \$procmux$14212_CMP ;
  /* src = "../rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "../rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "../rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "../rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "../rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "../rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "../rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "../rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "../rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "../rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "../rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5935  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5936 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$5926  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$5927 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$builder.cc:330:Biop$5928  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$auto$builder.cc:338:Biop$5929 )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:69.17-69.49|../rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14183  (
    .A(\$auto$builder.cc:338:Biop$5929 ),
    .B(\$auto$builder.cc:338:Biop$5927 ),
    .S(\$procmux$14184_CMP ),
    .Y(\$procmux$14183_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14185  (
    .A(2'hx),
    .B(\$procmux$14183_Y ),
    .S(\$procmux$14186_CMP ),
    .Y(\$procmux$14185_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14188  (
    .A(\$procmux$14185_Y ),
    .B(2'hx),
    .S(\$procmux$14189_CMP ),
    .Y(\$procmux$14188_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14191  (
    .A(\$procmux$14188_Y ),
    .B(2'hx),
    .S(\$procmux$14192_CMP ),
    .Y(\$procmux$14191_Y )
  );
  /* src = "../rtl/common_cells/delta_counter.sv:68.13-72.16|../rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14194  (
    .A(counter_q),
    .B(\$auto$slang_frontend.cc:694:finish$\counter_d$5930 ),
    .S(\$procmux$14195_CMP ),
    .Y(\$procmux$14194_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14197  (
    .A(\$procmux$14194_Y ),
    .B(2'hx),
    .S(\$procmux$14198_CMP ),
    .Y(\$procmux$14197_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14200  (
    .A(\$procmux$14197_Y ),
    .B(2'hx),
    .S(\$procmux$14201_CMP ),
    .Y(\$procmux$14200_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:66.13-66.37|../rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14204  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$5931 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$14205_CMP ),
    .Y(\$procmux$14204_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14207  (
    .A(\$procmux$14204_Y ),
    .B(2'hx),
    .S(\$procmux$14208_CMP ),
    .Y(\$procmux$14207_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/delta_counter.sv:64.13-64.28|../rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14211  (
    .A(\$auto$slang_frontend.cc:694:finish$\counter_d$5932 ),
    .B(2'h0),
    .S(\$procmux$14212_CMP ),
    .Y(\$procmux$14211_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$auto$slang_frontend.cc:694:finish$\counter_d$5933 ;
  assign \$procmux$14184_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5925 ;
  assign \$procmux$14186_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5923 ;
  assign \$procmux$14189_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5921 ;
  assign \$procmux$14192_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5919 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$5930  = \$procmux$14191_Y ;
  assign \$procmux$14195_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5923 ;
  assign \$procmux$14198_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5921 ;
  assign \$procmux$14201_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5919 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$5931  = \$procmux$14200_Y ;
  assign \$procmux$14205_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5921 ;
  assign \$procmux$14208_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5919 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$5932  = \$procmux$14207_Y ;
  assign \$procmux$14212_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5919 ;
  assign \$auto$slang_frontend.cc:694:finish$\counter_d$5933  = \$procmux$14211_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5919  = clear_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$5921  = load_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$5923  = en_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$5925  = down_i;
  assign \$auto$rtlil.cc:2747:LogicNot$5938  = rst_ni;
endmodule

/* src = "../rtl/riscv-dbg/dm_obi_top.sv:63.8" */
module \dm_obi_top$croc_chip.i_croc_soc.i_croc.i_dm_top (clk_i, rst_ni, testmode_i, ndmreset_o, dmactive_o, debug_req_o, unavailable_i, slave_req_i, slave_we_i, master_req_o, master_we_o, master_gnt_i, dmi_rst_ni, dmi_req_valid_i, dmi_req_ready_o, dmi_resp_valid_o, dmi_resp_ready_i, hartinfo_i, slave_gnt_o, slave_addr_i, slave_be_i
, slave_wdata_i, slave_aid_i, slave_rvalid_o, slave_rdata_o, slave_rid_o, master_addr_o, master_wdata_o, master_be_o, master_rvalid_i, master_err_i, master_other_err_i, master_rdata_i, dmi_req_i, dmi_resp_o);
  wire \$auto$builder.cc:338:Biop$198 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$200 ;
  wire \$auto$rtlil.cc:2747:LogicNot$194 ;
  wire \$auto$rtlil.cc:2747:LogicNot$196 ;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:180.7-185.10" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\slave_rid_q$202 ;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:180.7-185.10" */
  wire \$auto$slang_frontend.cc:694:finish$\slave_rvalid_q$201 ;
  wire [2:0] \$procmux$16579_Y ;
  wire \$procmux$16580_CMP ;
  wire \$procmux$16582_Y ;
  wire \$procmux$16583_CMP ;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:72.33" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:78.33" */
  output debug_req_o;
  wire debug_req_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:77.33" */
  output dmactive_o;
  wire dmactive_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:113.33" */
  input [40:0] dmi_req_i;
  wire [40:0] dmi_req_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:112.33" */
  output dmi_req_ready_o;
  wire dmi_req_ready_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:111.33" */
  input dmi_req_valid_i;
  wire dmi_req_valid_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:117.33" */
  output [33:0] dmi_resp_o;
  wire [33:0] dmi_resp_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:116.33" */
  input dmi_resp_ready_i;
  wire dmi_resp_ready_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:115.33" */
  output dmi_resp_valid_o;
  wire dmi_resp_valid_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:110.33" */
  input dmi_rst_ni;
  wire dmi_rst_ni;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:81.40" */
  input [31:0] hartinfo_i;
  wire [31:0] hartinfo_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:99.33" */
  output [31:0] master_addr_o;
  wire [31:0] master_addr_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:102.33" */
  output [3:0] master_be_o;
  wire [3:0] master_be_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:105.33" */
  input master_err_i;
  wire master_err_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:103.33" */
  input master_gnt_i;
  wire master_gnt_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:106.33" */
  input master_other_err_i;
  wire master_other_err_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:107.33" */
  input [31:0] master_rdata_i;
  wire [31:0] master_rdata_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:98.33" */
  output master_req_o;
  wire master_req_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:104.33" */
  input master_rvalid_i;
  wire master_rvalid_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:101.33" */
  output [31:0] master_wdata_o;
  wire [31:0] master_wdata_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:100.33" */
  output master_we_o;
  wire master_we_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:76.33" */
  output ndmreset_o;
  wire ndmreset_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:74.33" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:87.33" */
  input [31:0] slave_addr_i;
  wire [31:0] slave_addr_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:91.33" */
  input [2:0] slave_aid_i;
  wire [2:0] slave_aid_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:88.33" */
  input [3:0] slave_be_i;
  wire [3:0] slave_be_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:85.33" */
  output slave_gnt_o;
  wire slave_gnt_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:94.33" */
  output [31:0] slave_rdata_o;
  wire [31:0] slave_rdata_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:83.33" */
  input slave_req_i;
  wire slave_req_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:96.33" */
  output [2:0] slave_rid_o;
  wire [2:0] slave_rid_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:122.23" */
  wire [2:0] slave_rid_q;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:93.33" */
  output slave_rvalid_o;
  wire slave_rvalid_o;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:121.23" */
  wire slave_rvalid_q;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:89.33" */
  input [31:0] slave_wdata_i;
  wire [31:0] slave_wdata_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:86.33" */
  input slave_we_i;
  wire slave_we_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:75.33" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:80.33" */
  input unavailable_i;
  wire unavailable_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$193  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$194 )
  );
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:175.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$slave_rid_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\slave_rid_q$202 ),
    .Q(slave_rid_q)
  );
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:175.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$slave_rvalid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\slave_rvalid_q$201 ),
    .Q(slave_rvalid_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:180.39-183.10|../rtl/riscv-dbg/dm_obi_top.sv:180.7-185.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16579  (
    .A(slave_rid_q),
    .B(slave_aid_i),
    .S(\$procmux$16580_CMP ),
    .Y(\$procmux$16579_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:180.39-183.10|../rtl/riscv-dbg/dm_obi_top.sv:180.7-185.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16582  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$16583_CMP ),
    .Y(\$procmux$16582_Y )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/riscv-dbg/dm_obi_top.sv:130.5" */
  \dm_top$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top  i_dm_top (
    .clk_i(clk_i),
    .debug_req_o(debug_req_o),
    .dmactive_o(dmactive_o),
    .dmi_req_i(dmi_req_i),
    .dmi_req_ready_o(dmi_req_ready_o),
    .dmi_req_valid_i(dmi_req_valid_i),
    .dmi_resp_o(dmi_resp_o),
    .dmi_resp_ready_i(dmi_resp_ready_i),
    .dmi_resp_valid_o(dmi_resp_valid_o),
    .dmi_rst_ni(dmi_rst_ni),
    .hartinfo_i(hartinfo_i),
    .master_add_o(master_addr_o),
    .master_be_o(master_be_o),
    .master_gnt_i(master_gnt_i),
    .master_r_err_i(master_err_i),
    .master_r_other_err_i(master_other_err_i),
    .master_r_rdata_i(master_rdata_i),
    .master_r_valid_i(master_rvalid_i),
    .master_req_o(master_req_o),
    .master_wdata_o(master_wdata_o),
    .master_we_o(master_we_o),
    .ndmreset_ack_i(ndmreset_o),
    .ndmreset_o(ndmreset_o),
    .next_dm_addr_i(32'd0),
    .rst_ni(rst_ni),
    .slave_addr_i(slave_addr_i),
    .slave_be_i(slave_be_i),
    .slave_rdata_o(slave_rdata_o),
    .slave_req_i(slave_req_i),
    .slave_wdata_i(slave_wdata_i),
    .slave_we_i(slave_we_i),
    .testmode_i(testmode_i),
    .unavailable_i(unavailable_i)
  );
  assign slave_gnt_o = 1'h1;
  assign slave_rvalid_o = slave_rvalid_q;
  assign slave_rid_o = slave_rid_q;
  assign \$procmux$16580_CMP  = \$auto$rtlil.cc:2746:ReduceBool$200 ;
  assign \$auto$slang_frontend.cc:694:finish$\slave_rid_q$202  = \$procmux$16579_Y ;
  assign \$procmux$16583_CMP  = \$auto$rtlil.cc:2746:ReduceBool$200 ;
  assign \$auto$slang_frontend.cc:694:finish$\slave_rvalid_q$201  = \$procmux$16582_Y ;
  assign \$auto$rtlil.cc:2747:LogicNot$196  = rst_ni;
  assign \$auto$builder.cc:338:Biop$198  = slave_req_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$200  = slave_req_i;
endmodule

/* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:20.8" */
module \dm_top$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top (clk_i, rst_ni, testmode_i, ndmreset_o, ndmreset_ack_i, dmactive_o, debug_req_o, unavailable_i, slave_req_i, slave_we_i, master_req_o, master_we_o, master_gnt_i, master_r_valid_i, master_r_err_i, master_r_other_err_i, dmi_rst_ni, dmi_req_valid_i, dmi_req_ready_o, dmi_resp_valid_o, dmi_resp_ready_i
, hartinfo_i, slave_addr_i, slave_be_i, slave_wdata_i, slave_rdata_o, master_wdata_o, master_be_o, dmi_req_i, dmi_resp_o, next_dm_addr_i, master_add_o, master_r_rdata_i);
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:30.33" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:43.33" */
  output debug_req_o;
  wire debug_req_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:42.33" */
  output dmactive_o;
  wire dmactive_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:72.33" */
  input [40:0] dmi_req_i;
  wire [40:0] dmi_req_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:71.33" */
  output dmi_req_ready_o;
  wire dmi_req_ready_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:70.33" */
  input dmi_req_valid_i;
  wire dmi_req_valid_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:76.33" */
  output [33:0] dmi_resp_o;
  wire [33:0] dmi_resp_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:75.33" */
  input dmi_resp_ready_i;
  wire dmi_resp_ready_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:74.33" */
  output dmi_resp_valid_o;
  wire dmi_resp_valid_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:67.33" */
  input dmi_rst_ni;
  wire dmi_rst_ni;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:46.39" */
  input [31:0] hartinfo_i;
  wire [31:0] hartinfo_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:56.33" */
  output [31:0] master_add_o;
  wire [31:0] master_add_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:59.33" */
  output [3:0] master_be_o;
  wire [3:0] master_be_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:60.33" */
  input master_gnt_i;
  wire master_gnt_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:62.33" */
  input master_r_err_i;
  wire master_r_err_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:63.33" */
  input master_r_other_err_i;
  wire master_r_other_err_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:64.33" */
  input [31:0] master_r_rdata_i;
  wire [31:0] master_r_rdata_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:61.33" */
  input master_r_valid_i;
  wire master_r_valid_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:55.33" */
  output master_req_o;
  wire master_req_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:58.33" */
  output [31:0] master_wdata_o;
  wire [31:0] master_wdata_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:57.33" */
  output master_we_o;
  wire master_we_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:41.33" */
  input ndmreset_ack_i;
  wire ndmreset_ack_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:40.33" */
  output ndmreset_o;
  wire ndmreset_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:38.33" */
  input [31:0] next_dm_addr_i;
  wire [31:0] next_dm_addr_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:32.33" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:50.33" */
  input [31:0] slave_addr_i;
  wire [31:0] slave_addr_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:51.33" */
  input [3:0] slave_be_i;
  wire [3:0] slave_be_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:53.33" */
  output [31:0] slave_rdata_o;
  wire [31:0] slave_rdata_o;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:48.33" */
  input slave_req_i;
  wire slave_req_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:52.33" */
  input [31:0] slave_wdata_i;
  wire [31:0] slave_wdata_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:49.33" */
  input slave_we_i;
  wire slave_we_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:39.33" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/riscv-dbg/dm_top_blackbox.sv:45.33" */
  input unavailable_i;
  wire unavailable_i;
endmodule

/* src = "../rtl/riscv-dbg/dmi_cdc.sv:19.8" */
module \dmi_cdc$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc (clk_i, rst_ni, tck_i, trst_ni, jtag_dmi_req_i, jtag_dmi_ready_o, jtag_dmi_valid_i, jtag_dmi_cdc_clear_i, jtag_dmi_resp_o, jtag_dmi_valid_o, jtag_dmi_ready_i, core_dmi_rst_no, core_dmi_req_o, core_dmi_valid_o, core_dmi_ready_i, core_dmi_resp_i, core_dmi_ready_o, core_dmi_valid_i);
  wire \$auto$builder.cc:338:Biop$2866 ;
  wire \$auto$builder.cc:364:Unop$2864 ;
  wire \$auto$builder.cc:364:Unop$2873 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2869 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2871 ;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:98.28" */
  wire clear_pending_rise_edge_detect;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:35.28" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:48.28" */
  wire core_clear_pending;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:96.28" */
  wire core_clear_pending_q;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:41.28" */
  input core_dmi_ready_i;
  wire core_dmi_ready_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:44.28" */
  output core_dmi_ready_o;
  wire core_dmi_ready_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:39.28" */
  output [40:0] core_dmi_req_o;
  wire [40:0] core_dmi_req_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:43.28" */
  input [33:0] core_dmi_resp_i;
  wire [33:0] core_dmi_resp_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:38.28" */
  output core_dmi_rst_no;
  wire core_dmi_rst_no;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:97.28" */
  wire core_dmi_rst_nq;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:45.28" */
  input core_dmi_valid_i;
  wire core_dmi_valid_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:40.28" */
  output core_dmi_valid_o;
  wire core_dmi_valid_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:26.28" */
  input jtag_dmi_cdc_clear_i;
  wire jtag_dmi_cdc_clear_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:32.28" */
  input jtag_dmi_ready_i;
  wire jtag_dmi_ready_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:24.28" */
  output jtag_dmi_ready_o;
  wire jtag_dmi_ready_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:23.28" */
  input [40:0] jtag_dmi_req_i;
  wire [40:0] jtag_dmi_req_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:30.28" */
  output [33:0] jtag_dmi_resp_o;
  wire [33:0] jtag_dmi_resp_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:25.28" */
  input jtag_dmi_valid_i;
  wire jtag_dmi_valid_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:31.28" */
  output jtag_dmi_valid_o;
  wire jtag_dmi_valid_o;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:36.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:21.28" */
  input tck_i;
  wire tck_i;
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:22.28" */
  input trst_ni;
  wire trst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2868  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2869 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2865  (
    .A(\$auto$builder.cc:364:Unop$2864 ),
    .B(core_clear_pending),
    .Y(\$auto$builder.cc:338:Biop$2866 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2863  (
    .A(core_clear_pending_q),
    .Y(\$auto$builder.cc:364:Unop$2864 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2872  (
    .A(clear_pending_rise_edge_detect),
    .Y(\$auto$builder.cc:364:Unop$2873 )
  );
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:102.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$core_clear_pending_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(core_clear_pending),
    .Q(core_clear_pending_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:102.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$core_dmi_rst_nq  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$builder.cc:364:Unop$2873 ),
    .Q(core_dmi_rst_nq)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:50.45" */
  \cdc_2phase_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req  i_cdc_req (
    .dst_clear_i(1'h0),
    .dst_clear_pending_o(core_clear_pending),
    .dst_clk_i(clk_i),
    .dst_data_o(core_dmi_req_o),
    .dst_ready_i(core_dmi_ready_i),
    .dst_rst_ni(rst_ni),
    .dst_valid_o(core_dmi_valid_o),
    .src_clear_i(jtag_dmi_cdc_clear_i),
    .src_clk_i(tck_i),
    .src_data_i(jtag_dmi_req_i),
    .src_ready_o(jtag_dmi_ready_o),
    .src_rst_ni(trst_ni),
    .src_valid_i(jtag_dmi_valid_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_cdc.sv:72.46" */
  \cdc_2phase_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp  i_cdc_resp (
    .dst_clear_i(jtag_dmi_cdc_clear_i),
    .dst_clk_i(tck_i),
    .dst_data_o(jtag_dmi_resp_o),
    .dst_ready_i(jtag_dmi_ready_i),
    .dst_rst_ni(trst_ni),
    .dst_valid_o(jtag_dmi_valid_o),
    .src_clear_i(1'h0),
    .src_clk_i(clk_i),
    .src_data_i(core_dmi_resp_i),
    .src_ready_o(core_dmi_ready_o),
    .src_rst_ni(rst_ni),
    .src_valid_i(core_dmi_valid_i)
  );
  assign clear_pending_rise_edge_detect = \$auto$builder.cc:338:Biop$2866 ;
  assign core_dmi_rst_no = core_dmi_rst_nq;
  assign \$auto$rtlil.cc:2747:LogicNot$2871  = rst_ni;
endmodule

/* src = "../rtl/riscv-dbg/dmi_jtag.sv:19.8" */
module \dmi_jtag$croc_chip.i_croc_soc.i_croc.i_dmi_jtag (clk_i, rst_ni, testmode_i, dmi_rst_no, dmi_req_o, dmi_req_valid_o, dmi_req_ready_i, dmi_resp_i, dmi_resp_ready_o, dmi_resp_valid_i, tck_i, tms_i, trst_ni, td_i, td_o, tdo_oe_o);
  wire \$auto$builder.cc:338:Biop$110 ;
  wire \$auto$builder.cc:338:Biop$112 ;
  wire \$auto$builder.cc:338:Biop$123 ;
  wire \$auto$builder.cc:338:Biop$128 ;
  wire \$auto$builder.cc:338:Biop$130 ;
  wire \$auto$builder.cc:338:Biop$135 ;
  wire \$auto$builder.cc:338:Biop$137 ;
  wire \$auto$builder.cc:338:Biop$142 ;
  wire \$auto$builder.cc:338:Biop$144 ;
  wire \$auto$builder.cc:338:Biop$163 ;
  wire \$auto$builder.cc:338:Biop$167 ;
  wire \$auto$builder.cc:338:Biop$171 ;
  wire \$auto$builder.cc:338:Biop$173 ;
  wire \$auto$builder.cc:338:Biop$23 ;
  wire \$auto$builder.cc:338:Biop$25 ;
  wire \$auto$builder.cc:338:Biop$27 ;
  wire [31:0] \$auto$builder.cc:338:Biop$40 ;
  wire \$auto$builder.cc:338:Biop$49 ;
  wire \$auto$builder.cc:338:Biop$58 ;
  wire \$auto$builder.cc:338:Biop$60 ;
  wire \$auto$builder.cc:338:Biop$62 ;
  wire \$auto$builder.cc:338:Biop$66 ;
  wire \$auto$builder.cc:338:Biop$70 ;
  wire \$auto$builder.cc:364:Unop$165 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$101 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$114 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$121 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$125 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$132 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$139 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$146 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$157 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$159 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$161 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$169 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$175 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$181 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$183 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$30 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$32 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$36 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$38 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$51 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$56 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$64 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$68 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$72 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$79 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$82 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$91 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$94 ;
  wire \$auto$rtlil.cc:2747:LogicNot$189 ;
  wire \$auto$rtlil.cc:2747:LogicNot$191 ;
  wire \$auto$rtlil.cc:2747:LogicNot$45 ;
  wire \$auto$rtlil.cc:2747:LogicNot$47 ;
  wire \$auto$rtlil.cc:2793:Eq$117 ;
  wire \$auto$rtlil.cc:2793:Eq$119 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$53 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\address_d$105 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\address_d$151 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\address_d$76 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\data_d$106 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\data_d$152 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\data_d$77 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\data_d$83 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\data_d$87 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  wire \$auto$slang_frontend.cc:694:finish$\dmi_req_valid$103 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  wire \$auto$slang_frontend.cc:694:finish$\dmi_req_valid$148 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:271.20-273.14" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$176 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:268.11-273.14" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$177 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:267.9-274.12" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$178 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:266.7-275.10" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$179 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:278.9-280.12" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$184 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:277.7-281.10" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$185 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:263.5-282.8" */
  wire [40:0] \$auto$slang_frontend.cc:694:finish$\dr_d$186 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:73.7-84.10" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\dtmcs_d$33 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:72.5-85.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\dtmcs_d$34 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:88.7-88.61" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\dtmcs_d$41 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:87.5-89.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\dtmcs_d$42 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:243.7-245.10" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\error_d$133 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:247.7-249.10" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\error_d$140 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:252.7-254.10" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\error_d$147 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\error_d$149 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$107 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:232.7-234.10" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$115 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:239.7-241.10" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$126 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$153 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$84 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$88 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:213.13-217.20" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$95 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$98 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$108 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$154 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$85 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$89 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:213.13-217.20" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$96 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14" */
  wire \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$99 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:224.11-226.14" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$102 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$104 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$150 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:165.22-167.16" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$73 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:163.13-167.16" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$74 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$75 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:174.11-176.14" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$80 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$86 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:205.11-207.14" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$92 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\state_d$97 ;
  wire [1:0] \$procmux$16584_Y ;
  wire \$procmux$16585_CMP ;
  wire [1:0] \$procmux$16592_Y ;
  wire \$procmux$16593_CMP ;
  wire [1:0] \$procmux$16594_Y ;
  wire \$procmux$16595_CMP ;
  wire [1:0] \$procmux$16601_Y ;
  wire \$procmux$16602_CMP ;
  wire [1:0] \$procmux$16603_Y ;
  wire \$procmux$16604_CMP ;
  wire [1:0] \$procmux$16609_Y ;
  wire \$procmux$16610_CMP ;
  wire \$procmux$16611_Y ;
  wire \$procmux$16612_CMP ;
  wire \$procmux$16616_Y ;
  wire \$procmux$16617_CMP ;
  wire \$procmux$16618_Y ;
  wire \$procmux$16619_CMP ;
  wire \$procmux$16622_Y ;
  wire \$procmux$16623_CMP ;
  wire [2:0] \$procmux$16624_Y ;
  wire \$procmux$16625_CMP ;
  wire [2:0] \$procmux$16627_Y ;
  wire \$procmux$16628_CMP ;
  wire \$procmux$16629_CMP ;
  wire \$procmux$16630_CMP ;
  wire \$procmux$16631_CMP ;
  wire \$procmux$16632_CMP ;
  wire [2:0] \$procmux$16634_Y ;
  wire \$procmux$16635_CMP ;
  wire \$procmux$16639_Y ;
  wire \$procmux$16640_CMP ;
  wire \$procmux$16641_Y ;
  wire \$procmux$16642_CMP ;
  wire \$procmux$16643_Y ;
  wire \$procmux$16644_CMP ;
  wire \$procmux$16646_Y ;
  wire \$procmux$16647_CMP ;
  wire \$procmux$16650_Y ;
  wire \$procmux$16651_CMP ;
  wire \$procmux$16652_Y ;
  wire \$procmux$16653_CMP ;
  wire \$procmux$16654_Y ;
  wire \$procmux$16655_CMP ;
  wire \$procmux$16657_Y ;
  wire \$procmux$16658_CMP ;
  wire \$procmux$16661_Y ;
  wire \$procmux$16662_CMP ;
  wire \$procmux$16663_Y ;
  wire \$procmux$16664_CMP ;
  wire \$procmux$16666_Y ;
  wire \$procmux$16667_CMP ;
  wire \$procmux$16670_Y ;
  wire \$procmux$16671_CMP ;
  wire \$procmux$16672_Y ;
  wire \$procmux$16673_CMP ;
  wire \$procmux$16675_Y ;
  wire \$procmux$16676_CMP ;
  wire [2:0] \$procmux$16679_Y ;
  wire \$procmux$16680_CMP ;
  wire [2:0] \$procmux$16681_Y ;
  wire \$procmux$16682_CMP ;
  wire [2:0] \$procmux$16684_Y ;
  wire \$procmux$16685_CMP ;
  wire [2:0] \$procmux$16688_Y ;
  wire \$procmux$16689_CMP ;
  wire [2:0] \$procmux$16690_Y ;
  wire \$procmux$16691_CMP ;
  wire [2:0] \$procmux$16693_Y ;
  wire \$procmux$16694_CMP ;
  wire [31:0] \$procmux$16699_Y ;
  wire \$procmux$16700_CMP ;
  wire \$procmux$16701_CMP ;
  wire \$procmux$16702_CMP ;
  wire [31:0] \$procmux$16703_Y ;
  wire \$procmux$16704_CMP ;
  wire [31:0] \$procmux$16705_Y ;
  wire \$procmux$16706_CMP ;
  wire [31:0] \$procmux$16708_Y ;
  wire \$procmux$16709_CMP ;
  wire \$procmux$16715_Y ;
  wire \$procmux$16716_CMP ;
  wire \$procmux$16717_Y ;
  wire \$procmux$16718_CMP ;
  wire \$procmux$16719_Y ;
  wire \$procmux$16720_CMP ;
  wire \$procmux$16722_Y ;
  wire \$procmux$16723_CMP ;
  wire \$procmux$16728_Y ;
  wire \$procmux$16729_CMP ;
  wire \$procmux$16730_Y ;
  wire \$procmux$16731_CMP ;
  wire \$procmux$16732_Y ;
  wire \$procmux$16733_CMP ;
  wire \$procmux$16735_Y ;
  wire \$procmux$16736_CMP ;
  wire \$procmux$16741_Y ;
  wire \$procmux$16742_CMP ;
  wire \$procmux$16743_Y ;
  wire \$procmux$16744_CMP ;
  wire \$procmux$16746_Y ;
  wire \$procmux$16747_CMP ;
  wire \$procmux$16752_Y ;
  wire \$procmux$16753_CMP ;
  wire \$procmux$16754_Y ;
  wire \$procmux$16755_CMP ;
  wire \$procmux$16757_Y ;
  wire \$procmux$16758_CMP ;
  wire [31:0] \$procmux$16763_Y ;
  wire \$procmux$16764_CMP ;
  wire [31:0] \$procmux$16765_Y ;
  wire \$procmux$16766_CMP ;
  wire [31:0] \$procmux$16768_Y ;
  wire \$procmux$16769_CMP ;
  wire [2:0] \$procmux$16774_Y ;
  wire \$procmux$16775_CMP ;
  wire [2:0] \$procmux$16776_Y ;
  wire \$procmux$16777_CMP ;
  wire [2:0] \$procmux$16779_Y ;
  wire \$procmux$16780_CMP ;
  wire [2:0] \$procmux$16785_Y ;
  wire \$procmux$16786_CMP ;
  wire [2:0] \$procmux$16787_Y ;
  wire \$procmux$16788_CMP ;
  wire [2:0] \$procmux$16790_Y ;
  wire \$procmux$16791_CMP ;
  wire [31:0] \$procmux$16799_Y ;
  wire \$procmux$16800_CMP ;
  wire \$procmux$16803_CMP ;
  wire [31:0] \$procmux$16805_Y ;
  wire \$procmux$16806_CMP ;
  wire [6:0] \$procmux$16818_Y ;
  wire \$procmux$16819_CMP ;
  wire [6:0] \$procmux$16821_Y ;
  wire \$procmux$16822_CMP ;
  wire [2:0] \$procmux$16826_Y ;
  wire \$procmux$16827_CMP ;
  wire \$procmux$16829_CMP ;
  wire \$procmux$16831_CMP ;
  wire \$procmux$16833_CMP ;
  wire \$procmux$16835_CMP ;
  wire [2:0] \$procmux$16837_Y ;
  wire \$procmux$16838_CMP ;
  wire [2:0] \$procmux$16844_Y ;
  wire \$procmux$16845_CMP ;
  wire [2:0] \$procmux$16847_Y ;
  wire \$procmux$16848_CMP ;
  wire [2:0] \$procmux$16849_Y ;
  wire \$procmux$16850_CMP ;
  wire [2:0] \$procmux$16851_Y ;
  wire \$procmux$16852_CMP ;
  wire [2:0] \$procmux$16854_Y ;
  wire \$procmux$16855_CMP ;
  wire [2:0] \$procmux$16863_Y ;
  wire \$procmux$16864_CMP ;
  wire [2:0] \$procmux$16865_Y ;
  wire \$procmux$16866_CMP ;
  wire [2:0] \$procmux$16867_Y ;
  wire \$procmux$16868_CMP ;
  wire [2:0] \$procmux$16870_Y ;
  wire \$procmux$16871_CMP ;
  wire [31:0] \$procmux$16878_Y ;
  wire \$procmux$16879_CMP ;
  wire [31:0] \$procmux$16880_Y ;
  wire \$procmux$16881_CMP ;
  wire [31:0] \$procmux$16883_Y ;
  wire \$procmux$16884_CMP ;
  wire [6:0] \$procmux$16891_Y ;
  wire \$procmux$16892_CMP ;
  wire [6:0] \$procmux$16893_Y ;
  wire \$procmux$16894_CMP ;
  wire [6:0] \$procmux$16896_Y ;
  wire \$procmux$16897_CMP ;
  wire [2:0] \$procmux$16904_Y ;
  wire \$procmux$16905_CMP ;
  wire [2:0] \$procmux$16906_Y ;
  wire \$procmux$16907_CMP ;
  wire [2:0] \$procmux$16909_Y ;
  wire \$procmux$16910_CMP ;
  wire \$procmux$16914_Y ;
  wire \$procmux$16915_CMP ;
  wire \$procmux$16918_CMP ;
  wire \$procmux$16920_Y ;
  wire \$procmux$16921_CMP ;
  wire \$procmux$16925_Y ;
  wire \$procmux$16926_CMP ;
  wire \$procmux$16929_CMP ;
  wire \$procmux$16931_Y ;
  wire \$procmux$16932_CMP ;
  wire \$procmux$16938_Y ;
  wire \$procmux$16939_CMP ;
  wire \$procmux$16942_CMP ;
  wire \$procmux$16944_Y ;
  wire \$procmux$16945_CMP ;
  wire [31:0] \$procmux$16953_Y ;
  wire \$procmux$16954_CMP ;
  wire [6:0] \$procmux$16962_Y ;
  wire \$procmux$16963_CMP ;
  wire [2:0] \$procmux$16971_Y ;
  wire \$procmux$16972_CMP ;
  wire [1:0] \$procmux$16980_Y ;
  wire \$procmux$16981_CMP ;
  wire \$procmux$16989_Y ;
  wire \$procmux$16990_CMP ;
  wire \$procmux$16998_Y ;
  wire \$procmux$16999_CMP ;
  wire \$procmux$17007_Y ;
  wire \$procmux$17008_CMP ;
  wire [40:0] \$procmux$17009_Y ;
  wire \$procmux$17010_CMP ;
  wire [40:0] \$procmux$17011_Y ;
  wire \$procmux$17012_CMP ;
  wire [40:0] \$procmux$17015_Y ;
  wire \$procmux$17016_CMP ;
  wire [40:0] \$procmux$17018_Y ;
  wire \$procmux$17019_CMP ;
  wire [40:0] \$procmux$17022_Y ;
  wire \$procmux$17023_CMP ;
  wire [40:0] \$procmux$17024_Y ;
  wire \$procmux$17025_CMP ;
  wire [40:0] \$procmux$17027_Y ;
  wire \$procmux$17028_CMP ;
  wire [40:0] \$procmux$17029_Y ;
  wire \$procmux$17030_CMP ;
  wire [40:0] \$procmux$17031_Y ;
  wire \$procmux$17032_CMP ;
  wire [40:0] \$procmux$17034_Y ;
  wire \$procmux$17035_CMP ;
  wire [40:0] \$procmux$17038_Y ;
  wire \$procmux$17039_CMP ;
  wire [40:0] \$procmux$17040_Y ;
  wire \$procmux$17041_CMP ;
  wire [40:0] \$procmux$17042_Y ;
  wire \$procmux$17043_CMP ;
  wire [40:0] \$procmux$17045_Y ;
  wire \$procmux$17046_CMP ;
  wire [40:0] \$procmux$17048_Y ;
  wire \$procmux$17049_CMP ;
  wire [40:0] \$procmux$17050_Y ;
  wire \$procmux$17051_CMP ;
  wire [40:0] \$procmux$17053_Y ;
  wire \$procmux$17054_CMP ;
  wire [40:0] \$procmux$17056_Y ;
  wire \$procmux$17057_CMP ;
  wire [40:0] \$procmux$17059_Y ;
  wire \$procmux$17060_CMP ;
  wire [40:0] \$procmux$17064_Y ;
  wire \$procmux$17065_CMP ;
  wire [31:0] \$procmux$17066_Y ;
  wire \$procmux$17067_CMP ;
  wire [31:0] \$procmux$17068_Y ;
  wire \$procmux$17069_CMP ;
  wire [31:0] \$procmux$17072_Y ;
  wire \$procmux$17073_CMP ;
  wire [31:0] \$procmux$17075_Y ;
  wire \$procmux$17076_CMP ;
  wire [31:0] \$procmux$17077_Y ;
  wire \$procmux$17078_CMP ;
  wire [31:0] \$procmux$17080_Y ;
  wire \$procmux$17081_CMP ;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:125.15" */
  wire [6:0] address_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:125.26" */
  wire [6:0] address_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:56.9" */
  wire capture;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:22.24" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:126.16" */
  wire [31:0] data_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:126.24" */
  wire [31:0] data_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:128.10" */
  wire [40:0] dmi;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:54.9" */
  wire dmi_clear;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:107.18" */
  wire [40:0] dmi_req;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:29.24" */
  output [40:0] dmi_req_o;
  wire [40:0] dmi_req_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:108.18" */
  wire dmi_req_ready;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:31.24" */
  input dmi_req_ready_i;
  wire dmi_req_ready_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:109.18" */
  wire dmi_req_valid;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:30.24" */
  output dmi_req_valid_o;
  wire dmi_req_valid_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:111.18" */
  wire [33:0] dmi_resp;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:33.24" */
  input [33:0] dmi_resp_i;
  wire [33:0] dmi_resp_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:113.18" */
  wire dmi_resp_ready;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:34.24" */
  output dmi_resp_ready_o;
  wire dmi_resp_ready_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:112.18" */
  wire dmi_resp_valid;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:35.24" */
  input dmi_resp_valid_i;
  wire dmi_resp_valid_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:28.24" */
  output dmi_rst_no;
  wire dmi_rst_no;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:104.16" */
  wire dmi_select;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:105.16" */
  wire dmi_tdo;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:124.28" */
  wire [40:0] dr_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:124.34" */
  wire [40:0] dr_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:68.15" */
  wire [31:0] dtmcs_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:68.24" */
  wire [31:0] dtmcs_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:60.9" */
  wire dtmcs_select;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:49.15" */
  wire [1:0] error_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:136.9" */
  wire error_dmi_busy;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:137.9" */
  wire error_dmi_op_failed;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:49.24" */
  wire [1:0] error_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:52.9" */
  wire jtag_dmi_clear;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:23.24" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:57.9" */
  wire shift;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:122.11" */
  wire [2:0] state_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:122.20" */
  wire [2:0] state_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:51.9" */
  wire tck;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:37.24" */
  input tck_i;
  wire tck_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:40.24" */
  input td_i;
  wire td_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:41.24" */
  output td_o;
  wire td_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:58.9" */
  wire tdi;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:42.24" */
  output tdo_oe_o;
  wire tdo_oe_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:24.24" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:38.24" */
  input tms_i;
  wire tms_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:39.24" */
  input trst_ni;
  wire trst_ni;
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:55.9" */
  wire update;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$188  (
    .A(trst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$189 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$44  (
    .A(trst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$45 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:18:ReduceBool$120  (
    .A({ \$auto$rtlil.cc:2793:Eq$119 , \$auto$rtlil.cc:2793:Eq$117  }),
    .Y(\$auto$rtlil.cc:2746:ReduceBool$121 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$109  (
    .A(state_q),
    .Y(\$auto$builder.cc:338:Biop$110 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$111  (
    .A(update),
    .B(\$auto$builder.cc:338:Biop$110 ),
    .Y(\$auto$builder.cc:338:Biop$112 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$122  (
    .A(capture),
    .B(\$auto$rtlil.cc:2746:ReduceBool$121 ),
    .Y(\$auto$builder.cc:338:Biop$123 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$127  (
    .A(error_q),
    .Y(\$auto$builder.cc:338:Biop$128 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$129  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$126 ),
    .B(\$auto$builder.cc:338:Biop$128 ),
    .Y(\$auto$builder.cc:338:Biop$130 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$134  (
    .A(error_q),
    .Y(\$auto$builder.cc:338:Biop$135 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$136  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$108 ),
    .B(\$auto$builder.cc:338:Biop$135 ),
    .Y(\$auto$builder.cc:338:Biop$137 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$141  (
    .A(update),
    .B(dtmcs_q[16]),
    .Y(\$auto$builder.cc:338:Biop$142 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$143  (
    .A(\$auto$builder.cc:338:Biop$142 ),
    .B(dtmcs_select),
    .Y(\$auto$builder.cc:338:Biop$144 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$162  (
    .A(error_q),
    .Y(\$auto$builder.cc:338:Biop$163 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$166  (
    .A(\$auto$builder.cc:338:Biop$163 ),
    .B(\$auto$builder.cc:364:Unop$165 ),
    .Y(\$auto$builder.cc:338:Biop$167 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$170  (
    .A(error_q),
    .B(2'h3),
    .Y(\$auto$builder.cc:338:Biop$171 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$172  (
    .A(\$auto$builder.cc:338:Biop$171 ),
    .B(error_dmi_busy),
    .Y(\$auto$builder.cc:338:Biop$173 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$22  (
    .A(dtmcs_select),
    .B(update),
    .Y(\$auto$builder.cc:338:Biop$23 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$24  (
    .A(\$auto$builder.cc:338:Biop$23 ),
    .B(dtmcs_q[17]),
    .Y(\$auto$builder.cc:338:Biop$25 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$26  (
    .A(jtag_dmi_clear),
    .B(\$auto$builder.cc:338:Biop$25 ),
    .Y(\$auto$builder.cc:338:Biop$27 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$48  (
    .A(state_q),
    .B(3'h3),
    .Y(\$auto$builder.cc:338:Biop$49 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$57  (
    .A(dmi_select),
    .B(update),
    .Y(\$auto$builder.cc:338:Biop$58 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$59  (
    .A(error_q),
    .Y(\$auto$builder.cc:338:Biop$60 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$61  (
    .A(\$auto$builder.cc:338:Biop$58 ),
    .B(\$auto$builder.cc:338:Biop$60 ),
    .Y(\$auto$builder.cc:338:Biop$62 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$65  (
    .A(dmi[1:0]),
    .B(2'h1),
    .Y(\$auto$builder.cc:338:Biop$66 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$69  (
    .A(dmi[1:0]),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$70 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$164  (
    .A(error_dmi_busy),
    .Y(\$auto$builder.cc:364:Unop$165 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:78:EqWildcard$116  (
    .A(state_q),
    .B(3'h1),
    .Y(\$auto$rtlil.cc:2793:Eq$117 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:78:EqWildcard$118  (
    .A(state_q),
    .B(3'h2),
    .Y(\$auto$rtlil.cc:2793:Eq$119 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$52  (
    .A(2'h1),
    .B(2'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$51 ),
    .Y(\$auto$rtlil.cc:2874:Mux$53 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:285.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$address_q  (
    .AD(7'h00),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(address_d),
    .Q(address_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:285.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_q  (
    .AD(32'd0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(data_d),
    .Q(data_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:285.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd41)
  ) \$driver$dr_q  (
    .AD(41'h00000000000),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dr_d),
    .Q(dr_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd6)
  ) \$driver$dtmcs_q.abits  (
    .AD(6'h00),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[9:4]),
    .Q(dtmcs_q[9:4])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dtmcs_q.dmihardreset  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[17]),
    .Q(dtmcs_q[17])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dtmcs_q.dmireset  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[16]),
    .Q(dtmcs_q[16])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$dtmcs_q.dmistat  (
    .AD(2'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[11:10]),
    .Q(dtmcs_q[11:10])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$dtmcs_q.idle  (
    .AD(3'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[14:12]),
    .Q(dtmcs_q[14:12])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$dtmcs_q.version  (
    .AD(4'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[3:0]),
    .Q(dtmcs_q[3:0])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dtmcs_q.zero0  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[15]),
    .Q(dtmcs_q[15])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:92.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd14)
  ) \$driver$dtmcs_q.zero1  (
    .AD(14'h0000),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[31:18]),
    .Q(dtmcs_q[31:18])
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:285.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$error_q  (
    .AD(2'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(error_d),
    .Q(error_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:285.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$state_q  (
    .AD(3'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:253.9-253.30|../rtl/riscv-dbg/dmi_jtag.sv:252.7-254.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$16584  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_d$140 ),
    .B(2'h0),
    .S(\$procmux$16585_CMP ),
    .Y(\$procmux$16584_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$16592  (
    .A(\$procmux$16584_Y ),
    .B(2'hx),
    .S(\$procmux$16593_CMP ),
    .Y(\$procmux$16592_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:248.9-248.31|../rtl/riscv-dbg/dmi_jtag.sv:247.7-249.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$16594  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_d$133 ),
    .B(2'h2),
    .S(\$procmux$16595_CMP ),
    .Y(\$procmux$16594_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$16601  (
    .A(\$procmux$16594_Y ),
    .B(2'hx),
    .S(\$procmux$16602_CMP ),
    .Y(\$procmux$16601_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:244.9-244.27|../rtl/riscv-dbg/dmi_jtag.sv:243.7-245.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$16603  (
    .A(error_q),
    .B(2'h3),
    .S(\$procmux$16604_CMP ),
    .Y(\$procmux$16603_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$16609  (
    .A(\$procmux$16603_Y ),
    .B(2'hx),
    .S(\$procmux$16610_CMP ),
    .Y(\$procmux$16609_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:240.9-240.31|../rtl/riscv-dbg/dmi_jtag.sv:239.7-241.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16611  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$115 ),
    .B(1'h1),
    .S(\$procmux$16612_CMP ),
    .Y(\$procmux$16611_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16616  (
    .A(\$procmux$16611_Y ),
    .B(1'hx),
    .S(\$procmux$16617_CMP ),
    .Y(\$procmux$16616_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:233.9-233.31|../rtl/riscv-dbg/dmi_jtag.sv:232.7-234.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16618  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$107 ),
    .B(1'h1),
    .S(\$procmux$16619_CMP ),
    .Y(\$procmux$16618_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16622  (
    .A(\$procmux$16618_Y ),
    .B(1'hx),
    .S(\$procmux$16623_CMP ),
    .Y(\$procmux$16622_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:225.13-225.28|../rtl/riscv-dbg/dmi_jtag.sv:224.11-226.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16624  (
    .A(state_q),
    .B(3'h0),
    .S(\$procmux$16625_CMP ),
    .Y(\$procmux$16624_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd3)
  ) \$procmux$16627  (
    .A(\$procmux$16624_Y ),
    .B(15'hxxxx),
    .S({ \$procmux$16632_CMP , \$procmux$16631_CMP , \$procmux$16630_CMP , \$procmux$16629_CMP , \$procmux$16628_CMP  }),
    .Y(\$procmux$16627_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16628_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$16628_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:202.16-208.12|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16629_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$16629_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16630_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16630_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:172.15-177.12|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16631_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$16631_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16632_CMP0  (
    .A(state_q),
    .Y(\$procmux$16632_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16634  (
    .A(\$procmux$16627_Y ),
    .B(3'hx),
    .S(\$procmux$16635_CMP ),
    .Y(\$procmux$16634_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:214.28-214.55|../rtl/riscv-dbg/dmi_jtag.sv:213.13-217.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16639  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$16640_CMP ),
    .Y(\$procmux$16639_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:214.28-214.55|../rtl/riscv-dbg/dmi_jtag.sv:213.13-217.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$16640_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h2),
    .Y(\$procmux$16640_CMP )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.31-219.14|../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16641  (
    .A(1'hx),
    .B(\$procmux$16639_Y ),
    .S(\$procmux$16642_CMP ),
    .Y(\$procmux$16641_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16643  (
    .A(1'hx),
    .B(\$procmux$16641_Y ),
    .S(\$procmux$16644_CMP ),
    .Y(\$procmux$16643_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16644_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$16644_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16646  (
    .A(\$procmux$16643_Y ),
    .B(1'hx),
    .S(\$procmux$16647_CMP ),
    .Y(\$procmux$16646_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:215.29-215.51|../rtl/riscv-dbg/dmi_jtag.sv:213.13-217.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16650  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$16651_CMP ),
    .Y(\$procmux$16650_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:215.29-215.51|../rtl/riscv-dbg/dmi_jtag.sv:213.13-217.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$16651_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h3),
    .Y(\$procmux$16651_CMP )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.31-219.14|../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16652  (
    .A(1'hx),
    .B(\$procmux$16650_Y ),
    .S(\$procmux$16653_CMP ),
    .Y(\$procmux$16652_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16654  (
    .A(1'hx),
    .B(\$procmux$16652_Y ),
    .S(\$procmux$16655_CMP ),
    .Y(\$procmux$16654_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16655_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$16655_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16657  (
    .A(\$procmux$16654_Y ),
    .B(1'hx),
    .S(\$procmux$16658_CMP ),
    .Y(\$procmux$16657_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.31-219.14|../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16661  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$96 ),
    .S(\$procmux$16662_CMP ),
    .Y(\$procmux$16661_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16663  (
    .A(1'hx),
    .B(\$procmux$16661_Y ),
    .S(\$procmux$16664_CMP ),
    .Y(\$procmux$16663_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16664_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$16664_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16666  (
    .A(\$procmux$16663_Y ),
    .B(1'hx),
    .S(\$procmux$16667_CMP ),
    .Y(\$procmux$16666_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.31-219.14|../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16670  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$95 ),
    .S(\$procmux$16671_CMP ),
    .Y(\$procmux$16670_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16672  (
    .A(1'hx),
    .B(\$procmux$16670_Y ),
    .S(\$procmux$16673_CMP ),
    .Y(\$procmux$16672_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16673_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$16673_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16675  (
    .A(\$procmux$16672_Y ),
    .B(1'hx),
    .S(\$procmux$16676_CMP ),
    .Y(\$procmux$16675_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.31-219.14|../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16679  (
    .A(state_q),
    .B(3'h0),
    .S(\$procmux$16680_CMP ),
    .Y(\$procmux$16679_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16681  (
    .A(3'hx),
    .B(\$procmux$16679_Y ),
    .S(\$procmux$16682_CMP ),
    .Y(\$procmux$16681_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16682_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$16682_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16684  (
    .A(\$procmux$16681_Y ),
    .B(3'hx),
    .S(\$procmux$16685_CMP ),
    .Y(\$procmux$16684_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:206.13-206.38|../rtl/riscv-dbg/dmi_jtag.sv:205.11-207.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16688  (
    .A(state_q),
    .B(3'h4),
    .S(\$procmux$16689_CMP ),
    .Y(\$procmux$16688_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:202.16-208.12|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16690  (
    .A(3'hx),
    .B(\$procmux$16688_Y ),
    .S(\$procmux$16691_CMP ),
    .Y(\$procmux$16690_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:202.16-208.12|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16691_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$16691_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16693  (
    .A(\$procmux$16690_Y ),
    .B(3'hx),
    .S(\$procmux$16694_CMP ),
    .Y(\$procmux$16693_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:190.29-193.18|../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd32)
  ) \$procmux$16699  (
    .A(32'd3131949278),
    .B({ dmi_resp[33:2], 64'hdeadbeefb051b051 }),
    .S({ \$procmux$16702_CMP , \$procmux$16701_CMP , \$procmux$16700_CMP  }),
    .Y(\$procmux$16699_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:190.29-193.18|../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$16700_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h3),
    .Y(\$procmux$16700_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:186.28-189.18|../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$16701_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h2),
    .Y(\$procmux$16701_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:184.17-184.40|../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$16702_CMP0  (
    .A(dmi_resp[1:0]),
    .Y(\$procmux$16702_CMP )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.31-199.14|../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$16703  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$16699_Y ),
    .S(\$procmux$16704_CMP ),
    .Y(\$procmux$16703_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$16705  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$16703_Y ),
    .S(\$procmux$16706_CMP ),
    .Y(\$procmux$16705_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16706_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16706_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$16708  (
    .A(\$procmux$16705_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$16709_CMP ),
    .Y(\$procmux$16708_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:186.28-189.18|../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16715  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$16716_CMP ),
    .Y(\$procmux$16715_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:186.28-189.18|../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$16716_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h2),
    .Y(\$procmux$16716_CMP )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.31-199.14|../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16717  (
    .A(1'hx),
    .B(\$procmux$16715_Y ),
    .S(\$procmux$16718_CMP ),
    .Y(\$procmux$16717_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16719  (
    .A(1'hx),
    .B(\$procmux$16717_Y ),
    .S(\$procmux$16720_CMP ),
    .Y(\$procmux$16719_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16720_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16720_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16722  (
    .A(\$procmux$16719_Y ),
    .B(1'hx),
    .S(\$procmux$16723_CMP ),
    .Y(\$procmux$16722_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:190.29-193.18|../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16728  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$16729_CMP ),
    .Y(\$procmux$16728_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:190.29-193.18|../rtl/riscv-dbg/dmi_jtag.sv:182.13-197.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$16729_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h3),
    .Y(\$procmux$16729_CMP )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.31-199.14|../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16730  (
    .A(1'hx),
    .B(\$procmux$16728_Y ),
    .S(\$procmux$16731_CMP ),
    .Y(\$procmux$16730_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16732  (
    .A(1'hx),
    .B(\$procmux$16730_Y ),
    .S(\$procmux$16733_CMP ),
    .Y(\$procmux$16732_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16733_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16733_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16735  (
    .A(\$procmux$16732_Y ),
    .B(1'hx),
    .S(\$procmux$16736_CMP ),
    .Y(\$procmux$16735_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.31-199.14|../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16741  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$85 ),
    .S(\$procmux$16742_CMP ),
    .Y(\$procmux$16741_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16743  (
    .A(1'hx),
    .B(\$procmux$16741_Y ),
    .S(\$procmux$16744_CMP ),
    .Y(\$procmux$16743_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16744_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16744_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16746  (
    .A(\$procmux$16743_Y ),
    .B(1'hx),
    .S(\$procmux$16747_CMP ),
    .Y(\$procmux$16746_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.31-199.14|../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16752  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$84 ),
    .S(\$procmux$16753_CMP ),
    .Y(\$procmux$16752_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16754  (
    .A(1'hx),
    .B(\$procmux$16752_Y ),
    .S(\$procmux$16755_CMP ),
    .Y(\$procmux$16754_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16755_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16755_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16757  (
    .A(\$procmux$16754_Y ),
    .B(1'hx),
    .S(\$procmux$16758_CMP ),
    .Y(\$procmux$16757_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.31-199.14|../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$16763  (
    .A(data_q),
    .B(\$auto$slang_frontend.cc:694:finish$\data_d$83 ),
    .S(\$procmux$16764_CMP ),
    .Y(\$procmux$16763_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$16765  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$16763_Y ),
    .S(\$procmux$16766_CMP ),
    .Y(\$procmux$16765_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16766_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16766_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$16768  (
    .A(\$procmux$16765_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$16769_CMP ),
    .Y(\$procmux$16768_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.31-199.14|../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16774  (
    .A(state_q),
    .B(3'h0),
    .S(\$procmux$16775_CMP ),
    .Y(\$procmux$16774_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16776  (
    .A(3'hx),
    .B(\$procmux$16774_Y ),
    .S(\$procmux$16777_CMP ),
    .Y(\$procmux$16776_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16777_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16777_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16779  (
    .A(\$procmux$16776_Y ),
    .B(3'hx),
    .S(\$procmux$16780_CMP ),
    .Y(\$procmux$16779_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:175.13-175.37|../rtl/riscv-dbg/dmi_jtag.sv:174.11-176.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16785  (
    .A(state_q),
    .B(3'h2),
    .S(\$procmux$16786_CMP ),
    .Y(\$procmux$16785_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:172.15-177.12|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16787  (
    .A(3'hx),
    .B(\$procmux$16785_Y ),
    .S(\$procmux$16788_CMP ),
    .Y(\$procmux$16787_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:172.15-177.12|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16788_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$16788_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16790  (
    .A(\$procmux$16787_Y ),
    .B(3'hx),
    .S(\$procmux$16791_CMP ),
    .Y(\$procmux$16790_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd32)
  ) \$procmux$16799  (
    .A(data_q),
    .B({ \$auto$slang_frontend.cc:694:finish$\data_d$77 , \$auto$slang_frontend.cc:694:finish$\data_d$87  }),
    .S({ \$procmux$16803_CMP , \$procmux$16800_CMP  }),
    .Y(\$procmux$16799_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16800_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16800_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16803_CMP0  (
    .A(state_q),
    .Y(\$procmux$16803_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$16805  (
    .A(\$procmux$16799_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$16806_CMP ),
    .Y(\$procmux$16805_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$16818  (
    .A(address_q),
    .B(\$auto$slang_frontend.cc:694:finish$\address_d$76 ),
    .S(\$procmux$16819_CMP ),
    .Y(\$procmux$16818_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16819_CMP0  (
    .A(state_q),
    .Y(\$procmux$16819_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$16821  (
    .A(\$procmux$16818_Y ),
    .B(7'hxx),
    .S(\$procmux$16822_CMP ),
    .Y(\$procmux$16821_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd3)
  ) \$procmux$16826  (
    .A(\$auto$slang_frontend.cc:694:finish$\state_d$102 ),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$75 , \$auto$slang_frontend.cc:694:finish$\state_d$80 , \$auto$slang_frontend.cc:694:finish$\state_d$86 , \$auto$slang_frontend.cc:694:finish$\state_d$92 , \$auto$slang_frontend.cc:694:finish$\state_d$97  }),
    .S({ \$procmux$16835_CMP , \$procmux$16833_CMP , \$procmux$16831_CMP , \$procmux$16829_CMP , \$procmux$16827_CMP  }),
    .Y(\$procmux$16826_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16827_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$16827_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:202.16-208.12|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16829_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$16829_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16831_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16831_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:172.15-177.12|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16833_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$16833_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16835_CMP0  (
    .A(state_q),
    .Y(\$procmux$16835_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16837  (
    .A(\$procmux$16826_Y ),
    .B(3'hx),
    .S(\$procmux$16838_CMP ),
    .Y(\$procmux$16837_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:166.15-166.31|../rtl/riscv-dbg/dmi_jtag.sv:165.22-167.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16844  (
    .A(state_q),
    .B(3'h3),
    .S(\$procmux$16845_CMP ),
    .Y(\$procmux$16844_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:164.15-164.30|../rtl/riscv-dbg/dmi_jtag.sv:163.13-167.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16847  (
    .A(\$procmux$16844_Y ),
    .B(3'hx),
    .S(\$procmux$16848_CMP ),
    .Y(\$procmux$16847_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.64-169.14|../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16849  (
    .A(3'hx),
    .B(\$procmux$16847_Y ),
    .S(\$procmux$16850_CMP ),
    .Y(\$procmux$16849_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16851  (
    .A(3'hx),
    .B(\$procmux$16849_Y ),
    .S(\$procmux$16852_CMP ),
    .Y(\$procmux$16851_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16852_CMP0  (
    .A(state_q),
    .Y(\$procmux$16852_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16854  (
    .A(\$procmux$16851_Y ),
    .B(3'hx),
    .S(\$procmux$16855_CMP ),
    .Y(\$procmux$16854_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:164.15-164.30|../rtl/riscv-dbg/dmi_jtag.sv:163.13-167.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16863  (
    .A(\$auto$slang_frontend.cc:694:finish$\state_d$73 ),
    .B(3'h1),
    .S(\$procmux$16864_CMP ),
    .Y(\$procmux$16863_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.64-169.14|../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16865  (
    .A(3'hx),
    .B(\$procmux$16863_Y ),
    .S(\$procmux$16866_CMP ),
    .Y(\$procmux$16865_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16867  (
    .A(3'hx),
    .B(\$procmux$16865_Y ),
    .S(\$procmux$16868_CMP ),
    .Y(\$procmux$16867_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16868_CMP0  (
    .A(state_q),
    .Y(\$procmux$16868_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16870  (
    .A(\$procmux$16867_Y ),
    .B(3'hx),
    .S(\$procmux$16871_CMP ),
    .Y(\$procmux$16870_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.64-169.14|../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$16878  (
    .A(data_q),
    .B(dr_q[33:2]),
    .S(\$procmux$16879_CMP ),
    .Y(\$procmux$16878_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$16880  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$16878_Y ),
    .S(\$procmux$16881_CMP ),
    .Y(\$procmux$16880_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16881_CMP0  (
    .A(state_q),
    .Y(\$procmux$16881_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$16883  (
    .A(\$procmux$16880_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$16884_CMP ),
    .Y(\$procmux$16883_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.64-169.14|../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$16891  (
    .A(address_q),
    .B(dr_q[40:34]),
    .S(\$procmux$16892_CMP ),
    .Y(\$procmux$16891_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$16893  (
    .A(7'hxx),
    .B(\$procmux$16891_Y ),
    .S(\$procmux$16894_CMP ),
    .Y(\$procmux$16893_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16894_CMP0  (
    .A(state_q),
    .Y(\$procmux$16894_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$16896  (
    .A(\$procmux$16893_Y ),
    .B(7'hxx),
    .S(\$procmux$16897_CMP ),
    .Y(\$procmux$16896_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.64-169.14|../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16904  (
    .A(state_q),
    .B(\$auto$slang_frontend.cc:694:finish$\state_d$74 ),
    .S(\$procmux$16905_CMP ),
    .Y(\$procmux$16904_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16906  (
    .A(3'hx),
    .B(\$procmux$16904_Y ),
    .S(\$procmux$16907_CMP ),
    .Y(\$procmux$16906_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:159.11-169.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16907_CMP0  (
    .A(state_q),
    .Y(\$procmux$16907_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16909  (
    .A(\$procmux$16906_Y ),
    .B(3'hx),
    .S(\$procmux$16910_CMP ),
    .Y(\$procmux$16909_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$16914  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$89 , \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$99  }),
    .S({ \$procmux$16918_CMP , \$procmux$16915_CMP  }),
    .Y(\$procmux$16914_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16915_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$16915_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16918_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16918_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16920  (
    .A(\$procmux$16914_Y ),
    .B(1'hx),
    .S(\$procmux$16921_CMP ),
    .Y(\$procmux$16920_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$16925  (
    .A(1'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$88 , \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$98  }),
    .S({ \$procmux$16929_CMP , \$procmux$16926_CMP  }),
    .Y(\$procmux$16925_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:212.11-219.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16926_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$16926_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:181.11-199.14|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16929_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$16929_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16931  (
    .A(\$procmux$16925_Y ),
    .B(1'hx),
    .S(\$procmux$16932_CMP ),
    .Y(\$procmux$16931_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:202.16-208.12|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$16938  (
    .A(1'h0),
    .B(2'h3),
    .S({ \$procmux$16942_CMP , \$procmux$16939_CMP  }),
    .Y(\$procmux$16938_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:202.16-208.12|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16939_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$16939_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:172.15-177.12|../rtl/riscv-dbg/dmi_jtag.sv:156.7-228.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$16942_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$16942_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16944  (
    .A(\$procmux$16938_Y ),
    .B(1'hx),
    .S(\$procmux$16945_CMP ),
    .Y(\$procmux$16944_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$16953  (
    .A(\$auto$slang_frontend.cc:694:finish$\data_d$106 ),
    .B(32'd0),
    .S(\$procmux$16954_CMP ),
    .Y(\$procmux$16953_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$16962  (
    .A(\$auto$slang_frontend.cc:694:finish$\address_d$105 ),
    .B(7'h00),
    .S(\$procmux$16963_CMP ),
    .Y(\$procmux$16962_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$16971  (
    .A(\$auto$slang_frontend.cc:694:finish$\state_d$104 ),
    .B(3'h0),
    .S(\$procmux$16972_CMP ),
    .Y(\$procmux$16971_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$16980  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_d$147 ),
    .B(2'h0),
    .S(\$procmux$16981_CMP ),
    .Y(\$procmux$16980_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16989  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$108 ),
    .B(1'h0),
    .S(\$procmux$16990_CMP ),
    .Y(\$procmux$16989_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16998  (
    .A(\$auto$slang_frontend.cc:694:finish$\error_dmi_busy$126 ),
    .B(1'h0),
    .S(\$procmux$16999_CMP ),
    .Y(\$procmux$16998_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:150.20-155.8|../rtl/riscv-dbg/dmi_jtag.sv:150.5-255.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$17007  (
    .A(\$auto$slang_frontend.cc:694:finish$\dmi_req_valid$103 ),
    .B(1'h0),
    .S(\$procmux$17008_CMP ),
    .Y(\$procmux$17007_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:279.11-279.47|../rtl/riscv-dbg/dmi_jtag.sv:278.9-280.12" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17009  (
    .A(\$auto$slang_frontend.cc:694:finish$\dr_d$179 ),
    .B({ tdi, dr_q[40:1] }),
    .S(\$procmux$17010_CMP ),
    .Y(\$procmux$17009_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:278.9-280.12|../rtl/riscv-dbg/dmi_jtag.sv:277.7-281.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17011  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$17009_Y ),
    .S(\$procmux$17012_CMP ),
    .Y(\$procmux$17011_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:264.7-264.17|../rtl/riscv-dbg/dmi_jtag.sv:263.5-282.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17015  (
    .A(\$procmux$17011_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$17016_CMP ),
    .Y(\$procmux$17015_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:278.9-280.12|../rtl/riscv-dbg/dmi_jtag.sv:277.7-281.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17018  (
    .A(\$auto$slang_frontend.cc:694:finish$\dr_d$179 ),
    .B(\$auto$slang_frontend.cc:694:finish$\dr_d$184 ),
    .S(\$procmux$17019_CMP ),
    .Y(\$procmux$17018_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:264.7-264.17|../rtl/riscv-dbg/dmi_jtag.sv:263.5-282.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17022  (
    .A(\$procmux$17018_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$17023_CMP ),
    .Y(\$procmux$17022_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:272.13-272.49|../rtl/riscv-dbg/dmi_jtag.sv:271.20-273.14" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17024  (
    .A(dr_q),
    .B({ address_q, data_q, 2'h3 }),
    .S(\$procmux$17025_CMP ),
    .Y(\$procmux$17024_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:269.13-269.52|../rtl/riscv-dbg/dmi_jtag.sv:268.11-273.14" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17027  (
    .A(\$procmux$17024_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$17028_CMP ),
    .Y(\$procmux$17027_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:268.11-273.14|../rtl/riscv-dbg/dmi_jtag.sv:267.9-274.12" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17029  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$17027_Y ),
    .S(\$procmux$17030_CMP ),
    .Y(\$procmux$17029_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:267.9-274.12|../rtl/riscv-dbg/dmi_jtag.sv:266.7-275.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17031  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$17029_Y ),
    .S(\$procmux$17032_CMP ),
    .Y(\$procmux$17031_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:264.7-264.17|../rtl/riscv-dbg/dmi_jtag.sv:263.5-282.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17034  (
    .A(\$procmux$17031_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$17035_CMP ),
    .Y(\$procmux$17034_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:269.13-269.52|../rtl/riscv-dbg/dmi_jtag.sv:268.11-273.14" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17038  (
    .A(\$auto$slang_frontend.cc:694:finish$\dr_d$176 ),
    .B({ address_q, data_q, 2'h0 }),
    .S(\$procmux$17039_CMP ),
    .Y(\$procmux$17038_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:268.11-273.14|../rtl/riscv-dbg/dmi_jtag.sv:267.9-274.12" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17040  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$17038_Y ),
    .S(\$procmux$17041_CMP ),
    .Y(\$procmux$17040_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:267.9-274.12|../rtl/riscv-dbg/dmi_jtag.sv:266.7-275.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17042  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$17040_Y ),
    .S(\$procmux$17043_CMP ),
    .Y(\$procmux$17042_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:264.7-264.17|../rtl/riscv-dbg/dmi_jtag.sv:263.5-282.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17045  (
    .A(\$procmux$17042_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$17046_CMP ),
    .Y(\$procmux$17045_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:268.11-273.14|../rtl/riscv-dbg/dmi_jtag.sv:267.9-274.12" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17048  (
    .A(dr_q),
    .B(\$auto$slang_frontend.cc:694:finish$\dr_d$177 ),
    .S(\$procmux$17049_CMP ),
    .Y(\$procmux$17048_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:267.9-274.12|../rtl/riscv-dbg/dmi_jtag.sv:266.7-275.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17050  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$17048_Y ),
    .S(\$procmux$17051_CMP ),
    .Y(\$procmux$17050_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:264.7-264.17|../rtl/riscv-dbg/dmi_jtag.sv:263.5-282.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17053  (
    .A(\$procmux$17050_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$17054_CMP ),
    .Y(\$procmux$17053_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:267.9-274.12|../rtl/riscv-dbg/dmi_jtag.sv:266.7-275.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17056  (
    .A(dr_q),
    .B(\$auto$slang_frontend.cc:694:finish$\dr_d$178 ),
    .S(\$procmux$17057_CMP ),
    .Y(\$procmux$17056_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:264.7-264.17|../rtl/riscv-dbg/dmi_jtag.sv:263.5-282.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17059  (
    .A(\$procmux$17056_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$17060_CMP ),
    .Y(\$procmux$17059_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:264.7-264.17|../rtl/riscv-dbg/dmi_jtag.sv:263.5-282.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$17064  (
    .A(\$auto$slang_frontend.cc:694:finish$\dr_d$185 ),
    .B(41'h00000000000),
    .S(\$procmux$17065_CMP ),
    .Y(\$procmux$17064_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:88.25-88.61|../rtl/riscv-dbg/dmi_jtag.sv:88.7-88.61" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$17066  (
    .A(\$auto$slang_frontend.cc:694:finish$\dtmcs_d$34 ),
    .B({ tdi, \$auto$builder.cc:338:Biop$40 [30:0] }),
    .S(\$procmux$17067_CMP ),
    .Y(\$procmux$17066_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:88.7-88.61|../rtl/riscv-dbg/dmi_jtag.sv:87.5-89.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$17068  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$17066_Y ),
    .S(\$procmux$17069_CMP ),
    .Y(\$procmux$17068_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:88.7-88.61|../rtl/riscv-dbg/dmi_jtag.sv:87.5-89.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$17072  (
    .A(\$auto$slang_frontend.cc:694:finish$\dtmcs_d$34 ),
    .B(\$auto$slang_frontend.cc:694:finish$\dtmcs_d$41 ),
    .S(\$procmux$17073_CMP ),
    .Y(\$procmux$17072_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:74.9-83.23|../rtl/riscv-dbg/dmi_jtag.sv:73.7-84.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$17075  (
    .A(dtmcs_q),
    .B({ 20'h00001, error_q, 10'h071 }),
    .S(\$procmux$17076_CMP ),
    .Y(\$procmux$17075_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:73.7-84.10|../rtl/riscv-dbg/dmi_jtag.sv:72.5-85.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$17077  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$17075_Y ),
    .S(\$procmux$17078_CMP ),
    .Y(\$procmux$17077_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:73.7-84.10|../rtl/riscv-dbg/dmi_jtag.sv:72.5-85.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$17080  (
    .A(dtmcs_q),
    .B(\$auto$slang_frontend.cc:694:finish$\dtmcs_d$33 ),
    .S(\$procmux$17081_CMP ),
    .Y(\$procmux$17080_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:330.11" */
  \dmi_cdc$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc  i_dmi_cdc (
    .clk_i(clk_i),
    .core_dmi_ready_i(dmi_req_ready_i),
    .core_dmi_ready_o(dmi_resp_ready_o),
    .core_dmi_req_o(dmi_req_o),
    .core_dmi_resp_i(dmi_resp_i),
    .core_dmi_rst_no(dmi_rst_no),
    .core_dmi_valid_i(dmi_resp_valid_i),
    .core_dmi_valid_o(dmi_req_valid_o),
    .jtag_dmi_cdc_clear_i(dmi_clear),
    .jtag_dmi_ready_i(1'h1),
    .jtag_dmi_ready_o(dmi_req_ready),
    .jtag_dmi_req_i(dmi_req),
    .jtag_dmi_resp_o(dmi_resp),
    .jtag_dmi_valid_i(dmi_req_valid),
    .jtag_dmi_valid_o(dmi_resp_valid),
    .rst_ni(rst_ni),
    .tck_i(tck),
    .trst_ni(trst_ni)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag.sv:307.5" */
  \dmi_jtag_tap$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap  i_dmi_jtag_tap (
    .capture_o(capture),
    .dmi_clear_o(jtag_dmi_clear),
    .dmi_select_o(dmi_select),
    .dmi_tdo_i(dmi_tdo),
    .dtmcs_select_o(dtmcs_select),
    .dtmcs_tdo_i(dtmcs_q[0]),
    .shift_o(shift),
    .tck_i(tck_i),
    .tck_o(tck),
    .td_i(td_i),
    .td_o(td_o),
    .tdi_o(tdi),
    .tdo_oe_o(tdo_oe_o),
    .testmode_i(testmode_i),
    .tms_i(tms_i),
    .trst_ni(trst_ni),
    .update_o(update)
  );
  assign dmi_clear = \$auto$builder.cc:338:Biop$27 ;
  assign dtmcs_d = \$auto$slang_frontend.cc:694:finish$\dtmcs_d$42 ;
  assign dmi = dr_q;
  assign dmi_req[40:34] = address_q;
  assign dmi_req[31:0] = data_q;
  assign dmi_req[33:32] = \$auto$rtlil.cc:2874:Mux$53 ;
  assign dmi_resp_ready = 1'h1;
  assign dmi_req_valid = \$auto$slang_frontend.cc:694:finish$\dmi_req_valid$148 ;
  assign error_d = \$auto$slang_frontend.cc:694:finish$\error_d$149 ;
  assign state_d = \$auto$slang_frontend.cc:694:finish$\state_d$150 ;
  assign address_d = \$auto$slang_frontend.cc:694:finish$\address_d$151 ;
  assign data_d = \$auto$slang_frontend.cc:694:finish$\data_d$152 ;
  assign error_dmi_busy = \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$153 ;
  assign error_dmi_op_failed = \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$154 ;
  assign dmi_tdo = dr_q[0];
  assign dr_d = \$auto$slang_frontend.cc:694:finish$\dr_d$186 ;
  assign \$procmux$16585_CMP  = \$auto$rtlil.cc:2746:ReduceBool$146 ;
  assign \$procmux$16593_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_d$147  = \$procmux$16592_Y ;
  assign \$procmux$16595_CMP  = \$auto$rtlil.cc:2746:ReduceBool$139 ;
  assign \$procmux$16602_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_d$140  = \$procmux$16601_Y ;
  assign \$procmux$16604_CMP  = \$auto$rtlil.cc:2746:ReduceBool$132 ;
  assign \$procmux$16610_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_d$133  = \$procmux$16609_Y ;
  assign \$procmux$16612_CMP  = \$auto$rtlil.cc:2746:ReduceBool$125 ;
  assign \$procmux$16617_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$126  = \$procmux$16616_Y ;
  assign \$procmux$16619_CMP  = \$auto$rtlil.cc:2746:ReduceBool$114 ;
  assign \$procmux$16623_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$115  = \$procmux$16622_Y ;
  assign \$procmux$16625_CMP  = \$auto$rtlil.cc:2746:ReduceBool$101 ;
  assign \$procmux$16635_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$102  = \$procmux$16634_Y ;
  assign \$procmux$16642_CMP  = \$auto$rtlil.cc:2746:ReduceBool$94 ;
  assign \$procmux$16647_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$96  = \$procmux$16646_Y ;
  assign \$procmux$16653_CMP  = \$auto$rtlil.cc:2746:ReduceBool$94 ;
  assign \$procmux$16658_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$95  = \$procmux$16657_Y ;
  assign \$procmux$16662_CMP  = \$auto$rtlil.cc:2746:ReduceBool$94 ;
  assign \$procmux$16667_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$99  = \$procmux$16666_Y ;
  assign \$procmux$16671_CMP  = \$auto$rtlil.cc:2746:ReduceBool$94 ;
  assign \$procmux$16676_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$98  = \$procmux$16675_Y ;
  assign \$procmux$16680_CMP  = \$auto$rtlil.cc:2746:ReduceBool$94 ;
  assign \$procmux$16685_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$97  = \$procmux$16684_Y ;
  assign \$procmux$16689_CMP  = \$auto$rtlil.cc:2746:ReduceBool$91 ;
  assign \$procmux$16694_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$92  = \$procmux$16693_Y ;
  assign \$procmux$16704_CMP  = \$auto$rtlil.cc:2746:ReduceBool$82 ;
  assign \$procmux$16709_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_d$83  = \$procmux$16708_Y ;
  assign \$procmux$16718_CMP  = \$auto$rtlil.cc:2746:ReduceBool$82 ;
  assign \$procmux$16723_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$85  = \$procmux$16722_Y ;
  assign \$procmux$16731_CMP  = \$auto$rtlil.cc:2746:ReduceBool$82 ;
  assign \$procmux$16736_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$84  = \$procmux$16735_Y ;
  assign \$procmux$16742_CMP  = \$auto$rtlil.cc:2746:ReduceBool$82 ;
  assign \$procmux$16747_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$89  = \$procmux$16746_Y ;
  assign \$procmux$16753_CMP  = \$auto$rtlil.cc:2746:ReduceBool$82 ;
  assign \$procmux$16758_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$88  = \$procmux$16757_Y ;
  assign \$procmux$16764_CMP  = \$auto$rtlil.cc:2746:ReduceBool$82 ;
  assign \$procmux$16769_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_d$87  = \$procmux$16768_Y ;
  assign \$procmux$16775_CMP  = \$auto$rtlil.cc:2746:ReduceBool$82 ;
  assign \$procmux$16780_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$86  = \$procmux$16779_Y ;
  assign \$procmux$16786_CMP  = \$auto$rtlil.cc:2746:ReduceBool$79 ;
  assign \$procmux$16791_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$80  = \$procmux$16790_Y ;
  assign \$procmux$16806_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_d$106  = \$procmux$16805_Y ;
  assign \$procmux$16822_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\address_d$105  = \$procmux$16821_Y ;
  assign \$procmux$16838_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$104  = \$procmux$16837_Y ;
  assign \$procmux$16845_CMP  = \$auto$rtlil.cc:2746:ReduceBool$72 ;
  assign \$procmux$16848_CMP  = \$auto$rtlil.cc:2746:ReduceBool$68 ;
  assign \$procmux$16850_CMP  = \$auto$rtlil.cc:2746:ReduceBool$64 ;
  assign \$procmux$16855_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$73  = \$procmux$16854_Y ;
  assign \$procmux$16864_CMP  = \$auto$rtlil.cc:2746:ReduceBool$68 ;
  assign \$procmux$16866_CMP  = \$auto$rtlil.cc:2746:ReduceBool$64 ;
  assign \$procmux$16871_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$74  = \$procmux$16870_Y ;
  assign \$procmux$16879_CMP  = \$auto$rtlil.cc:2746:ReduceBool$64 ;
  assign \$procmux$16884_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_d$77  = \$procmux$16883_Y ;
  assign \$procmux$16892_CMP  = \$auto$rtlil.cc:2746:ReduceBool$64 ;
  assign \$procmux$16897_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\address_d$76  = \$procmux$16896_Y ;
  assign \$procmux$16905_CMP  = \$auto$rtlil.cc:2746:ReduceBool$64 ;
  assign \$procmux$16910_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$75  = \$procmux$16909_Y ;
  assign \$procmux$16921_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$108  = \$procmux$16920_Y ;
  assign \$procmux$16932_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$107  = \$procmux$16931_Y ;
  assign \$procmux$16945_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\dmi_req_valid$103  = \$procmux$16944_Y ;
  assign \$procmux$16954_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_d$152  = \$procmux$16953_Y ;
  assign \$procmux$16963_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\address_d$151  = \$procmux$16962_Y ;
  assign \$procmux$16972_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$150  = \$procmux$16971_Y ;
  assign \$procmux$16981_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_d$149  = \$procmux$16980_Y ;
  assign \$procmux$16990_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_op_failed$154  = \$procmux$16989_Y ;
  assign \$procmux$16999_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\error_dmi_busy$153  = \$procmux$16998_Y ;
  assign \$procmux$17008_CMP  = \$auto$rtlil.cc:2746:ReduceBool$56 ;
  assign \$auto$slang_frontend.cc:694:finish$\dmi_req_valid$148  = \$procmux$17007_Y ;
  assign \$procmux$17010_CMP  = \$auto$rtlil.cc:2746:ReduceBool$183 ;
  assign \$procmux$17012_CMP  = \$auto$rtlil.cc:2746:ReduceBool$181 ;
  assign \$procmux$17016_CMP  = \$auto$rtlil.cc:2746:ReduceBool$157 ;
  assign \$auto$slang_frontend.cc:694:finish$\dr_d$184  = \$procmux$17015_Y ;
  assign \$procmux$17019_CMP  = \$auto$rtlil.cc:2746:ReduceBool$181 ;
  assign \$procmux$17023_CMP  = \$auto$rtlil.cc:2746:ReduceBool$157 ;
  assign \$auto$slang_frontend.cc:694:finish$\dr_d$185  = \$procmux$17022_Y ;
  assign \$procmux$17025_CMP  = \$auto$rtlil.cc:2746:ReduceBool$175 ;
  assign \$procmux$17028_CMP  = \$auto$rtlil.cc:2746:ReduceBool$169 ;
  assign \$procmux$17030_CMP  = \$auto$rtlil.cc:2746:ReduceBool$161 ;
  assign \$procmux$17032_CMP  = \$auto$rtlil.cc:2746:ReduceBool$159 ;
  assign \$procmux$17035_CMP  = \$auto$rtlil.cc:2746:ReduceBool$157 ;
  assign \$auto$slang_frontend.cc:694:finish$\dr_d$176  = \$procmux$17034_Y ;
  assign \$procmux$17039_CMP  = \$auto$rtlil.cc:2746:ReduceBool$169 ;
  assign \$procmux$17041_CMP  = \$auto$rtlil.cc:2746:ReduceBool$161 ;
  assign \$procmux$17043_CMP  = \$auto$rtlil.cc:2746:ReduceBool$159 ;
  assign \$procmux$17046_CMP  = \$auto$rtlil.cc:2746:ReduceBool$157 ;
  assign \$auto$slang_frontend.cc:694:finish$\dr_d$177  = \$procmux$17045_Y ;
  assign \$procmux$17049_CMP  = \$auto$rtlil.cc:2746:ReduceBool$161 ;
  assign \$procmux$17051_CMP  = \$auto$rtlil.cc:2746:ReduceBool$159 ;
  assign \$procmux$17054_CMP  = \$auto$rtlil.cc:2746:ReduceBool$157 ;
  assign \$auto$slang_frontend.cc:694:finish$\dr_d$178  = \$procmux$17053_Y ;
  assign \$procmux$17057_CMP  = \$auto$rtlil.cc:2746:ReduceBool$159 ;
  assign \$procmux$17060_CMP  = \$auto$rtlil.cc:2746:ReduceBool$157 ;
  assign \$auto$slang_frontend.cc:694:finish$\dr_d$179  = \$procmux$17059_Y ;
  assign \$procmux$17065_CMP  = \$auto$rtlil.cc:2746:ReduceBool$157 ;
  assign \$auto$slang_frontend.cc:694:finish$\dr_d$186  = \$procmux$17064_Y ;
  assign \$procmux$17067_CMP  = \$auto$rtlil.cc:2746:ReduceBool$38 ;
  assign \$procmux$17069_CMP  = \$auto$rtlil.cc:2746:ReduceBool$36 ;
  assign \$auto$slang_frontend.cc:694:finish$\dtmcs_d$41  = \$procmux$17068_Y ;
  assign \$procmux$17073_CMP  = \$auto$rtlil.cc:2746:ReduceBool$36 ;
  assign \$auto$slang_frontend.cc:694:finish$\dtmcs_d$42  = \$procmux$17072_Y ;
  assign \$procmux$17076_CMP  = \$auto$rtlil.cc:2746:ReduceBool$32 ;
  assign \$procmux$17078_CMP  = \$auto$rtlil.cc:2746:ReduceBool$30 ;
  assign \$auto$slang_frontend.cc:694:finish$\dtmcs_d$33  = \$procmux$17077_Y ;
  assign \$procmux$17081_CMP  = \$auto$rtlil.cc:2746:ReduceBool$30 ;
  assign \$auto$slang_frontend.cc:694:finish$\dtmcs_d$34  = \$procmux$17080_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$30  = capture;
  assign \$auto$rtlil.cc:2746:ReduceBool$32  = dtmcs_select;
  assign \$auto$rtlil.cc:2746:ReduceBool$36  = shift;
  assign \$auto$rtlil.cc:2746:ReduceBool$38  = dtmcs_select;
  assign \$auto$builder.cc:338:Biop$40  = { 1'h0, dtmcs_q[31:1] };
  assign \$auto$rtlil.cc:2747:LogicNot$47  = trst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$51  = \$auto$builder.cc:338:Biop$49 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$56  = \$auto$builder.cc:338:Biop$27 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$64  = \$auto$builder.cc:338:Biop$62 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$68  = \$auto$builder.cc:338:Biop$66 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$72  = \$auto$builder.cc:338:Biop$70 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$79  = dmi_req_ready;
  assign \$auto$rtlil.cc:2746:ReduceBool$82  = dmi_resp_valid;
  assign \$auto$rtlil.cc:2746:ReduceBool$91  = dmi_req_ready;
  assign \$auto$rtlil.cc:2746:ReduceBool$94  = dmi_resp_valid;
  assign \$auto$rtlil.cc:2746:ReduceBool$101  = dmi_resp_valid;
  assign \$auto$rtlil.cc:2746:ReduceBool$114  = \$auto$builder.cc:338:Biop$112 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$125  = \$auto$builder.cc:338:Biop$123 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$132  = \$auto$builder.cc:338:Biop$130 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$139  = \$auto$builder.cc:338:Biop$137 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$146  = \$auto$builder.cc:338:Biop$144 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$157  = \$auto$builder.cc:338:Biop$27 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$159  = capture;
  assign \$auto$rtlil.cc:2746:ReduceBool$161  = dmi_select;
  assign \$auto$rtlil.cc:2746:ReduceBool$169  = \$auto$builder.cc:338:Biop$167 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$175  = \$auto$builder.cc:338:Biop$173 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$181  = shift;
  assign \$auto$rtlil.cc:2746:ReduceBool$183  = dmi_select;
  assign \$auto$rtlil.cc:2747:LogicNot$191  = trst_ni;
endmodule

/* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:19.8" */
module \dmi_jtag_tap$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap (testmode_i, tck_i, tms_i, trst_ni, td_i, td_o, tdo_oe_o, tck_o, dmi_clear_o, update_o, capture_o, shift_o, tdi_o, dtmcs_select_o, dtmcs_tdo_i, dmi_select_o, dmi_tdo_i);
  wire [31:0] \$auto$builder.cc:338:Biop$2757 ;
  wire \$auto$builder.cc:338:Biop$2784 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2724 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2727 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2730 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2733 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2743 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2745 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2748 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2753 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2755 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2760 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2765 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2775 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2787 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2791 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2795 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2799 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2803 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2807 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2811 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2815 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2819 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2823 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2827 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2831 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2835 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2839 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2843 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2847 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2738 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2740 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2780 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2782 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2860 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2862 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2789 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2793 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2797 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2801 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2805 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2809 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2813 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2817 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2821 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2825 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2829 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2833 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2837 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2841 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2845 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$2849 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:132.7-132.42" */
  wire \$auto$slang_frontend.cc:694:finish$\bypass_d$2749 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  wire \$auto$slang_frontend.cc:694:finish$\bypass_d$2751 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:137.7-137.43" */
  wire \$auto$slang_frontend.cc:694:finish$\bypass_d$2761 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  wire \$auto$slang_frontend.cc:694:finish$\bypass_d$2763 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:140.5-144.8" */
  wire \$auto$slang_frontend.cc:694:finish$\bypass_d$2767 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  wire \$auto$slang_frontend.cc:694:finish$\bypass_select$2772 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$auto$slang_frontend.cc:694:finish$\capture_dr$2853 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$auto$slang_frontend.cc:694:finish$\capture_ir$2854 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  wire \$auto$slang_frontend.cc:694:finish$\dmi_select_o$2770 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  wire \$auto$slang_frontend.cc:694:finish$\dtmcs_select_o$2769 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:131.7-131.49" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\idcode_d$2746 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\idcode_d$2750 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:136.7-136.65" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\idcode_d$2758 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\idcode_d$2762 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:140.5-144.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\idcode_d$2766 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  wire \$auto$slang_frontend.cc:694:finish$\idcode_select$2771 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:93.5-95.8" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\jtag_ir_d$2731 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:97.5-101.8" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\jtag_ir_d$2735 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:83.5-85.8" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$2725 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:88.5-90.8" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$2728 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:97.5-101.8" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$2734 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$auto$slang_frontend.cc:694:finish$\shift_dr$2852 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$auto$slang_frontend.cc:694:finish$\shift_ir$2855 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\tap_state_d$2850 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  wire \$auto$slang_frontend.cc:694:finish$\tdo_mux$2776 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:172.5-182.8" */
  wire \$auto$slang_frontend.cc:694:finish$\tdo_mux$2777 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$auto$slang_frontend.cc:694:finish$\test_logic_reset$2857 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$auto$slang_frontend.cc:694:finish$\update_dr$2851 ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$auto$slang_frontend.cc:694:finish$\update_ir$2856 ;
  wire \$procmux$15097_Y ;
  wire \$procmux$15098_CMP ;
  wire \$procmux$15099_CMP ;
  wire \$procmux$15100_CMP ;
  wire \$procmux$15102_Y ;
  wire \$procmux$15103_CMP ;
  wire \$procmux$15106_Y ;
  wire \$procmux$15107_CMP ;
  wire \$procmux$15110_Y ;
  wire \$procmux$15111_CMP ;
  wire \$procmux$15112_CMP ;
  wire \$procmux$15113_CMP ;
  wire \$procmux$15118_Y ;
  wire \$procmux$15119_CMP ;
  wire \$procmux$15122_Y ;
  wire \$procmux$15123_CMP ;
  wire \$procmux$15127_Y ;
  wire \$procmux$15128_CMP ;
  wire \$procmux$15129_Y ;
  wire \$procmux$15130_CMP ;
  wire [31:0] \$procmux$15133_Y ;
  wire \$procmux$15134_CMP ;
  wire \$procmux$15137_Y ;
  wire \$procmux$15138_CMP ;
  wire \$procmux$15140_Y ;
  wire \$procmux$15141_CMP ;
  wire [31:0] \$procmux$15143_Y ;
  wire \$procmux$15144_CMP ;
  wire [31:0] \$procmux$15145_Y ;
  wire \$procmux$15146_CMP ;
  wire \$procmux$15150_Y ;
  wire \$procmux$15151_CMP ;
  wire [31:0] \$procmux$15155_Y ;
  wire \$procmux$15156_CMP ;
  wire \$procmux$15158_Y ;
  wire \$procmux$15159_CMP ;
  wire \$procmux$15161_Y ;
  wire \$procmux$15162_CMP ;
  wire [31:0] \$procmux$15163_Y ;
  wire \$procmux$15164_CMP ;
  wire [31:0] \$procmux$15165_Y ;
  wire \$procmux$15166_CMP ;
  wire \$procmux$15169_Y ;
  wire \$procmux$15170_CMP ;
  wire [31:0] \$procmux$15173_Y ;
  wire \$procmux$15174_CMP ;
  wire \$procmux$15175_Y ;
  wire \$procmux$15176_CMP ;
  wire \$procmux$15177_CMP ;
  wire \$procmux$15178_CMP ;
  wire \$procmux$15179_CMP ;
  wire \$procmux$15180_CMP ;
  wire \$procmux$15181_CMP ;
  wire \$procmux$15182_CMP ;
  wire \$procmux$15183_CMP ;
  wire \$procmux$15184_CMP ;
  wire \$procmux$15185_CMP ;
  wire \$procmux$15186_CMP ;
  wire \$procmux$15187_CMP ;
  wire \$procmux$15188_CMP ;
  wire \$procmux$15189_CMP ;
  wire \$procmux$15190_CMP ;
  wire \$procmux$15191_CMP ;
  wire [3:0] \$procmux$15192_Y ;
  wire \$procmux$15193_CMP ;
  wire \$procmux$15194_CMP ;
  wire \$procmux$15195_CMP ;
  wire \$procmux$15196_CMP ;
  wire \$procmux$15197_CMP ;
  wire \$procmux$15198_CMP ;
  wire \$procmux$15199_CMP ;
  wire \$procmux$15200_CMP ;
  wire \$procmux$15201_CMP ;
  wire \$procmux$15202_CMP ;
  wire \$procmux$15203_CMP ;
  wire \$procmux$15204_CMP ;
  wire \$procmux$15205_CMP ;
  wire \$procmux$15206_CMP ;
  wire \$procmux$15207_CMP ;
  wire \$procmux$15208_CMP ;
  wire \$procmux$15209_Y ;
  wire \$procmux$15210_CMP ;
  wire \$procmux$15215_Y ;
  wire \$procmux$15216_CMP ;
  wire \$procmux$15222_Y ;
  wire \$procmux$15223_CMP ;
  wire \$procmux$15236_Y ;
  wire \$procmux$15237_CMP ;
  wire \$procmux$15249_Y ;
  wire \$procmux$15250_CMP ;
  wire \$procmux$15258_Y ;
  wire \$procmux$15259_CMP ;
  wire [4:0] \$procmux$15260_Y ;
  wire \$procmux$15261_CMP ;
  wire [4:0] \$procmux$15265_Y ;
  wire \$procmux$15266_CMP ;
  wire [4:0] \$procmux$15270_Y ;
  wire \$procmux$15271_CMP ;
  wire [4:0] \$procmux$15274_Y ;
  wire \$procmux$15275_CMP ;
  wire [4:0] \$procmux$15277_Y ;
  wire \$procmux$15278_CMP ;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:124.16" */
  wire bypass_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:124.26" */
  wire bypass_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:122.16" */
  wire bypass_select;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:58.30" */
  wire capture_dr;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:76.9" */
  wire capture_ir;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:40.23" */
  output capture_o;
  wire capture_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:38.23" */
  output dmi_clear_o;
  wire dmi_clear_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:46.23" */
  output dmi_select_o;
  wire dmi_select_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:47.23" */
  input dmi_tdo_i;
  wire dmi_tdo_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:43.23" */
  output dtmcs_select_o;
  wire dtmcs_select_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:44.23" */
  input dtmcs_tdo_i;
  wire dtmcs_tdo_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:120.16" */
  wire [31:0] idcode_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:120.26" */
  wire [31:0] idcode_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:121.16" */
  wire idcode_select;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:75.25" */
  wire [4:0] jtag_ir_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:75.36" */
  wire [4:0] jtag_ir_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:73.25" */
  wire [4:0] jtag_ir_shift_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:73.42" */
  wire [4:0] jtag_ir_shift_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:58.20" */
  wire shift_dr;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:76.21" */
  wire shift_ir;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:41.23" */
  output shift_o;
  wire shift_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:57.28" */
  wire [3:0] tap_state_d;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:57.15" */
  wire [3:0] tap_state_q;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:28.23" */
  input tck_i;
  wire tck_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:188.9" */
  wire tck_n;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:188.16" */
  wire tck_ni;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:36.23" */
  output tck_o;
  wire tck_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:31.23" */
  input td_i;
  wire td_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:32.23" */
  output td_o;
  wire td_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:42.23" */
  output tdi_o;
  wire tdi_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:168.9" */
  wire tdo_mux;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:33.23" */
  output tdo_oe_o;
  wire tdo_oe_o;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:76.42" */
  wire test_logic_reset;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:34.23" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:29.23" */
  input tms_i;
  wire tms_i;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:30.23" */
  input trst_ni;
  wire trst_ni;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:58.9" */
  wire update_dr;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:76.31" */
  wire update_ir;
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:39.23" */
  output update_o;
  wire update_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2737  (
    .A(trst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2738 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2779  (
    .A(trst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2780 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2859  (
    .A(trst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2860 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2783  (
    .A(shift_ir),
    .B(shift_dr),
    .Y(\$auto$builder.cc:338:Biop$2784 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2788  (
    .A(4'h1),
    .B(4'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2787 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2789 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2792  (
    .A(4'h1),
    .B(4'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2791 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2793 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2796  (
    .A(4'h3),
    .B(4'h9),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2795 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2797 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2800  (
    .A(4'h4),
    .B(4'h5),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2799 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2801 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2804  (
    .A(4'h4),
    .B(4'h5),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2803 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2805 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2808  (
    .A(4'h6),
    .B(4'h8),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2807 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2809 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2812  (
    .A(4'h6),
    .B(4'h7),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2811 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2813 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2816  (
    .A(4'h4),
    .B(4'h8),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2815 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2817 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2820  (
    .A(4'h1),
    .B(4'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2819 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2821 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2824  (
    .A(4'ha),
    .B(4'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2823 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2825 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2828  (
    .A(4'hb),
    .B(4'hc),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2827 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2829 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2832  (
    .A(4'hb),
    .B(4'hc),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2831 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2833 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2836  (
    .A(4'hd),
    .B(4'hf),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2835 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2837 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2840  (
    .A(4'hd),
    .B(4'he),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2839 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2841 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2844  (
    .A(4'hb),
    .B(4'hf),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2843 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2845 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$2848  (
    .A(4'h1),
    .B(4'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2847 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2849 )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:304.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$bypass_q  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck_i),
    .D(bypass_d),
    .Q(bypass_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:304.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$idcode_q  (
    .AD(32'd202137011),
    .ALOAD(trst_ni),
    .CLK(tck_i),
    .D(idcode_d),
    .Q(idcode_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:104.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd5)
  ) \$driver$jtag_ir_q  (
    .AD(5'h01),
    .ALOAD(trst_ni),
    .CLK(tck_i),
    .D(jtag_ir_d),
    .Q(jtag_ir_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:104.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd5)
  ) \$driver$jtag_ir_shift_q  (
    .AD(5'h00),
    .ALOAD(trst_ni),
    .CLK(tck_i),
    .D(jtag_ir_shift_d),
    .Q(jtag_ir_shift_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:304.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$tap_state_q  (
    .AD(4'h1),
    .ALOAD(trst_ni),
    .CLK(tck_i),
    .D(tap_state_d),
    .Q(tap_state_q)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:203.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$td_o  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck_n),
    .D(tdo_mux),
    .Q(td_o)
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:203.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$tdo_oe_o  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck_n),
    .D(\$auto$builder.cc:338:Biop$2784 ),
    .Q(tdo_oe_o)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:179.25-179.45|../rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$15097  (
    .A(bypass_q),
    .B({ idcode_q[0], dtmcs_tdo_i, dmi_tdo_i }),
    .S({ \$procmux$15100_CMP , \$procmux$15099_CMP , \$procmux$15098_CMP  }),
    .Y(\$procmux$15097_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:179.25-179.45|../rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$15098_CMP0  (
    .A(jtag_ir_q),
    .B(5'h11),
    .Y(\$procmux$15098_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:178.25-178.47|../rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$15099_CMP0  (
    .A(jtag_ir_q),
    .B(5'h10),
    .Y(\$procmux$15099_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:177.25-177.47|../rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$15100_CMP0  (
    .A(jtag_ir_q),
    .B(5'h01),
    .Y(\$procmux$15100_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:173.7-173.36|../rtl/riscv-dbg/dmi_jtag_tap.sv:172.5-182.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15102  (
    .A(\$procmux$15097_Y ),
    .B(1'hx),
    .S(\$procmux$15103_CMP ),
    .Y(\$procmux$15102_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:173.7-173.36|../rtl/riscv-dbg/dmi_jtag_tap.sv:172.5-182.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15106  (
    .A(\$auto$slang_frontend.cc:694:finish$\tdo_mux$2776 ),
    .B(jtag_ir_shift_q[0]),
    .S(\$procmux$15107_CMP ),
    .Y(\$procmux$15106_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:159.18-159.40|../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$15110  (
    .A(1'h1),
    .B(3'h0),
    .S({ \$procmux$15113_CMP , \$procmux$15112_CMP , \$procmux$15111_CMP  }),
    .Y(\$procmux$15110_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:159.18-159.40|../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$15111_CMP0  (
    .A(jtag_ir_q),
    .B(5'h11),
    .Y(\$procmux$15111_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:158.18-158.40|../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$15112_CMP0  (
    .A(jtag_ir_q),
    .B(5'h10),
    .Y(\$procmux$15112_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:157.18-157.40|../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$15113_CMP0  (
    .A(jtag_ir_q),
    .B(5'h01),
    .Y(\$procmux$15113_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:157.18-157.40|../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15118  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15119_CMP ),
    .Y(\$procmux$15118_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:157.18-157.40|../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$15119_CMP0  (
    .A(jtag_ir_q),
    .B(5'h01),
    .Y(\$procmux$15119_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:159.18-159.40|../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15122  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15123_CMP ),
    .Y(\$procmux$15122_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:159.18-159.40|../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$15123_CMP0  (
    .A(jtag_ir_q),
    .B(5'h11),
    .Y(\$procmux$15123_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:158.18-158.40|../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15127  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15128_CMP ),
    .Y(\$procmux$15127_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:158.18-158.40|../rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$15128_CMP0  (
    .A(jtag_ir_q),
    .B(5'h10),
    .Y(\$procmux$15128_CMP )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:140.27-144.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:140.5-144.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15129  (
    .A(\$auto$slang_frontend.cc:694:finish$\bypass_d$2763 ),
    .B(1'h0),
    .S(\$procmux$15130_CMP ),
    .Y(\$procmux$15129_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:140.27-144.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:140.5-144.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$15133  (
    .A(\$auto$slang_frontend.cc:694:finish$\idcode_d$2762 ),
    .B(32'd202137011),
    .S(\$procmux$15134_CMP ),
    .Y(\$procmux$15133_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:137.27-137.43|../rtl/riscv-dbg/dmi_jtag_tap.sv:137.7-137.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15137  (
    .A(\$auto$slang_frontend.cc:694:finish$\bypass_d$2751 ),
    .B(td_i),
    .S(\$procmux$15138_CMP ),
    .Y(\$procmux$15137_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:135.19-138.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15140  (
    .A(1'hx),
    .B(\$procmux$15137_Y ),
    .S(\$procmux$15141_CMP ),
    .Y(\$procmux$15140_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:136.27-136.65|../rtl/riscv-dbg/dmi_jtag_tap.sv:136.7-136.65" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$15143  (
    .A(\$auto$slang_frontend.cc:694:finish$\idcode_d$2750 ),
    .B({ td_i, \$auto$builder.cc:338:Biop$2757 [30:0] }),
    .S(\$procmux$15144_CMP ),
    .Y(\$procmux$15143_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:135.19-138.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$15145  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$15143_Y ),
    .S(\$procmux$15146_CMP ),
    .Y(\$procmux$15145_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:135.19-138.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15150  (
    .A(\$auto$slang_frontend.cc:694:finish$\bypass_d$2751 ),
    .B(\$auto$slang_frontend.cc:694:finish$\bypass_d$2761 ),
    .S(\$procmux$15151_CMP ),
    .Y(\$procmux$15150_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:135.19-138.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$15155  (
    .A(\$auto$slang_frontend.cc:694:finish$\idcode_d$2750 ),
    .B(\$auto$slang_frontend.cc:694:finish$\idcode_d$2758 ),
    .S(\$procmux$15156_CMP ),
    .Y(\$procmux$15155_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:132.26-132.42|../rtl/riscv-dbg/dmi_jtag_tap.sv:132.7-132.42" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15158  (
    .A(bypass_q),
    .B(1'h0),
    .S(\$procmux$15159_CMP ),
    .Y(\$procmux$15158_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:130.21-133.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15161  (
    .A(1'hx),
    .B(\$procmux$15158_Y ),
    .S(\$procmux$15162_CMP ),
    .Y(\$procmux$15161_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:131.26-131.49|../rtl/riscv-dbg/dmi_jtag_tap.sv:131.7-131.49" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$15163  (
    .A(idcode_q),
    .B(32'd202137011),
    .S(\$procmux$15164_CMP ),
    .Y(\$procmux$15163_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:130.21-133.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$15165  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$15163_Y ),
    .S(\$procmux$15166_CMP ),
    .Y(\$procmux$15165_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:130.21-133.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15169  (
    .A(bypass_q),
    .B(\$auto$slang_frontend.cc:694:finish$\bypass_d$2749 ),
    .S(\$procmux$15170_CMP ),
    .Y(\$procmux$15169_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:130.21-133.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$15173  (
    .A(idcode_q),
    .B(\$auto$slang_frontend.cc:694:finish$\idcode_d$2746 ),
    .S(\$procmux$15174_CMP ),
    .Y(\$procmux$15173_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$pmux  #(
    .S_WIDTH(32'd16),
    .WIDTH(32'd1)
  ) \$procmux$15175  (
    .A(1'hx),
    .B(16'h8000),
    .S({ \$procmux$15191_CMP , \$procmux$15190_CMP , \$procmux$15189_CMP , \$procmux$15188_CMP , \$procmux$15187_CMP , \$procmux$15186_CMP , \$procmux$15185_CMP , \$procmux$15184_CMP , \$procmux$15183_CMP , \$procmux$15182_CMP , \$procmux$15181_CMP , \$procmux$15180_CMP , \$procmux$15179_CMP , \$procmux$15178_CMP , \$procmux$15177_CMP , \$procmux$15176_CMP  }),
    .Y(\$procmux$15175_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15176_CMP0  (
    .A(tap_state_q),
    .B(4'hf),
    .Y(\$procmux$15176_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:290.9-290.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15177_CMP0  (
    .A(tap_state_q),
    .B(4'he),
    .Y(\$procmux$15177_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:287.9-287.51|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15178_CMP0  (
    .A(tap_state_q),
    .B(4'hd),
    .Y(\$procmux$15178_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:283.9-283.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15179_CMP0  (
    .A(tap_state_q),
    .B(4'hc),
    .Y(\$procmux$15179_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:278.16-281.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15180_CMP0  (
    .A(tap_state_q),
    .B(4'hb),
    .Y(\$procmux$15180_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:270.18-273.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15181_CMP0  (
    .A(tap_state_q),
    .B(4'ha),
    .Y(\$procmux$15181_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:264.9-264.60|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15182_CMP0  (
    .A(tap_state_q),
    .B(4'h9),
    .Y(\$procmux$15182_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:258.17-261.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15183_CMP0  (
    .A(tap_state_q),
    .B(4'h8),
    .Y(\$procmux$15183_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:256.9-256.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15184_CMP0  (
    .A(tap_state_q),
    .B(4'h7),
    .Y(\$procmux$15184_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:253.9-253.51|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15185_CMP0  (
    .A(tap_state_q),
    .B(4'h6),
    .Y(\$procmux$15185_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:250.9-250.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15186_CMP0  (
    .A(tap_state_q),
    .B(4'h5),
    .Y(\$procmux$15186_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:245.16-248.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15187_CMP0  (
    .A(tap_state_q),
    .B(4'h4),
    .Y(\$procmux$15187_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:241.18-244.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15188_CMP0  (
    .A(tap_state_q),
    .B(4'h3),
    .Y(\$procmux$15188_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:239.9-239.58|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15189_CMP0  (
    .A(tap_state_q),
    .B(4'h2),
    .Y(\$procmux$15189_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:235.9-235.60|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15190_CMP0  (
    .A(tap_state_q),
    .B(4'h1),
    .Y(\$procmux$15190_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:230.23-233.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15191_CMP0  (
    .A(tap_state_q),
    .Y(\$procmux$15191_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$pmux  #(
    .S_WIDTH(32'd16),
    .WIDTH(32'd4)
  ) \$procmux$15192  (
    .A(4'hx),
    .B({ \$auto$rtlil.cc:2874:Mux$2789 , \$auto$rtlil.cc:2874:Mux$2793 , \$auto$rtlil.cc:2874:Mux$2797 , \$auto$rtlil.cc:2874:Mux$2801 , \$auto$rtlil.cc:2874:Mux$2805 , \$auto$rtlil.cc:2874:Mux$2809 , \$auto$rtlil.cc:2874:Mux$2813 , \$auto$rtlil.cc:2874:Mux$2817 , \$auto$rtlil.cc:2874:Mux$2821 , \$auto$rtlil.cc:2874:Mux$2825 , \$auto$rtlil.cc:2874:Mux$2829 , \$auto$rtlil.cc:2874:Mux$2833 , \$auto$rtlil.cc:2874:Mux$2837 , \$auto$rtlil.cc:2874:Mux$2841 , \$auto$rtlil.cc:2874:Mux$2845 , \$auto$rtlil.cc:2874:Mux$2849  }),
    .S({ \$procmux$15208_CMP , \$procmux$15207_CMP , \$procmux$15206_CMP , \$procmux$15205_CMP , \$procmux$15204_CMP , \$procmux$15203_CMP , \$procmux$15202_CMP , \$procmux$15201_CMP , \$procmux$15200_CMP , \$procmux$15199_CMP , \$procmux$15198_CMP , \$procmux$15197_CMP , \$procmux$15196_CMP , \$procmux$15195_CMP , \$procmux$15194_CMP , \$procmux$15193_CMP  }),
    .Y(\$procmux$15192_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15193_CMP0  (
    .A(tap_state_q),
    .B(4'hf),
    .Y(\$procmux$15193_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:290.9-290.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15194_CMP0  (
    .A(tap_state_q),
    .B(4'he),
    .Y(\$procmux$15194_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:287.9-287.51|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15195_CMP0  (
    .A(tap_state_q),
    .B(4'hd),
    .Y(\$procmux$15195_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:283.9-283.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15196_CMP0  (
    .A(tap_state_q),
    .B(4'hc),
    .Y(\$procmux$15196_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:278.16-281.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15197_CMP0  (
    .A(tap_state_q),
    .B(4'hb),
    .Y(\$procmux$15197_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:270.18-273.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15198_CMP0  (
    .A(tap_state_q),
    .B(4'ha),
    .Y(\$procmux$15198_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:264.9-264.60|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15199_CMP0  (
    .A(tap_state_q),
    .B(4'h9),
    .Y(\$procmux$15199_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:258.17-261.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15200_CMP0  (
    .A(tap_state_q),
    .B(4'h8),
    .Y(\$procmux$15200_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:256.9-256.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15201_CMP0  (
    .A(tap_state_q),
    .B(4'h7),
    .Y(\$procmux$15201_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:253.9-253.51|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15202_CMP0  (
    .A(tap_state_q),
    .B(4'h6),
    .Y(\$procmux$15202_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:250.9-250.52|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15203_CMP0  (
    .A(tap_state_q),
    .B(4'h5),
    .Y(\$procmux$15203_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:245.16-248.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15204_CMP0  (
    .A(tap_state_q),
    .B(4'h4),
    .Y(\$procmux$15204_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:241.18-244.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15205_CMP0  (
    .A(tap_state_q),
    .B(4'h3),
    .Y(\$procmux$15205_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:239.9-239.58|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15206_CMP0  (
    .A(tap_state_q),
    .B(4'h2),
    .Y(\$procmux$15206_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:235.9-235.60|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15207_CMP0  (
    .A(tap_state_q),
    .B(4'h1),
    .Y(\$procmux$15207_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:230.23-233.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15208_CMP0  (
    .A(tap_state_q),
    .Y(\$procmux$15208_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15209  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15210_CMP ),
    .Y(\$procmux$15209_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15210_CMP0  (
    .A(tap_state_q),
    .B(4'hf),
    .Y(\$procmux$15210_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:278.16-281.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15215  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15216_CMP ),
    .Y(\$procmux$15215_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:278.16-281.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15216_CMP0  (
    .A(tap_state_q),
    .B(4'hb),
    .Y(\$procmux$15216_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:270.18-273.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15222  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15223_CMP ),
    .Y(\$procmux$15222_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:270.18-273.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15223_CMP0  (
    .A(tap_state_q),
    .B(4'ha),
    .Y(\$procmux$15223_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:241.18-244.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15236  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15237_CMP ),
    .Y(\$procmux$15236_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:241.18-244.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15237_CMP0  (
    .A(tap_state_q),
    .B(4'h3),
    .Y(\$procmux$15237_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:245.16-248.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15249  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15250_CMP ),
    .Y(\$procmux$15249_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:245.16-248.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15250_CMP0  (
    .A(tap_state_q),
    .B(4'h4),
    .Y(\$procmux$15250_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:258.17-261.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15258  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15259_CMP ),
    .Y(\$procmux$15258_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:258.17-261.10|../rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$15259_CMP0  (
    .A(tap_state_q),
    .B(4'h8),
    .Y(\$procmux$15259_CMP )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:97.27-101.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:97.5-101.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$15260  (
    .A(\$auto$slang_frontend.cc:694:finish$\jtag_ir_d$2731 ),
    .B(5'h01),
    .S(\$procmux$15261_CMP ),
    .Y(\$procmux$15260_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:97.27-101.8|../rtl/riscv-dbg/dmi_jtag_tap.sv:97.5-101.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$15265  (
    .A(\$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$2728 ),
    .B(5'h00),
    .S(\$procmux$15266_CMP ),
    .Y(\$procmux$15265_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:94.7-94.46|../rtl/riscv-dbg/dmi_jtag_tap.sv:93.5-95.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$15270  (
    .A(jtag_ir_q),
    .B(jtag_ir_shift_q),
    .S(\$procmux$15271_CMP ),
    .Y(\$procmux$15270_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:89.7-89.45|../rtl/riscv-dbg/dmi_jtag_tap.sv:88.5-90.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$15274  (
    .A(\$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$2725 ),
    .B(5'h05),
    .S(\$procmux$15275_CMP ),
    .Y(\$procmux$15274_Y )
  );
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:84.7-84.63|../rtl/riscv-dbg/dmi_jtag_tap.sv:83.5-85.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$15277  (
    .A(jtag_ir_shift_q),
    .B({ td_i, jtag_ir_shift_q[4:1] }),
    .S(\$procmux$15278_CMP ),
    .Y(\$procmux$15277_Y )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:195.15" */
  \tc_clk_mux2$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap.i_dft_tck_mux  i_dft_tck_mux (
    .clk0_i(tck_ni),
    .clk1_i(tck_i),
    .clk_o(tck_n),
    .clk_sel_i(testmode_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/riscv-dbg/dmi_jtag_tap.sv:190.19" */
  \tc_clk_inverter$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap.i_tck_inv  i_tck_inv (
    .clk_i(tck_i),
    .clk_o(tck_ni)
  );
  assign jtag_ir_shift_d = \$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$2734 ;
  assign jtag_ir_d = \$auto$slang_frontend.cc:694:finish$\jtag_ir_d$2735 ;
  assign idcode_d = \$auto$slang_frontend.cc:694:finish$\idcode_d$2766 ;
  assign bypass_d = \$auto$slang_frontend.cc:694:finish$\bypass_d$2767 ;
  assign dtmcs_select_o = \$auto$slang_frontend.cc:694:finish$\dtmcs_select_o$2769 ;
  assign dmi_select_o = \$auto$slang_frontend.cc:694:finish$\dmi_select_o$2770 ;
  assign idcode_select = \$auto$slang_frontend.cc:694:finish$\idcode_select$2771 ;
  assign bypass_select = \$auto$slang_frontend.cc:694:finish$\bypass_select$2772 ;
  assign tdo_mux = \$auto$slang_frontend.cc:694:finish$\tdo_mux$2777 ;
  assign tap_state_d = \$auto$slang_frontend.cc:694:finish$\tap_state_d$2850 ;
  assign update_dr = \$auto$slang_frontend.cc:694:finish$\update_dr$2851 ;
  assign shift_dr = \$auto$slang_frontend.cc:694:finish$\shift_dr$2852 ;
  assign capture_dr = \$auto$slang_frontend.cc:694:finish$\capture_dr$2853 ;
  assign capture_ir = \$auto$slang_frontend.cc:694:finish$\capture_ir$2854 ;
  assign shift_ir = \$auto$slang_frontend.cc:694:finish$\shift_ir$2855 ;
  assign update_ir = \$auto$slang_frontend.cc:694:finish$\update_ir$2856 ;
  assign test_logic_reset = \$auto$slang_frontend.cc:694:finish$\test_logic_reset$2857 ;
  assign tck_o = tck_i;
  assign tdi_o = td_i;
  assign update_o = update_dr;
  assign shift_o = shift_dr;
  assign capture_o = capture_dr;
  assign dmi_clear_o = test_logic_reset;
  assign \$procmux$15103_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2775 ;
  assign \$auto$slang_frontend.cc:694:finish$\tdo_mux$2776  = \$procmux$15102_Y ;
  assign \$procmux$15107_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2775 ;
  assign \$auto$slang_frontend.cc:694:finish$\tdo_mux$2777  = \$procmux$15106_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\bypass_select$2772  = \$procmux$15110_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\idcode_select$2771  = \$procmux$15118_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\dmi_select_o$2770  = \$procmux$15122_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\dtmcs_select_o$2769  = \$procmux$15127_Y ;
  assign \$procmux$15130_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2765 ;
  assign \$auto$slang_frontend.cc:694:finish$\bypass_d$2767  = \$procmux$15129_Y ;
  assign \$procmux$15134_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2765 ;
  assign \$auto$slang_frontend.cc:694:finish$\idcode_d$2766  = \$procmux$15133_Y ;
  assign \$procmux$15138_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2760 ;
  assign \$procmux$15141_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2753 ;
  assign \$auto$slang_frontend.cc:694:finish$\bypass_d$2761  = \$procmux$15140_Y ;
  assign \$procmux$15144_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2755 ;
  assign \$procmux$15146_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2753 ;
  assign \$auto$slang_frontend.cc:694:finish$\idcode_d$2758  = \$procmux$15145_Y ;
  assign \$procmux$15151_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2753 ;
  assign \$auto$slang_frontend.cc:694:finish$\bypass_d$2763  = \$procmux$15150_Y ;
  assign \$procmux$15156_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2753 ;
  assign \$auto$slang_frontend.cc:694:finish$\idcode_d$2762  = \$procmux$15155_Y ;
  assign \$procmux$15159_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2748 ;
  assign \$procmux$15162_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2743 ;
  assign \$auto$slang_frontend.cc:694:finish$\bypass_d$2749  = \$procmux$15161_Y ;
  assign \$procmux$15164_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2745 ;
  assign \$procmux$15166_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2743 ;
  assign \$auto$slang_frontend.cc:694:finish$\idcode_d$2746  = \$procmux$15165_Y ;
  assign \$procmux$15170_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2743 ;
  assign \$auto$slang_frontend.cc:694:finish$\bypass_d$2751  = \$procmux$15169_Y ;
  assign \$procmux$15174_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2743 ;
  assign \$auto$slang_frontend.cc:694:finish$\idcode_d$2750  = \$procmux$15173_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\test_logic_reset$2857  = \$procmux$15175_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\tap_state_d$2850  = \$procmux$15192_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\update_ir$2856  = \$procmux$15209_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\shift_ir$2855  = \$procmux$15215_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\capture_ir$2854  = \$procmux$15222_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\capture_dr$2853  = \$procmux$15236_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\shift_dr$2852  = \$procmux$15249_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\update_dr$2851  = \$procmux$15258_Y ;
  assign \$procmux$15261_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2733 ;
  assign \$auto$slang_frontend.cc:694:finish$\jtag_ir_d$2735  = \$procmux$15260_Y ;
  assign \$procmux$15266_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2733 ;
  assign \$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$2734  = \$procmux$15265_Y ;
  assign \$procmux$15271_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2730 ;
  assign \$auto$slang_frontend.cc:694:finish$\jtag_ir_d$2731  = \$procmux$15270_Y ;
  assign \$procmux$15275_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2727 ;
  assign \$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$2728  = \$procmux$15274_Y ;
  assign \$procmux$15278_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2724 ;
  assign \$auto$slang_frontend.cc:694:finish$\jtag_ir_shift_d$2725  = \$procmux$15277_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2724  = \$procmux$15215_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2727  = \$procmux$15222_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2730  = \$procmux$15209_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2733  = \$procmux$15175_Y ;
  assign \$auto$rtlil.cc:2747:LogicNot$2740  = trst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2743  = \$procmux$15236_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2745  = \$procmux$15118_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2748  = \$procmux$15110_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2753  = \$procmux$15249_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2755  = \$procmux$15118_Y ;
  assign \$auto$builder.cc:338:Biop$2757  = { 1'h0, idcode_q[31:1] };
  assign \$auto$rtlil.cc:2746:ReduceBool$2760  = \$procmux$15110_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2765  = \$procmux$15175_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2775  = \$procmux$15215_Y ;
  assign \$auto$rtlil.cc:2747:LogicNot$2782  = trst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2787  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2791  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2795  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2799  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2803  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2807  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2811  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2815  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2819  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2823  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2827  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2831  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2835  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2839  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2843  = tms_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$2847  = tms_i;
  assign \$auto$rtlil.cc:2747:LogicNot$2862  = trst_ni;
endmodule

/* src = "../rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.gen_no_id_assign.i_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$auto$builder.cc:338:Biop$6855 ;
  wire \$auto$builder.cc:338:Biop$6857 ;
  wire \$auto$builder.cc:338:Biop$6859 ;
  wire \$auto$builder.cc:338:Biop$6863 ;
  wire \$auto$builder.cc:338:Biop$6878 ;
  wire \$auto$builder.cc:338:Biop$6896 ;
  wire [31:0] \$auto$builder.cc:338:Biop$6900 ;
  wire [31:0] \$auto$builder.cc:338:Biop$6903 ;
  wire \$auto$builder.cc:338:Biop$6911 ;
  wire \$auto$builder.cc:338:Biop$6915 ;
  wire [31:0] \$auto$builder.cc:338:Biop$6919 ;
  wire [31:0] \$auto$builder.cc:338:Biop$6922 ;
  wire \$auto$builder.cc:338:Biop$6926 ;
  wire \$auto$builder.cc:338:Biop$6930 ;
  wire \$auto$builder.cc:338:Biop$6934 ;
  wire \$auto$builder.cc:364:Unop$6861 ;
  wire \$auto$builder.cc:364:Unop$6876 ;
  wire \$auto$builder.cc:364:Unop$6909 ;
  wire \$auto$builder.cc:364:Unop$6928 ;
  wire \$auto$builder.cc:364:Unop$6932 ;
  wire \$auto$builder.cc:364:Unop$6963 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6866 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6880 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6898 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6913 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6917 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6936 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6939 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6953 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6965 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6949 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6951 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6959 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6961 ;
  wire \$auto$rtlil.cc:2791:Lt$6868 ;
  wire \$auto$rtlil.cc:2791:Lt$6882 ;
  wire \$auto$rtlil.cc:2797:Ge$6884 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$6886 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$6872 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$6874 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$6888 ;
  wire [3:0] \$auto$rtlil.cc:2875:Bwmux$6894 ;
  wire [1:0] \$auto$rtlil.cc:2895:Bmux$6870 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$6890 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$6892 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_o$6943 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\gate_clock$6904 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\mem_n$6907 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\mem_q$6966 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6920 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6923 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6940 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6944 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_q$6954 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6906 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6924 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6937 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6942 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6946 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_q$6956 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6901 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6905 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6941 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6945 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_q$6955 ;
  wire [3:0] \$procmux$13709_Y ;
  wire \$procmux$13710_CMP ;
  wire [1:0] \$procmux$13712_Y ;
  wire \$procmux$13713_CMP ;
  wire \$procmux$13715_Y ;
  wire \$procmux$13716_CMP ;
  wire \$procmux$13718_Y ;
  wire \$procmux$13719_CMP ;
  wire [1:0] \$procmux$13732_Y ;
  wire \$procmux$13733_CMP ;
  wire \$procmux$13737_Y ;
  wire \$procmux$13738_CMP ;
  wire \$procmux$13739_Y ;
  wire \$procmux$13740_CMP ;
  wire [1:0] \$procmux$13743_Y ;
  wire \$procmux$13744_CMP ;
  wire \$procmux$13747_Y ;
  wire \$procmux$13748_CMP ;
  wire \$procmux$13751_Y ;
  wire \$procmux$13752_CMP ;
  wire \$procmux$13753_Y ;
  wire \$procmux$13754_CMP ;
  wire [3:0] \$procmux$13756_Y ;
  wire \$procmux$13757_CMP ;
  wire [1:0] \$procmux$13759_Y ;
  wire \$procmux$13760_CMP ;
  wire \$procmux$13762_Y ;
  wire \$procmux$13763_CMP ;
  wire \$procmux$13765_Y ;
  wire \$procmux$13766_CMP ;
  /* src = "../rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:32.19" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:35.19" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.29" */
  wire [3:0] mem_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.36" */
  wire [3:0] mem_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6948  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6949 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6958  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6959 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$builder.cc:112:Mux$6871  (
    .A(2'hx),
    .B(\$auto$rtlil.cc:2895:Bmux$6870 ),
    .S(\$auto$rtlil.cc:2791:Lt$6868 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6872 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$builder.cc:112:Mux$6887  (
    .A(2'h0),
    .B(2'h3),
    .S(\$auto$rtlil.cc:2806:LogicAnd$6886 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6888 )
  );
  \$bwmux  #(
    .WIDTH(32'd4)
  ) \$auto$builder.cc:128:Bwmux$6893  (
    .A(mem_q),
    .B({ data_i, data_i }),
    .S(\$auto$rtlil.cc:2896:Demux$6892 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$6894 )
  );
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:195:Bmux$6869  (
    .A(mem_q),
    .S(read_pointer_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$6870 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6854  (
    .A(status_cnt_q),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$6855 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6856  (
    .A(status_cnt_q),
    .Y(\$auto$builder.cc:338:Biop$6857 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6877  (
    .A(push_i),
    .B(\$auto$builder.cc:364:Unop$6876 ),
    .Y(\$auto$builder.cc:338:Biop$6878 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$6899  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$6900 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$6902  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$6903 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6910  (
    .A(pop_i),
    .B(\$auto$builder.cc:364:Unop$6909 ),
    .Y(\$auto$builder.cc:338:Biop$6911 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$6918  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$6919 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$6921  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$6922 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6925  (
    .A(push_i),
    .B(pop_i),
    .Y(\$auto$builder.cc:338:Biop$6926 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6929  (
    .A(\$auto$builder.cc:338:Biop$6926 ),
    .B(\$auto$builder.cc:364:Unop$6928 ),
    .Y(\$auto$builder.cc:338:Biop$6930 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6933  (
    .A(\$auto$builder.cc:338:Biop$6930 ),
    .B(\$auto$builder.cc:364:Unop$6932 ),
    .Y(\$auto$builder.cc:338:Biop$6934 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6875  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$6876 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6908  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$6909 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6927  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$6928 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6931  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$6932 )
  );
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:38:Demux$6889  (
    .A(\$auto$rtlil.cc:2874:Mux$6888 ),
    .S(write_pointer_q),
    .Y(\$auto$rtlil.cc:2896:Demux$6890 )
  );
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:38:Demux$6891  (
    .A(\$auto$rtlil.cc:2874:Mux$6888 ),
    .S(write_pointer_q),
    .Y(\$auto$rtlil.cc:2896:Demux$6892 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$6883  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$6884 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$6867  (
    .A({ 1'h0, read_pointer_q }),
    .B(3'h2),
    .Y(\$auto$rtlil.cc:2791:Lt$6868 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$6881  (
    .A({ 1'h0, write_pointer_q }),
    .B(3'h2),
    .Y(\$auto$rtlil.cc:2791:Lt$6882 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$6885  (
    .A(\$auto$rtlil.cc:2797:Ge$6884 ),
    .B(\$auto$rtlil.cc:2791:Lt$6882 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$6886 )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[0]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$6966 [1:0]),
    .Q(mem_q[1:0])
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[1]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$6966 [3:2]),
    .Q(mem_q[3:2])
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\read_pointer_q$6954 ),
    .Q(read_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\status_cnt_q$6956 ),
    .Q(status_cnt_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\write_pointer_q$6955 ),
    .Q(write_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:138.13-138.28|../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13709  (
    .A(mem_q),
    .B(\$auto$slang_frontend.cc:694:finish$\mem_n$6907 ),
    .S(\$procmux$13710_CMP ),
    .Y(\$procmux$13709_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13712  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$6946 ),
    .B(2'h0),
    .S(\$procmux$13713_CMP ),
    .Y(\$procmux$13712_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13715  (
    .A(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$6945 ),
    .B(1'h0),
    .S(\$procmux$13716_CMP ),
    .Y(\$procmux$13715_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13718  (
    .A(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$6944 ),
    .B(1'h0),
    .S(\$procmux$13719_CMP ),
    .Y(\$procmux$13718_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:102.13-102.43|../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13732  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$6924 ),
    .B(status_cnt_q),
    .S(\$procmux$13733_CMP ),
    .Y(\$procmux$13732_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13739  (
    .A(1'hx),
    .B(\$procmux$13737_Y ),
    .S(\$procmux$13740_CMP ),
    .Y(\$procmux$13739_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13743  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$6906 ),
    .B(\$auto$builder.cc:338:Biop$6922 [1:0]),
    .S(\$procmux$13744_CMP ),
    .Y(\$procmux$13743_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13747  (
    .A(read_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$6920 ),
    .S(\$procmux$13748_CMP ),
    .Y(\$procmux$13747_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13753  (
    .A(1'hx),
    .B(\$procmux$13751_Y ),
    .S(\$procmux$13754_CMP ),
    .Y(\$procmux$13753_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13756  (
    .A(mem_q),
    .B(\$auto$rtlil.cc:2875:Bwmux$6894 ),
    .S(\$procmux$13757_CMP ),
    .Y(\$procmux$13756_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13759  (
    .A(status_cnt_q),
    .B(\$auto$builder.cc:338:Biop$6903 [1:0]),
    .S(\$procmux$13760_CMP ),
    .Y(\$procmux$13759_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13762  (
    .A(write_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$6901 ),
    .S(\$procmux$13763_CMP ),
    .Y(\$procmux$13762_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13765  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$13766_CMP ),
    .Y(\$procmux$13765_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$auto$builder.cc:338:Biop$6855 ;
  assign empty_o = \$auto$builder.cc:338:Biop$6863 ;
  assign data_o = \$auto$slang_frontend.cc:694:finish$\data_o$6943 ;
  assign gate_clock = \$auto$slang_frontend.cc:694:finish$\gate_clock$6904 ;
  assign read_pointer_n = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6944 ;
  assign write_pointer_n = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6945 ;
  assign status_cnt_n = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6946 ;
  assign mem_n = \$auto$slang_frontend.cc:694:finish$\mem_n$6907 ;
  assign \$procmux$13710_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6965 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_q$6966  = \$procmux$13709_Y ;
  assign \$procmux$13713_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6953 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_q$6956  = \$procmux$13712_Y ;
  assign \$procmux$13716_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6953 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_q$6955  = \$procmux$13715_Y ;
  assign \$procmux$13719_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6953 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_q$6954  = \$procmux$13718_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6946  = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6937 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6945  = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6905 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6944  = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6923 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_o$6943  = \$auto$rtlil.cc:2874:Mux$6874 ;
  assign \$procmux$13733_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6936 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6937  = \$procmux$13732_Y ;
  assign \$procmux$13738_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6917 ;
  assign \$procmux$13740_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6913 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6920  = \$procmux$13739_Y ;
  assign \$procmux$13744_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6913 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6924  = \$procmux$13743_Y ;
  assign \$procmux$13748_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6913 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6923  = \$procmux$13747_Y ;
  assign \$procmux$13752_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6898 ;
  assign \$procmux$13754_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6880 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6901  = \$procmux$13753_Y ;
  assign \$procmux$13757_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6880 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_n$6907  = \$procmux$13756_Y ;
  assign \$procmux$13760_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6880 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6906  = \$procmux$13759_Y ;
  assign \$procmux$13763_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6880 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6905  = \$procmux$13762_Y ;
  assign \$procmux$13766_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6880 ;
  assign \$auto$slang_frontend.cc:694:finish$\gate_clock$6904  = \$procmux$13765_Y ;
  assign \$auto$builder.cc:338:Biop$6859  = 1'h0;
  assign \$auto$builder.cc:364:Unop$6861  = 1'h1;
  assign \$auto$builder.cc:338:Biop$6863  = \$auto$builder.cc:338:Biop$6857 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6866  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$6874  = \$auto$rtlil.cc:2874:Mux$6872 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6880  = \$auto$builder.cc:338:Biop$6878 ;
  assign \$auto$builder.cc:338:Biop$6896  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$6898  = \$auto$builder.cc:338:Biop$6896 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6913  = \$auto$builder.cc:338:Biop$6911 ;
  assign \$auto$builder.cc:338:Biop$6915  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$6917  = \$auto$builder.cc:338:Biop$6915 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6936  = \$auto$builder.cc:338:Biop$6934 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6939  = pop_i;
  assign \$auto$rtlil.cc:2747:LogicNot$6951  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$6953  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$6961  = rst_ni;
  assign \$auto$builder.cc:364:Unop$6963  = \$auto$rtlil.cc:2746:ReduceBool$6880 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6965  = \$auto$builder.cc:338:Biop$6878 ;
  assign \$procmux$13751_Y  = \$auto$builder.cc:338:Biop$6900 [0];
  assign \$procmux$13737_Y  = \$auto$builder.cc:338:Biop$6919 [0];
endmodule

/* src = "../rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.gen_no_id_assign.i_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$auto$builder.cc:338:Biop$7128 ;
  wire \$auto$builder.cc:338:Biop$7130 ;
  wire \$auto$builder.cc:338:Biop$7132 ;
  wire \$auto$builder.cc:338:Biop$7136 ;
  wire \$auto$builder.cc:338:Biop$7151 ;
  wire \$auto$builder.cc:338:Biop$7169 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7173 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7176 ;
  wire \$auto$builder.cc:338:Biop$7184 ;
  wire \$auto$builder.cc:338:Biop$7188 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7192 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7195 ;
  wire \$auto$builder.cc:338:Biop$7199 ;
  wire \$auto$builder.cc:338:Biop$7203 ;
  wire \$auto$builder.cc:338:Biop$7207 ;
  wire \$auto$builder.cc:364:Unop$7134 ;
  wire \$auto$builder.cc:364:Unop$7149 ;
  wire \$auto$builder.cc:364:Unop$7182 ;
  wire \$auto$builder.cc:364:Unop$7201 ;
  wire \$auto$builder.cc:364:Unop$7205 ;
  wire \$auto$builder.cc:364:Unop$7236 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7139 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7153 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7171 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7186 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7190 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7209 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7212 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7226 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7238 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7222 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7224 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7232 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7234 ;
  wire \$auto$rtlil.cc:2791:Lt$7141 ;
  wire \$auto$rtlil.cc:2791:Lt$7155 ;
  wire \$auto$rtlil.cc:2797:Ge$7157 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$7159 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7145 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7147 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7161 ;
  wire [3:0] \$auto$rtlil.cc:2875:Bwmux$7167 ;
  wire [1:0] \$auto$rtlil.cc:2895:Bmux$7143 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$7163 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$7165 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_o$7216 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\gate_clock$7177 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\mem_n$7180 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\mem_q$7239 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7193 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7196 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7213 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7217 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_q$7227 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7179 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7197 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7210 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7215 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7219 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_q$7229 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7174 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7178 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7214 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7218 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_q$7228 ;
  wire [3:0] \$procmux$13642_Y ;
  wire \$procmux$13643_CMP ;
  wire [1:0] \$procmux$13645_Y ;
  wire \$procmux$13646_CMP ;
  wire \$procmux$13648_Y ;
  wire \$procmux$13649_CMP ;
  wire \$procmux$13651_Y ;
  wire \$procmux$13652_CMP ;
  wire [1:0] \$procmux$13665_Y ;
  wire \$procmux$13666_CMP ;
  wire \$procmux$13670_Y ;
  wire \$procmux$13671_CMP ;
  wire \$procmux$13672_Y ;
  wire \$procmux$13673_CMP ;
  wire [1:0] \$procmux$13676_Y ;
  wire \$procmux$13677_CMP ;
  wire \$procmux$13680_Y ;
  wire \$procmux$13681_CMP ;
  wire \$procmux$13684_Y ;
  wire \$procmux$13685_CMP ;
  wire \$procmux$13686_Y ;
  wire \$procmux$13687_CMP ;
  wire [3:0] \$procmux$13689_Y ;
  wire \$procmux$13690_CMP ;
  wire [1:0] \$procmux$13692_Y ;
  wire \$procmux$13693_CMP ;
  wire \$procmux$13695_Y ;
  wire \$procmux$13696_CMP ;
  wire \$procmux$13698_Y ;
  wire \$procmux$13699_CMP ;
  /* src = "../rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:32.19" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:35.19" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.29" */
  wire [3:0] mem_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.36" */
  wire [3:0] mem_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7221  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7222 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7231  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7232 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$builder.cc:112:Mux$7144  (
    .A(2'hx),
    .B(\$auto$rtlil.cc:2895:Bmux$7143 ),
    .S(\$auto$rtlil.cc:2791:Lt$7141 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7145 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$builder.cc:112:Mux$7160  (
    .A(2'h0),
    .B(2'h3),
    .S(\$auto$rtlil.cc:2806:LogicAnd$7159 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7161 )
  );
  \$bwmux  #(
    .WIDTH(32'd4)
  ) \$auto$builder.cc:128:Bwmux$7166  (
    .A(mem_q),
    .B({ data_i, data_i }),
    .S(\$auto$rtlil.cc:2896:Demux$7165 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$7167 )
  );
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:195:Bmux$7142  (
    .A(mem_q),
    .S(read_pointer_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$7143 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7127  (
    .A(status_cnt_q),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$7128 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7129  (
    .A(status_cnt_q),
    .Y(\$auto$builder.cc:338:Biop$7130 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7150  (
    .A(push_i),
    .B(\$auto$builder.cc:364:Unop$7149 ),
    .Y(\$auto$builder.cc:338:Biop$7151 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7172  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7173 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7175  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7176 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7183  (
    .A(pop_i),
    .B(\$auto$builder.cc:364:Unop$7182 ),
    .Y(\$auto$builder.cc:338:Biop$7184 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7191  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7192 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7194  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7195 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7198  (
    .A(push_i),
    .B(pop_i),
    .Y(\$auto$builder.cc:338:Biop$7199 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7202  (
    .A(\$auto$builder.cc:338:Biop$7199 ),
    .B(\$auto$builder.cc:364:Unop$7201 ),
    .Y(\$auto$builder.cc:338:Biop$7203 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7206  (
    .A(\$auto$builder.cc:338:Biop$7203 ),
    .B(\$auto$builder.cc:364:Unop$7205 ),
    .Y(\$auto$builder.cc:338:Biop$7207 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7148  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$7149 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7181  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$7182 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7200  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$7201 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7204  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$7205 )
  );
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:38:Demux$7162  (
    .A(\$auto$rtlil.cc:2874:Mux$7161 ),
    .S(write_pointer_q),
    .Y(\$auto$rtlil.cc:2896:Demux$7163 )
  );
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:38:Demux$7164  (
    .A(\$auto$rtlil.cc:2874:Mux$7161 ),
    .S(write_pointer_q),
    .Y(\$auto$rtlil.cc:2896:Demux$7165 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$7156  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$7157 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$7140  (
    .A({ 1'h0, read_pointer_q }),
    .B(3'h2),
    .Y(\$auto$rtlil.cc:2791:Lt$7141 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$7154  (
    .A({ 1'h0, write_pointer_q }),
    .B(3'h2),
    .Y(\$auto$rtlil.cc:2791:Lt$7155 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$7158  (
    .A(\$auto$rtlil.cc:2797:Ge$7157 ),
    .B(\$auto$rtlil.cc:2791:Lt$7155 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$7159 )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[0]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$7239 [1:0]),
    .Q(mem_q[1:0])
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[1]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$7239 [3:2]),
    .Q(mem_q[3:2])
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\read_pointer_q$7227 ),
    .Q(read_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\status_cnt_q$7229 ),
    .Q(status_cnt_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\write_pointer_q$7228 ),
    .Q(write_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:138.13-138.28|../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13642  (
    .A(mem_q),
    .B(\$auto$slang_frontend.cc:694:finish$\mem_n$7180 ),
    .S(\$procmux$13643_CMP ),
    .Y(\$procmux$13642_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13645  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$7219 ),
    .B(2'h0),
    .S(\$procmux$13646_CMP ),
    .Y(\$procmux$13645_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13648  (
    .A(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$7218 ),
    .B(1'h0),
    .S(\$procmux$13649_CMP ),
    .Y(\$procmux$13648_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13651  (
    .A(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$7217 ),
    .B(1'h0),
    .S(\$procmux$13652_CMP ),
    .Y(\$procmux$13651_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:102.13-102.43|../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13665  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$7197 ),
    .B(status_cnt_q),
    .S(\$procmux$13666_CMP ),
    .Y(\$procmux$13665_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13672  (
    .A(1'hx),
    .B(\$procmux$13670_Y ),
    .S(\$procmux$13673_CMP ),
    .Y(\$procmux$13672_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13676  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$7179 ),
    .B(\$auto$builder.cc:338:Biop$7195 [1:0]),
    .S(\$procmux$13677_CMP ),
    .Y(\$procmux$13676_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13680  (
    .A(read_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$7193 ),
    .S(\$procmux$13681_CMP ),
    .Y(\$procmux$13680_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13686  (
    .A(1'hx),
    .B(\$procmux$13684_Y ),
    .S(\$procmux$13687_CMP ),
    .Y(\$procmux$13686_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13689  (
    .A(mem_q),
    .B(\$auto$rtlil.cc:2875:Bwmux$7167 ),
    .S(\$procmux$13690_CMP ),
    .Y(\$procmux$13689_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13692  (
    .A(status_cnt_q),
    .B(\$auto$builder.cc:338:Biop$7176 [1:0]),
    .S(\$procmux$13693_CMP ),
    .Y(\$procmux$13692_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13695  (
    .A(write_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$7174 ),
    .S(\$procmux$13696_CMP ),
    .Y(\$procmux$13695_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13698  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$13699_CMP ),
    .Y(\$procmux$13698_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$auto$builder.cc:338:Biop$7128 ;
  assign empty_o = \$auto$builder.cc:338:Biop$7136 ;
  assign data_o = \$auto$slang_frontend.cc:694:finish$\data_o$7216 ;
  assign gate_clock = \$auto$slang_frontend.cc:694:finish$\gate_clock$7177 ;
  assign read_pointer_n = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7217 ;
  assign write_pointer_n = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7218 ;
  assign status_cnt_n = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7219 ;
  assign mem_n = \$auto$slang_frontend.cc:694:finish$\mem_n$7180 ;
  assign \$procmux$13643_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7238 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_q$7239  = \$procmux$13642_Y ;
  assign \$procmux$13646_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7226 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_q$7229  = \$procmux$13645_Y ;
  assign \$procmux$13649_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7226 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_q$7228  = \$procmux$13648_Y ;
  assign \$procmux$13652_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7226 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_q$7227  = \$procmux$13651_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7219  = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7210 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7218  = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7178 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7217  = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7196 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_o$7216  = \$auto$rtlil.cc:2874:Mux$7147 ;
  assign \$procmux$13666_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7209 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7210  = \$procmux$13665_Y ;
  assign \$procmux$13671_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7190 ;
  assign \$procmux$13673_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7186 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7193  = \$procmux$13672_Y ;
  assign \$procmux$13677_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7186 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7197  = \$procmux$13676_Y ;
  assign \$procmux$13681_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7186 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7196  = \$procmux$13680_Y ;
  assign \$procmux$13685_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7171 ;
  assign \$procmux$13687_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7153 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7174  = \$procmux$13686_Y ;
  assign \$procmux$13690_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7153 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_n$7180  = \$procmux$13689_Y ;
  assign \$procmux$13693_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7153 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7179  = \$procmux$13692_Y ;
  assign \$procmux$13696_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7153 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7178  = \$procmux$13695_Y ;
  assign \$procmux$13699_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7153 ;
  assign \$auto$slang_frontend.cc:694:finish$\gate_clock$7177  = \$procmux$13698_Y ;
  assign \$auto$builder.cc:338:Biop$7132  = 1'h0;
  assign \$auto$builder.cc:364:Unop$7134  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7136  = \$auto$builder.cc:338:Biop$7130 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7139  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$7147  = \$auto$rtlil.cc:2874:Mux$7145 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7153  = \$auto$builder.cc:338:Biop$7151 ;
  assign \$auto$builder.cc:338:Biop$7169  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$7171  = \$auto$builder.cc:338:Biop$7169 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7186  = \$auto$builder.cc:338:Biop$7184 ;
  assign \$auto$builder.cc:338:Biop$7188  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$7190  = \$auto$builder.cc:338:Biop$7188 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7209  = \$auto$builder.cc:338:Biop$7207 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7212  = pop_i;
  assign \$auto$rtlil.cc:2747:LogicNot$7224  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7226  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$7234  = rst_ni;
  assign \$auto$builder.cc:364:Unop$7236  = \$auto$rtlil.cc:2746:ReduceBool$7153 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7238  = \$auto$builder.cc:338:Biop$7151 ;
  assign \$procmux$13684_Y  = \$auto$builder.cc:338:Biop$7173 [0];
  assign \$procmux$13670_Y  = \$auto$builder.cc:338:Biop$7192 [0];
endmodule

/* src = "../rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.gen_no_id_assign.i_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$auto$builder.cc:338:Biop$7401 ;
  wire \$auto$builder.cc:338:Biop$7403 ;
  wire \$auto$builder.cc:338:Biop$7405 ;
  wire \$auto$builder.cc:338:Biop$7409 ;
  wire \$auto$builder.cc:338:Biop$7424 ;
  wire \$auto$builder.cc:338:Biop$7442 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7446 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7449 ;
  wire \$auto$builder.cc:338:Biop$7457 ;
  wire \$auto$builder.cc:338:Biop$7461 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7465 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7468 ;
  wire \$auto$builder.cc:338:Biop$7472 ;
  wire \$auto$builder.cc:338:Biop$7476 ;
  wire \$auto$builder.cc:338:Biop$7480 ;
  wire \$auto$builder.cc:364:Unop$7407 ;
  wire \$auto$builder.cc:364:Unop$7422 ;
  wire \$auto$builder.cc:364:Unop$7455 ;
  wire \$auto$builder.cc:364:Unop$7474 ;
  wire \$auto$builder.cc:364:Unop$7478 ;
  wire \$auto$builder.cc:364:Unop$7509 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7412 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7426 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7444 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7459 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7463 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7482 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7485 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7499 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7511 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7495 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7497 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7505 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7507 ;
  wire \$auto$rtlil.cc:2791:Lt$7414 ;
  wire \$auto$rtlil.cc:2791:Lt$7428 ;
  wire \$auto$rtlil.cc:2797:Ge$7430 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$7432 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7418 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7420 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7434 ;
  wire [3:0] \$auto$rtlil.cc:2875:Bwmux$7440 ;
  wire [1:0] \$auto$rtlil.cc:2895:Bmux$7416 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$7436 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$7438 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_o$7489 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\gate_clock$7450 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\mem_n$7453 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\mem_q$7512 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7466 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7469 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7486 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7490 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_q$7500 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7452 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7470 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7483 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7488 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7492 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_q$7502 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7447 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7451 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7487 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7491 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_q$7501 ;
  wire [3:0] \$procmux$13575_Y ;
  wire \$procmux$13576_CMP ;
  wire [1:0] \$procmux$13578_Y ;
  wire \$procmux$13579_CMP ;
  wire \$procmux$13581_Y ;
  wire \$procmux$13582_CMP ;
  wire \$procmux$13584_Y ;
  wire \$procmux$13585_CMP ;
  wire [1:0] \$procmux$13598_Y ;
  wire \$procmux$13599_CMP ;
  wire \$procmux$13603_Y ;
  wire \$procmux$13604_CMP ;
  wire \$procmux$13605_Y ;
  wire \$procmux$13606_CMP ;
  wire [1:0] \$procmux$13609_Y ;
  wire \$procmux$13610_CMP ;
  wire \$procmux$13613_Y ;
  wire \$procmux$13614_CMP ;
  wire \$procmux$13617_Y ;
  wire \$procmux$13618_CMP ;
  wire \$procmux$13619_Y ;
  wire \$procmux$13620_CMP ;
  wire [3:0] \$procmux$13622_Y ;
  wire \$procmux$13623_CMP ;
  wire [1:0] \$procmux$13625_Y ;
  wire \$procmux$13626_CMP ;
  wire \$procmux$13628_Y ;
  wire \$procmux$13629_CMP ;
  wire \$procmux$13631_Y ;
  wire \$procmux$13632_CMP ;
  /* src = "../rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:32.19" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:35.19" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.29" */
  wire [3:0] mem_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.36" */
  wire [3:0] mem_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7494  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7495 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7504  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7505 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$builder.cc:112:Mux$7417  (
    .A(2'hx),
    .B(\$auto$rtlil.cc:2895:Bmux$7416 ),
    .S(\$auto$rtlil.cc:2791:Lt$7414 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7418 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$builder.cc:112:Mux$7433  (
    .A(2'h0),
    .B(2'h3),
    .S(\$auto$rtlil.cc:2806:LogicAnd$7432 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7434 )
  );
  \$bwmux  #(
    .WIDTH(32'd4)
  ) \$auto$builder.cc:128:Bwmux$7439  (
    .A(mem_q),
    .B({ data_i, data_i }),
    .S(\$auto$rtlil.cc:2896:Demux$7438 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$7440 )
  );
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:195:Bmux$7415  (
    .A(mem_q),
    .S(read_pointer_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$7416 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7400  (
    .A(status_cnt_q),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$7401 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7402  (
    .A(status_cnt_q),
    .Y(\$auto$builder.cc:338:Biop$7403 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7423  (
    .A(push_i),
    .B(\$auto$builder.cc:364:Unop$7422 ),
    .Y(\$auto$builder.cc:338:Biop$7424 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7445  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7446 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7448  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7449 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7456  (
    .A(pop_i),
    .B(\$auto$builder.cc:364:Unop$7455 ),
    .Y(\$auto$builder.cc:338:Biop$7457 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7464  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7465 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7467  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7468 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7471  (
    .A(push_i),
    .B(pop_i),
    .Y(\$auto$builder.cc:338:Biop$7472 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7475  (
    .A(\$auto$builder.cc:338:Biop$7472 ),
    .B(\$auto$builder.cc:364:Unop$7474 ),
    .Y(\$auto$builder.cc:338:Biop$7476 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7479  (
    .A(\$auto$builder.cc:338:Biop$7476 ),
    .B(\$auto$builder.cc:364:Unop$7478 ),
    .Y(\$auto$builder.cc:338:Biop$7480 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7421  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$7422 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7454  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$7455 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7473  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$7474 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7477  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$7478 )
  );
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:38:Demux$7435  (
    .A(\$auto$rtlil.cc:2874:Mux$7434 ),
    .S(write_pointer_q),
    .Y(\$auto$rtlil.cc:2896:Demux$7436 )
  );
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:38:Demux$7437  (
    .A(\$auto$rtlil.cc:2874:Mux$7434 ),
    .S(write_pointer_q),
    .Y(\$auto$rtlil.cc:2896:Demux$7438 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$7429  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$7430 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$7413  (
    .A({ 1'h0, read_pointer_q }),
    .B(3'h2),
    .Y(\$auto$rtlil.cc:2791:Lt$7414 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$7427  (
    .A({ 1'h0, write_pointer_q }),
    .B(3'h2),
    .Y(\$auto$rtlil.cc:2791:Lt$7428 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$7431  (
    .A(\$auto$rtlil.cc:2797:Ge$7430 ),
    .B(\$auto$rtlil.cc:2791:Lt$7428 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$7432 )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[0]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$7512 [1:0]),
    .Q(mem_q[1:0])
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[1]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$7512 [3:2]),
    .Q(mem_q[3:2])
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\read_pointer_q$7500 ),
    .Q(read_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\status_cnt_q$7502 ),
    .Q(status_cnt_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\write_pointer_q$7501 ),
    .Q(write_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:138.13-138.28|../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13575  (
    .A(mem_q),
    .B(\$auto$slang_frontend.cc:694:finish$\mem_n$7453 ),
    .S(\$procmux$13576_CMP ),
    .Y(\$procmux$13575_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13578  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$7492 ),
    .B(2'h0),
    .S(\$procmux$13579_CMP ),
    .Y(\$procmux$13578_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13581  (
    .A(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$7491 ),
    .B(1'h0),
    .S(\$procmux$13582_CMP ),
    .Y(\$procmux$13581_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13584  (
    .A(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$7490 ),
    .B(1'h0),
    .S(\$procmux$13585_CMP ),
    .Y(\$procmux$13584_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:102.13-102.43|../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13598  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$7470 ),
    .B(status_cnt_q),
    .S(\$procmux$13599_CMP ),
    .Y(\$procmux$13598_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13605  (
    .A(1'hx),
    .B(\$procmux$13603_Y ),
    .S(\$procmux$13606_CMP ),
    .Y(\$procmux$13605_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13609  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$7452 ),
    .B(\$auto$builder.cc:338:Biop$7468 [1:0]),
    .S(\$procmux$13610_CMP ),
    .Y(\$procmux$13609_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13613  (
    .A(read_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$7466 ),
    .S(\$procmux$13614_CMP ),
    .Y(\$procmux$13613_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13619  (
    .A(1'hx),
    .B(\$procmux$13617_Y ),
    .S(\$procmux$13620_CMP ),
    .Y(\$procmux$13619_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13622  (
    .A(mem_q),
    .B(\$auto$rtlil.cc:2875:Bwmux$7440 ),
    .S(\$procmux$13623_CMP ),
    .Y(\$procmux$13622_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13625  (
    .A(status_cnt_q),
    .B(\$auto$builder.cc:338:Biop$7449 [1:0]),
    .S(\$procmux$13626_CMP ),
    .Y(\$procmux$13625_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13628  (
    .A(write_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$7447 ),
    .S(\$procmux$13629_CMP ),
    .Y(\$procmux$13628_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13631  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$13632_CMP ),
    .Y(\$procmux$13631_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$auto$builder.cc:338:Biop$7401 ;
  assign empty_o = \$auto$builder.cc:338:Biop$7409 ;
  assign data_o = \$auto$slang_frontend.cc:694:finish$\data_o$7489 ;
  assign gate_clock = \$auto$slang_frontend.cc:694:finish$\gate_clock$7450 ;
  assign read_pointer_n = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7490 ;
  assign write_pointer_n = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7491 ;
  assign status_cnt_n = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7492 ;
  assign mem_n = \$auto$slang_frontend.cc:694:finish$\mem_n$7453 ;
  assign \$procmux$13576_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7511 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_q$7512  = \$procmux$13575_Y ;
  assign \$procmux$13579_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7499 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_q$7502  = \$procmux$13578_Y ;
  assign \$procmux$13582_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7499 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_q$7501  = \$procmux$13581_Y ;
  assign \$procmux$13585_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7499 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_q$7500  = \$procmux$13584_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7492  = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7483 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7491  = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7451 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7490  = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7469 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_o$7489  = \$auto$rtlil.cc:2874:Mux$7420 ;
  assign \$procmux$13599_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7482 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7483  = \$procmux$13598_Y ;
  assign \$procmux$13604_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7463 ;
  assign \$procmux$13606_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7459 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7466  = \$procmux$13605_Y ;
  assign \$procmux$13610_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7459 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7470  = \$procmux$13609_Y ;
  assign \$procmux$13614_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7459 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7469  = \$procmux$13613_Y ;
  assign \$procmux$13618_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7444 ;
  assign \$procmux$13620_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7426 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7447  = \$procmux$13619_Y ;
  assign \$procmux$13623_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7426 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_n$7453  = \$procmux$13622_Y ;
  assign \$procmux$13626_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7426 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7452  = \$procmux$13625_Y ;
  assign \$procmux$13629_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7426 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7451  = \$procmux$13628_Y ;
  assign \$procmux$13632_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7426 ;
  assign \$auto$slang_frontend.cc:694:finish$\gate_clock$7450  = \$procmux$13631_Y ;
  assign \$auto$builder.cc:338:Biop$7405  = 1'h0;
  assign \$auto$builder.cc:364:Unop$7407  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7409  = \$auto$builder.cc:338:Biop$7403 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7412  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$7420  = \$auto$rtlil.cc:2874:Mux$7418 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7426  = \$auto$builder.cc:338:Biop$7424 ;
  assign \$auto$builder.cc:338:Biop$7442  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$7444  = \$auto$builder.cc:338:Biop$7442 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7459  = \$auto$builder.cc:338:Biop$7457 ;
  assign \$auto$builder.cc:338:Biop$7461  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$7463  = \$auto$builder.cc:338:Biop$7461 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7482  = \$auto$builder.cc:338:Biop$7480 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7485  = pop_i;
  assign \$auto$rtlil.cc:2747:LogicNot$7497  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7499  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$7507  = rst_ni;
  assign \$auto$builder.cc:364:Unop$7509  = \$auto$rtlil.cc:2746:ReduceBool$7426 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7511  = \$auto$builder.cc:338:Biop$7424 ;
  assign \$procmux$13617_Y  = \$auto$builder.cc:338:Biop$7446 [0];
  assign \$procmux$13603_Y  = \$auto$builder.cc:338:Biop$7465 [0];
endmodule

/* src = "../rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.gen_no_id_assign.i_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$auto$builder.cc:338:Biop$7674 ;
  wire \$auto$builder.cc:338:Biop$7676 ;
  wire \$auto$builder.cc:338:Biop$7678 ;
  wire \$auto$builder.cc:338:Biop$7682 ;
  wire \$auto$builder.cc:338:Biop$7697 ;
  wire \$auto$builder.cc:338:Biop$7715 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7719 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7722 ;
  wire \$auto$builder.cc:338:Biop$7730 ;
  wire \$auto$builder.cc:338:Biop$7734 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7738 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7741 ;
  wire \$auto$builder.cc:338:Biop$7745 ;
  wire \$auto$builder.cc:338:Biop$7749 ;
  wire \$auto$builder.cc:338:Biop$7753 ;
  wire \$auto$builder.cc:364:Unop$7680 ;
  wire \$auto$builder.cc:364:Unop$7695 ;
  wire \$auto$builder.cc:364:Unop$7728 ;
  wire \$auto$builder.cc:364:Unop$7747 ;
  wire \$auto$builder.cc:364:Unop$7751 ;
  wire \$auto$builder.cc:364:Unop$7782 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7685 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7699 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7717 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7732 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7736 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7755 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7758 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7772 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7784 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7768 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7770 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7778 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7780 ;
  wire \$auto$rtlil.cc:2791:Lt$7687 ;
  wire \$auto$rtlil.cc:2791:Lt$7701 ;
  wire \$auto$rtlil.cc:2797:Ge$7703 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$7705 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7691 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7693 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7707 ;
  wire [3:0] \$auto$rtlil.cc:2875:Bwmux$7713 ;
  wire [1:0] \$auto$rtlil.cc:2895:Bmux$7689 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$7709 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$7711 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_o$7762 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\gate_clock$7723 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\mem_n$7726 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\mem_q$7785 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7739 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7742 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7759 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7763 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_q$7773 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7725 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7743 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7756 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7761 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7765 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_q$7775 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7720 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7724 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7760 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7764 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_q$7774 ;
  wire [3:0] \$procmux$13508_Y ;
  wire \$procmux$13509_CMP ;
  wire [1:0] \$procmux$13511_Y ;
  wire \$procmux$13512_CMP ;
  wire \$procmux$13514_Y ;
  wire \$procmux$13515_CMP ;
  wire \$procmux$13517_Y ;
  wire \$procmux$13518_CMP ;
  wire [1:0] \$procmux$13531_Y ;
  wire \$procmux$13532_CMP ;
  wire \$procmux$13536_Y ;
  wire \$procmux$13537_CMP ;
  wire \$procmux$13538_Y ;
  wire \$procmux$13539_CMP ;
  wire [1:0] \$procmux$13542_Y ;
  wire \$procmux$13543_CMP ;
  wire \$procmux$13546_Y ;
  wire \$procmux$13547_CMP ;
  wire \$procmux$13550_Y ;
  wire \$procmux$13551_CMP ;
  wire \$procmux$13552_Y ;
  wire \$procmux$13553_CMP ;
  wire [3:0] \$procmux$13555_Y ;
  wire \$procmux$13556_CMP ;
  wire [1:0] \$procmux$13558_Y ;
  wire \$procmux$13559_CMP ;
  wire \$procmux$13561_Y ;
  wire \$procmux$13562_CMP ;
  wire \$procmux$13564_Y ;
  wire \$procmux$13565_CMP ;
  /* src = "../rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:32.19" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:35.19" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.29" */
  wire [3:0] mem_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.36" */
  wire [3:0] mem_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7767  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7768 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7777  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7778 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$builder.cc:112:Mux$7690  (
    .A(2'hx),
    .B(\$auto$rtlil.cc:2895:Bmux$7689 ),
    .S(\$auto$rtlil.cc:2791:Lt$7687 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7691 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$builder.cc:112:Mux$7706  (
    .A(2'h0),
    .B(2'h3),
    .S(\$auto$rtlil.cc:2806:LogicAnd$7705 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7707 )
  );
  \$bwmux  #(
    .WIDTH(32'd4)
  ) \$auto$builder.cc:128:Bwmux$7712  (
    .A(mem_q),
    .B({ data_i, data_i }),
    .S(\$auto$rtlil.cc:2896:Demux$7711 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$7713 )
  );
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:195:Bmux$7688  (
    .A(mem_q),
    .S(read_pointer_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$7689 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7673  (
    .A(status_cnt_q),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$7674 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7675  (
    .A(status_cnt_q),
    .Y(\$auto$builder.cc:338:Biop$7676 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7696  (
    .A(push_i),
    .B(\$auto$builder.cc:364:Unop$7695 ),
    .Y(\$auto$builder.cc:338:Biop$7697 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7718  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7719 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7721  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7722 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7729  (
    .A(pop_i),
    .B(\$auto$builder.cc:364:Unop$7728 ),
    .Y(\$auto$builder.cc:338:Biop$7730 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7737  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7738 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7740  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7741 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7744  (
    .A(push_i),
    .B(pop_i),
    .Y(\$auto$builder.cc:338:Biop$7745 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7748  (
    .A(\$auto$builder.cc:338:Biop$7745 ),
    .B(\$auto$builder.cc:364:Unop$7747 ),
    .Y(\$auto$builder.cc:338:Biop$7749 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7752  (
    .A(\$auto$builder.cc:338:Biop$7749 ),
    .B(\$auto$builder.cc:364:Unop$7751 ),
    .Y(\$auto$builder.cc:338:Biop$7753 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7694  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$7695 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7727  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$7728 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7746  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$7747 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7750  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$7751 )
  );
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:38:Demux$7708  (
    .A(\$auto$rtlil.cc:2874:Mux$7707 ),
    .S(write_pointer_q),
    .Y(\$auto$rtlil.cc:2896:Demux$7709 )
  );
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:38:Demux$7710  (
    .A(\$auto$rtlil.cc:2874:Mux$7707 ),
    .S(write_pointer_q),
    .Y(\$auto$rtlil.cc:2896:Demux$7711 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$7702  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$7703 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$7686  (
    .A({ 1'h0, read_pointer_q }),
    .B(3'h2),
    .Y(\$auto$rtlil.cc:2791:Lt$7687 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$7700  (
    .A({ 1'h0, write_pointer_q }),
    .B(3'h2),
    .Y(\$auto$rtlil.cc:2791:Lt$7701 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$7704  (
    .A(\$auto$rtlil.cc:2797:Ge$7703 ),
    .B(\$auto$rtlil.cc:2791:Lt$7701 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$7705 )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[0]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$7785 [1:0]),
    .Q(mem_q[1:0])
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[1]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$7785 [3:2]),
    .Q(mem_q[3:2])
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\read_pointer_q$7773 ),
    .Q(read_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\status_cnt_q$7775 ),
    .Q(status_cnt_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\write_pointer_q$7774 ),
    .Q(write_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:138.13-138.28|../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13508  (
    .A(mem_q),
    .B(\$auto$slang_frontend.cc:694:finish$\mem_n$7726 ),
    .S(\$procmux$13509_CMP ),
    .Y(\$procmux$13508_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13511  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$7765 ),
    .B(2'h0),
    .S(\$procmux$13512_CMP ),
    .Y(\$procmux$13511_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13514  (
    .A(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$7764 ),
    .B(1'h0),
    .S(\$procmux$13515_CMP ),
    .Y(\$procmux$13514_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13517  (
    .A(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$7763 ),
    .B(1'h0),
    .S(\$procmux$13518_CMP ),
    .Y(\$procmux$13517_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:102.13-102.43|../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13531  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$7743 ),
    .B(status_cnt_q),
    .S(\$procmux$13532_CMP ),
    .Y(\$procmux$13531_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13538  (
    .A(1'hx),
    .B(\$procmux$13536_Y ),
    .S(\$procmux$13539_CMP ),
    .Y(\$procmux$13538_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13542  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$7725 ),
    .B(\$auto$builder.cc:338:Biop$7741 [1:0]),
    .S(\$procmux$13543_CMP ),
    .Y(\$procmux$13542_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13546  (
    .A(read_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$7739 ),
    .S(\$procmux$13547_CMP ),
    .Y(\$procmux$13546_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13552  (
    .A(1'hx),
    .B(\$procmux$13550_Y ),
    .S(\$procmux$13553_CMP ),
    .Y(\$procmux$13552_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13555  (
    .A(mem_q),
    .B(\$auto$rtlil.cc:2875:Bwmux$7713 ),
    .S(\$procmux$13556_CMP ),
    .Y(\$procmux$13555_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13558  (
    .A(status_cnt_q),
    .B(\$auto$builder.cc:338:Biop$7722 [1:0]),
    .S(\$procmux$13559_CMP ),
    .Y(\$procmux$13558_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13561  (
    .A(write_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$7720 ),
    .S(\$procmux$13562_CMP ),
    .Y(\$procmux$13561_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13564  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$13565_CMP ),
    .Y(\$procmux$13564_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$auto$builder.cc:338:Biop$7674 ;
  assign empty_o = \$auto$builder.cc:338:Biop$7682 ;
  assign data_o = \$auto$slang_frontend.cc:694:finish$\data_o$7762 ;
  assign gate_clock = \$auto$slang_frontend.cc:694:finish$\gate_clock$7723 ;
  assign read_pointer_n = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7763 ;
  assign write_pointer_n = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7764 ;
  assign status_cnt_n = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7765 ;
  assign mem_n = \$auto$slang_frontend.cc:694:finish$\mem_n$7726 ;
  assign \$procmux$13509_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7784 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_q$7785  = \$procmux$13508_Y ;
  assign \$procmux$13512_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7772 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_q$7775  = \$procmux$13511_Y ;
  assign \$procmux$13515_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7772 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_q$7774  = \$procmux$13514_Y ;
  assign \$procmux$13518_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7772 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_q$7773  = \$procmux$13517_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7765  = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7756 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7764  = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7724 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7763  = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7742 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_o$7762  = \$auto$rtlil.cc:2874:Mux$7693 ;
  assign \$procmux$13532_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7755 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7756  = \$procmux$13531_Y ;
  assign \$procmux$13537_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7736 ;
  assign \$procmux$13539_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7732 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7739  = \$procmux$13538_Y ;
  assign \$procmux$13543_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7732 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7743  = \$procmux$13542_Y ;
  assign \$procmux$13547_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7732 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$7742  = \$procmux$13546_Y ;
  assign \$procmux$13551_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7717 ;
  assign \$procmux$13553_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7699 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7720  = \$procmux$13552_Y ;
  assign \$procmux$13556_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7699 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_n$7726  = \$procmux$13555_Y ;
  assign \$procmux$13559_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7699 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7725  = \$procmux$13558_Y ;
  assign \$procmux$13562_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7699 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7724  = \$procmux$13561_Y ;
  assign \$procmux$13565_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7699 ;
  assign \$auto$slang_frontend.cc:694:finish$\gate_clock$7723  = \$procmux$13564_Y ;
  assign \$auto$builder.cc:338:Biop$7678  = 1'h0;
  assign \$auto$builder.cc:364:Unop$7680  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7682  = \$auto$builder.cc:338:Biop$7676 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7685  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$7693  = \$auto$rtlil.cc:2874:Mux$7691 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7699  = \$auto$builder.cc:338:Biop$7697 ;
  assign \$auto$builder.cc:338:Biop$7715  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$7717  = \$auto$builder.cc:338:Biop$7715 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7732  = \$auto$builder.cc:338:Biop$7730 ;
  assign \$auto$builder.cc:338:Biop$7734  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$7736  = \$auto$builder.cc:338:Biop$7734 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7755  = \$auto$builder.cc:338:Biop$7753 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7758  = pop_i;
  assign \$auto$rtlil.cc:2747:LogicNot$7770  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7772  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$7780  = rst_ni;
  assign \$auto$builder.cc:364:Unop$7782  = \$auto$rtlil.cc:2746:ReduceBool$7699 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7784  = \$auto$builder.cc:338:Biop$7697 ;
  assign \$procmux$13550_Y  = \$auto$builder.cc:338:Biop$7719 [0];
  assign \$procmux$13536_Y  = \$auto$builder.cc:338:Biop$7738 [0];
endmodule

/* src = "../rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.gen_no_id_assign.i_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$auto$builder.cc:338:Biop$7947 ;
  wire \$auto$builder.cc:338:Biop$7949 ;
  wire \$auto$builder.cc:338:Biop$7951 ;
  wire \$auto$builder.cc:338:Biop$7955 ;
  wire \$auto$builder.cc:338:Biop$7970 ;
  wire \$auto$builder.cc:338:Biop$7988 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7992 ;
  wire [31:0] \$auto$builder.cc:338:Biop$7995 ;
  wire \$auto$builder.cc:338:Biop$8003 ;
  wire \$auto$builder.cc:338:Biop$8007 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8011 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8014 ;
  wire \$auto$builder.cc:338:Biop$8018 ;
  wire \$auto$builder.cc:338:Biop$8022 ;
  wire \$auto$builder.cc:338:Biop$8026 ;
  wire \$auto$builder.cc:364:Unop$7953 ;
  wire \$auto$builder.cc:364:Unop$7968 ;
  wire \$auto$builder.cc:364:Unop$8001 ;
  wire \$auto$builder.cc:364:Unop$8020 ;
  wire \$auto$builder.cc:364:Unop$8024 ;
  wire \$auto$builder.cc:364:Unop$8055 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7958 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7972 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7990 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8005 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8009 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8028 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8031 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8045 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8057 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8041 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8043 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8051 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8053 ;
  wire \$auto$rtlil.cc:2791:Lt$7960 ;
  wire \$auto$rtlil.cc:2791:Lt$7974 ;
  wire \$auto$rtlil.cc:2797:Ge$7976 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$7978 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7964 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7966 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7980 ;
  wire [3:0] \$auto$rtlil.cc:2875:Bwmux$7986 ;
  wire [1:0] \$auto$rtlil.cc:2895:Bmux$7962 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$7982 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$7984 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\data_o$8035 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\gate_clock$7996 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\mem_n$7999 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\mem_q$8058 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$8012 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$8015 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$8032 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$8036 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_q$8046 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7998 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$8016 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$8029 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$8034 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$8038 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_q$8048 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7993 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7997 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$8033 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$8037 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_q$8047 ;
  wire [3:0] \$procmux$13441_Y ;
  wire \$procmux$13442_CMP ;
  wire [1:0] \$procmux$13444_Y ;
  wire \$procmux$13445_CMP ;
  wire \$procmux$13447_Y ;
  wire \$procmux$13448_CMP ;
  wire \$procmux$13450_Y ;
  wire \$procmux$13451_CMP ;
  wire [1:0] \$procmux$13464_Y ;
  wire \$procmux$13465_CMP ;
  wire \$procmux$13469_Y ;
  wire \$procmux$13470_CMP ;
  wire \$procmux$13471_Y ;
  wire \$procmux$13472_CMP ;
  wire [1:0] \$procmux$13475_Y ;
  wire \$procmux$13476_CMP ;
  wire \$procmux$13479_Y ;
  wire \$procmux$13480_CMP ;
  wire \$procmux$13483_Y ;
  wire \$procmux$13484_CMP ;
  wire \$procmux$13485_Y ;
  wire \$procmux$13486_CMP ;
  wire [3:0] \$procmux$13488_Y ;
  wire \$procmux$13489_CMP ;
  wire [1:0] \$procmux$13491_Y ;
  wire \$procmux$13492_CMP ;
  wire \$procmux$13494_Y ;
  wire \$procmux$13495_CMP ;
  wire \$procmux$13497_Y ;
  wire \$procmux$13498_CMP ;
  /* src = "../rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:32.19" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:35.19" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.29" */
  wire [3:0] mem_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.36" */
  wire [3:0] mem_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8040  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8041 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8050  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8051 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$builder.cc:112:Mux$7963  (
    .A(2'hx),
    .B(\$auto$rtlil.cc:2895:Bmux$7962 ),
    .S(\$auto$rtlil.cc:2791:Lt$7960 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7964 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$builder.cc:112:Mux$7979  (
    .A(2'h0),
    .B(2'h3),
    .S(\$auto$rtlil.cc:2806:LogicAnd$7978 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7980 )
  );
  \$bwmux  #(
    .WIDTH(32'd4)
  ) \$auto$builder.cc:128:Bwmux$7985  (
    .A(mem_q),
    .B({ data_i, data_i }),
    .S(\$auto$rtlil.cc:2896:Demux$7984 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$7986 )
  );
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:195:Bmux$7961  (
    .A(mem_q),
    .S(read_pointer_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$7962 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7946  (
    .A(status_cnt_q),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$7947 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7948  (
    .A(status_cnt_q),
    .Y(\$auto$builder.cc:338:Biop$7949 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7969  (
    .A(push_i),
    .B(\$auto$builder.cc:364:Unop$7968 ),
    .Y(\$auto$builder.cc:338:Biop$7970 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7991  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7992 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$7994  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$7995 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8002  (
    .A(pop_i),
    .B(\$auto$builder.cc:364:Unop$8001 ),
    .Y(\$auto$builder.cc:338:Biop$8003 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8010  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8011 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8013  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8014 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8017  (
    .A(push_i),
    .B(pop_i),
    .Y(\$auto$builder.cc:338:Biop$8018 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8021  (
    .A(\$auto$builder.cc:338:Biop$8018 ),
    .B(\$auto$builder.cc:364:Unop$8020 ),
    .Y(\$auto$builder.cc:338:Biop$8022 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8025  (
    .A(\$auto$builder.cc:338:Biop$8022 ),
    .B(\$auto$builder.cc:364:Unop$8024 ),
    .Y(\$auto$builder.cc:338:Biop$8026 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7967  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$7968 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$8000  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$8001 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$8019  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$8020 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$8023  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$8024 )
  );
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:38:Demux$7981  (
    .A(\$auto$rtlil.cc:2874:Mux$7980 ),
    .S(write_pointer_q),
    .Y(\$auto$rtlil.cc:2896:Demux$7982 )
  );
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$auto$builder.cc:38:Demux$7983  (
    .A(\$auto$rtlil.cc:2874:Mux$7980 ),
    .S(write_pointer_q),
    .Y(\$auto$rtlil.cc:2896:Demux$7984 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$7975  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$7976 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$7959  (
    .A({ 1'h0, read_pointer_q }),
    .B(3'h2),
    .Y(\$auto$rtlil.cc:2791:Lt$7960 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$7973  (
    .A({ 1'h0, write_pointer_q }),
    .B(3'h2),
    .Y(\$auto$rtlil.cc:2791:Lt$7974 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$7977  (
    .A(\$auto$rtlil.cc:2797:Ge$7976 ),
    .B(\$auto$rtlil.cc:2791:Lt$7974 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$7978 )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[0]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$8058 [1:0]),
    .Q(mem_q[1:0])
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[1]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$8058 [3:2]),
    .Q(mem_q[3:2])
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\read_pointer_q$8046 ),
    .Q(read_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\status_cnt_q$8048 ),
    .Q(status_cnt_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\write_pointer_q$8047 ),
    .Q(write_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:138.13-138.28|../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13441  (
    .A(mem_q),
    .B(\$auto$slang_frontend.cc:694:finish$\mem_n$7999 ),
    .S(\$procmux$13442_CMP ),
    .Y(\$procmux$13441_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13444  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$8038 ),
    .B(2'h0),
    .S(\$procmux$13445_CMP ),
    .Y(\$procmux$13444_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13447  (
    .A(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$8037 ),
    .B(1'h0),
    .S(\$procmux$13448_CMP ),
    .Y(\$procmux$13447_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13450  (
    .A(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$8036 ),
    .B(1'h0),
    .S(\$procmux$13451_CMP ),
    .Y(\$procmux$13450_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:102.13-102.43|../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13464  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$8016 ),
    .B(status_cnt_q),
    .S(\$procmux$13465_CMP ),
    .Y(\$procmux$13464_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13471  (
    .A(1'hx),
    .B(\$procmux$13469_Y ),
    .S(\$procmux$13472_CMP ),
    .Y(\$procmux$13471_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13475  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$7998 ),
    .B(\$auto$builder.cc:338:Biop$8014 [1:0]),
    .S(\$procmux$13476_CMP ),
    .Y(\$procmux$13475_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13479  (
    .A(read_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$8012 ),
    .S(\$procmux$13480_CMP ),
    .Y(\$procmux$13479_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13485  (
    .A(1'hx),
    .B(\$procmux$13483_Y ),
    .S(\$procmux$13486_CMP ),
    .Y(\$procmux$13485_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13488  (
    .A(mem_q),
    .B(\$auto$rtlil.cc:2875:Bwmux$7986 ),
    .S(\$procmux$13489_CMP ),
    .Y(\$procmux$13488_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13491  (
    .A(status_cnt_q),
    .B(\$auto$builder.cc:338:Biop$7995 [1:0]),
    .S(\$procmux$13492_CMP ),
    .Y(\$procmux$13491_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13494  (
    .A(write_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$7993 ),
    .S(\$procmux$13495_CMP ),
    .Y(\$procmux$13494_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13497  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$13498_CMP ),
    .Y(\$procmux$13497_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$auto$builder.cc:338:Biop$7947 ;
  assign empty_o = \$auto$builder.cc:338:Biop$7955 ;
  assign data_o = \$auto$slang_frontend.cc:694:finish$\data_o$8035 ;
  assign gate_clock = \$auto$slang_frontend.cc:694:finish$\gate_clock$7996 ;
  assign read_pointer_n = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$8036 ;
  assign write_pointer_n = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$8037 ;
  assign status_cnt_n = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$8038 ;
  assign mem_n = \$auto$slang_frontend.cc:694:finish$\mem_n$7999 ;
  assign \$procmux$13442_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8057 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_q$8058  = \$procmux$13441_Y ;
  assign \$procmux$13445_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8045 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_q$8048  = \$procmux$13444_Y ;
  assign \$procmux$13448_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8045 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_q$8047  = \$procmux$13447_Y ;
  assign \$procmux$13451_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8045 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_q$8046  = \$procmux$13450_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$8038  = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$8029 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$8037  = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7997 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$8036  = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$8015 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_o$8035  = \$auto$rtlil.cc:2874:Mux$7966 ;
  assign \$procmux$13465_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8028 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$8029  = \$procmux$13464_Y ;
  assign \$procmux$13470_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8009 ;
  assign \$procmux$13472_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8005 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$8012  = \$procmux$13471_Y ;
  assign \$procmux$13476_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8005 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$8016  = \$procmux$13475_Y ;
  assign \$procmux$13480_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8005 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$8015  = \$procmux$13479_Y ;
  assign \$procmux$13484_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7990 ;
  assign \$procmux$13486_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7972 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7993  = \$procmux$13485_Y ;
  assign \$procmux$13489_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7972 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_n$7999  = \$procmux$13488_Y ;
  assign \$procmux$13492_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7972 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$7998  = \$procmux$13491_Y ;
  assign \$procmux$13495_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7972 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$7997  = \$procmux$13494_Y ;
  assign \$procmux$13498_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7972 ;
  assign \$auto$slang_frontend.cc:694:finish$\gate_clock$7996  = \$procmux$13497_Y ;
  assign \$auto$builder.cc:338:Biop$7951  = 1'h0;
  assign \$auto$builder.cc:364:Unop$7953  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7955  = \$auto$builder.cc:338:Biop$7949 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7958  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$7966  = \$auto$rtlil.cc:2874:Mux$7964 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7972  = \$auto$builder.cc:338:Biop$7970 ;
  assign \$auto$builder.cc:338:Biop$7988  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$7990  = \$auto$builder.cc:338:Biop$7988 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8005  = \$auto$builder.cc:338:Biop$8003 ;
  assign \$auto$builder.cc:338:Biop$8007  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$8009  = \$auto$builder.cc:338:Biop$8007 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8028  = \$auto$builder.cc:338:Biop$8026 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8031  = pop_i;
  assign \$auto$rtlil.cc:2747:LogicNot$8043  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$8045  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$8053  = rst_ni;
  assign \$auto$builder.cc:364:Unop$8055  = \$auto$rtlil.cc:2746:ReduceBool$7972 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8057  = \$auto$builder.cc:338:Biop$7970 ;
  assign \$procmux$13483_Y  = \$auto$builder.cc:338:Biop$7992 [0];
  assign \$procmux$13469_Y  = \$auto$builder.cc:338:Biop$8011 [0];
endmodule

/* src = "../rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_periph_err.i_id_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$auto$builder.cc:338:Biop$4036 ;
  wire \$auto$builder.cc:338:Biop$4038 ;
  wire \$auto$builder.cc:338:Biop$4040 ;
  wire \$auto$builder.cc:338:Biop$4044 ;
  wire \$auto$builder.cc:338:Biop$4057 ;
  wire \$auto$builder.cc:338:Biop$4071 ;
  wire [31:0] \$auto$builder.cc:338:Biop$4075 ;
  wire [31:0] \$auto$builder.cc:338:Biop$4078 ;
  wire \$auto$builder.cc:338:Biop$4086 ;
  wire \$auto$builder.cc:338:Biop$4090 ;
  wire [31:0] \$auto$builder.cc:338:Biop$4094 ;
  wire [31:0] \$auto$builder.cc:338:Biop$4097 ;
  wire \$auto$builder.cc:338:Biop$4101 ;
  wire \$auto$builder.cc:338:Biop$4105 ;
  wire \$auto$builder.cc:338:Biop$4109 ;
  wire \$auto$builder.cc:364:Unop$4042 ;
  wire \$auto$builder.cc:364:Unop$4055 ;
  wire \$auto$builder.cc:364:Unop$4084 ;
  wire \$auto$builder.cc:364:Unop$4103 ;
  wire \$auto$builder.cc:364:Unop$4107 ;
  wire \$auto$builder.cc:364:Unop$4138 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4047 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4059 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4073 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4088 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4092 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4111 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4114 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4128 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4140 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4124 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4126 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4134 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4136 ;
  wire \$auto$rtlil.cc:2791:Lt$4049 ;
  wire \$auto$rtlil.cc:2791:Lt$4061 ;
  wire \$auto$rtlil.cc:2797:Ge$4063 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$4065 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$4051 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$4053 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$4067 ;
  wire [2:0] \$auto$rtlil.cc:2875:Bwmux$4069 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\data_o$4118 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\gate_clock$4079 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\mem_n$4082 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\mem_q$4141 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$4095 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$4098 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$4115 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$4119 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_q$4129 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$4081 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$4099 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$4112 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$4117 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$4121 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_q$4131 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$4076 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$4080 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$4116 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$4120 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_q$4130 ;
  wire [2:0] \$procmux$14789_Y ;
  wire \$procmux$14790_CMP ;
  wire [1:0] \$procmux$14792_Y ;
  wire \$procmux$14793_CMP ;
  wire \$procmux$14795_Y ;
  wire \$procmux$14796_CMP ;
  wire \$procmux$14798_Y ;
  wire \$procmux$14799_CMP ;
  wire [1:0] \$procmux$14812_Y ;
  wire \$procmux$14813_CMP ;
  wire \$procmux$14817_Y ;
  wire \$procmux$14818_CMP ;
  wire \$procmux$14819_Y ;
  wire \$procmux$14820_CMP ;
  wire [1:0] \$procmux$14823_Y ;
  wire \$procmux$14824_CMP ;
  wire \$procmux$14827_Y ;
  wire \$procmux$14828_CMP ;
  wire \$procmux$14831_Y ;
  wire \$procmux$14832_CMP ;
  wire \$procmux$14833_Y ;
  wire \$procmux$14834_CMP ;
  wire [2:0] \$procmux$14836_Y ;
  wire \$procmux$14837_CMP ;
  wire [1:0] \$procmux$14839_Y ;
  wire \$procmux$14840_CMP ;
  wire \$procmux$14842_Y ;
  wire \$procmux$14843_CMP ;
  wire \$procmux$14845_Y ;
  wire \$procmux$14846_CMP ;
  /* src = "../rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:32.19" */
  input [2:0] data_i;
  wire [2:0] data_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:35.19" */
  output [2:0] data_o;
  wire [2:0] data_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.29" */
  wire [2:0] mem_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.36" */
  wire [2:0] mem_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4123  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4124 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4133  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4134 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$builder.cc:112:Mux$4050  (
    .A(3'hx),
    .B(mem_q),
    .S(\$auto$rtlil.cc:2791:Lt$4049 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4051 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$builder.cc:112:Mux$4066  (
    .A(3'h0),
    .B(3'h7),
    .S(\$auto$rtlil.cc:2806:LogicAnd$4065 ),
    .Y(\$auto$rtlil.cc:2874:Mux$4067 )
  );
  \$bwmux  #(
    .WIDTH(32'd3)
  ) \$auto$builder.cc:128:Bwmux$4068  (
    .A(mem_q),
    .B(data_i),
    .S(\$auto$rtlil.cc:2874:Mux$4067 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$4069 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4035  (
    .A(status_cnt_q),
    .B(2'h1),
    .Y(\$auto$builder.cc:338:Biop$4036 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4037  (
    .A(status_cnt_q),
    .Y(\$auto$builder.cc:338:Biop$4038 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4056  (
    .A(push_i),
    .B(\$auto$builder.cc:364:Unop$4055 ),
    .Y(\$auto$builder.cc:338:Biop$4057 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4070  (
    .A(write_pointer_q),
    .Y(\$auto$builder.cc:338:Biop$4071 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$4074  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$4075 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$4077  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$4078 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4085  (
    .A(pop_i),
    .B(\$auto$builder.cc:364:Unop$4084 ),
    .Y(\$auto$builder.cc:338:Biop$4086 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4089  (
    .A(read_pointer_q),
    .Y(\$auto$builder.cc:338:Biop$4090 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$4093  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$4094 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$4096  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$4097 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4100  (
    .A(push_i),
    .B(pop_i),
    .Y(\$auto$builder.cc:338:Biop$4101 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4104  (
    .A(\$auto$builder.cc:338:Biop$4101 ),
    .B(\$auto$builder.cc:364:Unop$4103 ),
    .Y(\$auto$builder.cc:338:Biop$4105 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$4108  (
    .A(\$auto$builder.cc:338:Biop$4105 ),
    .B(\$auto$builder.cc:364:Unop$4107 ),
    .Y(\$auto$builder.cc:338:Biop$4109 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$4054  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$4055 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$4083  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$4084 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$4102  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$4103 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$4106  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$4107 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$4062  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$4063 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$4048  (
    .A({ 1'h0, read_pointer_q }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$4049 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$4060  (
    .A({ 1'h0, write_pointer_q }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$4061 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$4064  (
    .A(\$auto$rtlil.cc:2797:Ge$4063 ),
    .B(\$auto$rtlil.cc:2791:Lt$4061 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$4065 )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$mem_q[0]  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$4141 ),
    .Q(mem_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\read_pointer_q$4129 ),
    .Q(read_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\status_cnt_q$4131 ),
    .Q(status_cnt_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\write_pointer_q$4130 ),
    .Q(write_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:138.13-138.28|../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14789  (
    .A(mem_q),
    .B(\$auto$slang_frontend.cc:694:finish$\mem_n$4082 ),
    .S(\$procmux$14790_CMP ),
    .Y(\$procmux$14789_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14792  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$4121 ),
    .B(2'h0),
    .S(\$procmux$14793_CMP ),
    .Y(\$procmux$14792_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14795  (
    .A(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$4120 ),
    .B(1'h0),
    .S(\$procmux$14796_CMP ),
    .Y(\$procmux$14795_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14798  (
    .A(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$4119 ),
    .B(1'h0),
    .S(\$procmux$14799_CMP ),
    .Y(\$procmux$14798_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:102.13-102.43|../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14812  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$4099 ),
    .B(status_cnt_q),
    .S(\$procmux$14813_CMP ),
    .Y(\$procmux$14812_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:93.17-93.37|../rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14817  (
    .A(1'h0),
    .B(\$auto$builder.cc:338:Biop$4094 [0]),
    .S(read_pointer_q),
    .Y(\$procmux$14817_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14819  (
    .A(1'hx),
    .B(\$procmux$14817_Y ),
    .S(\$procmux$14820_CMP ),
    .Y(\$procmux$14819_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14823  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$4081 ),
    .B(\$auto$builder.cc:338:Biop$4097 [1:0]),
    .S(\$procmux$14824_CMP ),
    .Y(\$procmux$14823_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14827  (
    .A(read_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$4095 ),
    .S(\$procmux$14828_CMP ),
    .Y(\$procmux$14827_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:81.17-81.38|../rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14831  (
    .A(1'h0),
    .B(\$auto$builder.cc:338:Biop$4075 [0]),
    .S(write_pointer_q),
    .Y(\$procmux$14831_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14833  (
    .A(1'hx),
    .B(\$procmux$14831_Y ),
    .S(\$procmux$14834_CMP ),
    .Y(\$procmux$14833_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14836  (
    .A(mem_q),
    .B(\$auto$rtlil.cc:2875:Bwmux$4069 ),
    .S(\$procmux$14837_CMP ),
    .Y(\$procmux$14836_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14839  (
    .A(status_cnt_q),
    .B(\$auto$builder.cc:338:Biop$4078 [1:0]),
    .S(\$procmux$14840_CMP ),
    .Y(\$procmux$14839_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14842  (
    .A(write_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$4076 ),
    .S(\$procmux$14843_CMP ),
    .Y(\$procmux$14842_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14845  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$14846_CMP ),
    .Y(\$procmux$14845_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$auto$builder.cc:338:Biop$4036 ;
  assign empty_o = \$auto$builder.cc:338:Biop$4044 ;
  assign data_o = \$auto$slang_frontend.cc:694:finish$\data_o$4118 ;
  assign gate_clock = \$auto$slang_frontend.cc:694:finish$\gate_clock$4079 ;
  assign read_pointer_n = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$4119 ;
  assign write_pointer_n = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$4120 ;
  assign status_cnt_n = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$4121 ;
  assign mem_n = \$auto$slang_frontend.cc:694:finish$\mem_n$4082 ;
  assign \$procmux$14790_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4140 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_q$4141  = \$procmux$14789_Y ;
  assign \$procmux$14793_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4128 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_q$4131  = \$procmux$14792_Y ;
  assign \$procmux$14796_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4128 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_q$4130  = \$procmux$14795_Y ;
  assign \$procmux$14799_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4128 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_q$4129  = \$procmux$14798_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$4121  = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$4112 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$4120  = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$4080 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$4119  = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$4098 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_o$4118  = \$auto$rtlil.cc:2874:Mux$4053 ;
  assign \$procmux$14813_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4111 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$4112  = \$procmux$14812_Y ;
  assign \$procmux$14818_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4092 ;
  assign \$procmux$14820_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4088 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$4095  = \$procmux$14819_Y ;
  assign \$procmux$14824_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4088 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$4099  = \$procmux$14823_Y ;
  assign \$procmux$14828_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4088 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$4098  = \$procmux$14827_Y ;
  assign \$procmux$14832_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4073 ;
  assign \$procmux$14834_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4059 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$4076  = \$procmux$14833_Y ;
  assign \$procmux$14837_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4059 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_n$4082  = \$procmux$14836_Y ;
  assign \$procmux$14840_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4059 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$4081  = \$procmux$14839_Y ;
  assign \$procmux$14843_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4059 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$4080  = \$procmux$14842_Y ;
  assign \$procmux$14846_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4059 ;
  assign \$auto$slang_frontend.cc:694:finish$\gate_clock$4079  = \$procmux$14845_Y ;
  assign \$auto$builder.cc:338:Biop$4040  = 1'h0;
  assign \$auto$builder.cc:364:Unop$4042  = 1'h1;
  assign \$auto$builder.cc:338:Biop$4044  = \$auto$builder.cc:338:Biop$4038 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4047  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$4053  = \$auto$rtlil.cc:2874:Mux$4051 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4059  = \$auto$builder.cc:338:Biop$4057 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4073  = \$auto$builder.cc:338:Biop$4071 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4088  = \$auto$builder.cc:338:Biop$4086 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4092  = \$auto$builder.cc:338:Biop$4090 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4111  = \$auto$builder.cc:338:Biop$4109 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4114  = pop_i;
  assign \$auto$rtlil.cc:2747:LogicNot$4126  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$4128  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$4136  = rst_ni;
  assign \$auto$builder.cc:364:Unop$4138  = \$auto$rtlil.cc:2746:ReduceBool$4059 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4140  = \$auto$builder.cc:338:Biop$4057 ;
endmodule

/* src = "../rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_xbar_err.i_id_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$auto$builder.cc:338:Biop$3751 ;
  wire \$auto$builder.cc:338:Biop$3753 ;
  wire \$auto$builder.cc:338:Biop$3755 ;
  wire \$auto$builder.cc:338:Biop$3759 ;
  wire \$auto$builder.cc:338:Biop$3772 ;
  wire \$auto$builder.cc:338:Biop$3786 ;
  wire [31:0] \$auto$builder.cc:338:Biop$3790 ;
  wire [31:0] \$auto$builder.cc:338:Biop$3793 ;
  wire \$auto$builder.cc:338:Biop$3801 ;
  wire \$auto$builder.cc:338:Biop$3805 ;
  wire [31:0] \$auto$builder.cc:338:Biop$3809 ;
  wire [31:0] \$auto$builder.cc:338:Biop$3812 ;
  wire \$auto$builder.cc:338:Biop$3816 ;
  wire \$auto$builder.cc:338:Biop$3820 ;
  wire \$auto$builder.cc:338:Biop$3824 ;
  wire \$auto$builder.cc:364:Unop$3757 ;
  wire \$auto$builder.cc:364:Unop$3770 ;
  wire \$auto$builder.cc:364:Unop$3799 ;
  wire \$auto$builder.cc:364:Unop$3818 ;
  wire \$auto$builder.cc:364:Unop$3822 ;
  wire \$auto$builder.cc:364:Unop$3853 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3762 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3774 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3788 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3803 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3807 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3826 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3829 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3843 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3855 ;
  wire \$auto$rtlil.cc:2747:LogicNot$3839 ;
  wire \$auto$rtlil.cc:2747:LogicNot$3841 ;
  wire \$auto$rtlil.cc:2747:LogicNot$3849 ;
  wire \$auto$rtlil.cc:2747:LogicNot$3851 ;
  wire \$auto$rtlil.cc:2791:Lt$3764 ;
  wire \$auto$rtlil.cc:2791:Lt$3776 ;
  wire \$auto$rtlil.cc:2797:Ge$3778 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3780 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$3766 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$3768 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$3782 ;
  wire [2:0] \$auto$rtlil.cc:2875:Bwmux$3784 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\data_o$3833 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\gate_clock$3794 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\mem_n$3797 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\mem_q$3856 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$3810 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$3813 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$3830 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$3834 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_q$3844 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$3796 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$3814 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$3827 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$3832 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$3836 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_q$3846 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$3791 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$3795 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$3831 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$3835 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_q$3845 ;
  wire [2:0] \$procmux$14958_Y ;
  wire \$procmux$14959_CMP ;
  wire [1:0] \$procmux$14961_Y ;
  wire \$procmux$14962_CMP ;
  wire \$procmux$14964_Y ;
  wire \$procmux$14965_CMP ;
  wire \$procmux$14967_Y ;
  wire \$procmux$14968_CMP ;
  wire [1:0] \$procmux$14981_Y ;
  wire \$procmux$14982_CMP ;
  wire \$procmux$14986_Y ;
  wire \$procmux$14987_CMP ;
  wire \$procmux$14988_Y ;
  wire \$procmux$14989_CMP ;
  wire [1:0] \$procmux$14992_Y ;
  wire \$procmux$14993_CMP ;
  wire \$procmux$14996_Y ;
  wire \$procmux$14997_CMP ;
  wire \$procmux$15000_Y ;
  wire \$procmux$15001_CMP ;
  wire \$procmux$15002_Y ;
  wire \$procmux$15003_CMP ;
  wire [2:0] \$procmux$15005_Y ;
  wire \$procmux$15006_CMP ;
  wire [1:0] \$procmux$15008_Y ;
  wire \$procmux$15009_CMP ;
  wire \$procmux$15011_Y ;
  wire \$procmux$15012_CMP ;
  wire \$procmux$15014_Y ;
  wire \$procmux$15015_CMP ;
  /* src = "../rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:32.19" */
  input [2:0] data_i;
  wire [2:0] data_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:35.19" */
  output [2:0] data_o;
  wire [2:0] data_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.29" */
  wire [2:0] mem_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.36" */
  wire [2:0] mem_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$3838  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$3839 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$3848  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$3849 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$builder.cc:112:Mux$3765  (
    .A(3'hx),
    .B(mem_q),
    .S(\$auto$rtlil.cc:2791:Lt$3764 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3766 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$builder.cc:112:Mux$3781  (
    .A(3'h0),
    .B(3'h7),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3780 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3782 )
  );
  \$bwmux  #(
    .WIDTH(32'd3)
  ) \$auto$builder.cc:128:Bwmux$3783  (
    .A(mem_q),
    .B(data_i),
    .S(\$auto$rtlil.cc:2874:Mux$3782 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3784 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3750  (
    .A(status_cnt_q),
    .B(2'h1),
    .Y(\$auto$builder.cc:338:Biop$3751 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3752  (
    .A(status_cnt_q),
    .Y(\$auto$builder.cc:338:Biop$3753 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3771  (
    .A(push_i),
    .B(\$auto$builder.cc:364:Unop$3770 ),
    .Y(\$auto$builder.cc:338:Biop$3772 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3785  (
    .A(write_pointer_q),
    .Y(\$auto$builder.cc:338:Biop$3786 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$3789  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$3790 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$3792  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$3793 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3800  (
    .A(pop_i),
    .B(\$auto$builder.cc:364:Unop$3799 ),
    .Y(\$auto$builder.cc:338:Biop$3801 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3804  (
    .A(read_pointer_q),
    .Y(\$auto$builder.cc:338:Biop$3805 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$3808  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$3809 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$3811  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$3812 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3815  (
    .A(push_i),
    .B(pop_i),
    .Y(\$auto$builder.cc:338:Biop$3816 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3819  (
    .A(\$auto$builder.cc:338:Biop$3816 ),
    .B(\$auto$builder.cc:364:Unop$3818 ),
    .Y(\$auto$builder.cc:338:Biop$3820 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3823  (
    .A(\$auto$builder.cc:338:Biop$3820 ),
    .B(\$auto$builder.cc:364:Unop$3822 ),
    .Y(\$auto$builder.cc:338:Biop$3824 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3769  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$3770 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3798  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$3799 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3817  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$3818 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3821  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$3822 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3777  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3778 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3763  (
    .A({ 1'h0, read_pointer_q }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$3764 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3775  (
    .A({ 1'h0, write_pointer_q }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$3776 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3779  (
    .A(\$auto$rtlil.cc:2797:Ge$3778 ),
    .B(\$auto$rtlil.cc:2791:Lt$3776 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3780 )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$mem_q[0]  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$3856 ),
    .Q(mem_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\read_pointer_q$3844 ),
    .Q(read_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\status_cnt_q$3846 ),
    .Q(status_cnt_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\write_pointer_q$3845 ),
    .Q(write_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:138.13-138.28|../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14958  (
    .A(mem_q),
    .B(\$auto$slang_frontend.cc:694:finish$\mem_n$3797 ),
    .S(\$procmux$14959_CMP ),
    .Y(\$procmux$14958_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14961  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$3836 ),
    .B(2'h0),
    .S(\$procmux$14962_CMP ),
    .Y(\$procmux$14961_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14964  (
    .A(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$3835 ),
    .B(1'h0),
    .S(\$procmux$14965_CMP ),
    .Y(\$procmux$14964_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14967  (
    .A(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$3834 ),
    .B(1'h0),
    .S(\$procmux$14968_CMP ),
    .Y(\$procmux$14967_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:102.13-102.43|../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14981  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$3814 ),
    .B(status_cnt_q),
    .S(\$procmux$14982_CMP ),
    .Y(\$procmux$14981_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:93.17-93.37|../rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14986  (
    .A(1'h0),
    .B(\$auto$builder.cc:338:Biop$3809 [0]),
    .S(read_pointer_q),
    .Y(\$procmux$14986_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14988  (
    .A(1'hx),
    .B(\$procmux$14986_Y ),
    .S(\$procmux$14989_CMP ),
    .Y(\$procmux$14988_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14992  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$3796 ),
    .B(\$auto$builder.cc:338:Biop$3812 [1:0]),
    .S(\$procmux$14993_CMP ),
    .Y(\$procmux$14992_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14996  (
    .A(read_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$3810 ),
    .S(\$procmux$14997_CMP ),
    .Y(\$procmux$14996_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:81.17-81.38|../rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15000  (
    .A(1'h0),
    .B(\$auto$builder.cc:338:Biop$3790 [0]),
    .S(write_pointer_q),
    .Y(\$procmux$15000_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15002  (
    .A(1'hx),
    .B(\$procmux$15000_Y ),
    .S(\$procmux$15003_CMP ),
    .Y(\$procmux$15002_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$15005  (
    .A(mem_q),
    .B(\$auto$rtlil.cc:2875:Bwmux$3784 ),
    .S(\$procmux$15006_CMP ),
    .Y(\$procmux$15005_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15008  (
    .A(status_cnt_q),
    .B(\$auto$builder.cc:338:Biop$3793 [1:0]),
    .S(\$procmux$15009_CMP ),
    .Y(\$procmux$15008_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15011  (
    .A(write_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$3791 ),
    .S(\$procmux$15012_CMP ),
    .Y(\$procmux$15011_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15014  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$15015_CMP ),
    .Y(\$procmux$15014_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$auto$builder.cc:338:Biop$3751 ;
  assign empty_o = \$auto$builder.cc:338:Biop$3759 ;
  assign data_o = \$auto$slang_frontend.cc:694:finish$\data_o$3833 ;
  assign gate_clock = \$auto$slang_frontend.cc:694:finish$\gate_clock$3794 ;
  assign read_pointer_n = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$3834 ;
  assign write_pointer_n = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$3835 ;
  assign status_cnt_n = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$3836 ;
  assign mem_n = \$auto$slang_frontend.cc:694:finish$\mem_n$3797 ;
  assign \$procmux$14959_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3855 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_q$3856  = \$procmux$14958_Y ;
  assign \$procmux$14962_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3843 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_q$3846  = \$procmux$14961_Y ;
  assign \$procmux$14965_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3843 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_q$3845  = \$procmux$14964_Y ;
  assign \$procmux$14968_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3843 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_q$3844  = \$procmux$14967_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$3836  = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$3827 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$3835  = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$3795 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$3834  = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$3813 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_o$3833  = \$auto$rtlil.cc:2874:Mux$3768 ;
  assign \$procmux$14982_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3826 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$3827  = \$procmux$14981_Y ;
  assign \$procmux$14987_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3807 ;
  assign \$procmux$14989_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3803 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$3810  = \$procmux$14988_Y ;
  assign \$procmux$14993_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3803 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$3814  = \$procmux$14992_Y ;
  assign \$procmux$14997_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3803 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$3813  = \$procmux$14996_Y ;
  assign \$procmux$15001_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3788 ;
  assign \$procmux$15003_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3774 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$3791  = \$procmux$15002_Y ;
  assign \$procmux$15006_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3774 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_n$3797  = \$procmux$15005_Y ;
  assign \$procmux$15009_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3774 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$3796  = \$procmux$15008_Y ;
  assign \$procmux$15012_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3774 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$3795  = \$procmux$15011_Y ;
  assign \$procmux$15015_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3774 ;
  assign \$auto$slang_frontend.cc:694:finish$\gate_clock$3794  = \$procmux$15014_Y ;
  assign \$auto$builder.cc:338:Biop$3755  = 1'h0;
  assign \$auto$builder.cc:364:Unop$3757  = 1'h1;
  assign \$auto$builder.cc:338:Biop$3759  = \$auto$builder.cc:338:Biop$3753 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3762  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$3768  = \$auto$rtlil.cc:2874:Mux$3766 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3774  = \$auto$builder.cc:338:Biop$3772 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3788  = \$auto$builder.cc:338:Biop$3786 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3803  = \$auto$builder.cc:338:Biop$3801 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3807  = \$auto$builder.cc:338:Biop$3805 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3826  = \$auto$builder.cc:338:Biop$3824 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3829  = pop_i;
  assign \$auto$rtlil.cc:2747:LogicNot$3841  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$3843  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$3851  = rst_ni;
  assign \$auto$builder.cc:364:Unop$3853  = \$auto$rtlil.cc:2746:ReduceBool$3774 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3855  = \$auto$builder.cc:338:Biop$3772 ;
endmodule

/* src = "../rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_user.i_user_err.i_id_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$auto$builder.cc:338:Biop$5940 ;
  wire \$auto$builder.cc:338:Biop$5942 ;
  wire \$auto$builder.cc:338:Biop$5944 ;
  wire \$auto$builder.cc:338:Biop$5948 ;
  wire \$auto$builder.cc:338:Biop$5961 ;
  wire \$auto$builder.cc:338:Biop$5975 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5979 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5982 ;
  wire \$auto$builder.cc:338:Biop$5990 ;
  wire \$auto$builder.cc:338:Biop$5994 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5998 ;
  wire [31:0] \$auto$builder.cc:338:Biop$6001 ;
  wire \$auto$builder.cc:338:Biop$6005 ;
  wire \$auto$builder.cc:338:Biop$6009 ;
  wire \$auto$builder.cc:338:Biop$6013 ;
  wire \$auto$builder.cc:364:Unop$5946 ;
  wire \$auto$builder.cc:364:Unop$5959 ;
  wire \$auto$builder.cc:364:Unop$5988 ;
  wire \$auto$builder.cc:364:Unop$6007 ;
  wire \$auto$builder.cc:364:Unop$6011 ;
  wire \$auto$builder.cc:364:Unop$6042 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5951 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5963 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5977 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5992 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5996 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6015 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6018 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6032 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6044 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6028 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6030 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6038 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6040 ;
  wire \$auto$rtlil.cc:2791:Lt$5953 ;
  wire \$auto$rtlil.cc:2791:Lt$5965 ;
  wire \$auto$rtlil.cc:2797:Ge$5967 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$5969 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$5955 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$5957 ;
  wire [2:0] \$auto$rtlil.cc:2874:Mux$5971 ;
  wire [2:0] \$auto$rtlil.cc:2875:Bwmux$5973 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\data_o$6022 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\gate_clock$5983 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\mem_n$5986 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\mem_q$6045 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$5999 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6002 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6019 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6023 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\read_pointer_q$6033 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$5985 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6003 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6016 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6021 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6025 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\status_cnt_q$6035 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$5980 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$5984 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:107.13-111.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6020 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:105.9-112.12" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6024 ;
  /* src = "../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$auto$slang_frontend.cc:694:finish$\write_pointer_q$6034 ;
  wire [2:0] \$procmux$14124_Y ;
  wire \$procmux$14125_CMP ;
  wire [1:0] \$procmux$14127_Y ;
  wire \$procmux$14128_CMP ;
  wire \$procmux$14130_Y ;
  wire \$procmux$14131_CMP ;
  wire \$procmux$14133_Y ;
  wire \$procmux$14134_CMP ;
  wire [1:0] \$procmux$14147_Y ;
  wire \$procmux$14148_CMP ;
  wire \$procmux$14152_Y ;
  wire \$procmux$14153_CMP ;
  wire \$procmux$14154_Y ;
  wire \$procmux$14155_CMP ;
  wire [1:0] \$procmux$14158_Y ;
  wire \$procmux$14159_CMP ;
  wire \$procmux$14162_Y ;
  wire \$procmux$14163_CMP ;
  wire \$procmux$14166_Y ;
  wire \$procmux$14167_CMP ;
  wire \$procmux$14168_Y ;
  wire \$procmux$14169_CMP ;
  wire [2:0] \$procmux$14171_Y ;
  wire \$procmux$14172_CMP ;
  wire [1:0] \$procmux$14174_Y ;
  wire \$procmux$14175_CMP ;
  wire \$procmux$14177_Y ;
  wire \$procmux$14178_CMP ;
  wire \$procmux$14180_Y ;
  wire \$procmux$14181_CMP ;
  /* src = "../rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:32.19" */
  input [2:0] data_i;
  wire [2:0] data_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:35.19" */
  output [2:0] data_o;
  wire [2:0] data_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.29" */
  wire [2:0] mem_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:49.36" */
  wire [2:0] mem_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "../rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "../rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6027  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6028 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6037  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6038 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$builder.cc:112:Mux$5954  (
    .A(3'hx),
    .B(mem_q),
    .S(\$auto$rtlil.cc:2791:Lt$5953 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5955 )
  );
  \$mux  #(
    .WIDTH(32'd3)
  ) \$auto$builder.cc:112:Mux$5970  (
    .A(3'h0),
    .B(3'h7),
    .S(\$auto$rtlil.cc:2806:LogicAnd$5969 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5971 )
  );
  \$bwmux  #(
    .WIDTH(32'd3)
  ) \$auto$builder.cc:128:Bwmux$5972  (
    .A(mem_q),
    .B(data_i),
    .S(\$auto$rtlil.cc:2874:Mux$5971 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$5973 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5939  (
    .A(status_cnt_q),
    .B(2'h1),
    .Y(\$auto$builder.cc:338:Biop$5940 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5941  (
    .A(status_cnt_q),
    .Y(\$auto$builder.cc:338:Biop$5942 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5960  (
    .A(push_i),
    .B(\$auto$builder.cc:364:Unop$5959 ),
    .Y(\$auto$builder.cc:338:Biop$5961 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5974  (
    .A(write_pointer_q),
    .Y(\$auto$builder.cc:338:Biop$5975 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5978  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$5979 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5981  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$5982 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5989  (
    .A(pop_i),
    .B(\$auto$builder.cc:364:Unop$5988 ),
    .Y(\$auto$builder.cc:338:Biop$5990 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5993  (
    .A(read_pointer_q),
    .Y(\$auto$builder.cc:338:Biop$5994 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5997  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$5998 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$6000  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$6001 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6004  (
    .A(push_i),
    .B(pop_i),
    .Y(\$auto$builder.cc:338:Biop$6005 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6008  (
    .A(\$auto$builder.cc:338:Biop$6005 ),
    .B(\$auto$builder.cc:364:Unop$6007 ),
    .Y(\$auto$builder.cc:338:Biop$6009 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6012  (
    .A(\$auto$builder.cc:338:Biop$6009 ),
    .B(\$auto$builder.cc:364:Unop$6011 ),
    .Y(\$auto$builder.cc:338:Biop$6013 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$5958  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$5959 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$5987  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$5988 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6006  (
    .A(full_o),
    .Y(\$auto$builder.cc:364:Unop$6007 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6010  (
    .A(empty_o),
    .Y(\$auto$builder.cc:364:Unop$6011 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$5966  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$5967 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$5952  (
    .A({ 1'h0, read_pointer_q }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$5953 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$5964  (
    .A({ 1'h0, write_pointer_q }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$5965 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$5968  (
    .A(\$auto$rtlil.cc:2797:Ge$5967 ),
    .B(\$auto$rtlil.cc:2791:Lt$5965 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$5969 )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$mem_q[0]  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\mem_q$6045 ),
    .Q(mem_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\read_pointer_q$6033 ),
    .Q(read_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\status_cnt_q$6035 ),
    .Q(status_cnt_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\write_pointer_q$6034 ),
    .Q(write_pointer_q)
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:138.13-138.28|../rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14124  (
    .A(mem_q),
    .B(\$auto$slang_frontend.cc:694:finish$\mem_n$5986 ),
    .S(\$procmux$14125_CMP ),
    .Y(\$procmux$14124_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14127  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$6025 ),
    .B(2'h0),
    .S(\$procmux$14128_CMP ),
    .Y(\$procmux$14127_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14130  (
    .A(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$6024 ),
    .B(1'h0),
    .S(\$procmux$14131_CMP ),
    .Y(\$procmux$14130_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:122.26-126.17|../rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14133  (
    .A(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$6023 ),
    .B(1'h0),
    .S(\$procmux$14134_CMP ),
    .Y(\$procmux$14133_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:102.13-102.43|../rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14147  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$6003 ),
    .B(status_cnt_q),
    .S(\$procmux$14148_CMP ),
    .Y(\$procmux$14147_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:93.17-93.37|../rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14152  (
    .A(1'h0),
    .B(\$auto$builder.cc:338:Biop$5998 [0]),
    .S(read_pointer_q),
    .Y(\$procmux$14152_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14154  (
    .A(1'hx),
    .B(\$procmux$14152_Y ),
    .S(\$procmux$14155_CMP ),
    .Y(\$procmux$14154_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14158  (
    .A(\$auto$slang_frontend.cc:694:finish$\status_cnt_n$5985 ),
    .B(\$auto$builder.cc:338:Biop$6001 [1:0]),
    .S(\$procmux$14159_CMP ),
    .Y(\$procmux$14158_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:88.32-98.12|../rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14162  (
    .A(read_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\read_pointer_n$5999 ),
    .S(\$procmux$14163_CMP ),
    .Y(\$procmux$14162_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/fifo_v3.sv:81.17-81.38|../rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14166  (
    .A(1'h0),
    .B(\$auto$builder.cc:338:Biop$5979 [0]),
    .S(write_pointer_q),
    .Y(\$procmux$14166_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14168  (
    .A(1'hx),
    .B(\$procmux$14166_Y ),
    .S(\$procmux$14169_CMP ),
    .Y(\$procmux$14168_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$14171  (
    .A(mem_q),
    .B(\$auto$rtlil.cc:2875:Bwmux$5973 ),
    .S(\$procmux$14172_CMP ),
    .Y(\$procmux$14171_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$14174  (
    .A(status_cnt_q),
    .B(\$auto$builder.cc:338:Biop$5982 [1:0]),
    .S(\$procmux$14175_CMP ),
    .Y(\$procmux$14174_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14177  (
    .A(write_pointer_q),
    .B(\$auto$slang_frontend.cc:694:finish$\write_pointer_n$5980 ),
    .S(\$procmux$14178_CMP ),
    .Y(\$procmux$14177_Y )
  );
  /* src = "../rtl/common_cells/fifo_v3.sv:73.32-86.12|../rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14180  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$14181_CMP ),
    .Y(\$procmux$14180_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$auto$builder.cc:338:Biop$5940 ;
  assign empty_o = \$auto$builder.cc:338:Biop$5948 ;
  assign data_o = \$auto$slang_frontend.cc:694:finish$\data_o$6022 ;
  assign gate_clock = \$auto$slang_frontend.cc:694:finish$\gate_clock$5983 ;
  assign read_pointer_n = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6023 ;
  assign write_pointer_n = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6024 ;
  assign status_cnt_n = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6025 ;
  assign mem_n = \$auto$slang_frontend.cc:694:finish$\mem_n$5986 ;
  assign \$procmux$14125_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6044 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_q$6045  = \$procmux$14124_Y ;
  assign \$procmux$14128_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6032 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_q$6035  = \$procmux$14127_Y ;
  assign \$procmux$14131_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6032 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_q$6034  = \$procmux$14130_Y ;
  assign \$procmux$14134_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6032 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_q$6033  = \$procmux$14133_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6025  = \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6016 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$6024  = \$auto$slang_frontend.cc:694:finish$\write_pointer_n$5984 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6023  = \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6002 ;
  assign \$auto$slang_frontend.cc:694:finish$\data_o$6022  = \$auto$rtlil.cc:2874:Mux$5957 ;
  assign \$procmux$14148_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6015 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6016  = \$procmux$14147_Y ;
  assign \$procmux$14153_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5996 ;
  assign \$procmux$14155_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5992 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$5999  = \$procmux$14154_Y ;
  assign \$procmux$14159_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5992 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$6003  = \$procmux$14158_Y ;
  assign \$procmux$14163_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5992 ;
  assign \$auto$slang_frontend.cc:694:finish$\read_pointer_n$6002  = \$procmux$14162_Y ;
  assign \$procmux$14167_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5977 ;
  assign \$procmux$14169_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5963 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$5980  = \$procmux$14168_Y ;
  assign \$procmux$14172_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5963 ;
  assign \$auto$slang_frontend.cc:694:finish$\mem_n$5986  = \$procmux$14171_Y ;
  assign \$procmux$14175_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5963 ;
  assign \$auto$slang_frontend.cc:694:finish$\status_cnt_n$5985  = \$procmux$14174_Y ;
  assign \$procmux$14178_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5963 ;
  assign \$auto$slang_frontend.cc:694:finish$\write_pointer_n$5984  = \$procmux$14177_Y ;
  assign \$procmux$14181_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5963 ;
  assign \$auto$slang_frontend.cc:694:finish$\gate_clock$5983  = \$procmux$14180_Y ;
  assign \$auto$builder.cc:338:Biop$5944  = 1'h0;
  assign \$auto$builder.cc:364:Unop$5946  = 1'h1;
  assign \$auto$builder.cc:338:Biop$5948  = \$auto$builder.cc:338:Biop$5942 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5951  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$5957  = \$auto$rtlil.cc:2874:Mux$5955 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5963  = \$auto$builder.cc:338:Biop$5961 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5977  = \$auto$builder.cc:338:Biop$5975 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5992  = \$auto$builder.cc:338:Biop$5990 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5996  = \$auto$builder.cc:338:Biop$5994 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6015  = \$auto$builder.cc:338:Biop$6013 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6018  = pop_i;
  assign \$auto$rtlil.cc:2747:LogicNot$6030  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$6032  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$6040  = rst_ni;
  assign \$auto$builder.cc:364:Unop$6042  = \$auto$rtlil.cc:2746:ReduceBool$5963 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6044  = \$auto$builder.cc:338:Biop$5961 ;
endmodule

/* src = "../rtl/gpio/gpio.sv:12.8" */
module \gpio$croc_chip.i_croc_soc.i_croc.i_gpio (clk_i, rst_ni, gpio_i, gpio_o, gpio_out_en_o, gpio_in_sync_o, obi_req_i, obi_rsp_o, interrupt_o);
  wire \$auto$builder.cc:338:Biop$1291 ;
  wire \$auto$builder.cc:338:Biop$1295 ;
  wire \$auto$builder.cc:338:Biop$1303 ;
  wire \$auto$builder.cc:338:Biop$1305 ;
  wire \$auto$builder.cc:338:Biop$1307 ;
  wire \$auto$builder.cc:338:Biop$1309 ;
  wire \$auto$builder.cc:338:Biop$1312 ;
  wire \$auto$builder.cc:338:Biop$1319 ;
  wire \$auto$builder.cc:338:Biop$1321 ;
  wire \$auto$builder.cc:338:Biop$1330 ;
  wire \$auto$builder.cc:338:Biop$1334 ;
  wire \$auto$builder.cc:338:Biop$1342 ;
  wire \$auto$builder.cc:338:Biop$1344 ;
  wire \$auto$builder.cc:338:Biop$1346 ;
  wire \$auto$builder.cc:338:Biop$1348 ;
  wire \$auto$builder.cc:338:Biop$1351 ;
  wire \$auto$builder.cc:338:Biop$1358 ;
  wire \$auto$builder.cc:338:Biop$1360 ;
  wire \$auto$builder.cc:338:Biop$1369 ;
  wire \$auto$builder.cc:338:Biop$1373 ;
  wire \$auto$builder.cc:338:Biop$1381 ;
  wire \$auto$builder.cc:338:Biop$1383 ;
  wire \$auto$builder.cc:338:Biop$1385 ;
  wire \$auto$builder.cc:338:Biop$1387 ;
  wire \$auto$builder.cc:338:Biop$1390 ;
  wire \$auto$builder.cc:338:Biop$1397 ;
  wire \$auto$builder.cc:338:Biop$1399 ;
  wire \$auto$builder.cc:338:Biop$1408 ;
  wire \$auto$builder.cc:338:Biop$1412 ;
  wire \$auto$builder.cc:338:Biop$1420 ;
  wire \$auto$builder.cc:338:Biop$1422 ;
  wire \$auto$builder.cc:338:Biop$1424 ;
  wire \$auto$builder.cc:338:Biop$1426 ;
  wire \$auto$builder.cc:338:Biop$1429 ;
  wire \$auto$builder.cc:338:Biop$1436 ;
  wire \$auto$builder.cc:338:Biop$1438 ;
  wire \$auto$builder.cc:338:Biop$1447 ;
  wire \$auto$builder.cc:338:Biop$1451 ;
  wire \$auto$builder.cc:338:Biop$1459 ;
  wire \$auto$builder.cc:338:Biop$1461 ;
  wire \$auto$builder.cc:338:Biop$1463 ;
  wire \$auto$builder.cc:338:Biop$1465 ;
  wire \$auto$builder.cc:338:Biop$1468 ;
  wire \$auto$builder.cc:338:Biop$1475 ;
  wire \$auto$builder.cc:338:Biop$1477 ;
  wire \$auto$builder.cc:338:Biop$1486 ;
  wire \$auto$builder.cc:338:Biop$1490 ;
  wire \$auto$builder.cc:338:Biop$1498 ;
  wire \$auto$builder.cc:338:Biop$1500 ;
  wire \$auto$builder.cc:338:Biop$1502 ;
  wire \$auto$builder.cc:338:Biop$1504 ;
  wire \$auto$builder.cc:338:Biop$1507 ;
  wire \$auto$builder.cc:338:Biop$1514 ;
  wire \$auto$builder.cc:338:Biop$1516 ;
  wire \$auto$builder.cc:338:Biop$1525 ;
  wire \$auto$builder.cc:338:Biop$1529 ;
  wire \$auto$builder.cc:338:Biop$1537 ;
  wire \$auto$builder.cc:338:Biop$1539 ;
  wire \$auto$builder.cc:338:Biop$1541 ;
  wire \$auto$builder.cc:338:Biop$1543 ;
  wire \$auto$builder.cc:338:Biop$1546 ;
  wire \$auto$builder.cc:338:Biop$1553 ;
  wire \$auto$builder.cc:338:Biop$1555 ;
  wire \$auto$builder.cc:338:Biop$1564 ;
  wire \$auto$builder.cc:338:Biop$1568 ;
  wire \$auto$builder.cc:338:Biop$1576 ;
  wire \$auto$builder.cc:338:Biop$1578 ;
  wire \$auto$builder.cc:338:Biop$1580 ;
  wire \$auto$builder.cc:338:Biop$1582 ;
  wire \$auto$builder.cc:338:Biop$1585 ;
  wire \$auto$builder.cc:338:Biop$1592 ;
  wire \$auto$builder.cc:338:Biop$1594 ;
  wire \$auto$builder.cc:338:Biop$1603 ;
  wire \$auto$builder.cc:338:Biop$1607 ;
  wire \$auto$builder.cc:338:Biop$1615 ;
  wire \$auto$builder.cc:338:Biop$1617 ;
  wire \$auto$builder.cc:338:Biop$1619 ;
  wire \$auto$builder.cc:338:Biop$1621 ;
  wire \$auto$builder.cc:338:Biop$1624 ;
  wire \$auto$builder.cc:338:Biop$1631 ;
  wire \$auto$builder.cc:338:Biop$1633 ;
  wire \$auto$builder.cc:338:Biop$1642 ;
  wire \$auto$builder.cc:338:Biop$1646 ;
  wire \$auto$builder.cc:338:Biop$1654 ;
  wire \$auto$builder.cc:338:Biop$1656 ;
  wire \$auto$builder.cc:338:Biop$1658 ;
  wire \$auto$builder.cc:338:Biop$1660 ;
  wire \$auto$builder.cc:338:Biop$1663 ;
  wire \$auto$builder.cc:338:Biop$1670 ;
  wire \$auto$builder.cc:338:Biop$1672 ;
  wire \$auto$builder.cc:338:Biop$1681 ;
  wire \$auto$builder.cc:338:Biop$1685 ;
  wire \$auto$builder.cc:338:Biop$1693 ;
  wire \$auto$builder.cc:338:Biop$1695 ;
  wire \$auto$builder.cc:338:Biop$1697 ;
  wire \$auto$builder.cc:338:Biop$1699 ;
  wire \$auto$builder.cc:338:Biop$1702 ;
  wire \$auto$builder.cc:338:Biop$1709 ;
  wire \$auto$builder.cc:338:Biop$1711 ;
  wire \$auto$builder.cc:338:Biop$1720 ;
  wire \$auto$builder.cc:338:Biop$1724 ;
  wire \$auto$builder.cc:338:Biop$1732 ;
  wire \$auto$builder.cc:338:Biop$1734 ;
  wire \$auto$builder.cc:338:Biop$1736 ;
  wire \$auto$builder.cc:338:Biop$1738 ;
  wire \$auto$builder.cc:338:Biop$1741 ;
  wire \$auto$builder.cc:338:Biop$1748 ;
  wire \$auto$builder.cc:338:Biop$1750 ;
  wire \$auto$builder.cc:338:Biop$1759 ;
  wire \$auto$builder.cc:338:Biop$1763 ;
  wire \$auto$builder.cc:338:Biop$1771 ;
  wire \$auto$builder.cc:338:Biop$1773 ;
  wire \$auto$builder.cc:338:Biop$1775 ;
  wire \$auto$builder.cc:338:Biop$1777 ;
  wire \$auto$builder.cc:338:Biop$1780 ;
  wire \$auto$builder.cc:338:Biop$1787 ;
  wire \$auto$builder.cc:338:Biop$1789 ;
  wire \$auto$builder.cc:338:Biop$1798 ;
  wire \$auto$builder.cc:338:Biop$1802 ;
  wire \$auto$builder.cc:338:Biop$1810 ;
  wire \$auto$builder.cc:338:Biop$1812 ;
  wire \$auto$builder.cc:338:Biop$1814 ;
  wire \$auto$builder.cc:338:Biop$1816 ;
  wire \$auto$builder.cc:338:Biop$1819 ;
  wire \$auto$builder.cc:338:Biop$1826 ;
  wire \$auto$builder.cc:338:Biop$1828 ;
  wire \$auto$builder.cc:338:Biop$1837 ;
  wire \$auto$builder.cc:338:Biop$1841 ;
  wire \$auto$builder.cc:338:Biop$1849 ;
  wire \$auto$builder.cc:338:Biop$1851 ;
  wire \$auto$builder.cc:338:Biop$1853 ;
  wire \$auto$builder.cc:338:Biop$1855 ;
  wire \$auto$builder.cc:338:Biop$1858 ;
  wire \$auto$builder.cc:338:Biop$1865 ;
  wire \$auto$builder.cc:338:Biop$1867 ;
  wire \$auto$builder.cc:338:Biop$1876 ;
  wire \$auto$builder.cc:338:Biop$1880 ;
  wire \$auto$builder.cc:338:Biop$1888 ;
  wire \$auto$builder.cc:338:Biop$1890 ;
  wire \$auto$builder.cc:338:Biop$1892 ;
  wire \$auto$builder.cc:338:Biop$1894 ;
  wire \$auto$builder.cc:338:Biop$1897 ;
  wire \$auto$builder.cc:338:Biop$1904 ;
  wire \$auto$builder.cc:338:Biop$1906 ;
  wire \$auto$builder.cc:338:Biop$1915 ;
  wire \$auto$builder.cc:338:Biop$1919 ;
  wire \$auto$builder.cc:338:Biop$1927 ;
  wire \$auto$builder.cc:338:Biop$1929 ;
  wire \$auto$builder.cc:338:Biop$1931 ;
  wire \$auto$builder.cc:338:Biop$1933 ;
  wire \$auto$builder.cc:338:Biop$1936 ;
  wire \$auto$builder.cc:338:Biop$1943 ;
  wire \$auto$builder.cc:338:Biop$1945 ;
  wire \$auto$builder.cc:338:Biop$1954 ;
  wire \$auto$builder.cc:338:Biop$1958 ;
  wire \$auto$builder.cc:338:Biop$1966 ;
  wire \$auto$builder.cc:338:Biop$1968 ;
  wire \$auto$builder.cc:338:Biop$1970 ;
  wire \$auto$builder.cc:338:Biop$1972 ;
  wire \$auto$builder.cc:338:Biop$1975 ;
  wire \$auto$builder.cc:338:Biop$1982 ;
  wire \$auto$builder.cc:338:Biop$1984 ;
  wire \$auto$builder.cc:338:Biop$1993 ;
  wire \$auto$builder.cc:338:Biop$1997 ;
  wire \$auto$builder.cc:338:Biop$2005 ;
  wire \$auto$builder.cc:338:Biop$2007 ;
  wire \$auto$builder.cc:338:Biop$2009 ;
  wire \$auto$builder.cc:338:Biop$2011 ;
  wire \$auto$builder.cc:338:Biop$2014 ;
  wire \$auto$builder.cc:338:Biop$2021 ;
  wire \$auto$builder.cc:338:Biop$2023 ;
  wire \$auto$builder.cc:338:Biop$2032 ;
  wire \$auto$builder.cc:338:Biop$2036 ;
  wire \$auto$builder.cc:338:Biop$2044 ;
  wire \$auto$builder.cc:338:Biop$2046 ;
  wire \$auto$builder.cc:338:Biop$2048 ;
  wire \$auto$builder.cc:338:Biop$2050 ;
  wire \$auto$builder.cc:338:Biop$2053 ;
  wire \$auto$builder.cc:338:Biop$2060 ;
  wire \$auto$builder.cc:338:Biop$2062 ;
  wire \$auto$builder.cc:338:Biop$2071 ;
  wire \$auto$builder.cc:338:Biop$2075 ;
  wire \$auto$builder.cc:338:Biop$2083 ;
  wire \$auto$builder.cc:338:Biop$2085 ;
  wire \$auto$builder.cc:338:Biop$2087 ;
  wire \$auto$builder.cc:338:Biop$2089 ;
  wire \$auto$builder.cc:338:Biop$2092 ;
  wire \$auto$builder.cc:338:Biop$2099 ;
  wire \$auto$builder.cc:338:Biop$2101 ;
  wire \$auto$builder.cc:338:Biop$2110 ;
  wire \$auto$builder.cc:338:Biop$2114 ;
  wire \$auto$builder.cc:338:Biop$2122 ;
  wire \$auto$builder.cc:338:Biop$2124 ;
  wire \$auto$builder.cc:338:Biop$2126 ;
  wire \$auto$builder.cc:338:Biop$2128 ;
  wire \$auto$builder.cc:338:Biop$2131 ;
  wire \$auto$builder.cc:338:Biop$2138 ;
  wire \$auto$builder.cc:338:Biop$2140 ;
  wire \$auto$builder.cc:338:Biop$2149 ;
  wire \$auto$builder.cc:338:Biop$2153 ;
  wire \$auto$builder.cc:338:Biop$2161 ;
  wire \$auto$builder.cc:338:Biop$2163 ;
  wire \$auto$builder.cc:338:Biop$2165 ;
  wire \$auto$builder.cc:338:Biop$2167 ;
  wire \$auto$builder.cc:338:Biop$2170 ;
  wire \$auto$builder.cc:338:Biop$2177 ;
  wire \$auto$builder.cc:338:Biop$2179 ;
  wire \$auto$builder.cc:338:Biop$2188 ;
  wire \$auto$builder.cc:338:Biop$2192 ;
  wire \$auto$builder.cc:338:Biop$2200 ;
  wire \$auto$builder.cc:338:Biop$2202 ;
  wire \$auto$builder.cc:338:Biop$2204 ;
  wire \$auto$builder.cc:338:Biop$2206 ;
  wire \$auto$builder.cc:338:Biop$2209 ;
  wire \$auto$builder.cc:338:Biop$2216 ;
  wire \$auto$builder.cc:338:Biop$2218 ;
  wire \$auto$builder.cc:338:Biop$2227 ;
  wire \$auto$builder.cc:338:Biop$2231 ;
  wire \$auto$builder.cc:338:Biop$2239 ;
  wire \$auto$builder.cc:338:Biop$2241 ;
  wire \$auto$builder.cc:338:Biop$2243 ;
  wire \$auto$builder.cc:338:Biop$2245 ;
  wire \$auto$builder.cc:338:Biop$2248 ;
  wire \$auto$builder.cc:338:Biop$2255 ;
  wire \$auto$builder.cc:338:Biop$2257 ;
  wire \$auto$builder.cc:338:Biop$2266 ;
  wire \$auto$builder.cc:338:Biop$2270 ;
  wire \$auto$builder.cc:338:Biop$2278 ;
  wire \$auto$builder.cc:338:Biop$2280 ;
  wire \$auto$builder.cc:338:Biop$2282 ;
  wire \$auto$builder.cc:338:Biop$2284 ;
  wire \$auto$builder.cc:338:Biop$2287 ;
  wire \$auto$builder.cc:338:Biop$2294 ;
  wire \$auto$builder.cc:338:Biop$2296 ;
  wire \$auto$builder.cc:338:Biop$2305 ;
  wire \$auto$builder.cc:338:Biop$2309 ;
  wire \$auto$builder.cc:338:Biop$2317 ;
  wire \$auto$builder.cc:338:Biop$2319 ;
  wire \$auto$builder.cc:338:Biop$2321 ;
  wire \$auto$builder.cc:338:Biop$2323 ;
  wire \$auto$builder.cc:338:Biop$2326 ;
  wire \$auto$builder.cc:338:Biop$2333 ;
  wire \$auto$builder.cc:338:Biop$2335 ;
  wire \$auto$builder.cc:338:Biop$2344 ;
  wire \$auto$builder.cc:338:Biop$2348 ;
  wire \$auto$builder.cc:338:Biop$2356 ;
  wire \$auto$builder.cc:338:Biop$2358 ;
  wire \$auto$builder.cc:338:Biop$2360 ;
  wire \$auto$builder.cc:338:Biop$2362 ;
  wire \$auto$builder.cc:338:Biop$2365 ;
  wire \$auto$builder.cc:338:Biop$2372 ;
  wire \$auto$builder.cc:338:Biop$2374 ;
  wire \$auto$builder.cc:338:Biop$2383 ;
  wire \$auto$builder.cc:338:Biop$2387 ;
  wire \$auto$builder.cc:338:Biop$2395 ;
  wire \$auto$builder.cc:338:Biop$2397 ;
  wire \$auto$builder.cc:338:Biop$2399 ;
  wire \$auto$builder.cc:338:Biop$2401 ;
  wire \$auto$builder.cc:338:Biop$2404 ;
  wire \$auto$builder.cc:338:Biop$2411 ;
  wire \$auto$builder.cc:338:Biop$2413 ;
  wire \$auto$builder.cc:338:Biop$2422 ;
  wire \$auto$builder.cc:338:Biop$2426 ;
  wire \$auto$builder.cc:338:Biop$2434 ;
  wire \$auto$builder.cc:338:Biop$2436 ;
  wire \$auto$builder.cc:338:Biop$2438 ;
  wire \$auto$builder.cc:338:Biop$2440 ;
  wire \$auto$builder.cc:338:Biop$2443 ;
  wire \$auto$builder.cc:338:Biop$2450 ;
  wire \$auto$builder.cc:338:Biop$2452 ;
  wire \$auto$builder.cc:338:Biop$2461 ;
  wire \$auto$builder.cc:338:Biop$2465 ;
  wire \$auto$builder.cc:338:Biop$2473 ;
  wire \$auto$builder.cc:338:Biop$2475 ;
  wire \$auto$builder.cc:338:Biop$2477 ;
  wire \$auto$builder.cc:338:Biop$2479 ;
  wire \$auto$builder.cc:338:Biop$2482 ;
  wire \$auto$builder.cc:338:Biop$2489 ;
  wire \$auto$builder.cc:338:Biop$2491 ;
  wire \$auto$builder.cc:338:Biop$2500 ;
  wire \$auto$builder.cc:338:Biop$2504 ;
  wire \$auto$builder.cc:338:Biop$2512 ;
  wire \$auto$builder.cc:338:Biop$2514 ;
  wire \$auto$builder.cc:338:Biop$2516 ;
  wire \$auto$builder.cc:338:Biop$2518 ;
  wire \$auto$builder.cc:338:Biop$2521 ;
  wire \$auto$builder.cc:338:Biop$2528 ;
  wire \$auto$builder.cc:338:Biop$2530 ;
  wire \$auto$builder.cc:338:Biop$2536 ;
  wire \$auto$builder.cc:338:Biop$2539 ;
  wire \$auto$builder.cc:338:Biop$2542 ;
  wire \$auto$builder.cc:338:Biop$2545 ;
  wire \$auto$builder.cc:338:Biop$2548 ;
  wire \$auto$builder.cc:338:Biop$2551 ;
  wire \$auto$builder.cc:338:Biop$2554 ;
  wire \$auto$builder.cc:338:Biop$2557 ;
  wire \$auto$builder.cc:338:Biop$2560 ;
  wire \$auto$builder.cc:338:Biop$2563 ;
  wire \$auto$builder.cc:338:Biop$2566 ;
  wire \$auto$builder.cc:338:Biop$2569 ;
  wire \$auto$builder.cc:338:Biop$2572 ;
  wire \$auto$builder.cc:338:Biop$2575 ;
  wire \$auto$builder.cc:338:Biop$2578 ;
  wire \$auto$builder.cc:338:Biop$2581 ;
  wire \$auto$builder.cc:338:Biop$2584 ;
  wire \$auto$builder.cc:338:Biop$2587 ;
  wire \$auto$builder.cc:338:Biop$2590 ;
  wire \$auto$builder.cc:338:Biop$2593 ;
  wire \$auto$builder.cc:338:Biop$2596 ;
  wire \$auto$builder.cc:338:Biop$2599 ;
  wire \$auto$builder.cc:338:Biop$2602 ;
  wire \$auto$builder.cc:338:Biop$2605 ;
  wire \$auto$builder.cc:338:Biop$2608 ;
  wire \$auto$builder.cc:338:Biop$2611 ;
  wire \$auto$builder.cc:338:Biop$2614 ;
  wire \$auto$builder.cc:338:Biop$2617 ;
  wire \$auto$builder.cc:338:Biop$2620 ;
  wire \$auto$builder.cc:338:Biop$2623 ;
  wire \$auto$builder.cc:338:Biop$2626 ;
  wire \$auto$builder.cc:338:Biop$2629 ;
  wire \$auto$builder.cc:364:Unop$1289 ;
  wire \$auto$builder.cc:364:Unop$1293 ;
  wire \$auto$builder.cc:364:Unop$1301 ;
  wire \$auto$builder.cc:364:Unop$1316 ;
  wire \$auto$builder.cc:364:Unop$1328 ;
  wire \$auto$builder.cc:364:Unop$1332 ;
  wire \$auto$builder.cc:364:Unop$1340 ;
  wire \$auto$builder.cc:364:Unop$1355 ;
  wire \$auto$builder.cc:364:Unop$1367 ;
  wire \$auto$builder.cc:364:Unop$1371 ;
  wire \$auto$builder.cc:364:Unop$1379 ;
  wire \$auto$builder.cc:364:Unop$1394 ;
  wire \$auto$builder.cc:364:Unop$1406 ;
  wire \$auto$builder.cc:364:Unop$1410 ;
  wire \$auto$builder.cc:364:Unop$1418 ;
  wire \$auto$builder.cc:364:Unop$1433 ;
  wire \$auto$builder.cc:364:Unop$1445 ;
  wire \$auto$builder.cc:364:Unop$1449 ;
  wire \$auto$builder.cc:364:Unop$1457 ;
  wire \$auto$builder.cc:364:Unop$1472 ;
  wire \$auto$builder.cc:364:Unop$1484 ;
  wire \$auto$builder.cc:364:Unop$1488 ;
  wire \$auto$builder.cc:364:Unop$1496 ;
  wire \$auto$builder.cc:364:Unop$1511 ;
  wire \$auto$builder.cc:364:Unop$1523 ;
  wire \$auto$builder.cc:364:Unop$1527 ;
  wire \$auto$builder.cc:364:Unop$1535 ;
  wire \$auto$builder.cc:364:Unop$1550 ;
  wire \$auto$builder.cc:364:Unop$1562 ;
  wire \$auto$builder.cc:364:Unop$1566 ;
  wire \$auto$builder.cc:364:Unop$1574 ;
  wire \$auto$builder.cc:364:Unop$1589 ;
  wire \$auto$builder.cc:364:Unop$1601 ;
  wire \$auto$builder.cc:364:Unop$1605 ;
  wire \$auto$builder.cc:364:Unop$1613 ;
  wire \$auto$builder.cc:364:Unop$1628 ;
  wire \$auto$builder.cc:364:Unop$1640 ;
  wire \$auto$builder.cc:364:Unop$1644 ;
  wire \$auto$builder.cc:364:Unop$1652 ;
  wire \$auto$builder.cc:364:Unop$1667 ;
  wire \$auto$builder.cc:364:Unop$1679 ;
  wire \$auto$builder.cc:364:Unop$1683 ;
  wire \$auto$builder.cc:364:Unop$1691 ;
  wire \$auto$builder.cc:364:Unop$1706 ;
  wire \$auto$builder.cc:364:Unop$1718 ;
  wire \$auto$builder.cc:364:Unop$1722 ;
  wire \$auto$builder.cc:364:Unop$1730 ;
  wire \$auto$builder.cc:364:Unop$1745 ;
  wire \$auto$builder.cc:364:Unop$1757 ;
  wire \$auto$builder.cc:364:Unop$1761 ;
  wire \$auto$builder.cc:364:Unop$1769 ;
  wire \$auto$builder.cc:364:Unop$1784 ;
  wire \$auto$builder.cc:364:Unop$1796 ;
  wire \$auto$builder.cc:364:Unop$1800 ;
  wire \$auto$builder.cc:364:Unop$1808 ;
  wire \$auto$builder.cc:364:Unop$1823 ;
  wire \$auto$builder.cc:364:Unop$1835 ;
  wire \$auto$builder.cc:364:Unop$1839 ;
  wire \$auto$builder.cc:364:Unop$1847 ;
  wire \$auto$builder.cc:364:Unop$1862 ;
  wire \$auto$builder.cc:364:Unop$1874 ;
  wire \$auto$builder.cc:364:Unop$1878 ;
  wire \$auto$builder.cc:364:Unop$1886 ;
  wire \$auto$builder.cc:364:Unop$1901 ;
  wire \$auto$builder.cc:364:Unop$1913 ;
  wire \$auto$builder.cc:364:Unop$1917 ;
  wire \$auto$builder.cc:364:Unop$1925 ;
  wire \$auto$builder.cc:364:Unop$1940 ;
  wire \$auto$builder.cc:364:Unop$1952 ;
  wire \$auto$builder.cc:364:Unop$1956 ;
  wire \$auto$builder.cc:364:Unop$1964 ;
  wire \$auto$builder.cc:364:Unop$1979 ;
  wire \$auto$builder.cc:364:Unop$1991 ;
  wire \$auto$builder.cc:364:Unop$1995 ;
  wire \$auto$builder.cc:364:Unop$2003 ;
  wire \$auto$builder.cc:364:Unop$2018 ;
  wire \$auto$builder.cc:364:Unop$2030 ;
  wire \$auto$builder.cc:364:Unop$2034 ;
  wire \$auto$builder.cc:364:Unop$2042 ;
  wire \$auto$builder.cc:364:Unop$2057 ;
  wire \$auto$builder.cc:364:Unop$2069 ;
  wire \$auto$builder.cc:364:Unop$2073 ;
  wire \$auto$builder.cc:364:Unop$2081 ;
  wire \$auto$builder.cc:364:Unop$2096 ;
  wire \$auto$builder.cc:364:Unop$2108 ;
  wire \$auto$builder.cc:364:Unop$2112 ;
  wire \$auto$builder.cc:364:Unop$2120 ;
  wire \$auto$builder.cc:364:Unop$2135 ;
  wire \$auto$builder.cc:364:Unop$2147 ;
  wire \$auto$builder.cc:364:Unop$2151 ;
  wire \$auto$builder.cc:364:Unop$2159 ;
  wire \$auto$builder.cc:364:Unop$2174 ;
  wire \$auto$builder.cc:364:Unop$2186 ;
  wire \$auto$builder.cc:364:Unop$2190 ;
  wire \$auto$builder.cc:364:Unop$2198 ;
  wire \$auto$builder.cc:364:Unop$2213 ;
  wire \$auto$builder.cc:364:Unop$2225 ;
  wire \$auto$builder.cc:364:Unop$2229 ;
  wire \$auto$builder.cc:364:Unop$2237 ;
  wire \$auto$builder.cc:364:Unop$2252 ;
  wire \$auto$builder.cc:364:Unop$2264 ;
  wire \$auto$builder.cc:364:Unop$2268 ;
  wire \$auto$builder.cc:364:Unop$2276 ;
  wire \$auto$builder.cc:364:Unop$2291 ;
  wire \$auto$builder.cc:364:Unop$2303 ;
  wire \$auto$builder.cc:364:Unop$2307 ;
  wire \$auto$builder.cc:364:Unop$2315 ;
  wire \$auto$builder.cc:364:Unop$2330 ;
  wire \$auto$builder.cc:364:Unop$2342 ;
  wire \$auto$builder.cc:364:Unop$2346 ;
  wire \$auto$builder.cc:364:Unop$2354 ;
  wire \$auto$builder.cc:364:Unop$2369 ;
  wire \$auto$builder.cc:364:Unop$2381 ;
  wire \$auto$builder.cc:364:Unop$2385 ;
  wire \$auto$builder.cc:364:Unop$2393 ;
  wire \$auto$builder.cc:364:Unop$2408 ;
  wire \$auto$builder.cc:364:Unop$2420 ;
  wire \$auto$builder.cc:364:Unop$2424 ;
  wire \$auto$builder.cc:364:Unop$2432 ;
  wire \$auto$builder.cc:364:Unop$2447 ;
  wire \$auto$builder.cc:364:Unop$2459 ;
  wire \$auto$builder.cc:364:Unop$2463 ;
  wire \$auto$builder.cc:364:Unop$2471 ;
  wire \$auto$builder.cc:364:Unop$2486 ;
  wire \$auto$builder.cc:364:Unop$2498 ;
  wire \$auto$builder.cc:364:Unop$2502 ;
  wire \$auto$builder.cc:364:Unop$2510 ;
  wire \$auto$builder.cc:364:Unop$2525 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1297 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1314 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1336 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1353 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1375 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1392 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1414 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1431 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1453 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1470 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1492 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1509 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1531 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1548 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1570 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1587 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1609 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1626 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1648 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1665 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1687 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1704 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1726 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1743 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1765 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1782 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1804 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1821 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1843 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1860 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1882 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1899 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1921 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1938 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1960 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1977 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1999 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2016 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2038 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2055 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2077 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2094 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2116 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2133 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2155 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2172 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2194 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2211 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2233 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2250 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2272 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2289 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2311 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2328 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2350 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2367 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2389 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2406 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2428 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2445 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2467 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2484 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2506 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2523 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1285 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1287 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1324 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1326 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1363 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1365 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1402 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1404 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1441 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1443 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1480 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1482 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1519 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1521 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1558 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1560 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1597 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1599 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1636 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1638 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1675 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1677 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1714 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1716 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1753 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1755 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1792 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1794 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1831 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1833 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1870 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1872 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1909 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1911 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1948 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1950 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1987 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1989 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2026 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2028 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2065 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2067 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2104 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2106 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2143 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2145 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2182 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2184 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2221 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2223 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2260 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2262 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2299 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2301 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2338 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2340 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2377 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2379 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2416 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2418 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2455 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2457 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2494 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2496 ;
  wire \$auto$rtlil.cc:2874:Mux$1299 ;
  wire \$auto$rtlil.cc:2874:Mux$1338 ;
  wire \$auto$rtlil.cc:2874:Mux$1377 ;
  wire \$auto$rtlil.cc:2874:Mux$1416 ;
  wire \$auto$rtlil.cc:2874:Mux$1455 ;
  wire \$auto$rtlil.cc:2874:Mux$1494 ;
  wire \$auto$rtlil.cc:2874:Mux$1533 ;
  wire \$auto$rtlil.cc:2874:Mux$1572 ;
  wire \$auto$rtlil.cc:2874:Mux$1611 ;
  wire \$auto$rtlil.cc:2874:Mux$1650 ;
  wire \$auto$rtlil.cc:2874:Mux$1689 ;
  wire \$auto$rtlil.cc:2874:Mux$1728 ;
  wire \$auto$rtlil.cc:2874:Mux$1767 ;
  wire \$auto$rtlil.cc:2874:Mux$1806 ;
  wire \$auto$rtlil.cc:2874:Mux$1845 ;
  wire \$auto$rtlil.cc:2874:Mux$1884 ;
  wire \$auto$rtlil.cc:2874:Mux$1923 ;
  wire \$auto$rtlil.cc:2874:Mux$1962 ;
  wire \$auto$rtlil.cc:2874:Mux$2001 ;
  wire \$auto$rtlil.cc:2874:Mux$2040 ;
  wire \$auto$rtlil.cc:2874:Mux$2079 ;
  wire \$auto$rtlil.cc:2874:Mux$2118 ;
  wire \$auto$rtlil.cc:2874:Mux$2157 ;
  wire \$auto$rtlil.cc:2874:Mux$2196 ;
  wire \$auto$rtlil.cc:2874:Mux$2235 ;
  wire \$auto$rtlil.cc:2874:Mux$2274 ;
  wire \$auto$rtlil.cc:2874:Mux$2313 ;
  wire \$auto$rtlil.cc:2874:Mux$2352 ;
  wire \$auto$rtlil.cc:2874:Mux$2391 ;
  wire \$auto$rtlil.cc:2874:Mux$2430 ;
  wire \$auto$rtlil.cc:2874:Mux$2469 ;
  wire \$auto$rtlil.cc:2874:Mux$2508 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$2533 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2534 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2537 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2540 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2543 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2546 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2549 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2552 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2555 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2558 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2561 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2564 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2567 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2570 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2573 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2576 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2579 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2582 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2585 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2588 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2591 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2594 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2597 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2600 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2603 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2606 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2609 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2612 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2615 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2618 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2621 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2624 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2627 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$2532 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[102]$2097 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[107]$2136 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[112]$2175 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[117]$2214 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[122]$2253 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[127]$2292 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[12]$1395 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[132]$2331 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[137]$2370 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[142]$2409 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[147]$2448 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[152]$2487 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[157]$2526 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[17]$1434 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[22]$1473 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[27]$1512 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[2]$1317 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[32]$1551 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[37]$1590 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[42]$1629 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[47]$1668 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[52]$1707 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[57]$1746 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[62]$1785 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[67]$1824 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[72]$1863 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[77]$1902 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[7]$1356 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[82]$1941 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[87]$1980 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[92]$2019 ;
  /* src = "../rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\hw2reg[97]$2058 ;
  wire [1:0] \$procmux$15299_Y ;
  wire \$procmux$15300_CMP ;
  wire [1:0] \$procmux$15301_Y ;
  wire \$procmux$15302_CMP ;
  wire [1:0] \$procmux$15303_Y ;
  wire \$procmux$15304_CMP ;
  wire [1:0] \$procmux$15305_Y ;
  wire \$procmux$15306_CMP ;
  wire [1:0] \$procmux$15307_Y ;
  wire \$procmux$15308_CMP ;
  wire [1:0] \$procmux$15309_Y ;
  wire \$procmux$15310_CMP ;
  wire [1:0] \$procmux$15311_Y ;
  wire \$procmux$15312_CMP ;
  wire [1:0] \$procmux$15313_Y ;
  wire \$procmux$15314_CMP ;
  wire [1:0] \$procmux$15315_Y ;
  wire \$procmux$15316_CMP ;
  wire [1:0] \$procmux$15317_Y ;
  wire \$procmux$15318_CMP ;
  wire [1:0] \$procmux$15319_Y ;
  wire \$procmux$15320_CMP ;
  wire [1:0] \$procmux$15321_Y ;
  wire \$procmux$15322_CMP ;
  wire [1:0] \$procmux$15323_Y ;
  wire \$procmux$15324_CMP ;
  wire [1:0] \$procmux$15325_Y ;
  wire \$procmux$15326_CMP ;
  wire [1:0] \$procmux$15327_Y ;
  wire \$procmux$15328_CMP ;
  wire [1:0] \$procmux$15329_Y ;
  wire \$procmux$15330_CMP ;
  wire [1:0] \$procmux$15331_Y ;
  wire \$procmux$15332_CMP ;
  wire [1:0] \$procmux$15333_Y ;
  wire \$procmux$15334_CMP ;
  wire [1:0] \$procmux$15335_Y ;
  wire \$procmux$15336_CMP ;
  wire [1:0] \$procmux$15337_Y ;
  wire \$procmux$15338_CMP ;
  wire [1:0] \$procmux$15339_Y ;
  wire \$procmux$15340_CMP ;
  wire [1:0] \$procmux$15341_Y ;
  wire \$procmux$15342_CMP ;
  wire [1:0] \$procmux$15343_Y ;
  wire \$procmux$15344_CMP ;
  wire [1:0] \$procmux$15345_Y ;
  wire \$procmux$15346_CMP ;
  wire [1:0] \$procmux$15347_Y ;
  wire \$procmux$15348_CMP ;
  wire [1:0] \$procmux$15349_Y ;
  wire \$procmux$15350_CMP ;
  wire [1:0] \$procmux$15351_Y ;
  wire \$procmux$15352_CMP ;
  wire [1:0] \$procmux$15353_Y ;
  wire \$procmux$15354_CMP ;
  wire [1:0] \$procmux$15355_Y ;
  wire \$procmux$15356_CMP ;
  wire [1:0] \$procmux$15357_Y ;
  wire \$procmux$15358_CMP ;
  wire [1:0] \$procmux$15359_Y ;
  wire \$procmux$15360_CMP ;
  wire [1:0] \$procmux$15361_Y ;
  wire \$procmux$15362_CMP ;
  /* src = "../rtl/gpio/gpio.sv:25.34" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[0].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[0].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[0].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[0].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[0].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[0].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[10].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[10].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[10].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[10].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[10].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[10].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[11].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[11].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[11].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[11].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[11].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[11].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[12].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[12].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[12].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[12].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[12].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[12].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[13].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[13].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[13].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[13].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[13].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[13].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[14].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[14].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[14].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[14].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[14].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[14].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[15].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[15].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[15].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[15].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[15].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[15].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[16].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[16].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[16].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[16].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[16].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[16].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[17].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[17].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[17].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[17].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[17].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[17].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[18].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[18].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[18].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[18].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[18].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[18].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[19].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[19].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[19].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[19].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[19].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[19].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[1].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[1].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[1].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[1].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[1].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[1].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[20].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[20].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[20].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[20].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[20].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[20].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[21].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[21].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[21].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[21].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[21].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[21].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[22].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[22].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[22].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[22].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[22].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[22].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[23].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[23].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[23].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[23].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[23].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[23].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[24].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[24].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[24].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[24].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[24].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[24].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[25].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[25].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[25].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[25].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[25].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[25].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[26].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[26].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[26].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[26].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[26].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[26].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[27].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[27].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[27].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[27].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[27].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[27].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[28].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[28].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[28].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[28].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[28].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[28].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[29].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[29].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[29].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[29].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[29].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[29].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[2].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[2].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[2].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[2].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[2].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[2].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[30].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[30].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[30].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[30].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[30].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[30].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[31].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[31].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[31].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[31].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[31].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[31].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[3].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[3].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[3].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[3].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[3].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[3].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[4].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[4].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[4].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[4].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[4].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[4].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[5].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[5].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[5].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[5].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[5].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[5].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[6].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[6].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[6].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[6].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[6].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[6].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[7].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[7].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[7].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[7].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[7].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[7].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[8].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[8].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[8].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[8].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[8].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[8].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[9].f_edge ;
  /* src = "../rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[9].is_input ;
  /* src = "../rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[9].is_output ;
  /* src = "../rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[9].r_edge ;
  /* src = "../rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[9].serial_d ;
  /* src = "../rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[9].serial_q ;
  /* src = "../rtl/gpio/gpio.sv:64.25" */
  wire [31:0] gpio_edge;
  /* src = "../rtl/gpio/gpio.sv:30.34" */
  input [31:0] gpio_i;
  wire [31:0] gpio_i;
  /* src = "../rtl/gpio/gpio.sv:61.25" */
  wire [31:0] gpio_in_sync;
  /* src = "../rtl/gpio/gpio.sv:39.34" */
  output [31:0] gpio_in_sync_o;
  wire [31:0] gpio_in_sync_o;
  /* src = "../rtl/gpio/gpio.sv:65.25" */
  wire [31:0] gpio_intrpt;
  /* src = "../rtl/gpio/gpio.sv:67.9" */
  wire gpio_intrpt_pending;
  /* src = "../rtl/gpio/gpio.sv:32.34" */
  output [31:0] gpio_o;
  wire [31:0] gpio_o;
  /* src = "../rtl/gpio/gpio.sv:36.34" */
  output [31:0] gpio_out_en_o;
  wire [31:0] gpio_out_en_o;
  /* src = "../rtl/gpio/gpio.sv:58.33" */
  wire [159:0] hw2reg;
  /* src = "../rtl/gpio/gpio.sv:42.34" */
  output interrupt_o;
  wire interrupt_o;
  /* src = "../rtl/gpio/gpio.sv:45.34" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "../rtl/gpio/gpio.sv:47.34" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "../rtl/gpio/gpio.sv:57.33" */
  wire [223:0] reg2hw;
  /* src = "../rtl/gpio/gpio.sv:27.34" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1284  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1285 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1323  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1324 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1362  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1363 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1401  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1402 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1440  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1441 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1479  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1480 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1518  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1519 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1557  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1558 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1596  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1597 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1635  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1636 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1674  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1675 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1713  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1714 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1752  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1753 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1791  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1792 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1830  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1831 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1869  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1870 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1908  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1909 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1947  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1948 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1986  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1987 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2025  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2026 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2064  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2065 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2103  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2104 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2142  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2143 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2181  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2182 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2220  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2221 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2259  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2260 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2298  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2299 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2337  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2338 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2376  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2377 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2415  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2416 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2454  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2455 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2493  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2494 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1290  (
    .A(\$auto$builder.cc:364:Unop$1289 ),
    .B(\gen_gpios[0].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1291 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1294  (
    .A(\gen_gpios[0].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1293 ),
    .Y(\$auto$builder.cc:338:Biop$1295 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1302  (
    .A(reg2hw[5]),
    .B(\$auto$builder.cc:364:Unop$1301 ),
    .Y(\$auto$builder.cc:338:Biop$1303 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1304  (
    .A(reg2hw[5]),
    .B(reg2hw[6]),
    .Y(\$auto$builder.cc:338:Biop$1305 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1306  (
    .A(gpio_in_sync[0]),
    .B(\gen_gpios[0].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1307 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1308  (
    .A(reg2hw[4]),
    .B(\gen_gpios[0].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1309 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1311  (
    .A(\gen_gpios[0].is_output ),
    .B(reg2hw[3]),
    .Y(\$auto$builder.cc:338:Biop$1312 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1318  (
    .A(gpio_edge[0]),
    .B(reg2hw[2]),
    .Y(\$auto$builder.cc:338:Biop$1319 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1320  (
    .A(\$auto$builder.cc:338:Biop$1319 ),
    .B(\gen_gpios[0].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1321 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1329  (
    .A(\$auto$builder.cc:364:Unop$1328 ),
    .B(\gen_gpios[1].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1330 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1333  (
    .A(\gen_gpios[1].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1332 ),
    .Y(\$auto$builder.cc:338:Biop$1334 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1341  (
    .A(reg2hw[12]),
    .B(\$auto$builder.cc:364:Unop$1340 ),
    .Y(\$auto$builder.cc:338:Biop$1342 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1343  (
    .A(reg2hw[12]),
    .B(reg2hw[13]),
    .Y(\$auto$builder.cc:338:Biop$1344 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1345  (
    .A(gpio_in_sync[1]),
    .B(\gen_gpios[1].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1346 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1347  (
    .A(reg2hw[11]),
    .B(\gen_gpios[1].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1348 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1350  (
    .A(\gen_gpios[1].is_output ),
    .B(reg2hw[10]),
    .Y(\$auto$builder.cc:338:Biop$1351 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1357  (
    .A(gpio_edge[1]),
    .B(reg2hw[9]),
    .Y(\$auto$builder.cc:338:Biop$1358 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1359  (
    .A(\$auto$builder.cc:338:Biop$1358 ),
    .B(\gen_gpios[1].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1360 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1368  (
    .A(\$auto$builder.cc:364:Unop$1367 ),
    .B(\gen_gpios[2].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1369 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1372  (
    .A(\gen_gpios[2].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1371 ),
    .Y(\$auto$builder.cc:338:Biop$1373 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1380  (
    .A(reg2hw[19]),
    .B(\$auto$builder.cc:364:Unop$1379 ),
    .Y(\$auto$builder.cc:338:Biop$1381 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1382  (
    .A(reg2hw[19]),
    .B(reg2hw[20]),
    .Y(\$auto$builder.cc:338:Biop$1383 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1384  (
    .A(gpio_in_sync[2]),
    .B(\gen_gpios[2].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1385 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1386  (
    .A(reg2hw[18]),
    .B(\gen_gpios[2].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1387 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1389  (
    .A(\gen_gpios[2].is_output ),
    .B(reg2hw[17]),
    .Y(\$auto$builder.cc:338:Biop$1390 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1396  (
    .A(gpio_edge[2]),
    .B(reg2hw[16]),
    .Y(\$auto$builder.cc:338:Biop$1397 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1398  (
    .A(\$auto$builder.cc:338:Biop$1397 ),
    .B(\gen_gpios[2].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1399 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1407  (
    .A(\$auto$builder.cc:364:Unop$1406 ),
    .B(\gen_gpios[3].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1408 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1411  (
    .A(\gen_gpios[3].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1410 ),
    .Y(\$auto$builder.cc:338:Biop$1412 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1419  (
    .A(reg2hw[26]),
    .B(\$auto$builder.cc:364:Unop$1418 ),
    .Y(\$auto$builder.cc:338:Biop$1420 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1421  (
    .A(reg2hw[26]),
    .B(reg2hw[27]),
    .Y(\$auto$builder.cc:338:Biop$1422 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1423  (
    .A(gpio_in_sync[3]),
    .B(\gen_gpios[3].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1424 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1425  (
    .A(reg2hw[25]),
    .B(\gen_gpios[3].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1426 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1428  (
    .A(\gen_gpios[3].is_output ),
    .B(reg2hw[24]),
    .Y(\$auto$builder.cc:338:Biop$1429 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1435  (
    .A(gpio_edge[3]),
    .B(reg2hw[23]),
    .Y(\$auto$builder.cc:338:Biop$1436 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1437  (
    .A(\$auto$builder.cc:338:Biop$1436 ),
    .B(\gen_gpios[3].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1438 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1446  (
    .A(\$auto$builder.cc:364:Unop$1445 ),
    .B(\gen_gpios[4].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1447 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1450  (
    .A(\gen_gpios[4].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1449 ),
    .Y(\$auto$builder.cc:338:Biop$1451 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1458  (
    .A(reg2hw[33]),
    .B(\$auto$builder.cc:364:Unop$1457 ),
    .Y(\$auto$builder.cc:338:Biop$1459 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1460  (
    .A(reg2hw[33]),
    .B(reg2hw[34]),
    .Y(\$auto$builder.cc:338:Biop$1461 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1462  (
    .A(gpio_in_sync[4]),
    .B(\gen_gpios[4].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1463 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1464  (
    .A(reg2hw[32]),
    .B(\gen_gpios[4].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1465 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1467  (
    .A(\gen_gpios[4].is_output ),
    .B(reg2hw[31]),
    .Y(\$auto$builder.cc:338:Biop$1468 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1474  (
    .A(gpio_edge[4]),
    .B(reg2hw[30]),
    .Y(\$auto$builder.cc:338:Biop$1475 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1476  (
    .A(\$auto$builder.cc:338:Biop$1475 ),
    .B(\gen_gpios[4].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1477 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1485  (
    .A(\$auto$builder.cc:364:Unop$1484 ),
    .B(\gen_gpios[5].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1486 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1489  (
    .A(\gen_gpios[5].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1488 ),
    .Y(\$auto$builder.cc:338:Biop$1490 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1497  (
    .A(reg2hw[40]),
    .B(\$auto$builder.cc:364:Unop$1496 ),
    .Y(\$auto$builder.cc:338:Biop$1498 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1499  (
    .A(reg2hw[40]),
    .B(reg2hw[41]),
    .Y(\$auto$builder.cc:338:Biop$1500 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1501  (
    .A(gpio_in_sync[5]),
    .B(\gen_gpios[5].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1502 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1503  (
    .A(reg2hw[39]),
    .B(\gen_gpios[5].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1504 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1506  (
    .A(\gen_gpios[5].is_output ),
    .B(reg2hw[38]),
    .Y(\$auto$builder.cc:338:Biop$1507 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1513  (
    .A(gpio_edge[5]),
    .B(reg2hw[37]),
    .Y(\$auto$builder.cc:338:Biop$1514 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1515  (
    .A(\$auto$builder.cc:338:Biop$1514 ),
    .B(\gen_gpios[5].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1516 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1524  (
    .A(\$auto$builder.cc:364:Unop$1523 ),
    .B(\gen_gpios[6].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1525 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1528  (
    .A(\gen_gpios[6].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1527 ),
    .Y(\$auto$builder.cc:338:Biop$1529 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1536  (
    .A(reg2hw[47]),
    .B(\$auto$builder.cc:364:Unop$1535 ),
    .Y(\$auto$builder.cc:338:Biop$1537 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1538  (
    .A(reg2hw[47]),
    .B(reg2hw[48]),
    .Y(\$auto$builder.cc:338:Biop$1539 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1540  (
    .A(gpio_in_sync[6]),
    .B(\gen_gpios[6].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1541 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1542  (
    .A(reg2hw[46]),
    .B(\gen_gpios[6].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1543 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1545  (
    .A(\gen_gpios[6].is_output ),
    .B(reg2hw[45]),
    .Y(\$auto$builder.cc:338:Biop$1546 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1552  (
    .A(gpio_edge[6]),
    .B(reg2hw[44]),
    .Y(\$auto$builder.cc:338:Biop$1553 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1554  (
    .A(\$auto$builder.cc:338:Biop$1553 ),
    .B(\gen_gpios[6].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1555 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1563  (
    .A(\$auto$builder.cc:364:Unop$1562 ),
    .B(\gen_gpios[7].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1564 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1567  (
    .A(\gen_gpios[7].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1566 ),
    .Y(\$auto$builder.cc:338:Biop$1568 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1575  (
    .A(reg2hw[54]),
    .B(\$auto$builder.cc:364:Unop$1574 ),
    .Y(\$auto$builder.cc:338:Biop$1576 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1577  (
    .A(reg2hw[54]),
    .B(reg2hw[55]),
    .Y(\$auto$builder.cc:338:Biop$1578 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1579  (
    .A(gpio_in_sync[7]),
    .B(\gen_gpios[7].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1580 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1581  (
    .A(reg2hw[53]),
    .B(\gen_gpios[7].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1582 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1584  (
    .A(\gen_gpios[7].is_output ),
    .B(reg2hw[52]),
    .Y(\$auto$builder.cc:338:Biop$1585 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1591  (
    .A(gpio_edge[7]),
    .B(reg2hw[51]),
    .Y(\$auto$builder.cc:338:Biop$1592 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1593  (
    .A(\$auto$builder.cc:338:Biop$1592 ),
    .B(\gen_gpios[7].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1594 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1602  (
    .A(\$auto$builder.cc:364:Unop$1601 ),
    .B(\gen_gpios[8].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1603 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1606  (
    .A(\gen_gpios[8].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1605 ),
    .Y(\$auto$builder.cc:338:Biop$1607 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1614  (
    .A(reg2hw[61]),
    .B(\$auto$builder.cc:364:Unop$1613 ),
    .Y(\$auto$builder.cc:338:Biop$1615 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1616  (
    .A(reg2hw[61]),
    .B(reg2hw[62]),
    .Y(\$auto$builder.cc:338:Biop$1617 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1618  (
    .A(gpio_in_sync[8]),
    .B(\gen_gpios[8].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1619 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1620  (
    .A(reg2hw[60]),
    .B(\gen_gpios[8].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1621 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1623  (
    .A(\gen_gpios[8].is_output ),
    .B(reg2hw[59]),
    .Y(\$auto$builder.cc:338:Biop$1624 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1630  (
    .A(gpio_edge[8]),
    .B(reg2hw[58]),
    .Y(\$auto$builder.cc:338:Biop$1631 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1632  (
    .A(\$auto$builder.cc:338:Biop$1631 ),
    .B(\gen_gpios[8].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1633 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1641  (
    .A(\$auto$builder.cc:364:Unop$1640 ),
    .B(\gen_gpios[9].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1642 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1645  (
    .A(\gen_gpios[9].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1644 ),
    .Y(\$auto$builder.cc:338:Biop$1646 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1653  (
    .A(reg2hw[68]),
    .B(\$auto$builder.cc:364:Unop$1652 ),
    .Y(\$auto$builder.cc:338:Biop$1654 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1655  (
    .A(reg2hw[68]),
    .B(reg2hw[69]),
    .Y(\$auto$builder.cc:338:Biop$1656 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1657  (
    .A(gpio_in_sync[9]),
    .B(\gen_gpios[9].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1658 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1659  (
    .A(reg2hw[67]),
    .B(\gen_gpios[9].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1660 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1662  (
    .A(\gen_gpios[9].is_output ),
    .B(reg2hw[66]),
    .Y(\$auto$builder.cc:338:Biop$1663 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1669  (
    .A(gpio_edge[9]),
    .B(reg2hw[65]),
    .Y(\$auto$builder.cc:338:Biop$1670 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1671  (
    .A(\$auto$builder.cc:338:Biop$1670 ),
    .B(\gen_gpios[9].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1672 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1680  (
    .A(\$auto$builder.cc:364:Unop$1679 ),
    .B(\gen_gpios[10].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1681 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1684  (
    .A(\gen_gpios[10].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1683 ),
    .Y(\$auto$builder.cc:338:Biop$1685 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1692  (
    .A(reg2hw[75]),
    .B(\$auto$builder.cc:364:Unop$1691 ),
    .Y(\$auto$builder.cc:338:Biop$1693 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1694  (
    .A(reg2hw[75]),
    .B(reg2hw[76]),
    .Y(\$auto$builder.cc:338:Biop$1695 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1696  (
    .A(gpio_in_sync[10]),
    .B(\gen_gpios[10].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1697 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1698  (
    .A(reg2hw[74]),
    .B(\gen_gpios[10].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1699 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1701  (
    .A(\gen_gpios[10].is_output ),
    .B(reg2hw[73]),
    .Y(\$auto$builder.cc:338:Biop$1702 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1708  (
    .A(gpio_edge[10]),
    .B(reg2hw[72]),
    .Y(\$auto$builder.cc:338:Biop$1709 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1710  (
    .A(\$auto$builder.cc:338:Biop$1709 ),
    .B(\gen_gpios[10].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1711 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1719  (
    .A(\$auto$builder.cc:364:Unop$1718 ),
    .B(\gen_gpios[11].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1720 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1723  (
    .A(\gen_gpios[11].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1722 ),
    .Y(\$auto$builder.cc:338:Biop$1724 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1731  (
    .A(reg2hw[82]),
    .B(\$auto$builder.cc:364:Unop$1730 ),
    .Y(\$auto$builder.cc:338:Biop$1732 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1733  (
    .A(reg2hw[82]),
    .B(reg2hw[83]),
    .Y(\$auto$builder.cc:338:Biop$1734 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1735  (
    .A(gpio_in_sync[11]),
    .B(\gen_gpios[11].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1736 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1737  (
    .A(reg2hw[81]),
    .B(\gen_gpios[11].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1738 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1740  (
    .A(\gen_gpios[11].is_output ),
    .B(reg2hw[80]),
    .Y(\$auto$builder.cc:338:Biop$1741 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1747  (
    .A(gpio_edge[11]),
    .B(reg2hw[79]),
    .Y(\$auto$builder.cc:338:Biop$1748 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1749  (
    .A(\$auto$builder.cc:338:Biop$1748 ),
    .B(\gen_gpios[11].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1750 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1758  (
    .A(\$auto$builder.cc:364:Unop$1757 ),
    .B(\gen_gpios[12].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1759 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1762  (
    .A(\gen_gpios[12].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1761 ),
    .Y(\$auto$builder.cc:338:Biop$1763 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1770  (
    .A(reg2hw[89]),
    .B(\$auto$builder.cc:364:Unop$1769 ),
    .Y(\$auto$builder.cc:338:Biop$1771 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1772  (
    .A(reg2hw[89]),
    .B(reg2hw[90]),
    .Y(\$auto$builder.cc:338:Biop$1773 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1774  (
    .A(gpio_in_sync[12]),
    .B(\gen_gpios[12].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1775 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1776  (
    .A(reg2hw[88]),
    .B(\gen_gpios[12].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1777 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1779  (
    .A(\gen_gpios[12].is_output ),
    .B(reg2hw[87]),
    .Y(\$auto$builder.cc:338:Biop$1780 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1786  (
    .A(gpio_edge[12]),
    .B(reg2hw[86]),
    .Y(\$auto$builder.cc:338:Biop$1787 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1788  (
    .A(\$auto$builder.cc:338:Biop$1787 ),
    .B(\gen_gpios[12].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1789 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1797  (
    .A(\$auto$builder.cc:364:Unop$1796 ),
    .B(\gen_gpios[13].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1798 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1801  (
    .A(\gen_gpios[13].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1800 ),
    .Y(\$auto$builder.cc:338:Biop$1802 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1809  (
    .A(reg2hw[96]),
    .B(\$auto$builder.cc:364:Unop$1808 ),
    .Y(\$auto$builder.cc:338:Biop$1810 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1811  (
    .A(reg2hw[96]),
    .B(reg2hw[97]),
    .Y(\$auto$builder.cc:338:Biop$1812 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1813  (
    .A(gpio_in_sync[13]),
    .B(\gen_gpios[13].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1814 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1815  (
    .A(reg2hw[95]),
    .B(\gen_gpios[13].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1816 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1818  (
    .A(\gen_gpios[13].is_output ),
    .B(reg2hw[94]),
    .Y(\$auto$builder.cc:338:Biop$1819 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1825  (
    .A(gpio_edge[13]),
    .B(reg2hw[93]),
    .Y(\$auto$builder.cc:338:Biop$1826 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1827  (
    .A(\$auto$builder.cc:338:Biop$1826 ),
    .B(\gen_gpios[13].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1828 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1836  (
    .A(\$auto$builder.cc:364:Unop$1835 ),
    .B(\gen_gpios[14].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1837 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1840  (
    .A(\gen_gpios[14].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1839 ),
    .Y(\$auto$builder.cc:338:Biop$1841 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1848  (
    .A(reg2hw[103]),
    .B(\$auto$builder.cc:364:Unop$1847 ),
    .Y(\$auto$builder.cc:338:Biop$1849 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1850  (
    .A(reg2hw[103]),
    .B(reg2hw[104]),
    .Y(\$auto$builder.cc:338:Biop$1851 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1852  (
    .A(gpio_in_sync[14]),
    .B(\gen_gpios[14].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1853 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1854  (
    .A(reg2hw[102]),
    .B(\gen_gpios[14].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1855 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1857  (
    .A(\gen_gpios[14].is_output ),
    .B(reg2hw[101]),
    .Y(\$auto$builder.cc:338:Biop$1858 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1864  (
    .A(gpio_edge[14]),
    .B(reg2hw[100]),
    .Y(\$auto$builder.cc:338:Biop$1865 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1866  (
    .A(\$auto$builder.cc:338:Biop$1865 ),
    .B(\gen_gpios[14].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1867 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1875  (
    .A(\$auto$builder.cc:364:Unop$1874 ),
    .B(\gen_gpios[15].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1876 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1879  (
    .A(\gen_gpios[15].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1878 ),
    .Y(\$auto$builder.cc:338:Biop$1880 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1887  (
    .A(reg2hw[110]),
    .B(\$auto$builder.cc:364:Unop$1886 ),
    .Y(\$auto$builder.cc:338:Biop$1888 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1889  (
    .A(reg2hw[110]),
    .B(reg2hw[111]),
    .Y(\$auto$builder.cc:338:Biop$1890 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1891  (
    .A(gpio_in_sync[15]),
    .B(\gen_gpios[15].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1892 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1893  (
    .A(reg2hw[109]),
    .B(\gen_gpios[15].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1894 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1896  (
    .A(\gen_gpios[15].is_output ),
    .B(reg2hw[108]),
    .Y(\$auto$builder.cc:338:Biop$1897 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1903  (
    .A(gpio_edge[15]),
    .B(reg2hw[107]),
    .Y(\$auto$builder.cc:338:Biop$1904 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1905  (
    .A(\$auto$builder.cc:338:Biop$1904 ),
    .B(\gen_gpios[15].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1906 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1914  (
    .A(\$auto$builder.cc:364:Unop$1913 ),
    .B(\gen_gpios[16].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1915 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1918  (
    .A(\gen_gpios[16].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1917 ),
    .Y(\$auto$builder.cc:338:Biop$1919 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1926  (
    .A(reg2hw[117]),
    .B(\$auto$builder.cc:364:Unop$1925 ),
    .Y(\$auto$builder.cc:338:Biop$1927 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1928  (
    .A(reg2hw[117]),
    .B(reg2hw[118]),
    .Y(\$auto$builder.cc:338:Biop$1929 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1930  (
    .A(gpio_in_sync[16]),
    .B(\gen_gpios[16].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1931 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1932  (
    .A(reg2hw[116]),
    .B(\gen_gpios[16].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1933 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1935  (
    .A(\gen_gpios[16].is_output ),
    .B(reg2hw[115]),
    .Y(\$auto$builder.cc:338:Biop$1936 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1942  (
    .A(gpio_edge[16]),
    .B(reg2hw[114]),
    .Y(\$auto$builder.cc:338:Biop$1943 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1944  (
    .A(\$auto$builder.cc:338:Biop$1943 ),
    .B(\gen_gpios[16].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1945 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1953  (
    .A(\$auto$builder.cc:364:Unop$1952 ),
    .B(\gen_gpios[17].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1954 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1957  (
    .A(\gen_gpios[17].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1956 ),
    .Y(\$auto$builder.cc:338:Biop$1958 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1965  (
    .A(reg2hw[124]),
    .B(\$auto$builder.cc:364:Unop$1964 ),
    .Y(\$auto$builder.cc:338:Biop$1966 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1967  (
    .A(reg2hw[124]),
    .B(reg2hw[125]),
    .Y(\$auto$builder.cc:338:Biop$1968 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1969  (
    .A(gpio_in_sync[17]),
    .B(\gen_gpios[17].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1970 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1971  (
    .A(reg2hw[123]),
    .B(\gen_gpios[17].is_output ),
    .Y(\$auto$builder.cc:338:Biop$1972 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1974  (
    .A(\gen_gpios[17].is_output ),
    .B(reg2hw[122]),
    .Y(\$auto$builder.cc:338:Biop$1975 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1981  (
    .A(gpio_edge[17]),
    .B(reg2hw[121]),
    .Y(\$auto$builder.cc:338:Biop$1982 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1983  (
    .A(\$auto$builder.cc:338:Biop$1982 ),
    .B(\gen_gpios[17].is_input ),
    .Y(\$auto$builder.cc:338:Biop$1984 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1992  (
    .A(\$auto$builder.cc:364:Unop$1991 ),
    .B(\gen_gpios[18].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$1993 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1996  (
    .A(\gen_gpios[18].serial_d ),
    .B(\$auto$builder.cc:364:Unop$1995 ),
    .Y(\$auto$builder.cc:338:Biop$1997 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2004  (
    .A(reg2hw[131]),
    .B(\$auto$builder.cc:364:Unop$2003 ),
    .Y(\$auto$builder.cc:338:Biop$2005 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2006  (
    .A(reg2hw[131]),
    .B(reg2hw[132]),
    .Y(\$auto$builder.cc:338:Biop$2007 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2008  (
    .A(gpio_in_sync[18]),
    .B(\gen_gpios[18].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2009 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2010  (
    .A(reg2hw[130]),
    .B(\gen_gpios[18].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2011 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2013  (
    .A(\gen_gpios[18].is_output ),
    .B(reg2hw[129]),
    .Y(\$auto$builder.cc:338:Biop$2014 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2020  (
    .A(gpio_edge[18]),
    .B(reg2hw[128]),
    .Y(\$auto$builder.cc:338:Biop$2021 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2022  (
    .A(\$auto$builder.cc:338:Biop$2021 ),
    .B(\gen_gpios[18].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2023 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2031  (
    .A(\$auto$builder.cc:364:Unop$2030 ),
    .B(\gen_gpios[19].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2032 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2035  (
    .A(\gen_gpios[19].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2034 ),
    .Y(\$auto$builder.cc:338:Biop$2036 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2043  (
    .A(reg2hw[138]),
    .B(\$auto$builder.cc:364:Unop$2042 ),
    .Y(\$auto$builder.cc:338:Biop$2044 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2045  (
    .A(reg2hw[138]),
    .B(reg2hw[139]),
    .Y(\$auto$builder.cc:338:Biop$2046 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2047  (
    .A(gpio_in_sync[19]),
    .B(\gen_gpios[19].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2048 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2049  (
    .A(reg2hw[137]),
    .B(\gen_gpios[19].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2050 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2052  (
    .A(\gen_gpios[19].is_output ),
    .B(reg2hw[136]),
    .Y(\$auto$builder.cc:338:Biop$2053 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2059  (
    .A(gpio_edge[19]),
    .B(reg2hw[135]),
    .Y(\$auto$builder.cc:338:Biop$2060 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2061  (
    .A(\$auto$builder.cc:338:Biop$2060 ),
    .B(\gen_gpios[19].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2062 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2070  (
    .A(\$auto$builder.cc:364:Unop$2069 ),
    .B(\gen_gpios[20].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2071 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2074  (
    .A(\gen_gpios[20].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2073 ),
    .Y(\$auto$builder.cc:338:Biop$2075 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2082  (
    .A(reg2hw[145]),
    .B(\$auto$builder.cc:364:Unop$2081 ),
    .Y(\$auto$builder.cc:338:Biop$2083 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2084  (
    .A(reg2hw[145]),
    .B(reg2hw[146]),
    .Y(\$auto$builder.cc:338:Biop$2085 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2086  (
    .A(gpio_in_sync[20]),
    .B(\gen_gpios[20].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2087 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2088  (
    .A(reg2hw[144]),
    .B(\gen_gpios[20].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2089 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2091  (
    .A(\gen_gpios[20].is_output ),
    .B(reg2hw[143]),
    .Y(\$auto$builder.cc:338:Biop$2092 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2098  (
    .A(gpio_edge[20]),
    .B(reg2hw[142]),
    .Y(\$auto$builder.cc:338:Biop$2099 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2100  (
    .A(\$auto$builder.cc:338:Biop$2099 ),
    .B(\gen_gpios[20].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2101 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2109  (
    .A(\$auto$builder.cc:364:Unop$2108 ),
    .B(\gen_gpios[21].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2110 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2113  (
    .A(\gen_gpios[21].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2112 ),
    .Y(\$auto$builder.cc:338:Biop$2114 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2121  (
    .A(reg2hw[152]),
    .B(\$auto$builder.cc:364:Unop$2120 ),
    .Y(\$auto$builder.cc:338:Biop$2122 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2123  (
    .A(reg2hw[152]),
    .B(reg2hw[153]),
    .Y(\$auto$builder.cc:338:Biop$2124 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2125  (
    .A(gpio_in_sync[21]),
    .B(\gen_gpios[21].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2126 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2127  (
    .A(reg2hw[151]),
    .B(\gen_gpios[21].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2128 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2130  (
    .A(\gen_gpios[21].is_output ),
    .B(reg2hw[150]),
    .Y(\$auto$builder.cc:338:Biop$2131 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2137  (
    .A(gpio_edge[21]),
    .B(reg2hw[149]),
    .Y(\$auto$builder.cc:338:Biop$2138 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2139  (
    .A(\$auto$builder.cc:338:Biop$2138 ),
    .B(\gen_gpios[21].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2140 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2148  (
    .A(\$auto$builder.cc:364:Unop$2147 ),
    .B(\gen_gpios[22].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2149 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2152  (
    .A(\gen_gpios[22].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2151 ),
    .Y(\$auto$builder.cc:338:Biop$2153 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2160  (
    .A(reg2hw[159]),
    .B(\$auto$builder.cc:364:Unop$2159 ),
    .Y(\$auto$builder.cc:338:Biop$2161 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2162  (
    .A(reg2hw[159]),
    .B(reg2hw[160]),
    .Y(\$auto$builder.cc:338:Biop$2163 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2164  (
    .A(gpio_in_sync[22]),
    .B(\gen_gpios[22].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2165 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2166  (
    .A(reg2hw[158]),
    .B(\gen_gpios[22].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2167 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2169  (
    .A(\gen_gpios[22].is_output ),
    .B(reg2hw[157]),
    .Y(\$auto$builder.cc:338:Biop$2170 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2176  (
    .A(gpio_edge[22]),
    .B(reg2hw[156]),
    .Y(\$auto$builder.cc:338:Biop$2177 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2178  (
    .A(\$auto$builder.cc:338:Biop$2177 ),
    .B(\gen_gpios[22].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2179 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2187  (
    .A(\$auto$builder.cc:364:Unop$2186 ),
    .B(\gen_gpios[23].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2188 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2191  (
    .A(\gen_gpios[23].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2190 ),
    .Y(\$auto$builder.cc:338:Biop$2192 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2199  (
    .A(reg2hw[166]),
    .B(\$auto$builder.cc:364:Unop$2198 ),
    .Y(\$auto$builder.cc:338:Biop$2200 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2201  (
    .A(reg2hw[166]),
    .B(reg2hw[167]),
    .Y(\$auto$builder.cc:338:Biop$2202 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2203  (
    .A(gpio_in_sync[23]),
    .B(\gen_gpios[23].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2204 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2205  (
    .A(reg2hw[165]),
    .B(\gen_gpios[23].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2206 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2208  (
    .A(\gen_gpios[23].is_output ),
    .B(reg2hw[164]),
    .Y(\$auto$builder.cc:338:Biop$2209 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2215  (
    .A(gpio_edge[23]),
    .B(reg2hw[163]),
    .Y(\$auto$builder.cc:338:Biop$2216 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2217  (
    .A(\$auto$builder.cc:338:Biop$2216 ),
    .B(\gen_gpios[23].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2218 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2226  (
    .A(\$auto$builder.cc:364:Unop$2225 ),
    .B(\gen_gpios[24].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2227 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2230  (
    .A(\gen_gpios[24].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2229 ),
    .Y(\$auto$builder.cc:338:Biop$2231 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2238  (
    .A(reg2hw[173]),
    .B(\$auto$builder.cc:364:Unop$2237 ),
    .Y(\$auto$builder.cc:338:Biop$2239 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2240  (
    .A(reg2hw[173]),
    .B(reg2hw[174]),
    .Y(\$auto$builder.cc:338:Biop$2241 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2242  (
    .A(gpio_in_sync[24]),
    .B(\gen_gpios[24].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2243 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2244  (
    .A(reg2hw[172]),
    .B(\gen_gpios[24].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2245 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2247  (
    .A(\gen_gpios[24].is_output ),
    .B(reg2hw[171]),
    .Y(\$auto$builder.cc:338:Biop$2248 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2254  (
    .A(gpio_edge[24]),
    .B(reg2hw[170]),
    .Y(\$auto$builder.cc:338:Biop$2255 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2256  (
    .A(\$auto$builder.cc:338:Biop$2255 ),
    .B(\gen_gpios[24].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2257 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2265  (
    .A(\$auto$builder.cc:364:Unop$2264 ),
    .B(\gen_gpios[25].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2266 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2269  (
    .A(\gen_gpios[25].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2268 ),
    .Y(\$auto$builder.cc:338:Biop$2270 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2277  (
    .A(reg2hw[180]),
    .B(\$auto$builder.cc:364:Unop$2276 ),
    .Y(\$auto$builder.cc:338:Biop$2278 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2279  (
    .A(reg2hw[180]),
    .B(reg2hw[181]),
    .Y(\$auto$builder.cc:338:Biop$2280 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2281  (
    .A(gpio_in_sync[25]),
    .B(\gen_gpios[25].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2282 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2283  (
    .A(reg2hw[179]),
    .B(\gen_gpios[25].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2284 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2286  (
    .A(\gen_gpios[25].is_output ),
    .B(reg2hw[178]),
    .Y(\$auto$builder.cc:338:Biop$2287 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2293  (
    .A(gpio_edge[25]),
    .B(reg2hw[177]),
    .Y(\$auto$builder.cc:338:Biop$2294 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2295  (
    .A(\$auto$builder.cc:338:Biop$2294 ),
    .B(\gen_gpios[25].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2296 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2304  (
    .A(\$auto$builder.cc:364:Unop$2303 ),
    .B(\gen_gpios[26].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2305 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2308  (
    .A(\gen_gpios[26].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2307 ),
    .Y(\$auto$builder.cc:338:Biop$2309 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2316  (
    .A(reg2hw[187]),
    .B(\$auto$builder.cc:364:Unop$2315 ),
    .Y(\$auto$builder.cc:338:Biop$2317 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2318  (
    .A(reg2hw[187]),
    .B(reg2hw[188]),
    .Y(\$auto$builder.cc:338:Biop$2319 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2320  (
    .A(gpio_in_sync[26]),
    .B(\gen_gpios[26].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2321 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2322  (
    .A(reg2hw[186]),
    .B(\gen_gpios[26].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2323 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2325  (
    .A(\gen_gpios[26].is_output ),
    .B(reg2hw[185]),
    .Y(\$auto$builder.cc:338:Biop$2326 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2332  (
    .A(gpio_edge[26]),
    .B(reg2hw[184]),
    .Y(\$auto$builder.cc:338:Biop$2333 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2334  (
    .A(\$auto$builder.cc:338:Biop$2333 ),
    .B(\gen_gpios[26].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2335 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2343  (
    .A(\$auto$builder.cc:364:Unop$2342 ),
    .B(\gen_gpios[27].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2344 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2347  (
    .A(\gen_gpios[27].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2346 ),
    .Y(\$auto$builder.cc:338:Biop$2348 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2355  (
    .A(reg2hw[194]),
    .B(\$auto$builder.cc:364:Unop$2354 ),
    .Y(\$auto$builder.cc:338:Biop$2356 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2357  (
    .A(reg2hw[194]),
    .B(reg2hw[195]),
    .Y(\$auto$builder.cc:338:Biop$2358 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2359  (
    .A(gpio_in_sync[27]),
    .B(\gen_gpios[27].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2360 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2361  (
    .A(reg2hw[193]),
    .B(\gen_gpios[27].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2362 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2364  (
    .A(\gen_gpios[27].is_output ),
    .B(reg2hw[192]),
    .Y(\$auto$builder.cc:338:Biop$2365 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2371  (
    .A(gpio_edge[27]),
    .B(reg2hw[191]),
    .Y(\$auto$builder.cc:338:Biop$2372 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2373  (
    .A(\$auto$builder.cc:338:Biop$2372 ),
    .B(\gen_gpios[27].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2374 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2382  (
    .A(\$auto$builder.cc:364:Unop$2381 ),
    .B(\gen_gpios[28].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2383 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2386  (
    .A(\gen_gpios[28].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2385 ),
    .Y(\$auto$builder.cc:338:Biop$2387 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2394  (
    .A(reg2hw[201]),
    .B(\$auto$builder.cc:364:Unop$2393 ),
    .Y(\$auto$builder.cc:338:Biop$2395 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2396  (
    .A(reg2hw[201]),
    .B(reg2hw[202]),
    .Y(\$auto$builder.cc:338:Biop$2397 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2398  (
    .A(gpio_in_sync[28]),
    .B(\gen_gpios[28].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2399 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2400  (
    .A(reg2hw[200]),
    .B(\gen_gpios[28].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2401 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2403  (
    .A(\gen_gpios[28].is_output ),
    .B(reg2hw[199]),
    .Y(\$auto$builder.cc:338:Biop$2404 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2410  (
    .A(gpio_edge[28]),
    .B(reg2hw[198]),
    .Y(\$auto$builder.cc:338:Biop$2411 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2412  (
    .A(\$auto$builder.cc:338:Biop$2411 ),
    .B(\gen_gpios[28].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2413 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2421  (
    .A(\$auto$builder.cc:364:Unop$2420 ),
    .B(\gen_gpios[29].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2422 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2425  (
    .A(\gen_gpios[29].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2424 ),
    .Y(\$auto$builder.cc:338:Biop$2426 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2433  (
    .A(reg2hw[208]),
    .B(\$auto$builder.cc:364:Unop$2432 ),
    .Y(\$auto$builder.cc:338:Biop$2434 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2435  (
    .A(reg2hw[208]),
    .B(reg2hw[209]),
    .Y(\$auto$builder.cc:338:Biop$2436 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2437  (
    .A(gpio_in_sync[29]),
    .B(\gen_gpios[29].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2438 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2439  (
    .A(reg2hw[207]),
    .B(\gen_gpios[29].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2440 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2442  (
    .A(\gen_gpios[29].is_output ),
    .B(reg2hw[206]),
    .Y(\$auto$builder.cc:338:Biop$2443 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2449  (
    .A(gpio_edge[29]),
    .B(reg2hw[205]),
    .Y(\$auto$builder.cc:338:Biop$2450 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2451  (
    .A(\$auto$builder.cc:338:Biop$2450 ),
    .B(\gen_gpios[29].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2452 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2460  (
    .A(\$auto$builder.cc:364:Unop$2459 ),
    .B(\gen_gpios[30].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2461 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2464  (
    .A(\gen_gpios[30].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2463 ),
    .Y(\$auto$builder.cc:338:Biop$2465 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2472  (
    .A(reg2hw[215]),
    .B(\$auto$builder.cc:364:Unop$2471 ),
    .Y(\$auto$builder.cc:338:Biop$2473 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2474  (
    .A(reg2hw[215]),
    .B(reg2hw[216]),
    .Y(\$auto$builder.cc:338:Biop$2475 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2476  (
    .A(gpio_in_sync[30]),
    .B(\gen_gpios[30].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2477 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2478  (
    .A(reg2hw[214]),
    .B(\gen_gpios[30].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2479 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2481  (
    .A(\gen_gpios[30].is_output ),
    .B(reg2hw[213]),
    .Y(\$auto$builder.cc:338:Biop$2482 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2488  (
    .A(gpio_edge[30]),
    .B(reg2hw[212]),
    .Y(\$auto$builder.cc:338:Biop$2489 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2490  (
    .A(\$auto$builder.cc:338:Biop$2489 ),
    .B(\gen_gpios[30].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2491 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2499  (
    .A(\$auto$builder.cc:364:Unop$2498 ),
    .B(\gen_gpios[31].serial_q ),
    .Y(\$auto$builder.cc:338:Biop$2500 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2503  (
    .A(\gen_gpios[31].serial_d ),
    .B(\$auto$builder.cc:364:Unop$2502 ),
    .Y(\$auto$builder.cc:338:Biop$2504 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2511  (
    .A(reg2hw[222]),
    .B(\$auto$builder.cc:364:Unop$2510 ),
    .Y(\$auto$builder.cc:338:Biop$2512 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2513  (
    .A(reg2hw[222]),
    .B(reg2hw[223]),
    .Y(\$auto$builder.cc:338:Biop$2514 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2515  (
    .A(gpio_in_sync[31]),
    .B(\gen_gpios[31].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2516 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2517  (
    .A(reg2hw[221]),
    .B(\gen_gpios[31].is_output ),
    .Y(\$auto$builder.cc:338:Biop$2518 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2520  (
    .A(\gen_gpios[31].is_output ),
    .B(reg2hw[220]),
    .Y(\$auto$builder.cc:338:Biop$2521 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2527  (
    .A(gpio_edge[31]),
    .B(reg2hw[219]),
    .Y(\$auto$builder.cc:338:Biop$2528 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2529  (
    .A(\$auto$builder.cc:338:Biop$2528 ),
    .B(\gen_gpios[31].is_input ),
    .Y(\$auto$builder.cc:338:Biop$2530 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2538  (
    .A(\$auto$builder.cc:338:Biop$2536 ),
    .B(reg2hw[8]),
    .Y(\$auto$builder.cc:338:Biop$2539 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2541  (
    .A(\$auto$builder.cc:338:Biop$2539 ),
    .B(reg2hw[15]),
    .Y(\$auto$builder.cc:338:Biop$2542 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2544  (
    .A(\$auto$builder.cc:338:Biop$2542 ),
    .B(reg2hw[22]),
    .Y(\$auto$builder.cc:338:Biop$2545 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2547  (
    .A(\$auto$builder.cc:338:Biop$2545 ),
    .B(reg2hw[29]),
    .Y(\$auto$builder.cc:338:Biop$2548 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2550  (
    .A(\$auto$builder.cc:338:Biop$2548 ),
    .B(reg2hw[36]),
    .Y(\$auto$builder.cc:338:Biop$2551 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2553  (
    .A(\$auto$builder.cc:338:Biop$2551 ),
    .B(reg2hw[43]),
    .Y(\$auto$builder.cc:338:Biop$2554 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2556  (
    .A(\$auto$builder.cc:338:Biop$2554 ),
    .B(reg2hw[50]),
    .Y(\$auto$builder.cc:338:Biop$2557 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2559  (
    .A(\$auto$builder.cc:338:Biop$2557 ),
    .B(reg2hw[57]),
    .Y(\$auto$builder.cc:338:Biop$2560 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2562  (
    .A(\$auto$builder.cc:338:Biop$2560 ),
    .B(reg2hw[64]),
    .Y(\$auto$builder.cc:338:Biop$2563 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2565  (
    .A(\$auto$builder.cc:338:Biop$2563 ),
    .B(reg2hw[71]),
    .Y(\$auto$builder.cc:338:Biop$2566 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2568  (
    .A(\$auto$builder.cc:338:Biop$2566 ),
    .B(reg2hw[78]),
    .Y(\$auto$builder.cc:338:Biop$2569 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2571  (
    .A(\$auto$builder.cc:338:Biop$2569 ),
    .B(reg2hw[85]),
    .Y(\$auto$builder.cc:338:Biop$2572 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2574  (
    .A(\$auto$builder.cc:338:Biop$2572 ),
    .B(reg2hw[92]),
    .Y(\$auto$builder.cc:338:Biop$2575 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2577  (
    .A(\$auto$builder.cc:338:Biop$2575 ),
    .B(reg2hw[99]),
    .Y(\$auto$builder.cc:338:Biop$2578 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2580  (
    .A(\$auto$builder.cc:338:Biop$2578 ),
    .B(reg2hw[106]),
    .Y(\$auto$builder.cc:338:Biop$2581 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2583  (
    .A(\$auto$builder.cc:338:Biop$2581 ),
    .B(reg2hw[113]),
    .Y(\$auto$builder.cc:338:Biop$2584 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2586  (
    .A(\$auto$builder.cc:338:Biop$2584 ),
    .B(reg2hw[120]),
    .Y(\$auto$builder.cc:338:Biop$2587 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2589  (
    .A(\$auto$builder.cc:338:Biop$2587 ),
    .B(reg2hw[127]),
    .Y(\$auto$builder.cc:338:Biop$2590 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2592  (
    .A(\$auto$builder.cc:338:Biop$2590 ),
    .B(reg2hw[134]),
    .Y(\$auto$builder.cc:338:Biop$2593 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2595  (
    .A(\$auto$builder.cc:338:Biop$2593 ),
    .B(reg2hw[141]),
    .Y(\$auto$builder.cc:338:Biop$2596 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2598  (
    .A(\$auto$builder.cc:338:Biop$2596 ),
    .B(reg2hw[148]),
    .Y(\$auto$builder.cc:338:Biop$2599 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2601  (
    .A(\$auto$builder.cc:338:Biop$2599 ),
    .B(reg2hw[155]),
    .Y(\$auto$builder.cc:338:Biop$2602 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2604  (
    .A(\$auto$builder.cc:338:Biop$2602 ),
    .B(reg2hw[162]),
    .Y(\$auto$builder.cc:338:Biop$2605 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2607  (
    .A(\$auto$builder.cc:338:Biop$2605 ),
    .B(reg2hw[169]),
    .Y(\$auto$builder.cc:338:Biop$2608 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2610  (
    .A(\$auto$builder.cc:338:Biop$2608 ),
    .B(reg2hw[176]),
    .Y(\$auto$builder.cc:338:Biop$2611 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2613  (
    .A(\$auto$builder.cc:338:Biop$2611 ),
    .B(reg2hw[183]),
    .Y(\$auto$builder.cc:338:Biop$2614 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2616  (
    .A(\$auto$builder.cc:338:Biop$2614 ),
    .B(reg2hw[190]),
    .Y(\$auto$builder.cc:338:Biop$2617 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2619  (
    .A(\$auto$builder.cc:338:Biop$2617 ),
    .B(reg2hw[197]),
    .Y(\$auto$builder.cc:338:Biop$2620 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2622  (
    .A(\$auto$builder.cc:338:Biop$2620 ),
    .B(reg2hw[204]),
    .Y(\$auto$builder.cc:338:Biop$2623 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2625  (
    .A(\$auto$builder.cc:338:Biop$2623 ),
    .B(reg2hw[211]),
    .Y(\$auto$builder.cc:338:Biop$2626 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2628  (
    .A(\$auto$builder.cc:338:Biop$2626 ),
    .B(reg2hw[218]),
    .Y(\$auto$builder.cc:338:Biop$2629 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1288  (
    .A(\gen_gpios[0].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1289 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1292  (
    .A(\gen_gpios[0].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1293 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1300  (
    .A(reg2hw[6]),
    .Y(\$auto$builder.cc:364:Unop$1301 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1315  (
    .A(reg2hw[4]),
    .Y(\$auto$builder.cc:364:Unop$1316 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1327  (
    .A(\gen_gpios[1].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1328 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1331  (
    .A(\gen_gpios[1].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1332 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1339  (
    .A(reg2hw[13]),
    .Y(\$auto$builder.cc:364:Unop$1340 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1354  (
    .A(reg2hw[11]),
    .Y(\$auto$builder.cc:364:Unop$1355 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1366  (
    .A(\gen_gpios[2].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1367 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1370  (
    .A(\gen_gpios[2].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1371 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1378  (
    .A(reg2hw[20]),
    .Y(\$auto$builder.cc:364:Unop$1379 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1393  (
    .A(reg2hw[18]),
    .Y(\$auto$builder.cc:364:Unop$1394 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1405  (
    .A(\gen_gpios[3].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1406 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1409  (
    .A(\gen_gpios[3].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1410 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1417  (
    .A(reg2hw[27]),
    .Y(\$auto$builder.cc:364:Unop$1418 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1432  (
    .A(reg2hw[25]),
    .Y(\$auto$builder.cc:364:Unop$1433 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1444  (
    .A(\gen_gpios[4].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1445 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1448  (
    .A(\gen_gpios[4].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1449 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1456  (
    .A(reg2hw[34]),
    .Y(\$auto$builder.cc:364:Unop$1457 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1471  (
    .A(reg2hw[32]),
    .Y(\$auto$builder.cc:364:Unop$1472 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1483  (
    .A(\gen_gpios[5].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1484 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1487  (
    .A(\gen_gpios[5].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1488 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1495  (
    .A(reg2hw[41]),
    .Y(\$auto$builder.cc:364:Unop$1496 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1510  (
    .A(reg2hw[39]),
    .Y(\$auto$builder.cc:364:Unop$1511 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1522  (
    .A(\gen_gpios[6].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1523 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1526  (
    .A(\gen_gpios[6].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1527 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1534  (
    .A(reg2hw[48]),
    .Y(\$auto$builder.cc:364:Unop$1535 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1549  (
    .A(reg2hw[46]),
    .Y(\$auto$builder.cc:364:Unop$1550 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1561  (
    .A(\gen_gpios[7].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1562 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1565  (
    .A(\gen_gpios[7].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1566 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1573  (
    .A(reg2hw[55]),
    .Y(\$auto$builder.cc:364:Unop$1574 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1588  (
    .A(reg2hw[53]),
    .Y(\$auto$builder.cc:364:Unop$1589 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1600  (
    .A(\gen_gpios[8].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1601 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1604  (
    .A(\gen_gpios[8].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1605 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1612  (
    .A(reg2hw[62]),
    .Y(\$auto$builder.cc:364:Unop$1613 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1627  (
    .A(reg2hw[60]),
    .Y(\$auto$builder.cc:364:Unop$1628 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1639  (
    .A(\gen_gpios[9].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1640 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1643  (
    .A(\gen_gpios[9].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1644 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1651  (
    .A(reg2hw[69]),
    .Y(\$auto$builder.cc:364:Unop$1652 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1666  (
    .A(reg2hw[67]),
    .Y(\$auto$builder.cc:364:Unop$1667 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1678  (
    .A(\gen_gpios[10].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1679 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1682  (
    .A(\gen_gpios[10].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1683 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1690  (
    .A(reg2hw[76]),
    .Y(\$auto$builder.cc:364:Unop$1691 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1705  (
    .A(reg2hw[74]),
    .Y(\$auto$builder.cc:364:Unop$1706 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1717  (
    .A(\gen_gpios[11].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1718 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1721  (
    .A(\gen_gpios[11].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1722 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1729  (
    .A(reg2hw[83]),
    .Y(\$auto$builder.cc:364:Unop$1730 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1744  (
    .A(reg2hw[81]),
    .Y(\$auto$builder.cc:364:Unop$1745 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1756  (
    .A(\gen_gpios[12].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1757 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1760  (
    .A(\gen_gpios[12].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1761 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1768  (
    .A(reg2hw[90]),
    .Y(\$auto$builder.cc:364:Unop$1769 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1783  (
    .A(reg2hw[88]),
    .Y(\$auto$builder.cc:364:Unop$1784 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1795  (
    .A(\gen_gpios[13].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1796 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1799  (
    .A(\gen_gpios[13].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1800 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1807  (
    .A(reg2hw[97]),
    .Y(\$auto$builder.cc:364:Unop$1808 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1822  (
    .A(reg2hw[95]),
    .Y(\$auto$builder.cc:364:Unop$1823 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1834  (
    .A(\gen_gpios[14].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1835 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1838  (
    .A(\gen_gpios[14].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1839 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1846  (
    .A(reg2hw[104]),
    .Y(\$auto$builder.cc:364:Unop$1847 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1861  (
    .A(reg2hw[102]),
    .Y(\$auto$builder.cc:364:Unop$1862 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1873  (
    .A(\gen_gpios[15].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1874 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1877  (
    .A(\gen_gpios[15].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1878 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1885  (
    .A(reg2hw[111]),
    .Y(\$auto$builder.cc:364:Unop$1886 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1900  (
    .A(reg2hw[109]),
    .Y(\$auto$builder.cc:364:Unop$1901 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1912  (
    .A(\gen_gpios[16].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1913 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1916  (
    .A(\gen_gpios[16].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1917 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1924  (
    .A(reg2hw[118]),
    .Y(\$auto$builder.cc:364:Unop$1925 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1939  (
    .A(reg2hw[116]),
    .Y(\$auto$builder.cc:364:Unop$1940 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1951  (
    .A(\gen_gpios[17].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1952 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1955  (
    .A(\gen_gpios[17].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1956 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1963  (
    .A(reg2hw[125]),
    .Y(\$auto$builder.cc:364:Unop$1964 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1978  (
    .A(reg2hw[123]),
    .Y(\$auto$builder.cc:364:Unop$1979 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1990  (
    .A(\gen_gpios[18].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$1991 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1994  (
    .A(\gen_gpios[18].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$1995 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2002  (
    .A(reg2hw[132]),
    .Y(\$auto$builder.cc:364:Unop$2003 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2017  (
    .A(reg2hw[130]),
    .Y(\$auto$builder.cc:364:Unop$2018 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2029  (
    .A(\gen_gpios[19].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2030 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2033  (
    .A(\gen_gpios[19].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2034 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2041  (
    .A(reg2hw[139]),
    .Y(\$auto$builder.cc:364:Unop$2042 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2056  (
    .A(reg2hw[137]),
    .Y(\$auto$builder.cc:364:Unop$2057 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2068  (
    .A(\gen_gpios[20].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2069 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2072  (
    .A(\gen_gpios[20].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2073 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2080  (
    .A(reg2hw[146]),
    .Y(\$auto$builder.cc:364:Unop$2081 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2095  (
    .A(reg2hw[144]),
    .Y(\$auto$builder.cc:364:Unop$2096 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2107  (
    .A(\gen_gpios[21].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2108 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2111  (
    .A(\gen_gpios[21].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2112 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2119  (
    .A(reg2hw[153]),
    .Y(\$auto$builder.cc:364:Unop$2120 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2134  (
    .A(reg2hw[151]),
    .Y(\$auto$builder.cc:364:Unop$2135 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2146  (
    .A(\gen_gpios[22].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2147 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2150  (
    .A(\gen_gpios[22].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2151 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2158  (
    .A(reg2hw[160]),
    .Y(\$auto$builder.cc:364:Unop$2159 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2173  (
    .A(reg2hw[158]),
    .Y(\$auto$builder.cc:364:Unop$2174 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2185  (
    .A(\gen_gpios[23].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2186 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2189  (
    .A(\gen_gpios[23].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2190 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2197  (
    .A(reg2hw[167]),
    .Y(\$auto$builder.cc:364:Unop$2198 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2212  (
    .A(reg2hw[165]),
    .Y(\$auto$builder.cc:364:Unop$2213 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2224  (
    .A(\gen_gpios[24].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2225 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2228  (
    .A(\gen_gpios[24].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2229 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2236  (
    .A(reg2hw[174]),
    .Y(\$auto$builder.cc:364:Unop$2237 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2251  (
    .A(reg2hw[172]),
    .Y(\$auto$builder.cc:364:Unop$2252 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2263  (
    .A(\gen_gpios[25].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2264 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2267  (
    .A(\gen_gpios[25].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2268 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2275  (
    .A(reg2hw[181]),
    .Y(\$auto$builder.cc:364:Unop$2276 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2290  (
    .A(reg2hw[179]),
    .Y(\$auto$builder.cc:364:Unop$2291 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2302  (
    .A(\gen_gpios[26].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2303 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2306  (
    .A(\gen_gpios[26].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2307 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2314  (
    .A(reg2hw[188]),
    .Y(\$auto$builder.cc:364:Unop$2315 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2329  (
    .A(reg2hw[186]),
    .Y(\$auto$builder.cc:364:Unop$2330 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2341  (
    .A(\gen_gpios[27].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2342 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2345  (
    .A(\gen_gpios[27].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2346 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2353  (
    .A(reg2hw[195]),
    .Y(\$auto$builder.cc:364:Unop$2354 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2368  (
    .A(reg2hw[193]),
    .Y(\$auto$builder.cc:364:Unop$2369 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2380  (
    .A(\gen_gpios[28].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2381 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2384  (
    .A(\gen_gpios[28].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2385 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2392  (
    .A(reg2hw[202]),
    .Y(\$auto$builder.cc:364:Unop$2393 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2407  (
    .A(reg2hw[200]),
    .Y(\$auto$builder.cc:364:Unop$2408 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2419  (
    .A(\gen_gpios[29].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2420 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2423  (
    .A(\gen_gpios[29].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2424 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2431  (
    .A(reg2hw[209]),
    .Y(\$auto$builder.cc:364:Unop$2432 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2446  (
    .A(reg2hw[207]),
    .Y(\$auto$builder.cc:364:Unop$2447 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2458  (
    .A(\gen_gpios[30].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2459 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2462  (
    .A(\gen_gpios[30].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2463 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2470  (
    .A(reg2hw[216]),
    .Y(\$auto$builder.cc:364:Unop$2471 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2485  (
    .A(reg2hw[214]),
    .Y(\$auto$builder.cc:364:Unop$2486 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2497  (
    .A(\gen_gpios[31].serial_d ),
    .Y(\$auto$builder.cc:364:Unop$2498 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2501  (
    .A(\gen_gpios[31].serial_q ),
    .Y(\$auto$builder.cc:364:Unop$2502 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2509  (
    .A(reg2hw[223]),
    .Y(\$auto$builder.cc:364:Unop$2510 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2524  (
    .A(reg2hw[221]),
    .Y(\$auto$builder.cc:364:Unop$2525 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1298  (
    .A(\gen_gpios[0].f_edge ),
    .B(\gen_gpios[0].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1297 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1299 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1337  (
    .A(\gen_gpios[1].f_edge ),
    .B(\gen_gpios[1].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1336 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1338 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1376  (
    .A(\gen_gpios[2].f_edge ),
    .B(\gen_gpios[2].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1375 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1377 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1415  (
    .A(\gen_gpios[3].f_edge ),
    .B(\gen_gpios[3].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1414 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1416 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1454  (
    .A(\gen_gpios[4].f_edge ),
    .B(\gen_gpios[4].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1453 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1455 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1493  (
    .A(\gen_gpios[5].f_edge ),
    .B(\gen_gpios[5].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1492 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1494 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1532  (
    .A(\gen_gpios[6].f_edge ),
    .B(\gen_gpios[6].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1531 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1533 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1571  (
    .A(\gen_gpios[7].f_edge ),
    .B(\gen_gpios[7].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1570 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1572 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1610  (
    .A(\gen_gpios[8].f_edge ),
    .B(\gen_gpios[8].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1609 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1611 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1649  (
    .A(\gen_gpios[9].f_edge ),
    .B(\gen_gpios[9].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1648 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1650 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1688  (
    .A(\gen_gpios[10].f_edge ),
    .B(\gen_gpios[10].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1687 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1689 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1727  (
    .A(\gen_gpios[11].f_edge ),
    .B(\gen_gpios[11].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1726 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1728 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1766  (
    .A(\gen_gpios[12].f_edge ),
    .B(\gen_gpios[12].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1765 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1767 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1805  (
    .A(\gen_gpios[13].f_edge ),
    .B(\gen_gpios[13].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1804 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1806 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1844  (
    .A(\gen_gpios[14].f_edge ),
    .B(\gen_gpios[14].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1843 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1845 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1883  (
    .A(\gen_gpios[15].f_edge ),
    .B(\gen_gpios[15].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1882 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1884 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1922  (
    .A(\gen_gpios[16].f_edge ),
    .B(\gen_gpios[16].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1921 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1923 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1961  (
    .A(\gen_gpios[17].f_edge ),
    .B(\gen_gpios[17].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1960 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1962 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2000  (
    .A(\gen_gpios[18].f_edge ),
    .B(\gen_gpios[18].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1999 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2001 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2039  (
    .A(\gen_gpios[19].f_edge ),
    .B(\gen_gpios[19].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2038 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2040 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2078  (
    .A(\gen_gpios[20].f_edge ),
    .B(\gen_gpios[20].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2077 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2079 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2117  (
    .A(\gen_gpios[21].f_edge ),
    .B(\gen_gpios[21].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2116 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2118 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2156  (
    .A(\gen_gpios[22].f_edge ),
    .B(\gen_gpios[22].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2155 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2157 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2195  (
    .A(\gen_gpios[23].f_edge ),
    .B(\gen_gpios[23].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2194 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2196 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2234  (
    .A(\gen_gpios[24].f_edge ),
    .B(\gen_gpios[24].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2233 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2235 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2273  (
    .A(\gen_gpios[25].f_edge ),
    .B(\gen_gpios[25].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2272 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2274 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2312  (
    .A(\gen_gpios[26].f_edge ),
    .B(\gen_gpios[26].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2311 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2313 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2351  (
    .A(\gen_gpios[27].f_edge ),
    .B(\gen_gpios[27].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2350 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2352 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2390  (
    .A(\gen_gpios[28].f_edge ),
    .B(\gen_gpios[28].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2389 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2391 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2429  (
    .A(\gen_gpios[29].f_edge ),
    .B(\gen_gpios[29].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2428 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2430 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2468  (
    .A(\gen_gpios[30].f_edge ),
    .B(\gen_gpios[30].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2467 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2469 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$2507  (
    .A(\gen_gpios[31].f_edge ),
    .B(\gen_gpios[31].r_edge ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$2506 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2508 )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[0].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[0].serial_d ),
    .Q(\gen_gpios[0].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[10].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[10].serial_d ),
    .Q(\gen_gpios[10].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[11].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[11].serial_d ),
    .Q(\gen_gpios[11].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[12].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[12].serial_d ),
    .Q(\gen_gpios[12].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[13].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[13].serial_d ),
    .Q(\gen_gpios[13].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[14].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[14].serial_d ),
    .Q(\gen_gpios[14].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[15].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[15].serial_d ),
    .Q(\gen_gpios[15].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[16].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[16].serial_d ),
    .Q(\gen_gpios[16].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[17].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[17].serial_d ),
    .Q(\gen_gpios[17].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[18].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[18].serial_d ),
    .Q(\gen_gpios[18].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[19].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[19].serial_d ),
    .Q(\gen_gpios[19].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[1].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[1].serial_d ),
    .Q(\gen_gpios[1].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[20].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[20].serial_d ),
    .Q(\gen_gpios[20].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[21].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[21].serial_d ),
    .Q(\gen_gpios[21].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[22].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[22].serial_d ),
    .Q(\gen_gpios[22].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[23].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[23].serial_d ),
    .Q(\gen_gpios[23].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[24].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[24].serial_d ),
    .Q(\gen_gpios[24].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[25].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[25].serial_d ),
    .Q(\gen_gpios[25].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[26].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[26].serial_d ),
    .Q(\gen_gpios[26].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[27].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[27].serial_d ),
    .Q(\gen_gpios[27].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[28].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[28].serial_d ),
    .Q(\gen_gpios[28].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[29].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[29].serial_d ),
    .Q(\gen_gpios[29].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[2].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[2].serial_d ),
    .Q(\gen_gpios[2].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[30].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[30].serial_d ),
    .Q(\gen_gpios[30].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[31].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[31].serial_d ),
    .Q(\gen_gpios[31].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[3].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[3].serial_d ),
    .Q(\gen_gpios[3].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[4].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[4].serial_d ),
    .Q(\gen_gpios[4].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[5].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[5].serial_d ),
    .Q(\gen_gpios[5].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[6].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[6].serial_d ),
    .Q(\gen_gpios[6].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[7].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[7].serial_d ),
    .Q(\gen_gpios[7].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[8].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[8].serial_d ),
    .Q(\gen_gpios[8].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[9].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[9].serial_d ),
    .Q(\gen_gpios[9].serial_q )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15299  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1901 , 1'h1 }),
    .S(\$procmux$15300_CMP ),
    .Y(\$procmux$15299_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15301  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2213 , 1'h1 }),
    .S(\$procmux$15302_CMP ),
    .Y(\$procmux$15301_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15303  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1862 , 1'h1 }),
    .S(\$procmux$15304_CMP ),
    .Y(\$procmux$15303_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15305  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2369 , 1'h1 }),
    .S(\$procmux$15306_CMP ),
    .Y(\$procmux$15305_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15307  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1823 , 1'h1 }),
    .S(\$procmux$15308_CMP ),
    .Y(\$procmux$15307_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15309  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2174 , 1'h1 }),
    .S(\$procmux$15310_CMP ),
    .Y(\$procmux$15309_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15311  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1784 , 1'h1 }),
    .S(\$procmux$15312_CMP ),
    .Y(\$procmux$15311_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15313  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2447 , 1'h1 }),
    .S(\$procmux$15314_CMP ),
    .Y(\$procmux$15313_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15315  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1745 , 1'h1 }),
    .S(\$procmux$15316_CMP ),
    .Y(\$procmux$15315_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15317  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2135 , 1'h1 }),
    .S(\$procmux$15318_CMP ),
    .Y(\$procmux$15317_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15319  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1706 , 1'h1 }),
    .S(\$procmux$15320_CMP ),
    .Y(\$procmux$15319_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15321  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2330 , 1'h1 }),
    .S(\$procmux$15322_CMP ),
    .Y(\$procmux$15321_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15323  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1667 , 1'h1 }),
    .S(\$procmux$15324_CMP ),
    .Y(\$procmux$15323_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15325  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2096 , 1'h1 }),
    .S(\$procmux$15326_CMP ),
    .Y(\$procmux$15325_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15327  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1628 , 1'h1 }),
    .S(\$procmux$15328_CMP ),
    .Y(\$procmux$15327_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15329  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2486 , 1'h1 }),
    .S(\$procmux$15330_CMP ),
    .Y(\$procmux$15329_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15331  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1589 , 1'h1 }),
    .S(\$procmux$15332_CMP ),
    .Y(\$procmux$15331_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15333  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2057 , 1'h1 }),
    .S(\$procmux$15334_CMP ),
    .Y(\$procmux$15333_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15335  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1550 , 1'h1 }),
    .S(\$procmux$15336_CMP ),
    .Y(\$procmux$15335_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15337  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2291 , 1'h1 }),
    .S(\$procmux$15338_CMP ),
    .Y(\$procmux$15337_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15339  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1511 , 1'h1 }),
    .S(\$procmux$15340_CMP ),
    .Y(\$procmux$15339_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15341  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2018 , 1'h1 }),
    .S(\$procmux$15342_CMP ),
    .Y(\$procmux$15341_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15343  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1472 , 1'h1 }),
    .S(\$procmux$15344_CMP ),
    .Y(\$procmux$15343_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15345  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2408 , 1'h1 }),
    .S(\$procmux$15346_CMP ),
    .Y(\$procmux$15345_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15347  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1433 , 1'h1 }),
    .S(\$procmux$15348_CMP ),
    .Y(\$procmux$15347_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15349  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1979 , 1'h1 }),
    .S(\$procmux$15350_CMP ),
    .Y(\$procmux$15349_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15351  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1394 , 1'h1 }),
    .S(\$procmux$15352_CMP ),
    .Y(\$procmux$15351_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15353  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2252 , 1'h1 }),
    .S(\$procmux$15354_CMP ),
    .Y(\$procmux$15353_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15355  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1355 , 1'h1 }),
    .S(\$procmux$15356_CMP ),
    .Y(\$procmux$15355_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15357  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1940 , 1'h1 }),
    .S(\$procmux$15358_CMP ),
    .Y(\$procmux$15357_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15359  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$1316 , 1'h1 }),
    .S(\$procmux$15360_CMP ),
    .Y(\$procmux$15359_Y )
  );
  /* src = "../rtl/gpio/gpio.sv:143.49-146.16|../rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$15361  (
    .A(2'h0),
    .B({ \$auto$builder.cc:364:Unop$2525 , 1'h1 }),
    .S(\$procmux$15362_CMP ),
    .Y(\$procmux$15361_Y )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[0].i_sync  \gen_gpios[0].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[0]),
    .serial_o(\gen_gpios[0].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[10].i_sync  \gen_gpios[10].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[10]),
    .serial_o(\gen_gpios[10].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[11].i_sync  \gen_gpios[11].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[11]),
    .serial_o(\gen_gpios[11].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[12].i_sync  \gen_gpios[12].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[12]),
    .serial_o(\gen_gpios[12].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[13].i_sync  \gen_gpios[13].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[13]),
    .serial_o(\gen_gpios[13].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[14].i_sync  \gen_gpios[14].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[14]),
    .serial_o(\gen_gpios[14].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[15].i_sync  \gen_gpios[15].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[15]),
    .serial_o(\gen_gpios[15].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[16].i_sync  \gen_gpios[16].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[16]),
    .serial_o(\gen_gpios[16].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[17].i_sync  \gen_gpios[17].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[17]),
    .serial_o(\gen_gpios[17].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[18].i_sync  \gen_gpios[18].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[18]),
    .serial_o(\gen_gpios[18].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[19].i_sync  \gen_gpios[19].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[19]),
    .serial_o(\gen_gpios[19].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[1].i_sync  \gen_gpios[1].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[1]),
    .serial_o(\gen_gpios[1].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[20].i_sync  \gen_gpios[20].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[20]),
    .serial_o(\gen_gpios[20].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[21].i_sync  \gen_gpios[21].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[21]),
    .serial_o(\gen_gpios[21].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[22].i_sync  \gen_gpios[22].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[22]),
    .serial_o(\gen_gpios[22].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[23].i_sync  \gen_gpios[23].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[23]),
    .serial_o(\gen_gpios[23].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[24].i_sync  \gen_gpios[24].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[24]),
    .serial_o(\gen_gpios[24].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[25].i_sync  \gen_gpios[25].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[25]),
    .serial_o(\gen_gpios[25].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[26].i_sync  \gen_gpios[26].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[26]),
    .serial_o(\gen_gpios[26].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[27].i_sync  \gen_gpios[27].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[27]),
    .serial_o(\gen_gpios[27].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[28].i_sync  \gen_gpios[28].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[28]),
    .serial_o(\gen_gpios[28].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[29].i_sync  \gen_gpios[29].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[29]),
    .serial_o(\gen_gpios[29].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[2].i_sync  \gen_gpios[2].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[2]),
    .serial_o(\gen_gpios[2].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[30].i_sync  \gen_gpios[30].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[30]),
    .serial_o(\gen_gpios[30].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[31].i_sync  \gen_gpios[31].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[31]),
    .serial_o(\gen_gpios[31].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[3].i_sync  \gen_gpios[3].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[3]),
    .serial_o(\gen_gpios[3].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[4].i_sync  \gen_gpios[4].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[4]),
    .serial_o(\gen_gpios[4].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[5].i_sync  \gen_gpios[5].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[5]),
    .serial_o(\gen_gpios[5].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[6].i_sync  \gen_gpios[6].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[6]),
    .serial_o(\gen_gpios[6].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[7].i_sync  \gen_gpios[7].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[7]),
    .serial_o(\gen_gpios[7].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[8].i_sync  \gen_gpios[8].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[8]),
    .serial_o(\gen_gpios[8].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[9].i_sync  \gen_gpios[9].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[9]),
    .serial_o(\gen_gpios[9].serial_d )
  );
  /* src = "../rtl/gpio/gpio.sv:74.5" */
  \gpio_reg_top$croc_chip.i_croc_soc.i_croc.i_gpio.i_reg_file  i_reg_file (
    .clk_i(clk_i),
    .hw2reg(hw2reg),
    .obi_req_i(obi_req_i),
    .obi_rsp_o(obi_rsp_o),
    .reg2hw(reg2hw),
    .rst_ni(rst_ni)
  );
  assign gpio_in_sync_o = gpio_in_sync;
  assign \gen_gpios[0].f_edge  = \$auto$builder.cc:338:Biop$1291 ;
  assign \gen_gpios[0].r_edge  = \$auto$builder.cc:338:Biop$1295 ;
  assign gpio_edge[0] = \$auto$rtlil.cc:2874:Mux$1299 ;
  assign gpio_in_sync[0] = \gen_gpios[0].serial_q ;
  assign \gen_gpios[0].is_input  = \$auto$builder.cc:338:Biop$1303 ;
  assign \gen_gpios[0].is_output  = \$auto$builder.cc:338:Biop$1305 ;
  assign hw2reg[4] = \$auto$builder.cc:338:Biop$1307 ;
  assign gpio_o[0] = \$auto$builder.cc:338:Biop$1309 ;
  assign gpio_out_en_o[0] = \gen_gpios[0].is_output ;
  assign hw2reg[3:2] = \$auto$slang_frontend.cc:694:finish$\hw2reg[2]$1317 ;
  assign gpio_intrpt[0] = \$auto$builder.cc:338:Biop$1321 ;
  assign hw2reg[1] = gpio_intrpt[0];
  assign hw2reg[0] = gpio_intrpt[0];
  assign \gen_gpios[1].f_edge  = \$auto$builder.cc:338:Biop$1330 ;
  assign \gen_gpios[1].r_edge  = \$auto$builder.cc:338:Biop$1334 ;
  assign gpio_edge[1] = \$auto$rtlil.cc:2874:Mux$1338 ;
  assign gpio_in_sync[1] = \gen_gpios[1].serial_q ;
  assign \gen_gpios[1].is_input  = \$auto$builder.cc:338:Biop$1342 ;
  assign \gen_gpios[1].is_output  = \$auto$builder.cc:338:Biop$1344 ;
  assign hw2reg[9] = \$auto$builder.cc:338:Biop$1346 ;
  assign gpio_o[1] = \$auto$builder.cc:338:Biop$1348 ;
  assign gpio_out_en_o[1] = \gen_gpios[1].is_output ;
  assign hw2reg[8:7] = \$auto$slang_frontend.cc:694:finish$\hw2reg[7]$1356 ;
  assign gpio_intrpt[1] = \$auto$builder.cc:338:Biop$1360 ;
  assign hw2reg[6] = gpio_intrpt[1];
  assign hw2reg[5] = gpio_intrpt[1];
  assign \gen_gpios[2].f_edge  = \$auto$builder.cc:338:Biop$1369 ;
  assign \gen_gpios[2].r_edge  = \$auto$builder.cc:338:Biop$1373 ;
  assign gpio_edge[2] = \$auto$rtlil.cc:2874:Mux$1377 ;
  assign gpio_in_sync[2] = \gen_gpios[2].serial_q ;
  assign \gen_gpios[2].is_input  = \$auto$builder.cc:338:Biop$1381 ;
  assign \gen_gpios[2].is_output  = \$auto$builder.cc:338:Biop$1383 ;
  assign hw2reg[14] = \$auto$builder.cc:338:Biop$1385 ;
  assign gpio_o[2] = \$auto$builder.cc:338:Biop$1387 ;
  assign gpio_out_en_o[2] = \gen_gpios[2].is_output ;
  assign hw2reg[13:12] = \$auto$slang_frontend.cc:694:finish$\hw2reg[12]$1395 ;
  assign gpio_intrpt[2] = \$auto$builder.cc:338:Biop$1399 ;
  assign hw2reg[11] = gpio_intrpt[2];
  assign hw2reg[10] = gpio_intrpt[2];
  assign \gen_gpios[3].f_edge  = \$auto$builder.cc:338:Biop$1408 ;
  assign \gen_gpios[3].r_edge  = \$auto$builder.cc:338:Biop$1412 ;
  assign gpio_edge[3] = \$auto$rtlil.cc:2874:Mux$1416 ;
  assign gpio_in_sync[3] = \gen_gpios[3].serial_q ;
  assign \gen_gpios[3].is_input  = \$auto$builder.cc:338:Biop$1420 ;
  assign \gen_gpios[3].is_output  = \$auto$builder.cc:338:Biop$1422 ;
  assign hw2reg[19] = \$auto$builder.cc:338:Biop$1424 ;
  assign gpio_o[3] = \$auto$builder.cc:338:Biop$1426 ;
  assign gpio_out_en_o[3] = \gen_gpios[3].is_output ;
  assign hw2reg[18:17] = \$auto$slang_frontend.cc:694:finish$\hw2reg[17]$1434 ;
  assign gpio_intrpt[3] = \$auto$builder.cc:338:Biop$1438 ;
  assign hw2reg[16] = gpio_intrpt[3];
  assign hw2reg[15] = gpio_intrpt[3];
  assign \gen_gpios[4].f_edge  = \$auto$builder.cc:338:Biop$1447 ;
  assign \gen_gpios[4].r_edge  = \$auto$builder.cc:338:Biop$1451 ;
  assign gpio_edge[4] = \$auto$rtlil.cc:2874:Mux$1455 ;
  assign gpio_in_sync[4] = \gen_gpios[4].serial_q ;
  assign \gen_gpios[4].is_input  = \$auto$builder.cc:338:Biop$1459 ;
  assign \gen_gpios[4].is_output  = \$auto$builder.cc:338:Biop$1461 ;
  assign hw2reg[24] = \$auto$builder.cc:338:Biop$1463 ;
  assign gpio_o[4] = \$auto$builder.cc:338:Biop$1465 ;
  assign gpio_out_en_o[4] = \gen_gpios[4].is_output ;
  assign hw2reg[23:22] = \$auto$slang_frontend.cc:694:finish$\hw2reg[22]$1473 ;
  assign gpio_intrpt[4] = \$auto$builder.cc:338:Biop$1477 ;
  assign hw2reg[21] = gpio_intrpt[4];
  assign hw2reg[20] = gpio_intrpt[4];
  assign \gen_gpios[5].f_edge  = \$auto$builder.cc:338:Biop$1486 ;
  assign \gen_gpios[5].r_edge  = \$auto$builder.cc:338:Biop$1490 ;
  assign gpio_edge[5] = \$auto$rtlil.cc:2874:Mux$1494 ;
  assign gpio_in_sync[5] = \gen_gpios[5].serial_q ;
  assign \gen_gpios[5].is_input  = \$auto$builder.cc:338:Biop$1498 ;
  assign \gen_gpios[5].is_output  = \$auto$builder.cc:338:Biop$1500 ;
  assign hw2reg[29] = \$auto$builder.cc:338:Biop$1502 ;
  assign gpio_o[5] = \$auto$builder.cc:338:Biop$1504 ;
  assign gpio_out_en_o[5] = \gen_gpios[5].is_output ;
  assign hw2reg[28:27] = \$auto$slang_frontend.cc:694:finish$\hw2reg[27]$1512 ;
  assign gpio_intrpt[5] = \$auto$builder.cc:338:Biop$1516 ;
  assign hw2reg[26] = gpio_intrpt[5];
  assign hw2reg[25] = gpio_intrpt[5];
  assign \gen_gpios[6].f_edge  = \$auto$builder.cc:338:Biop$1525 ;
  assign \gen_gpios[6].r_edge  = \$auto$builder.cc:338:Biop$1529 ;
  assign gpio_edge[6] = \$auto$rtlil.cc:2874:Mux$1533 ;
  assign gpio_in_sync[6] = \gen_gpios[6].serial_q ;
  assign \gen_gpios[6].is_input  = \$auto$builder.cc:338:Biop$1537 ;
  assign \gen_gpios[6].is_output  = \$auto$builder.cc:338:Biop$1539 ;
  assign hw2reg[34] = \$auto$builder.cc:338:Biop$1541 ;
  assign gpio_o[6] = \$auto$builder.cc:338:Biop$1543 ;
  assign gpio_out_en_o[6] = \gen_gpios[6].is_output ;
  assign hw2reg[33:32] = \$auto$slang_frontend.cc:694:finish$\hw2reg[32]$1551 ;
  assign gpio_intrpt[6] = \$auto$builder.cc:338:Biop$1555 ;
  assign hw2reg[31] = gpio_intrpt[6];
  assign hw2reg[30] = gpio_intrpt[6];
  assign \gen_gpios[7].f_edge  = \$auto$builder.cc:338:Biop$1564 ;
  assign \gen_gpios[7].r_edge  = \$auto$builder.cc:338:Biop$1568 ;
  assign gpio_edge[7] = \$auto$rtlil.cc:2874:Mux$1572 ;
  assign gpio_in_sync[7] = \gen_gpios[7].serial_q ;
  assign \gen_gpios[7].is_input  = \$auto$builder.cc:338:Biop$1576 ;
  assign \gen_gpios[7].is_output  = \$auto$builder.cc:338:Biop$1578 ;
  assign hw2reg[39] = \$auto$builder.cc:338:Biop$1580 ;
  assign gpio_o[7] = \$auto$builder.cc:338:Biop$1582 ;
  assign gpio_out_en_o[7] = \gen_gpios[7].is_output ;
  assign hw2reg[38:37] = \$auto$slang_frontend.cc:694:finish$\hw2reg[37]$1590 ;
  assign gpio_intrpt[7] = \$auto$builder.cc:338:Biop$1594 ;
  assign hw2reg[36] = gpio_intrpt[7];
  assign hw2reg[35] = gpio_intrpt[7];
  assign \gen_gpios[8].f_edge  = \$auto$builder.cc:338:Biop$1603 ;
  assign \gen_gpios[8].r_edge  = \$auto$builder.cc:338:Biop$1607 ;
  assign gpio_edge[8] = \$auto$rtlil.cc:2874:Mux$1611 ;
  assign gpio_in_sync[8] = \gen_gpios[8].serial_q ;
  assign \gen_gpios[8].is_input  = \$auto$builder.cc:338:Biop$1615 ;
  assign \gen_gpios[8].is_output  = \$auto$builder.cc:338:Biop$1617 ;
  assign hw2reg[44] = \$auto$builder.cc:338:Biop$1619 ;
  assign gpio_o[8] = \$auto$builder.cc:338:Biop$1621 ;
  assign gpio_out_en_o[8] = \gen_gpios[8].is_output ;
  assign hw2reg[43:42] = \$auto$slang_frontend.cc:694:finish$\hw2reg[42]$1629 ;
  assign gpio_intrpt[8] = \$auto$builder.cc:338:Biop$1633 ;
  assign hw2reg[41] = gpio_intrpt[8];
  assign hw2reg[40] = gpio_intrpt[8];
  assign \gen_gpios[9].f_edge  = \$auto$builder.cc:338:Biop$1642 ;
  assign \gen_gpios[9].r_edge  = \$auto$builder.cc:338:Biop$1646 ;
  assign gpio_edge[9] = \$auto$rtlil.cc:2874:Mux$1650 ;
  assign gpio_in_sync[9] = \gen_gpios[9].serial_q ;
  assign \gen_gpios[9].is_input  = \$auto$builder.cc:338:Biop$1654 ;
  assign \gen_gpios[9].is_output  = \$auto$builder.cc:338:Biop$1656 ;
  assign hw2reg[49] = \$auto$builder.cc:338:Biop$1658 ;
  assign gpio_o[9] = \$auto$builder.cc:338:Biop$1660 ;
  assign gpio_out_en_o[9] = \gen_gpios[9].is_output ;
  assign hw2reg[48:47] = \$auto$slang_frontend.cc:694:finish$\hw2reg[47]$1668 ;
  assign gpio_intrpt[9] = \$auto$builder.cc:338:Biop$1672 ;
  assign hw2reg[46] = gpio_intrpt[9];
  assign hw2reg[45] = gpio_intrpt[9];
  assign \gen_gpios[10].f_edge  = \$auto$builder.cc:338:Biop$1681 ;
  assign \gen_gpios[10].r_edge  = \$auto$builder.cc:338:Biop$1685 ;
  assign gpio_edge[10] = \$auto$rtlil.cc:2874:Mux$1689 ;
  assign gpio_in_sync[10] = \gen_gpios[10].serial_q ;
  assign \gen_gpios[10].is_input  = \$auto$builder.cc:338:Biop$1693 ;
  assign \gen_gpios[10].is_output  = \$auto$builder.cc:338:Biop$1695 ;
  assign hw2reg[54] = \$auto$builder.cc:338:Biop$1697 ;
  assign gpio_o[10] = \$auto$builder.cc:338:Biop$1699 ;
  assign gpio_out_en_o[10] = \gen_gpios[10].is_output ;
  assign hw2reg[53:52] = \$auto$slang_frontend.cc:694:finish$\hw2reg[52]$1707 ;
  assign gpio_intrpt[10] = \$auto$builder.cc:338:Biop$1711 ;
  assign hw2reg[51] = gpio_intrpt[10];
  assign hw2reg[50] = gpio_intrpt[10];
  assign \gen_gpios[11].f_edge  = \$auto$builder.cc:338:Biop$1720 ;
  assign \gen_gpios[11].r_edge  = \$auto$builder.cc:338:Biop$1724 ;
  assign gpio_edge[11] = \$auto$rtlil.cc:2874:Mux$1728 ;
  assign gpio_in_sync[11] = \gen_gpios[11].serial_q ;
  assign \gen_gpios[11].is_input  = \$auto$builder.cc:338:Biop$1732 ;
  assign \gen_gpios[11].is_output  = \$auto$builder.cc:338:Biop$1734 ;
  assign hw2reg[59] = \$auto$builder.cc:338:Biop$1736 ;
  assign gpio_o[11] = \$auto$builder.cc:338:Biop$1738 ;
  assign gpio_out_en_o[11] = \gen_gpios[11].is_output ;
  assign hw2reg[58:57] = \$auto$slang_frontend.cc:694:finish$\hw2reg[57]$1746 ;
  assign gpio_intrpt[11] = \$auto$builder.cc:338:Biop$1750 ;
  assign hw2reg[56] = gpio_intrpt[11];
  assign hw2reg[55] = gpio_intrpt[11];
  assign \gen_gpios[12].f_edge  = \$auto$builder.cc:338:Biop$1759 ;
  assign \gen_gpios[12].r_edge  = \$auto$builder.cc:338:Biop$1763 ;
  assign gpio_edge[12] = \$auto$rtlil.cc:2874:Mux$1767 ;
  assign gpio_in_sync[12] = \gen_gpios[12].serial_q ;
  assign \gen_gpios[12].is_input  = \$auto$builder.cc:338:Biop$1771 ;
  assign \gen_gpios[12].is_output  = \$auto$builder.cc:338:Biop$1773 ;
  assign hw2reg[64] = \$auto$builder.cc:338:Biop$1775 ;
  assign gpio_o[12] = \$auto$builder.cc:338:Biop$1777 ;
  assign gpio_out_en_o[12] = \gen_gpios[12].is_output ;
  assign hw2reg[63:62] = \$auto$slang_frontend.cc:694:finish$\hw2reg[62]$1785 ;
  assign gpio_intrpt[12] = \$auto$builder.cc:338:Biop$1789 ;
  assign hw2reg[61] = gpio_intrpt[12];
  assign hw2reg[60] = gpio_intrpt[12];
  assign \gen_gpios[13].f_edge  = \$auto$builder.cc:338:Biop$1798 ;
  assign \gen_gpios[13].r_edge  = \$auto$builder.cc:338:Biop$1802 ;
  assign gpio_edge[13] = \$auto$rtlil.cc:2874:Mux$1806 ;
  assign gpio_in_sync[13] = \gen_gpios[13].serial_q ;
  assign \gen_gpios[13].is_input  = \$auto$builder.cc:338:Biop$1810 ;
  assign \gen_gpios[13].is_output  = \$auto$builder.cc:338:Biop$1812 ;
  assign hw2reg[69] = \$auto$builder.cc:338:Biop$1814 ;
  assign gpio_o[13] = \$auto$builder.cc:338:Biop$1816 ;
  assign gpio_out_en_o[13] = \gen_gpios[13].is_output ;
  assign hw2reg[68:67] = \$auto$slang_frontend.cc:694:finish$\hw2reg[67]$1824 ;
  assign gpio_intrpt[13] = \$auto$builder.cc:338:Biop$1828 ;
  assign hw2reg[66] = gpio_intrpt[13];
  assign hw2reg[65] = gpio_intrpt[13];
  assign \gen_gpios[14].f_edge  = \$auto$builder.cc:338:Biop$1837 ;
  assign \gen_gpios[14].r_edge  = \$auto$builder.cc:338:Biop$1841 ;
  assign gpio_edge[14] = \$auto$rtlil.cc:2874:Mux$1845 ;
  assign gpio_in_sync[14] = \gen_gpios[14].serial_q ;
  assign \gen_gpios[14].is_input  = \$auto$builder.cc:338:Biop$1849 ;
  assign \gen_gpios[14].is_output  = \$auto$builder.cc:338:Biop$1851 ;
  assign hw2reg[74] = \$auto$builder.cc:338:Biop$1853 ;
  assign gpio_o[14] = \$auto$builder.cc:338:Biop$1855 ;
  assign gpio_out_en_o[14] = \gen_gpios[14].is_output ;
  assign hw2reg[73:72] = \$auto$slang_frontend.cc:694:finish$\hw2reg[72]$1863 ;
  assign gpio_intrpt[14] = \$auto$builder.cc:338:Biop$1867 ;
  assign hw2reg[71] = gpio_intrpt[14];
  assign hw2reg[70] = gpio_intrpt[14];
  assign \gen_gpios[15].f_edge  = \$auto$builder.cc:338:Biop$1876 ;
  assign \gen_gpios[15].r_edge  = \$auto$builder.cc:338:Biop$1880 ;
  assign gpio_edge[15] = \$auto$rtlil.cc:2874:Mux$1884 ;
  assign gpio_in_sync[15] = \gen_gpios[15].serial_q ;
  assign \gen_gpios[15].is_input  = \$auto$builder.cc:338:Biop$1888 ;
  assign \gen_gpios[15].is_output  = \$auto$builder.cc:338:Biop$1890 ;
  assign hw2reg[79] = \$auto$builder.cc:338:Biop$1892 ;
  assign gpio_o[15] = \$auto$builder.cc:338:Biop$1894 ;
  assign gpio_out_en_o[15] = \gen_gpios[15].is_output ;
  assign hw2reg[78:77] = \$auto$slang_frontend.cc:694:finish$\hw2reg[77]$1902 ;
  assign gpio_intrpt[15] = \$auto$builder.cc:338:Biop$1906 ;
  assign hw2reg[76] = gpio_intrpt[15];
  assign hw2reg[75] = gpio_intrpt[15];
  assign \gen_gpios[16].f_edge  = \$auto$builder.cc:338:Biop$1915 ;
  assign \gen_gpios[16].r_edge  = \$auto$builder.cc:338:Biop$1919 ;
  assign gpio_edge[16] = \$auto$rtlil.cc:2874:Mux$1923 ;
  assign gpio_in_sync[16] = \gen_gpios[16].serial_q ;
  assign \gen_gpios[16].is_input  = \$auto$builder.cc:338:Biop$1927 ;
  assign \gen_gpios[16].is_output  = \$auto$builder.cc:338:Biop$1929 ;
  assign hw2reg[84] = \$auto$builder.cc:338:Biop$1931 ;
  assign gpio_o[16] = \$auto$builder.cc:338:Biop$1933 ;
  assign gpio_out_en_o[16] = \gen_gpios[16].is_output ;
  assign hw2reg[83:82] = \$auto$slang_frontend.cc:694:finish$\hw2reg[82]$1941 ;
  assign gpio_intrpt[16] = \$auto$builder.cc:338:Biop$1945 ;
  assign hw2reg[81] = gpio_intrpt[16];
  assign hw2reg[80] = gpio_intrpt[16];
  assign \gen_gpios[17].f_edge  = \$auto$builder.cc:338:Biop$1954 ;
  assign \gen_gpios[17].r_edge  = \$auto$builder.cc:338:Biop$1958 ;
  assign gpio_edge[17] = \$auto$rtlil.cc:2874:Mux$1962 ;
  assign gpio_in_sync[17] = \gen_gpios[17].serial_q ;
  assign \gen_gpios[17].is_input  = \$auto$builder.cc:338:Biop$1966 ;
  assign \gen_gpios[17].is_output  = \$auto$builder.cc:338:Biop$1968 ;
  assign hw2reg[89] = \$auto$builder.cc:338:Biop$1970 ;
  assign gpio_o[17] = \$auto$builder.cc:338:Biop$1972 ;
  assign gpio_out_en_o[17] = \gen_gpios[17].is_output ;
  assign hw2reg[88:87] = \$auto$slang_frontend.cc:694:finish$\hw2reg[87]$1980 ;
  assign gpio_intrpt[17] = \$auto$builder.cc:338:Biop$1984 ;
  assign hw2reg[86] = gpio_intrpt[17];
  assign hw2reg[85] = gpio_intrpt[17];
  assign \gen_gpios[18].f_edge  = \$auto$builder.cc:338:Biop$1993 ;
  assign \gen_gpios[18].r_edge  = \$auto$builder.cc:338:Biop$1997 ;
  assign gpio_edge[18] = \$auto$rtlil.cc:2874:Mux$2001 ;
  assign gpio_in_sync[18] = \gen_gpios[18].serial_q ;
  assign \gen_gpios[18].is_input  = \$auto$builder.cc:338:Biop$2005 ;
  assign \gen_gpios[18].is_output  = \$auto$builder.cc:338:Biop$2007 ;
  assign hw2reg[94] = \$auto$builder.cc:338:Biop$2009 ;
  assign gpio_o[18] = \$auto$builder.cc:338:Biop$2011 ;
  assign gpio_out_en_o[18] = \gen_gpios[18].is_output ;
  assign hw2reg[93:92] = \$auto$slang_frontend.cc:694:finish$\hw2reg[92]$2019 ;
  assign gpio_intrpt[18] = \$auto$builder.cc:338:Biop$2023 ;
  assign hw2reg[91] = gpio_intrpt[18];
  assign hw2reg[90] = gpio_intrpt[18];
  assign \gen_gpios[19].f_edge  = \$auto$builder.cc:338:Biop$2032 ;
  assign \gen_gpios[19].r_edge  = \$auto$builder.cc:338:Biop$2036 ;
  assign gpio_edge[19] = \$auto$rtlil.cc:2874:Mux$2040 ;
  assign gpio_in_sync[19] = \gen_gpios[19].serial_q ;
  assign \gen_gpios[19].is_input  = \$auto$builder.cc:338:Biop$2044 ;
  assign \gen_gpios[19].is_output  = \$auto$builder.cc:338:Biop$2046 ;
  assign hw2reg[99] = \$auto$builder.cc:338:Biop$2048 ;
  assign gpio_o[19] = \$auto$builder.cc:338:Biop$2050 ;
  assign gpio_out_en_o[19] = \gen_gpios[19].is_output ;
  assign hw2reg[98:97] = \$auto$slang_frontend.cc:694:finish$\hw2reg[97]$2058 ;
  assign gpio_intrpt[19] = \$auto$builder.cc:338:Biop$2062 ;
  assign hw2reg[96] = gpio_intrpt[19];
  assign hw2reg[95] = gpio_intrpt[19];
  assign \gen_gpios[20].f_edge  = \$auto$builder.cc:338:Biop$2071 ;
  assign \gen_gpios[20].r_edge  = \$auto$builder.cc:338:Biop$2075 ;
  assign gpio_edge[20] = \$auto$rtlil.cc:2874:Mux$2079 ;
  assign gpio_in_sync[20] = \gen_gpios[20].serial_q ;
  assign \gen_gpios[20].is_input  = \$auto$builder.cc:338:Biop$2083 ;
  assign \gen_gpios[20].is_output  = \$auto$builder.cc:338:Biop$2085 ;
  assign hw2reg[104] = \$auto$builder.cc:338:Biop$2087 ;
  assign gpio_o[20] = \$auto$builder.cc:338:Biop$2089 ;
  assign gpio_out_en_o[20] = \gen_gpios[20].is_output ;
  assign hw2reg[103:102] = \$auto$slang_frontend.cc:694:finish$\hw2reg[102]$2097 ;
  assign gpio_intrpt[20] = \$auto$builder.cc:338:Biop$2101 ;
  assign hw2reg[101] = gpio_intrpt[20];
  assign hw2reg[100] = gpio_intrpt[20];
  assign \gen_gpios[21].f_edge  = \$auto$builder.cc:338:Biop$2110 ;
  assign \gen_gpios[21].r_edge  = \$auto$builder.cc:338:Biop$2114 ;
  assign gpio_edge[21] = \$auto$rtlil.cc:2874:Mux$2118 ;
  assign gpio_in_sync[21] = \gen_gpios[21].serial_q ;
  assign \gen_gpios[21].is_input  = \$auto$builder.cc:338:Biop$2122 ;
  assign \gen_gpios[21].is_output  = \$auto$builder.cc:338:Biop$2124 ;
  assign hw2reg[109] = \$auto$builder.cc:338:Biop$2126 ;
  assign gpio_o[21] = \$auto$builder.cc:338:Biop$2128 ;
  assign gpio_out_en_o[21] = \gen_gpios[21].is_output ;
  assign hw2reg[108:107] = \$auto$slang_frontend.cc:694:finish$\hw2reg[107]$2136 ;
  assign gpio_intrpt[21] = \$auto$builder.cc:338:Biop$2140 ;
  assign hw2reg[106] = gpio_intrpt[21];
  assign hw2reg[105] = gpio_intrpt[21];
  assign \gen_gpios[22].f_edge  = \$auto$builder.cc:338:Biop$2149 ;
  assign \gen_gpios[22].r_edge  = \$auto$builder.cc:338:Biop$2153 ;
  assign gpio_edge[22] = \$auto$rtlil.cc:2874:Mux$2157 ;
  assign gpio_in_sync[22] = \gen_gpios[22].serial_q ;
  assign \gen_gpios[22].is_input  = \$auto$builder.cc:338:Biop$2161 ;
  assign \gen_gpios[22].is_output  = \$auto$builder.cc:338:Biop$2163 ;
  assign hw2reg[114] = \$auto$builder.cc:338:Biop$2165 ;
  assign gpio_o[22] = \$auto$builder.cc:338:Biop$2167 ;
  assign gpio_out_en_o[22] = \gen_gpios[22].is_output ;
  assign hw2reg[113:112] = \$auto$slang_frontend.cc:694:finish$\hw2reg[112]$2175 ;
  assign gpio_intrpt[22] = \$auto$builder.cc:338:Biop$2179 ;
  assign hw2reg[111] = gpio_intrpt[22];
  assign hw2reg[110] = gpio_intrpt[22];
  assign \gen_gpios[23].f_edge  = \$auto$builder.cc:338:Biop$2188 ;
  assign \gen_gpios[23].r_edge  = \$auto$builder.cc:338:Biop$2192 ;
  assign gpio_edge[23] = \$auto$rtlil.cc:2874:Mux$2196 ;
  assign gpio_in_sync[23] = \gen_gpios[23].serial_q ;
  assign \gen_gpios[23].is_input  = \$auto$builder.cc:338:Biop$2200 ;
  assign \gen_gpios[23].is_output  = \$auto$builder.cc:338:Biop$2202 ;
  assign hw2reg[119] = \$auto$builder.cc:338:Biop$2204 ;
  assign gpio_o[23] = \$auto$builder.cc:338:Biop$2206 ;
  assign gpio_out_en_o[23] = \gen_gpios[23].is_output ;
  assign hw2reg[118:117] = \$auto$slang_frontend.cc:694:finish$\hw2reg[117]$2214 ;
  assign gpio_intrpt[23] = \$auto$builder.cc:338:Biop$2218 ;
  assign hw2reg[116] = gpio_intrpt[23];
  assign hw2reg[115] = gpio_intrpt[23];
  assign \gen_gpios[24].f_edge  = \$auto$builder.cc:338:Biop$2227 ;
  assign \gen_gpios[24].r_edge  = \$auto$builder.cc:338:Biop$2231 ;
  assign gpio_edge[24] = \$auto$rtlil.cc:2874:Mux$2235 ;
  assign gpio_in_sync[24] = \gen_gpios[24].serial_q ;
  assign \gen_gpios[24].is_input  = \$auto$builder.cc:338:Biop$2239 ;
  assign \gen_gpios[24].is_output  = \$auto$builder.cc:338:Biop$2241 ;
  assign hw2reg[124] = \$auto$builder.cc:338:Biop$2243 ;
  assign gpio_o[24] = \$auto$builder.cc:338:Biop$2245 ;
  assign gpio_out_en_o[24] = \gen_gpios[24].is_output ;
  assign hw2reg[123:122] = \$auto$slang_frontend.cc:694:finish$\hw2reg[122]$2253 ;
  assign gpio_intrpt[24] = \$auto$builder.cc:338:Biop$2257 ;
  assign hw2reg[121] = gpio_intrpt[24];
  assign hw2reg[120] = gpio_intrpt[24];
  assign \gen_gpios[25].f_edge  = \$auto$builder.cc:338:Biop$2266 ;
  assign \gen_gpios[25].r_edge  = \$auto$builder.cc:338:Biop$2270 ;
  assign gpio_edge[25] = \$auto$rtlil.cc:2874:Mux$2274 ;
  assign gpio_in_sync[25] = \gen_gpios[25].serial_q ;
  assign \gen_gpios[25].is_input  = \$auto$builder.cc:338:Biop$2278 ;
  assign \gen_gpios[25].is_output  = \$auto$builder.cc:338:Biop$2280 ;
  assign hw2reg[129] = \$auto$builder.cc:338:Biop$2282 ;
  assign gpio_o[25] = \$auto$builder.cc:338:Biop$2284 ;
  assign gpio_out_en_o[25] = \gen_gpios[25].is_output ;
  assign hw2reg[128:127] = \$auto$slang_frontend.cc:694:finish$\hw2reg[127]$2292 ;
  assign gpio_intrpt[25] = \$auto$builder.cc:338:Biop$2296 ;
  assign hw2reg[126] = gpio_intrpt[25];
  assign hw2reg[125] = gpio_intrpt[25];
  assign \gen_gpios[26].f_edge  = \$auto$builder.cc:338:Biop$2305 ;
  assign \gen_gpios[26].r_edge  = \$auto$builder.cc:338:Biop$2309 ;
  assign gpio_edge[26] = \$auto$rtlil.cc:2874:Mux$2313 ;
  assign gpio_in_sync[26] = \gen_gpios[26].serial_q ;
  assign \gen_gpios[26].is_input  = \$auto$builder.cc:338:Biop$2317 ;
  assign \gen_gpios[26].is_output  = \$auto$builder.cc:338:Biop$2319 ;
  assign hw2reg[134] = \$auto$builder.cc:338:Biop$2321 ;
  assign gpio_o[26] = \$auto$builder.cc:338:Biop$2323 ;
  assign gpio_out_en_o[26] = \gen_gpios[26].is_output ;
  assign hw2reg[133:132] = \$auto$slang_frontend.cc:694:finish$\hw2reg[132]$2331 ;
  assign gpio_intrpt[26] = \$auto$builder.cc:338:Biop$2335 ;
  assign hw2reg[131] = gpio_intrpt[26];
  assign hw2reg[130] = gpio_intrpt[26];
  assign \gen_gpios[27].f_edge  = \$auto$builder.cc:338:Biop$2344 ;
  assign \gen_gpios[27].r_edge  = \$auto$builder.cc:338:Biop$2348 ;
  assign gpio_edge[27] = \$auto$rtlil.cc:2874:Mux$2352 ;
  assign gpio_in_sync[27] = \gen_gpios[27].serial_q ;
  assign \gen_gpios[27].is_input  = \$auto$builder.cc:338:Biop$2356 ;
  assign \gen_gpios[27].is_output  = \$auto$builder.cc:338:Biop$2358 ;
  assign hw2reg[139] = \$auto$builder.cc:338:Biop$2360 ;
  assign gpio_o[27] = \$auto$builder.cc:338:Biop$2362 ;
  assign gpio_out_en_o[27] = \gen_gpios[27].is_output ;
  assign hw2reg[138:137] = \$auto$slang_frontend.cc:694:finish$\hw2reg[137]$2370 ;
  assign gpio_intrpt[27] = \$auto$builder.cc:338:Biop$2374 ;
  assign hw2reg[136] = gpio_intrpt[27];
  assign hw2reg[135] = gpio_intrpt[27];
  assign \gen_gpios[28].f_edge  = \$auto$builder.cc:338:Biop$2383 ;
  assign \gen_gpios[28].r_edge  = \$auto$builder.cc:338:Biop$2387 ;
  assign gpio_edge[28] = \$auto$rtlil.cc:2874:Mux$2391 ;
  assign gpio_in_sync[28] = \gen_gpios[28].serial_q ;
  assign \gen_gpios[28].is_input  = \$auto$builder.cc:338:Biop$2395 ;
  assign \gen_gpios[28].is_output  = \$auto$builder.cc:338:Biop$2397 ;
  assign hw2reg[144] = \$auto$builder.cc:338:Biop$2399 ;
  assign gpio_o[28] = \$auto$builder.cc:338:Biop$2401 ;
  assign gpio_out_en_o[28] = \gen_gpios[28].is_output ;
  assign hw2reg[143:142] = \$auto$slang_frontend.cc:694:finish$\hw2reg[142]$2409 ;
  assign gpio_intrpt[28] = \$auto$builder.cc:338:Biop$2413 ;
  assign hw2reg[141] = gpio_intrpt[28];
  assign hw2reg[140] = gpio_intrpt[28];
  assign \gen_gpios[29].f_edge  = \$auto$builder.cc:338:Biop$2422 ;
  assign \gen_gpios[29].r_edge  = \$auto$builder.cc:338:Biop$2426 ;
  assign gpio_edge[29] = \$auto$rtlil.cc:2874:Mux$2430 ;
  assign gpio_in_sync[29] = \gen_gpios[29].serial_q ;
  assign \gen_gpios[29].is_input  = \$auto$builder.cc:338:Biop$2434 ;
  assign \gen_gpios[29].is_output  = \$auto$builder.cc:338:Biop$2436 ;
  assign hw2reg[149] = \$auto$builder.cc:338:Biop$2438 ;
  assign gpio_o[29] = \$auto$builder.cc:338:Biop$2440 ;
  assign gpio_out_en_o[29] = \gen_gpios[29].is_output ;
  assign hw2reg[148:147] = \$auto$slang_frontend.cc:694:finish$\hw2reg[147]$2448 ;
  assign gpio_intrpt[29] = \$auto$builder.cc:338:Biop$2452 ;
  assign hw2reg[146] = gpio_intrpt[29];
  assign hw2reg[145] = gpio_intrpt[29];
  assign \gen_gpios[30].f_edge  = \$auto$builder.cc:338:Biop$2461 ;
  assign \gen_gpios[30].r_edge  = \$auto$builder.cc:338:Biop$2465 ;
  assign gpio_edge[30] = \$auto$rtlil.cc:2874:Mux$2469 ;
  assign gpio_in_sync[30] = \gen_gpios[30].serial_q ;
  assign \gen_gpios[30].is_input  = \$auto$builder.cc:338:Biop$2473 ;
  assign \gen_gpios[30].is_output  = \$auto$builder.cc:338:Biop$2475 ;
  assign hw2reg[154] = \$auto$builder.cc:338:Biop$2477 ;
  assign gpio_o[30] = \$auto$builder.cc:338:Biop$2479 ;
  assign gpio_out_en_o[30] = \gen_gpios[30].is_output ;
  assign hw2reg[153:152] = \$auto$slang_frontend.cc:694:finish$\hw2reg[152]$2487 ;
  assign gpio_intrpt[30] = \$auto$builder.cc:338:Biop$2491 ;
  assign hw2reg[151] = gpio_intrpt[30];
  assign hw2reg[150] = gpio_intrpt[30];
  assign \gen_gpios[31].f_edge  = \$auto$builder.cc:338:Biop$2500 ;
  assign \gen_gpios[31].r_edge  = \$auto$builder.cc:338:Biop$2504 ;
  assign gpio_edge[31] = \$auto$rtlil.cc:2874:Mux$2508 ;
  assign gpio_in_sync[31] = \gen_gpios[31].serial_q ;
  assign \gen_gpios[31].is_input  = \$auto$builder.cc:338:Biop$2512 ;
  assign \gen_gpios[31].is_output  = \$auto$builder.cc:338:Biop$2514 ;
  assign hw2reg[159] = \$auto$builder.cc:338:Biop$2516 ;
  assign gpio_o[31] = \$auto$builder.cc:338:Biop$2518 ;
  assign gpio_out_en_o[31] = \gen_gpios[31].is_output ;
  assign hw2reg[158:157] = \$auto$slang_frontend.cc:694:finish$\hw2reg[157]$2526 ;
  assign gpio_intrpt[31] = \$auto$builder.cc:338:Biop$2530 ;
  assign hw2reg[156] = gpio_intrpt[31];
  assign hw2reg[155] = gpio_intrpt[31];
  assign gpio_intrpt_pending = \$auto$builder.cc:338:Biop$2629 ;
  assign interrupt_o = gpio_intrpt_pending;
  assign \$procmux$15300_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1899 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[77]$1902  = \$procmux$15299_Y ;
  assign \$procmux$15302_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2211 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[117]$2214  = \$procmux$15301_Y ;
  assign \$procmux$15304_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1860 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[72]$1863  = \$procmux$15303_Y ;
  assign \$procmux$15306_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2367 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[137]$2370  = \$procmux$15305_Y ;
  assign \$procmux$15308_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1821 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[67]$1824  = \$procmux$15307_Y ;
  assign \$procmux$15310_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2172 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[112]$2175  = \$procmux$15309_Y ;
  assign \$procmux$15312_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1782 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[62]$1785  = \$procmux$15311_Y ;
  assign \$procmux$15314_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2445 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[147]$2448  = \$procmux$15313_Y ;
  assign \$procmux$15316_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1743 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[57]$1746  = \$procmux$15315_Y ;
  assign \$procmux$15318_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2133 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[107]$2136  = \$procmux$15317_Y ;
  assign \$procmux$15320_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1704 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[52]$1707  = \$procmux$15319_Y ;
  assign \$procmux$15322_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2328 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[132]$2331  = \$procmux$15321_Y ;
  assign \$procmux$15324_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1665 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[47]$1668  = \$procmux$15323_Y ;
  assign \$procmux$15326_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2094 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[102]$2097  = \$procmux$15325_Y ;
  assign \$procmux$15328_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1626 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[42]$1629  = \$procmux$15327_Y ;
  assign \$procmux$15330_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2484 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[152]$2487  = \$procmux$15329_Y ;
  assign \$procmux$15332_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1587 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[37]$1590  = \$procmux$15331_Y ;
  assign \$procmux$15334_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2055 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[97]$2058  = \$procmux$15333_Y ;
  assign \$procmux$15336_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1548 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[32]$1551  = \$procmux$15335_Y ;
  assign \$procmux$15338_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2289 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[127]$2292  = \$procmux$15337_Y ;
  assign \$procmux$15340_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1509 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[27]$1512  = \$procmux$15339_Y ;
  assign \$procmux$15342_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2016 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[92]$2019  = \$procmux$15341_Y ;
  assign \$procmux$15344_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1470 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[22]$1473  = \$procmux$15343_Y ;
  assign \$procmux$15346_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2406 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[142]$2409  = \$procmux$15345_Y ;
  assign \$procmux$15348_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1431 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[17]$1434  = \$procmux$15347_Y ;
  assign \$procmux$15350_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1977 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[87]$1980  = \$procmux$15349_Y ;
  assign \$procmux$15352_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1392 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[12]$1395  = \$procmux$15351_Y ;
  assign \$procmux$15354_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2250 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[122]$2253  = \$procmux$15353_Y ;
  assign \$procmux$15356_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1353 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[7]$1356  = \$procmux$15355_Y ;
  assign \$procmux$15358_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1938 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[82]$1941  = \$procmux$15357_Y ;
  assign \$procmux$15360_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1314 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[2]$1317  = \$procmux$15359_Y ;
  assign \$procmux$15362_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2523 ;
  assign \$auto$slang_frontend.cc:694:finish$\hw2reg[157]$2526  = \$procmux$15361_Y ;
  assign \$auto$rtlil.cc:2747:LogicNot$1287  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1297  = reg2hw[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$1314  = \$auto$builder.cc:338:Biop$1312 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1326  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1336  = reg2hw[7];
  assign \$auto$rtlil.cc:2746:ReduceBool$1353  = \$auto$builder.cc:338:Biop$1351 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1365  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1375  = reg2hw[14];
  assign \$auto$rtlil.cc:2746:ReduceBool$1392  = \$auto$builder.cc:338:Biop$1390 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1404  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1414  = reg2hw[21];
  assign \$auto$rtlil.cc:2746:ReduceBool$1431  = \$auto$builder.cc:338:Biop$1429 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1443  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1453  = reg2hw[28];
  assign \$auto$rtlil.cc:2746:ReduceBool$1470  = \$auto$builder.cc:338:Biop$1468 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1482  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1492  = reg2hw[35];
  assign \$auto$rtlil.cc:2746:ReduceBool$1509  = \$auto$builder.cc:338:Biop$1507 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1521  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1531  = reg2hw[42];
  assign \$auto$rtlil.cc:2746:ReduceBool$1548  = \$auto$builder.cc:338:Biop$1546 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1560  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1570  = reg2hw[49];
  assign \$auto$rtlil.cc:2746:ReduceBool$1587  = \$auto$builder.cc:338:Biop$1585 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1599  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1609  = reg2hw[56];
  assign \$auto$rtlil.cc:2746:ReduceBool$1626  = \$auto$builder.cc:338:Biop$1624 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1638  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1648  = reg2hw[63];
  assign \$auto$rtlil.cc:2746:ReduceBool$1665  = \$auto$builder.cc:338:Biop$1663 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1677  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1687  = reg2hw[70];
  assign \$auto$rtlil.cc:2746:ReduceBool$1704  = \$auto$builder.cc:338:Biop$1702 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1716  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1726  = reg2hw[77];
  assign \$auto$rtlil.cc:2746:ReduceBool$1743  = \$auto$builder.cc:338:Biop$1741 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1755  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1765  = reg2hw[84];
  assign \$auto$rtlil.cc:2746:ReduceBool$1782  = \$auto$builder.cc:338:Biop$1780 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1794  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1804  = reg2hw[91];
  assign \$auto$rtlil.cc:2746:ReduceBool$1821  = \$auto$builder.cc:338:Biop$1819 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1833  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1843  = reg2hw[98];
  assign \$auto$rtlil.cc:2746:ReduceBool$1860  = \$auto$builder.cc:338:Biop$1858 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1872  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1882  = reg2hw[105];
  assign \$auto$rtlil.cc:2746:ReduceBool$1899  = \$auto$builder.cc:338:Biop$1897 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1911  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1921  = reg2hw[112];
  assign \$auto$rtlil.cc:2746:ReduceBool$1938  = \$auto$builder.cc:338:Biop$1936 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1950  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1960  = reg2hw[119];
  assign \$auto$rtlil.cc:2746:ReduceBool$1977  = \$auto$builder.cc:338:Biop$1975 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1989  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1999  = reg2hw[126];
  assign \$auto$rtlil.cc:2746:ReduceBool$2016  = \$auto$builder.cc:338:Biop$2014 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2028  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2038  = reg2hw[133];
  assign \$auto$rtlil.cc:2746:ReduceBool$2055  = \$auto$builder.cc:338:Biop$2053 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2067  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2077  = reg2hw[140];
  assign \$auto$rtlil.cc:2746:ReduceBool$2094  = \$auto$builder.cc:338:Biop$2092 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2106  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2116  = reg2hw[147];
  assign \$auto$rtlil.cc:2746:ReduceBool$2133  = \$auto$builder.cc:338:Biop$2131 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2145  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2155  = reg2hw[154];
  assign \$auto$rtlil.cc:2746:ReduceBool$2172  = \$auto$builder.cc:338:Biop$2170 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2184  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2194  = reg2hw[161];
  assign \$auto$rtlil.cc:2746:ReduceBool$2211  = \$auto$builder.cc:338:Biop$2209 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2223  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2233  = reg2hw[168];
  assign \$auto$rtlil.cc:2746:ReduceBool$2250  = \$auto$builder.cc:338:Biop$2248 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2262  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2272  = reg2hw[175];
  assign \$auto$rtlil.cc:2746:ReduceBool$2289  = \$auto$builder.cc:338:Biop$2287 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2301  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2311  = reg2hw[182];
  assign \$auto$rtlil.cc:2746:ReduceBool$2328  = \$auto$builder.cc:338:Biop$2326 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2340  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2350  = reg2hw[189];
  assign \$auto$rtlil.cc:2746:ReduceBool$2367  = \$auto$builder.cc:338:Biop$2365 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2379  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2389  = reg2hw[196];
  assign \$auto$rtlil.cc:2746:ReduceBool$2406  = \$auto$builder.cc:338:Biop$2404 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2418  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2428  = reg2hw[203];
  assign \$auto$rtlil.cc:2746:ReduceBool$2445  = \$auto$builder.cc:338:Biop$2443 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2457  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2467  = reg2hw[210];
  assign \$auto$rtlil.cc:2746:ReduceBool$2484  = \$auto$builder.cc:338:Biop$2482 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2496  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$2506  = reg2hw[217];
  assign \$auto$rtlil.cc:2746:ReduceBool$2523  = \$auto$builder.cc:338:Biop$2521 ;
  assign \$auto$builder.cc:338:Biop$2536  = reg2hw[1];
endmodule

/* src = "../rtl/gpio/gpio_reg_top.sv:12.8" */
module \gpio_reg_top$croc_chip.i_croc_soc.i_croc.i_gpio.i_reg_file (clk_i, rst_ni, obi_req_i, obi_rsp_o, reg2hw, hw2reg);
  wire \$auto$builder.cc:338:Biop$5253 ;
  wire \$auto$builder.cc:338:Biop$5255 ;
  wire \$auto$builder.cc:338:Biop$5339 ;
  wire \$auto$builder.cc:338:Biop$5350 ;
  wire \$auto$builder.cc:338:Biop$5361 ;
  wire \$auto$builder.cc:338:Biop$5372 ;
  wire \$auto$builder.cc:338:Biop$5383 ;
  wire \$auto$builder.cc:338:Biop$5394 ;
  wire \$auto$builder.cc:338:Biop$5405 ;
  wire \$auto$builder.cc:338:Biop$5416 ;
  wire \$auto$builder.cc:338:Biop$5427 ;
  wire \$auto$builder.cc:338:Biop$5438 ;
  wire \$auto$builder.cc:338:Biop$5449 ;
  wire \$auto$builder.cc:338:Biop$5460 ;
  wire \$auto$builder.cc:338:Biop$5471 ;
  wire \$auto$builder.cc:338:Biop$5482 ;
  wire \$auto$builder.cc:338:Biop$5493 ;
  wire \$auto$builder.cc:338:Biop$5504 ;
  wire \$auto$builder.cc:338:Biop$5515 ;
  wire \$auto$builder.cc:338:Biop$5526 ;
  wire \$auto$builder.cc:338:Biop$5537 ;
  wire \$auto$builder.cc:338:Biop$5548 ;
  wire \$auto$builder.cc:338:Biop$5559 ;
  wire \$auto$builder.cc:338:Biop$5570 ;
  wire \$auto$builder.cc:338:Biop$5581 ;
  wire \$auto$builder.cc:338:Biop$5592 ;
  wire \$auto$builder.cc:338:Biop$5603 ;
  wire \$auto$builder.cc:338:Biop$5614 ;
  wire \$auto$builder.cc:338:Biop$5625 ;
  wire \$auto$builder.cc:338:Biop$5636 ;
  wire \$auto$builder.cc:338:Biop$5647 ;
  wire \$auto$builder.cc:338:Biop$5658 ;
  wire \$auto$builder.cc:338:Biop$5669 ;
  wire \$auto$builder.cc:338:Biop$5680 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5686 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5688 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5690 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5694 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5696 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5698 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5702 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5704 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5706 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5708 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5712 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5714 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5716 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5720 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5722 ;
  wire [31:0] \$auto$builder.cc:338:Biop$5724 ;
  wire \$auto$builder.cc:364:Unop$5251 ;
  wire [31:0] \$auto$builder.cc:364:Unop$5684 ;
  wire [31:0] \$auto$builder.cc:364:Unop$5692 ;
  wire [31:0] \$auto$builder.cc:364:Unop$5700 ;
  wire [31:0] \$auto$builder.cc:364:Unop$5710 ;
  wire [31:0] \$auto$builder.cc:364:Unop$5718 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5331 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5335 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5342 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5346 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5353 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5357 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5364 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5368 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5375 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5379 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5386 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5390 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5397 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5401 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5408 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5412 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5419 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5423 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5430 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5434 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5441 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5445 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5452 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5456 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5463 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5467 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5474 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5478 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5485 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5489 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5496 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5500 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5507 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5511 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5518 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5522 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5529 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5533 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5540 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5544 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5551 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5555 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5562 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5566 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5573 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5577 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5584 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5588 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5595 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5599 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5606 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5610 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5617 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5621 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5628 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5632 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5639 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5643 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5650 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5654 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5661 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5665 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5672 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5676 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$5739 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5258 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5260 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5263 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5265 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5268 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5270 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5273 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5275 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5278 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5280 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5283 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5285 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5288 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5290 ;
  wire \$auto$rtlil.cc:2874:Mux$5333 ;
  wire \$auto$rtlil.cc:2874:Mux$5337 ;
  wire \$auto$rtlil.cc:2874:Mux$5344 ;
  wire \$auto$rtlil.cc:2874:Mux$5348 ;
  wire \$auto$rtlil.cc:2874:Mux$5355 ;
  wire \$auto$rtlil.cc:2874:Mux$5359 ;
  wire \$auto$rtlil.cc:2874:Mux$5366 ;
  wire \$auto$rtlil.cc:2874:Mux$5370 ;
  wire \$auto$rtlil.cc:2874:Mux$5377 ;
  wire \$auto$rtlil.cc:2874:Mux$5381 ;
  wire \$auto$rtlil.cc:2874:Mux$5388 ;
  wire \$auto$rtlil.cc:2874:Mux$5392 ;
  wire \$auto$rtlil.cc:2874:Mux$5399 ;
  wire \$auto$rtlil.cc:2874:Mux$5403 ;
  wire \$auto$rtlil.cc:2874:Mux$5410 ;
  wire \$auto$rtlil.cc:2874:Mux$5414 ;
  wire \$auto$rtlil.cc:2874:Mux$5421 ;
  wire \$auto$rtlil.cc:2874:Mux$5425 ;
  wire \$auto$rtlil.cc:2874:Mux$5432 ;
  wire \$auto$rtlil.cc:2874:Mux$5436 ;
  wire \$auto$rtlil.cc:2874:Mux$5443 ;
  wire \$auto$rtlil.cc:2874:Mux$5447 ;
  wire \$auto$rtlil.cc:2874:Mux$5454 ;
  wire \$auto$rtlil.cc:2874:Mux$5458 ;
  wire \$auto$rtlil.cc:2874:Mux$5465 ;
  wire \$auto$rtlil.cc:2874:Mux$5469 ;
  wire \$auto$rtlil.cc:2874:Mux$5476 ;
  wire \$auto$rtlil.cc:2874:Mux$5480 ;
  wire \$auto$rtlil.cc:2874:Mux$5487 ;
  wire \$auto$rtlil.cc:2874:Mux$5491 ;
  wire \$auto$rtlil.cc:2874:Mux$5498 ;
  wire \$auto$rtlil.cc:2874:Mux$5502 ;
  wire \$auto$rtlil.cc:2874:Mux$5509 ;
  wire \$auto$rtlil.cc:2874:Mux$5513 ;
  wire \$auto$rtlil.cc:2874:Mux$5520 ;
  wire \$auto$rtlil.cc:2874:Mux$5524 ;
  wire \$auto$rtlil.cc:2874:Mux$5531 ;
  wire \$auto$rtlil.cc:2874:Mux$5535 ;
  wire \$auto$rtlil.cc:2874:Mux$5542 ;
  wire \$auto$rtlil.cc:2874:Mux$5546 ;
  wire \$auto$rtlil.cc:2874:Mux$5553 ;
  wire \$auto$rtlil.cc:2874:Mux$5557 ;
  wire \$auto$rtlil.cc:2874:Mux$5564 ;
  wire \$auto$rtlil.cc:2874:Mux$5568 ;
  wire \$auto$rtlil.cc:2874:Mux$5575 ;
  wire \$auto$rtlil.cc:2874:Mux$5579 ;
  wire \$auto$rtlil.cc:2874:Mux$5586 ;
  wire \$auto$rtlil.cc:2874:Mux$5590 ;
  wire \$auto$rtlil.cc:2874:Mux$5597 ;
  wire \$auto$rtlil.cc:2874:Mux$5601 ;
  wire \$auto$rtlil.cc:2874:Mux$5608 ;
  wire \$auto$rtlil.cc:2874:Mux$5612 ;
  wire \$auto$rtlil.cc:2874:Mux$5619 ;
  wire \$auto$rtlil.cc:2874:Mux$5623 ;
  wire \$auto$rtlil.cc:2874:Mux$5630 ;
  wire \$auto$rtlil.cc:2874:Mux$5634 ;
  wire \$auto$rtlil.cc:2874:Mux$5641 ;
  wire \$auto$rtlil.cc:2874:Mux$5645 ;
  wire \$auto$rtlil.cc:2874:Mux$5652 ;
  wire \$auto$rtlil.cc:2874:Mux$5656 ;
  wire \$auto$rtlil.cc:2874:Mux$5663 ;
  wire \$auto$rtlil.cc:2874:Mux$5667 ;
  wire \$auto$rtlil.cc:2874:Mux$5674 ;
  wire \$auto$rtlil.cc:2874:Mux$5678 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$5293 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$5328 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5294 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5295 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5296 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5297 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5298 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5299 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5300 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5301 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5302 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5303 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5304 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5305 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5306 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5307 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5308 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5309 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5310 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5311 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5312 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5313 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5314 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5315 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5316 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5317 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5318 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5319 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5320 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5321 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5322 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5323 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5324 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5325 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5329 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5340 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5351 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5362 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5373 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5384 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5395 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5406 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5417 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5428 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5439 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5450 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5461 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5472 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5483 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5494 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5505 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5516 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5527 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5538 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5549 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5560 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5571 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5582 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5593 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5604 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5615 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5626 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5637 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5648 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5659 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$5670 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$5292 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$5327 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire \$auto$slang_frontend.cc:694:finish$\obi_err$5731 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  wire \$auto$slang_frontend.cc:694:finish$\obi_err$5740 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  wire \$auto$slang_frontend.cc:694:finish$\obi_err$5743 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\obi_rdata$5741 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\obi_rdata$5744 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\reg_d[0]$5726 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\reg_d[0]$5733 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\reg_d[128]$5728 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\reg_d[128]$5735 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire [63:0] \$auto$slang_frontend.cc:694:finish$\reg_d[192]$5729 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire [63:0] \$auto$slang_frontend.cc:694:finish$\reg_d[192]$5736 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\reg_d[32]$5742 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\reg_d[32]$5745 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\reg_d[64]$5727 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\reg_d[64]$5734 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\toggle_out$5730 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\toggle_out$5737 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire \$auto$slang_frontend.cc:694:finish$\w_err_d$5725 ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire \$auto$slang_frontend.cc:694:finish$\w_err_d$5732 ;
  wire [31:0] \$procmux$14214_Y ;
  wire \$procmux$14215_CMP ;
  wire \$procmux$14216_CMP ;
  wire \$procmux$14217_CMP ;
  wire \$procmux$14218_CMP ;
  wire \$procmux$14219_CMP ;
  wire \$procmux$14220_CMP ;
  wire \$procmux$14221_CMP ;
  wire \$procmux$14222_CMP ;
  wire [31:0] \$procmux$14223_Y ;
  wire \$procmux$14224_CMP ;
  wire [31:0] \$procmux$14228_Y ;
  wire \$procmux$14229_CMP ;
  wire [31:0] \$procmux$14230_Y ;
  wire \$procmux$14231_CMP ;
  wire \$procmux$14234_Y ;
  wire \$procmux$14235_CMP ;
  wire \$procmux$14236_CMP ;
  wire \$procmux$14237_CMP ;
  wire \$procmux$14238_CMP ;
  wire \$procmux$14239_CMP ;
  wire \$procmux$14240_CMP ;
  wire \$procmux$14241_CMP ;
  wire \$procmux$14242_CMP ;
  wire \$procmux$14243_Y ;
  wire \$procmux$14244_CMP ;
  wire [31:0] \$procmux$14247_Y ;
  wire \$procmux$14248_CMP ;
  wire [31:0] \$procmux$14251_Y ;
  wire \$procmux$14252_CMP ;
  wire \$procmux$14255_Y ;
  wire \$procmux$14256_CMP ;
  wire [31:0] \$procmux$14264_Y ;
  wire \$procmux$14265_CMP ;
  wire [31:0] \$procmux$14266_Y ;
  wire \$procmux$14267_CMP ;
  wire [31:0] \$procmux$14271_Y ;
  wire \$procmux$14272_CMP ;
  wire [31:0] \$procmux$14273_Y ;
  wire \$procmux$14274_CMP ;
  wire [31:0] \$procmux$14280_Y ;
  wire \$procmux$14281_CMP ;
  wire [31:0] \$procmux$14282_Y ;
  wire \$procmux$14283_CMP ;
  wire [31:0] \$procmux$14288_Y ;
  wire \$procmux$14289_CMP ;
  wire [31:0] \$procmux$14290_Y ;
  wire \$procmux$14291_CMP ;
  wire [31:0] \$procmux$14294_Y ;
  wire \$procmux$14295_CMP ;
  wire [31:0] \$procmux$14296_Y ;
  wire \$procmux$14297_CMP ;
  wire [31:0] \$procmux$14299_Y ;
  wire \$procmux$14300_CMP ;
  wire [31:0] \$procmux$14301_Y ;
  wire \$procmux$14302_CMP ;
  wire \$procmux$14304_Y ;
  wire \$procmux$14305_CMP ;
  wire \$procmux$14306_CMP ;
  wire \$procmux$14307_CMP ;
  wire \$procmux$14308_CMP ;
  wire \$procmux$14309_CMP ;
  wire \$procmux$14310_CMP ;
  wire \$procmux$14311_Y ;
  wire \$procmux$14312_CMP ;
  wire [31:0] \$procmux$14314_Y ;
  wire \$procmux$14315_CMP ;
  wire [63:0] \$procmux$14317_Y ;
  wire \$procmux$14318_CMP ;
  wire [31:0] \$procmux$14320_Y ;
  wire \$procmux$14321_CMP ;
  wire [31:0] \$procmux$14323_Y ;
  wire \$procmux$14324_CMP ;
  wire [31:0] \$procmux$14326_Y ;
  wire \$procmux$14327_CMP ;
  wire \$procmux$14329_Y ;
  wire \$procmux$14330_CMP ;
  wire \$procmux$14332_Y ;
  wire \$procmux$14333_CMP ;
  /* src = "../rtl/gpio/gpio_reg_top.sv:117.32" */
  wire [31:0] bit_mask;
  /* src = "../rtl/gpio/gpio_reg_top.sv:23.18" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/gpio/gpio_reg_top.sv:37.43" */
  input [159:0] hw2reg;
  wire [159:0] hw2reg;
  /* src = "../rtl/gpio/gpio_reg_top.sv:50.35" */
  wire id_d;
  /* src = "../rtl/gpio/gpio_reg_top.sv:50.41" */
  wire id_q;
  /* src = "../rtl/gpio/gpio_reg_top.sv:113.25" */
  wire [31:0] new_intrpt;
  /* src = "../rtl/gpio/gpio_reg_top.sv:108.21" */
  wire [255:0] new_reg;
  /* src = "../rtl/gpio/gpio_reg_top.sv:51.35" */
  wire obi_err;
  /* src = "../rtl/gpio/gpio_reg_top.sv:54.35" */
  wire [31:0] obi_rdata;
  /* src = "../rtl/gpio/gpio_reg_top.sv:55.35" */
  wire obi_read_request;
  /* src = "../rtl/gpio/gpio_reg_top.sv:29.23" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "../rtl/gpio/gpio_reg_top.sv:31.22" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "../rtl/gpio/gpio_reg_top.sv:54.46" */
  wire [31:0] obi_wdata;
  /* src = "../rtl/gpio/gpio_reg_top.sv:55.53" */
  wire obi_write_request;
  /* src = "../rtl/gpio/gpio_reg_top.sv:49.35" */
  wire [11:0] read_addr_d;
  /* src = "../rtl/gpio/gpio_reg_top.sv:49.48" */
  wire [11:0] read_addr_q;
  /* src = "../rtl/gpio/gpio_reg_top.sv:35.42" */
  output [223:0] reg2hw;
  wire [223:0] reg2hw;
  /* src = "../rtl/gpio/gpio_reg_top.sv:105.21" */
  wire [255:0] reg_d;
  /* src = "../rtl/gpio/gpio_reg_top.sv:105.28" */
  wire [255:0] reg_q;
  /* src = "../rtl/gpio/gpio_reg_top.sv:47.35" */
  wire req_d;
  /* src = "../rtl/gpio/gpio_reg_top.sv:47.42" */
  wire req_q;
  /* src = "../rtl/gpio/gpio_reg_top.sv:25.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/gpio/gpio_reg_top.sv:114.25" */
  wire [31:0] toggle_out;
  /* src = "../rtl/gpio/gpio_reg_top.sv:45.35" */
  wire valid_d;
  /* src = "../rtl/gpio/gpio_reg_top.sv:45.44" */
  wire valid_q;
  /* src = "../rtl/gpio/gpio_reg_top.sv:52.35" */
  wire w_err_d;
  /* src = "../rtl/gpio/gpio_reg_top.sv:52.44" */
  wire w_err_q;
  /* src = "../rtl/gpio/gpio_reg_top.sv:46.35" */
  wire we_d;
  /* src = "../rtl/gpio/gpio_reg_top.sv:46.41" */
  wire we_q;
  /* src = "../rtl/gpio/gpio_reg_top.sv:48.35" */
  wire [11:0] write_addr;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5257  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5258 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5262  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5263 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5267  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5268 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5272  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5273 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5277  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5278 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5282  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5283 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5287  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5288 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5252  (
    .A(req_q),
    .B(\$auto$builder.cc:364:Unop$5251 ),
    .Y(\$auto$builder.cc:338:Biop$5253 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5254  (
    .A(obi_req_i[0]),
    .B(obi_req_i[41]),
    .Y(\$auto$builder.cc:338:Biop$5255 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5338  (
    .A(hw2reg[0]),
    .B(hw2reg[1]),
    .Y(\$auto$builder.cc:338:Biop$5339 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5349  (
    .A(hw2reg[5]),
    .B(hw2reg[6]),
    .Y(\$auto$builder.cc:338:Biop$5350 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5360  (
    .A(hw2reg[10]),
    .B(hw2reg[11]),
    .Y(\$auto$builder.cc:338:Biop$5361 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5371  (
    .A(hw2reg[15]),
    .B(hw2reg[16]),
    .Y(\$auto$builder.cc:338:Biop$5372 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5382  (
    .A(hw2reg[20]),
    .B(hw2reg[21]),
    .Y(\$auto$builder.cc:338:Biop$5383 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5393  (
    .A(hw2reg[25]),
    .B(hw2reg[26]),
    .Y(\$auto$builder.cc:338:Biop$5394 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5404  (
    .A(hw2reg[30]),
    .B(hw2reg[31]),
    .Y(\$auto$builder.cc:338:Biop$5405 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5415  (
    .A(hw2reg[35]),
    .B(hw2reg[36]),
    .Y(\$auto$builder.cc:338:Biop$5416 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5426  (
    .A(hw2reg[40]),
    .B(hw2reg[41]),
    .Y(\$auto$builder.cc:338:Biop$5427 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5437  (
    .A(hw2reg[45]),
    .B(hw2reg[46]),
    .Y(\$auto$builder.cc:338:Biop$5438 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5448  (
    .A(hw2reg[50]),
    .B(hw2reg[51]),
    .Y(\$auto$builder.cc:338:Biop$5449 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5459  (
    .A(hw2reg[55]),
    .B(hw2reg[56]),
    .Y(\$auto$builder.cc:338:Biop$5460 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5470  (
    .A(hw2reg[60]),
    .B(hw2reg[61]),
    .Y(\$auto$builder.cc:338:Biop$5471 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5481  (
    .A(hw2reg[65]),
    .B(hw2reg[66]),
    .Y(\$auto$builder.cc:338:Biop$5482 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5492  (
    .A(hw2reg[70]),
    .B(hw2reg[71]),
    .Y(\$auto$builder.cc:338:Biop$5493 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5503  (
    .A(hw2reg[75]),
    .B(hw2reg[76]),
    .Y(\$auto$builder.cc:338:Biop$5504 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5514  (
    .A(hw2reg[80]),
    .B(hw2reg[81]),
    .Y(\$auto$builder.cc:338:Biop$5515 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5525  (
    .A(hw2reg[85]),
    .B(hw2reg[86]),
    .Y(\$auto$builder.cc:338:Biop$5526 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5536  (
    .A(hw2reg[90]),
    .B(hw2reg[91]),
    .Y(\$auto$builder.cc:338:Biop$5537 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5547  (
    .A(hw2reg[95]),
    .B(hw2reg[96]),
    .Y(\$auto$builder.cc:338:Biop$5548 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5558  (
    .A(hw2reg[100]),
    .B(hw2reg[101]),
    .Y(\$auto$builder.cc:338:Biop$5559 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5569  (
    .A(hw2reg[105]),
    .B(hw2reg[106]),
    .Y(\$auto$builder.cc:338:Biop$5570 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5580  (
    .A(hw2reg[110]),
    .B(hw2reg[111]),
    .Y(\$auto$builder.cc:338:Biop$5581 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5591  (
    .A(hw2reg[115]),
    .B(hw2reg[116]),
    .Y(\$auto$builder.cc:338:Biop$5592 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5602  (
    .A(hw2reg[120]),
    .B(hw2reg[121]),
    .Y(\$auto$builder.cc:338:Biop$5603 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5613  (
    .A(hw2reg[125]),
    .B(hw2reg[126]),
    .Y(\$auto$builder.cc:338:Biop$5614 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5624  (
    .A(hw2reg[130]),
    .B(hw2reg[131]),
    .Y(\$auto$builder.cc:338:Biop$5625 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5635  (
    .A(hw2reg[135]),
    .B(hw2reg[136]),
    .Y(\$auto$builder.cc:338:Biop$5636 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5646  (
    .A(hw2reg[140]),
    .B(hw2reg[141]),
    .Y(\$auto$builder.cc:338:Biop$5647 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5657  (
    .A(hw2reg[145]),
    .B(hw2reg[146]),
    .Y(\$auto$builder.cc:338:Biop$5658 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5668  (
    .A(hw2reg[150]),
    .B(hw2reg[151]),
    .Y(\$auto$builder.cc:338:Biop$5669 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$5679  (
    .A(hw2reg[155]),
    .B(hw2reg[156]),
    .Y(\$auto$builder.cc:338:Biop$5680 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5685  (
    .A(\$auto$builder.cc:364:Unop$5684 ),
    .B(reg_q[255:224]),
    .Y(\$auto$builder.cc:338:Biop$5686 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5687  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$auto$builder.cc:338:Biop$5688 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5689  (
    .A(\$auto$builder.cc:338:Biop$5686 ),
    .B(\$auto$builder.cc:338:Biop$5688 ),
    .Y(\$auto$builder.cc:338:Biop$5690 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5693  (
    .A(\$auto$builder.cc:364:Unop$5692 ),
    .B(reg_q[223:192]),
    .Y(\$auto$builder.cc:338:Biop$5694 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5695  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$auto$builder.cc:338:Biop$5696 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5697  (
    .A(\$auto$builder.cc:338:Biop$5694 ),
    .B(\$auto$builder.cc:338:Biop$5696 ),
    .Y(\$auto$builder.cc:338:Biop$5698 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5701  (
    .A(\$auto$builder.cc:364:Unop$5700 ),
    .B({ \$auto$rtlil.cc:2874:Mux$5674 , \$auto$rtlil.cc:2874:Mux$5663 , \$auto$rtlil.cc:2874:Mux$5652 , \$auto$rtlil.cc:2874:Mux$5641 , \$auto$rtlil.cc:2874:Mux$5630 , \$auto$rtlil.cc:2874:Mux$5619 , \$auto$rtlil.cc:2874:Mux$5608 , \$auto$rtlil.cc:2874:Mux$5597 , \$auto$rtlil.cc:2874:Mux$5586 , \$auto$rtlil.cc:2874:Mux$5575 , \$auto$rtlil.cc:2874:Mux$5564 , \$auto$rtlil.cc:2874:Mux$5553 , \$auto$rtlil.cc:2874:Mux$5542 , \$auto$rtlil.cc:2874:Mux$5531 , \$auto$rtlil.cc:2874:Mux$5520 , \$auto$rtlil.cc:2874:Mux$5509 , \$auto$rtlil.cc:2874:Mux$5498 , \$auto$rtlil.cc:2874:Mux$5487 , \$auto$rtlil.cc:2874:Mux$5476 , \$auto$rtlil.cc:2874:Mux$5465 , \$auto$rtlil.cc:2874:Mux$5454 , \$auto$rtlil.cc:2874:Mux$5443 , \$auto$rtlil.cc:2874:Mux$5432 , \$auto$rtlil.cc:2874:Mux$5421 , \$auto$rtlil.cc:2874:Mux$5410 , \$auto$rtlil.cc:2874:Mux$5399 , \$auto$rtlil.cc:2874:Mux$5388 , \$auto$rtlil.cc:2874:Mux$5377 , \$auto$rtlil.cc:2874:Mux$5366 , \$auto$rtlil.cc:2874:Mux$5355 , \$auto$rtlil.cc:2874:Mux$5344 , \$auto$rtlil.cc:2874:Mux$5333  }),
    .Y(\$auto$builder.cc:338:Biop$5702 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5703  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$auto$builder.cc:338:Biop$5704 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5705  (
    .A(\$auto$builder.cc:338:Biop$5702 ),
    .B(\$auto$builder.cc:338:Biop$5704 ),
    .Y(\$auto$builder.cc:338:Biop$5706 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5707  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$auto$builder.cc:338:Biop$5708 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5711  (
    .A(\$auto$builder.cc:364:Unop$5710 ),
    .B(reg_q[95:64]),
    .Y(\$auto$builder.cc:338:Biop$5712 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5713  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$auto$builder.cc:338:Biop$5714 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5715  (
    .A(\$auto$builder.cc:338:Biop$5712 ),
    .B(\$auto$builder.cc:338:Biop$5714 ),
    .Y(\$auto$builder.cc:338:Biop$5716 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5719  (
    .A(\$auto$builder.cc:364:Unop$5718 ),
    .B(reg_q[31:0]),
    .Y(\$auto$builder.cc:338:Biop$5720 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5721  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$auto$builder.cc:338:Biop$5722 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$5723  (
    .A(\$auto$builder.cc:338:Biop$5720 ),
    .B(\$auto$builder.cc:338:Biop$5722 ),
    .Y(\$auto$builder.cc:338:Biop$5724 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$5250  (
    .A(we_q),
    .Y(\$auto$builder.cc:364:Unop$5251 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:359:Unop$5683  (
    .A(bit_mask),
    .Y(\$auto$builder.cc:364:Unop$5684 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:359:Unop$5691  (
    .A(bit_mask),
    .Y(\$auto$builder.cc:364:Unop$5692 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:359:Unop$5699  (
    .A(bit_mask),
    .Y(\$auto$builder.cc:364:Unop$5700 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:359:Unop$5709  (
    .A(bit_mask),
    .Y(\$auto$builder.cc:364:Unop$5710 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:359:Unop$5717  (
    .A(bit_mask),
    .Y(\$auto$builder.cc:364:Unop$5718 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5332  (
    .A(reg_q[128]),
    .B(hw2reg[3]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5331 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5333 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5336  (
    .A(reg_q[32]),
    .B(hw2reg[1]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5335 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5337 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5343  (
    .A(reg_q[129]),
    .B(hw2reg[8]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5342 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5344 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5347  (
    .A(reg_q[33]),
    .B(hw2reg[6]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5346 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5348 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5354  (
    .A(reg_q[130]),
    .B(hw2reg[13]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5353 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5355 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5358  (
    .A(reg_q[34]),
    .B(hw2reg[11]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5357 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5359 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5365  (
    .A(reg_q[131]),
    .B(hw2reg[18]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5364 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5366 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5369  (
    .A(reg_q[35]),
    .B(hw2reg[16]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5368 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5370 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5376  (
    .A(reg_q[132]),
    .B(hw2reg[23]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5375 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5377 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5380  (
    .A(reg_q[36]),
    .B(hw2reg[21]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5379 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5381 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5387  (
    .A(reg_q[133]),
    .B(hw2reg[28]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5386 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5388 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5391  (
    .A(reg_q[37]),
    .B(hw2reg[26]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5390 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5392 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5398  (
    .A(reg_q[134]),
    .B(hw2reg[33]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5397 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5399 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5402  (
    .A(reg_q[38]),
    .B(hw2reg[31]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5401 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5403 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5409  (
    .A(reg_q[135]),
    .B(hw2reg[38]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5408 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5410 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5413  (
    .A(reg_q[39]),
    .B(hw2reg[36]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5412 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5414 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5420  (
    .A(reg_q[136]),
    .B(hw2reg[43]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5419 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5421 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5424  (
    .A(reg_q[40]),
    .B(hw2reg[41]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5423 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5425 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5431  (
    .A(reg_q[137]),
    .B(hw2reg[48]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5430 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5432 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5435  (
    .A(reg_q[41]),
    .B(hw2reg[46]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5434 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5436 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5442  (
    .A(reg_q[138]),
    .B(hw2reg[53]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5441 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5443 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5446  (
    .A(reg_q[42]),
    .B(hw2reg[51]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5445 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5447 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5453  (
    .A(reg_q[139]),
    .B(hw2reg[58]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5452 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5454 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5457  (
    .A(reg_q[43]),
    .B(hw2reg[56]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5456 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5458 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5464  (
    .A(reg_q[140]),
    .B(hw2reg[63]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5463 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5465 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5468  (
    .A(reg_q[44]),
    .B(hw2reg[61]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5467 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5469 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5475  (
    .A(reg_q[141]),
    .B(hw2reg[68]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5474 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5476 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5479  (
    .A(reg_q[45]),
    .B(hw2reg[66]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5478 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5480 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5486  (
    .A(reg_q[142]),
    .B(hw2reg[73]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5485 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5487 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5490  (
    .A(reg_q[46]),
    .B(hw2reg[71]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5489 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5491 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5497  (
    .A(reg_q[143]),
    .B(hw2reg[78]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5496 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5498 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5501  (
    .A(reg_q[47]),
    .B(hw2reg[76]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5500 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5502 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5508  (
    .A(reg_q[144]),
    .B(hw2reg[83]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5507 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5509 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5512  (
    .A(reg_q[48]),
    .B(hw2reg[81]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5511 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5513 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5519  (
    .A(reg_q[145]),
    .B(hw2reg[88]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5518 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5520 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5523  (
    .A(reg_q[49]),
    .B(hw2reg[86]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5522 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5524 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5530  (
    .A(reg_q[146]),
    .B(hw2reg[93]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5529 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5531 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5534  (
    .A(reg_q[50]),
    .B(hw2reg[91]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5533 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5535 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5541  (
    .A(reg_q[147]),
    .B(hw2reg[98]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5540 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5542 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5545  (
    .A(reg_q[51]),
    .B(hw2reg[96]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5544 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5546 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5552  (
    .A(reg_q[148]),
    .B(hw2reg[103]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5551 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5553 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5556  (
    .A(reg_q[52]),
    .B(hw2reg[101]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5555 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5557 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5563  (
    .A(reg_q[149]),
    .B(hw2reg[108]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5562 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5564 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5567  (
    .A(reg_q[53]),
    .B(hw2reg[106]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5566 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5568 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5574  (
    .A(reg_q[150]),
    .B(hw2reg[113]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5573 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5575 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5578  (
    .A(reg_q[54]),
    .B(hw2reg[111]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5577 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5579 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5585  (
    .A(reg_q[151]),
    .B(hw2reg[118]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5584 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5586 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5589  (
    .A(reg_q[55]),
    .B(hw2reg[116]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5588 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5590 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5596  (
    .A(reg_q[152]),
    .B(hw2reg[123]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5595 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5597 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5600  (
    .A(reg_q[56]),
    .B(hw2reg[121]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5599 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5601 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5607  (
    .A(reg_q[153]),
    .B(hw2reg[128]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5606 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5608 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5611  (
    .A(reg_q[57]),
    .B(hw2reg[126]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5610 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5612 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5618  (
    .A(reg_q[154]),
    .B(hw2reg[133]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5617 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5619 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5622  (
    .A(reg_q[58]),
    .B(hw2reg[131]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5621 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5623 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5629  (
    .A(reg_q[155]),
    .B(hw2reg[138]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5628 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5630 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5633  (
    .A(reg_q[59]),
    .B(hw2reg[136]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5632 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5634 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5640  (
    .A(reg_q[156]),
    .B(hw2reg[143]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5639 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5641 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5644  (
    .A(reg_q[60]),
    .B(hw2reg[141]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5643 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5645 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5651  (
    .A(reg_q[157]),
    .B(hw2reg[148]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5650 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5652 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5655  (
    .A(reg_q[61]),
    .B(hw2reg[146]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5654 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5656 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5662  (
    .A(reg_q[158]),
    .B(hw2reg[153]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5661 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5663 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5666  (
    .A(reg_q[62]),
    .B(hw2reg[151]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5665 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5667 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5673  (
    .A(reg_q[159]),
    .B(hw2reg[158]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5672 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5674 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$5677  (
    .A(reg_q[63]),
    .B(hw2reg[156]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$5676 ),
    .Y(\$auto$rtlil.cc:2874:Mux$5678 )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$id_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(id_d),
    .Q(id_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd12)
  ) \$driver$read_addr_q  (
    .AD(12'h000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(read_addr_d),
    .Q(read_addr_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.dir  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[255:224]),
    .Q(reg_q[255:224])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.en  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[223:192]),
    .Q(reg_q[223:192])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.in  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[191:160]),
    .Q(reg_q[191:160])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.intrpt  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[63:32]),
    .Q(reg_q[63:32])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.intrpt_edge  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[31:0]),
    .Q(reg_q[31:0])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.intrpt_en  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[95:64]),
    .Q(reg_q[95:64])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.out  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[159:128]),
    .Q(reg_q[159:128])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.toggle  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(32'd0),
    .Q(reg_q[127:96])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_d),
    .Q(req_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$valid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(valid_d),
    .Q(valid_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$w_err_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(w_err_d),
    .Q(w_err_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$we_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we_d),
    .Q(we_q)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:237.11-237.41|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd32)
  ) \$procmux$14214  (
    .A(32'd3135023902),
    .B({ reg_q[255:128], 32'h00000000, reg_q[95:0] }),
    .S({ \$procmux$14222_CMP , \$procmux$14221_CMP , \$procmux$14220_CMP , \$procmux$14219_CMP , \$procmux$14218_CMP , \$procmux$14217_CMP , \$procmux$14216_CMP , \$procmux$14215_CMP  }),
    .Y(\$procmux$14214_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:237.11-237.41|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14215_CMP0  (
    .A(read_addr_q),
    .B(12'h0e0),
    .Y(\$procmux$14215_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:230.36-234.12|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14216_CMP0  (
    .A(read_addr_q),
    .B(12'h0c0),
    .Y(\$procmux$14216_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:227.11-227.39|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14217_CMP0  (
    .A(read_addr_q),
    .B(12'h0a0),
    .Y(\$procmux$14217_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:223.11-223.26|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14218_CMP0  (
    .A(read_addr_q),
    .B(12'h080),
    .Y(\$procmux$14218_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:219.11-219.33|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14219_CMP0  (
    .A(read_addr_q),
    .B(12'h060),
    .Y(\$procmux$14219_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:215.11-215.32|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14220_CMP0  (
    .A(read_addr_q),
    .B(12'h040),
    .Y(\$procmux$14220_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:211.11-211.32|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14221_CMP0  (
    .A(read_addr_q),
    .B(12'h020),
    .Y(\$procmux$14221_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:207.11-207.33|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14222_CMP0  (
    .A(read_addr_q),
    .Y(\$procmux$14222_CMP )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:203.27-245.8|../rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14223  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$14214_Y ),
    .S(\$procmux$14224_CMP ),
    .Y(\$procmux$14223_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:230.36-234.12|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14228  (
    .A({ \$auto$rtlil.cc:2874:Mux$5678 , \$auto$rtlil.cc:2874:Mux$5667 , \$auto$rtlil.cc:2874:Mux$5656 , \$auto$rtlil.cc:2874:Mux$5645 , \$auto$rtlil.cc:2874:Mux$5634 , \$auto$rtlil.cc:2874:Mux$5623 , \$auto$rtlil.cc:2874:Mux$5612 , \$auto$rtlil.cc:2874:Mux$5601 , \$auto$rtlil.cc:2874:Mux$5590 , \$auto$rtlil.cc:2874:Mux$5579 , \$auto$rtlil.cc:2874:Mux$5568 , \$auto$rtlil.cc:2874:Mux$5557 , \$auto$rtlil.cc:2874:Mux$5546 , \$auto$rtlil.cc:2874:Mux$5535 , \$auto$rtlil.cc:2874:Mux$5524 , \$auto$rtlil.cc:2874:Mux$5513 , \$auto$rtlil.cc:2874:Mux$5502 , \$auto$rtlil.cc:2874:Mux$5491 , \$auto$rtlil.cc:2874:Mux$5480 , \$auto$rtlil.cc:2874:Mux$5469 , \$auto$rtlil.cc:2874:Mux$5458 , \$auto$rtlil.cc:2874:Mux$5447 , \$auto$rtlil.cc:2874:Mux$5436 , \$auto$rtlil.cc:2874:Mux$5425 , \$auto$rtlil.cc:2874:Mux$5414 , \$auto$rtlil.cc:2874:Mux$5403 , \$auto$rtlil.cc:2874:Mux$5392 , \$auto$rtlil.cc:2874:Mux$5381 , \$auto$rtlil.cc:2874:Mux$5370 , \$auto$rtlil.cc:2874:Mux$5359 , \$auto$rtlil.cc:2874:Mux$5348 , \$auto$rtlil.cc:2874:Mux$5337  }),
    .B({ \$auto$builder.cc:338:Biop$5680 , \$auto$builder.cc:338:Biop$5669 , \$auto$builder.cc:338:Biop$5658 , \$auto$builder.cc:338:Biop$5647 , \$auto$builder.cc:338:Biop$5636 , \$auto$builder.cc:338:Biop$5625 , \$auto$builder.cc:338:Biop$5614 , \$auto$builder.cc:338:Biop$5603 , \$auto$builder.cc:338:Biop$5592 , \$auto$builder.cc:338:Biop$5581 , \$auto$builder.cc:338:Biop$5570 , \$auto$builder.cc:338:Biop$5559 , \$auto$builder.cc:338:Biop$5548 , \$auto$builder.cc:338:Biop$5537 , \$auto$builder.cc:338:Biop$5526 , \$auto$builder.cc:338:Biop$5515 , \$auto$builder.cc:338:Biop$5504 , \$auto$builder.cc:338:Biop$5493 , \$auto$builder.cc:338:Biop$5482 , \$auto$builder.cc:338:Biop$5471 , \$auto$builder.cc:338:Biop$5460 , \$auto$builder.cc:338:Biop$5449 , \$auto$builder.cc:338:Biop$5438 , \$auto$builder.cc:338:Biop$5427 , \$auto$builder.cc:338:Biop$5416 , \$auto$builder.cc:338:Biop$5405 , \$auto$builder.cc:338:Biop$5394 , \$auto$builder.cc:338:Biop$5383 , \$auto$builder.cc:338:Biop$5372 , \$auto$builder.cc:338:Biop$5361 , \$auto$builder.cc:338:Biop$5350 , \$auto$builder.cc:338:Biop$5339  }),
    .S(\$procmux$14229_CMP ),
    .Y(\$procmux$14228_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:230.36-234.12|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14229_CMP0  (
    .A(read_addr_q),
    .B(12'h0c0),
    .Y(\$procmux$14229_CMP )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:203.27-245.8|../rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14230  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$14228_Y ),
    .S(\$procmux$14231_CMP ),
    .Y(\$procmux$14230_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:237.11-237.41|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd1)
  ) \$procmux$14234  (
    .A(1'h1),
    .B(8'h00),
    .S({ \$procmux$14242_CMP , \$procmux$14241_CMP , \$procmux$14240_CMP , \$procmux$14239_CMP , \$procmux$14238_CMP , \$procmux$14237_CMP , \$procmux$14236_CMP , \$procmux$14235_CMP  }),
    .Y(\$procmux$14234_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:237.11-237.41|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14235_CMP0  (
    .A(read_addr_q),
    .B(12'h0e0),
    .Y(\$procmux$14235_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:230.36-234.12|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14236_CMP0  (
    .A(read_addr_q),
    .B(12'h0c0),
    .Y(\$procmux$14236_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:227.11-227.39|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14237_CMP0  (
    .A(read_addr_q),
    .B(12'h0a0),
    .Y(\$procmux$14237_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:223.11-223.26|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14238_CMP0  (
    .A(read_addr_q),
    .B(12'h080),
    .Y(\$procmux$14238_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:219.11-219.33|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14239_CMP0  (
    .A(read_addr_q),
    .B(12'h060),
    .Y(\$procmux$14239_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:215.11-215.32|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14240_CMP0  (
    .A(read_addr_q),
    .B(12'h040),
    .Y(\$procmux$14240_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:211.11-211.32|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14241_CMP0  (
    .A(read_addr_q),
    .B(12'h020),
    .Y(\$procmux$14241_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:207.11-207.33|../rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14242_CMP0  (
    .A(read_addr_q),
    .Y(\$procmux$14242_CMP )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:203.27-245.8|../rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14243  (
    .A(1'hx),
    .B(\$procmux$14234_Y ),
    .S(\$procmux$14244_CMP ),
    .Y(\$procmux$14243_Y )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:203.27-245.8|../rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14247  (
    .A({ \$auto$rtlil.cc:2874:Mux$5678 , \$auto$rtlil.cc:2874:Mux$5667 , \$auto$rtlil.cc:2874:Mux$5656 , \$auto$rtlil.cc:2874:Mux$5645 , \$auto$rtlil.cc:2874:Mux$5634 , \$auto$rtlil.cc:2874:Mux$5623 , \$auto$rtlil.cc:2874:Mux$5612 , \$auto$rtlil.cc:2874:Mux$5601 , \$auto$rtlil.cc:2874:Mux$5590 , \$auto$rtlil.cc:2874:Mux$5579 , \$auto$rtlil.cc:2874:Mux$5568 , \$auto$rtlil.cc:2874:Mux$5557 , \$auto$rtlil.cc:2874:Mux$5546 , \$auto$rtlil.cc:2874:Mux$5535 , \$auto$rtlil.cc:2874:Mux$5524 , \$auto$rtlil.cc:2874:Mux$5513 , \$auto$rtlil.cc:2874:Mux$5502 , \$auto$rtlil.cc:2874:Mux$5491 , \$auto$rtlil.cc:2874:Mux$5480 , \$auto$rtlil.cc:2874:Mux$5469 , \$auto$rtlil.cc:2874:Mux$5458 , \$auto$rtlil.cc:2874:Mux$5447 , \$auto$rtlil.cc:2874:Mux$5436 , \$auto$rtlil.cc:2874:Mux$5425 , \$auto$rtlil.cc:2874:Mux$5414 , \$auto$rtlil.cc:2874:Mux$5403 , \$auto$rtlil.cc:2874:Mux$5392 , \$auto$rtlil.cc:2874:Mux$5381 , \$auto$rtlil.cc:2874:Mux$5370 , \$auto$rtlil.cc:2874:Mux$5359 , \$auto$rtlil.cc:2874:Mux$5348 , \$auto$rtlil.cc:2874:Mux$5337  }),
    .B(\$auto$slang_frontend.cc:694:finish$\reg_d[32]$5742 ),
    .S(\$procmux$14248_CMP ),
    .Y(\$procmux$14247_Y )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:203.27-245.8|../rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14251  (
    .A(32'd0),
    .B(\$auto$slang_frontend.cc:694:finish$\obi_rdata$5741 ),
    .S(\$procmux$14252_CMP ),
    .Y(\$procmux$14251_Y )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:203.27-245.8|../rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14255  (
    .A(\$auto$slang_frontend.cc:694:finish$\obi_err$5731 ),
    .B(\$auto$slang_frontend.cc:694:finish$\obi_err$5740 ),
    .S(\$procmux$14256_CMP ),
    .Y(\$procmux$14255_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:169.11-169.89|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14264  (
    .A(reg_q[255:224]),
    .B(\$auto$builder.cc:338:Biop$5690 ),
    .S(\$procmux$14265_CMP ),
    .Y(\$procmux$14264_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:169.11-169.89|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14265_CMP0  (
    .A(write_addr),
    .Y(\$procmux$14265_CMP )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14266  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$14264_Y ),
    .S(\$procmux$14267_CMP ),
    .Y(\$procmux$14266_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:182.11-182.60|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14271  (
    .A(32'd0),
    .B(\$auto$builder.cc:338:Biop$5708 ),
    .S(\$procmux$14272_CMP ),
    .Y(\$procmux$14271_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:182.11-182.60|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14272_CMP0  (
    .A(write_addr),
    .B(12'h080),
    .Y(\$procmux$14272_CMP )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14273  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$14271_Y ),
    .S(\$procmux$14274_CMP ),
    .Y(\$procmux$14273_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:173.11-173.87|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14280  (
    .A(reg_q[223:192]),
    .B(\$auto$builder.cc:338:Biop$5698 ),
    .S(\$procmux$14281_CMP ),
    .Y(\$procmux$14280_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:173.11-173.87|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14281_CMP0  (
    .A(write_addr),
    .B(12'h020),
    .Y(\$procmux$14281_CMP )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14282  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$14280_Y ),
    .S(\$procmux$14283_CMP ),
    .Y(\$procmux$14282_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:177.11-178.77|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14288  (
    .A({ \$auto$rtlil.cc:2874:Mux$5674 , \$auto$rtlil.cc:2874:Mux$5663 , \$auto$rtlil.cc:2874:Mux$5652 , \$auto$rtlil.cc:2874:Mux$5641 , \$auto$rtlil.cc:2874:Mux$5630 , \$auto$rtlil.cc:2874:Mux$5619 , \$auto$rtlil.cc:2874:Mux$5608 , \$auto$rtlil.cc:2874:Mux$5597 , \$auto$rtlil.cc:2874:Mux$5586 , \$auto$rtlil.cc:2874:Mux$5575 , \$auto$rtlil.cc:2874:Mux$5564 , \$auto$rtlil.cc:2874:Mux$5553 , \$auto$rtlil.cc:2874:Mux$5542 , \$auto$rtlil.cc:2874:Mux$5531 , \$auto$rtlil.cc:2874:Mux$5520 , \$auto$rtlil.cc:2874:Mux$5509 , \$auto$rtlil.cc:2874:Mux$5498 , \$auto$rtlil.cc:2874:Mux$5487 , \$auto$rtlil.cc:2874:Mux$5476 , \$auto$rtlil.cc:2874:Mux$5465 , \$auto$rtlil.cc:2874:Mux$5454 , \$auto$rtlil.cc:2874:Mux$5443 , \$auto$rtlil.cc:2874:Mux$5432 , \$auto$rtlil.cc:2874:Mux$5421 , \$auto$rtlil.cc:2874:Mux$5410 , \$auto$rtlil.cc:2874:Mux$5399 , \$auto$rtlil.cc:2874:Mux$5388 , \$auto$rtlil.cc:2874:Mux$5377 , \$auto$rtlil.cc:2874:Mux$5366 , \$auto$rtlil.cc:2874:Mux$5355 , \$auto$rtlil.cc:2874:Mux$5344 , \$auto$rtlil.cc:2874:Mux$5333  }),
    .B(\$auto$builder.cc:338:Biop$5706 ),
    .S(\$procmux$14289_CMP ),
    .Y(\$procmux$14288_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:177.11-178.77|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14289_CMP0  (
    .A(write_addr),
    .B(12'h060),
    .Y(\$procmux$14289_CMP )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14290  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$14288_Y ),
    .S(\$procmux$14291_CMP ),
    .Y(\$procmux$14290_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:186.11-187.85|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14294  (
    .A(reg_q[95:64]),
    .B(\$auto$builder.cc:338:Biop$5716 ),
    .S(\$procmux$14295_CMP ),
    .Y(\$procmux$14294_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:186.11-187.85|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14295_CMP0  (
    .A(write_addr),
    .B(12'h0a0),
    .Y(\$procmux$14295_CMP )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14296  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$14294_Y ),
    .S(\$procmux$14297_CMP ),
    .Y(\$procmux$14296_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:191.11-192.87|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14299  (
    .A(reg_q[31:0]),
    .B(\$auto$builder.cc:338:Biop$5724 ),
    .S(\$procmux$14300_CMP ),
    .Y(\$procmux$14299_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:191.11-192.87|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14300_CMP0  (
    .A(write_addr),
    .B(12'h0e0),
    .Y(\$procmux$14300_CMP )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14301  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$14299_Y ),
    .S(\$procmux$14302_CMP ),
    .Y(\$procmux$14301_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:191.11-192.87|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd1)
  ) \$procmux$14304  (
    .A(1'h1),
    .B(6'h00),
    .S({ \$procmux$14310_CMP , \$procmux$14309_CMP , \$procmux$14308_CMP , \$procmux$14307_CMP , \$procmux$14306_CMP , \$procmux$14305_CMP  }),
    .Y(\$procmux$14304_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:191.11-192.87|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14305_CMP0  (
    .A(write_addr),
    .B(12'h0e0),
    .Y(\$procmux$14305_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:186.11-187.85|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14306_CMP0  (
    .A(write_addr),
    .B(12'h0a0),
    .Y(\$procmux$14306_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:182.11-182.60|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14307_CMP0  (
    .A(write_addr),
    .B(12'h080),
    .Y(\$procmux$14307_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:177.11-178.77|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14308_CMP0  (
    .A(write_addr),
    .B(12'h060),
    .Y(\$procmux$14308_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:173.11-173.87|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14309_CMP0  (
    .A(write_addr),
    .B(12'h020),
    .Y(\$procmux$14309_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/gpio/gpio_reg_top.sv:169.11-169.89|../rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$14310_CMP0  (
    .A(write_addr),
    .Y(\$procmux$14310_CMP )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14311  (
    .A(1'hx),
    .B(\$procmux$14304_Y ),
    .S(\$procmux$14312_CMP ),
    .Y(\$procmux$14311_Y )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14314  (
    .A(32'd0),
    .B(\$auto$slang_frontend.cc:694:finish$\toggle_out$5730 ),
    .S(\$procmux$14315_CMP ),
    .Y(\$procmux$14314_Y )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$14317  (
    .A(reg_q[255:192]),
    .B(\$auto$slang_frontend.cc:694:finish$\reg_d[192]$5729 ),
    .S(\$procmux$14318_CMP ),
    .Y(\$procmux$14317_Y )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14320  (
    .A({ \$auto$rtlil.cc:2874:Mux$5674 , \$auto$rtlil.cc:2874:Mux$5663 , \$auto$rtlil.cc:2874:Mux$5652 , \$auto$rtlil.cc:2874:Mux$5641 , \$auto$rtlil.cc:2874:Mux$5630 , \$auto$rtlil.cc:2874:Mux$5619 , \$auto$rtlil.cc:2874:Mux$5608 , \$auto$rtlil.cc:2874:Mux$5597 , \$auto$rtlil.cc:2874:Mux$5586 , \$auto$rtlil.cc:2874:Mux$5575 , \$auto$rtlil.cc:2874:Mux$5564 , \$auto$rtlil.cc:2874:Mux$5553 , \$auto$rtlil.cc:2874:Mux$5542 , \$auto$rtlil.cc:2874:Mux$5531 , \$auto$rtlil.cc:2874:Mux$5520 , \$auto$rtlil.cc:2874:Mux$5509 , \$auto$rtlil.cc:2874:Mux$5498 , \$auto$rtlil.cc:2874:Mux$5487 , \$auto$rtlil.cc:2874:Mux$5476 , \$auto$rtlil.cc:2874:Mux$5465 , \$auto$rtlil.cc:2874:Mux$5454 , \$auto$rtlil.cc:2874:Mux$5443 , \$auto$rtlil.cc:2874:Mux$5432 , \$auto$rtlil.cc:2874:Mux$5421 , \$auto$rtlil.cc:2874:Mux$5410 , \$auto$rtlil.cc:2874:Mux$5399 , \$auto$rtlil.cc:2874:Mux$5388 , \$auto$rtlil.cc:2874:Mux$5377 , \$auto$rtlil.cc:2874:Mux$5366 , \$auto$rtlil.cc:2874:Mux$5355 , \$auto$rtlil.cc:2874:Mux$5344 , \$auto$rtlil.cc:2874:Mux$5333  }),
    .B(\$auto$slang_frontend.cc:694:finish$\reg_d[128]$5728 ),
    .S(\$procmux$14321_CMP ),
    .Y(\$procmux$14320_Y )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14323  (
    .A(reg_q[95:64]),
    .B(\$auto$slang_frontend.cc:694:finish$\reg_d[64]$5727 ),
    .S(\$procmux$14324_CMP ),
    .Y(\$procmux$14323_Y )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14326  (
    .A(reg_q[31:0]),
    .B(\$auto$slang_frontend.cc:694:finish$\reg_d[0]$5726 ),
    .S(\$procmux$14327_CMP ),
    .Y(\$procmux$14326_Y )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14329  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\w_err_d$5725 ),
    .S(\$procmux$14330_CMP ),
    .Y(\$procmux$14329_Y )
  );
  /* src = "../rtl/gpio/gpio_reg_top.sv:165.28-199.8|../rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14332  (
    .A(w_err_q),
    .B(1'h0),
    .S(\$procmux$14333_CMP ),
    .Y(\$procmux$14332_Y )
  );
  assign obi_rsp_o = { obi_rdata, 2'h0, id_q, obi_err, 1'h0, obi_req_i[0], valid_q };
  assign obi_wdata = obi_req_i[36:5];
  assign obi_read_request = \$auto$builder.cc:338:Biop$5253 ;
  assign obi_write_request = \$auto$builder.cc:338:Biop$5255 ;
  assign id_d = obi_req_i[2];
  assign valid_d = obi_req_i[0];
  assign write_addr = { 2'h0, obi_req_i[53:44] };
  assign read_addr_d = { 2'h0, obi_req_i[53:44] };
  assign we_d = obi_req_i[41];
  assign req_d = obi_req_i[0];
  assign bit_mask[7:0] = { obi_req_i[37], obi_req_i[37], obi_req_i[37], obi_req_i[37], obi_req_i[37], obi_req_i[37], obi_req_i[37], obi_req_i[37] };
  assign bit_mask[15:8] = { obi_req_i[38], obi_req_i[38], obi_req_i[38], obi_req_i[38], obi_req_i[38], obi_req_i[38], obi_req_i[38], obi_req_i[38] };
  assign bit_mask[23:16] = { obi_req_i[39], obi_req_i[39], obi_req_i[39], obi_req_i[39], obi_req_i[39], obi_req_i[39], obi_req_i[39], obi_req_i[39] };
  assign bit_mask[31:24] = { obi_req_i[40], obi_req_i[40], obi_req_i[40], obi_req_i[40], obi_req_i[40], obi_req_i[40], obi_req_i[40], obi_req_i[40] };
  assign reg2hw = { reg_q[255], reg_q[223], reg_q[159], toggle_out[31], reg_q[95], reg_q[63], reg_q[31], reg_q[254], reg_q[222], reg_q[158], toggle_out[30], reg_q[94], reg_q[62], reg_q[30], reg_q[253], reg_q[221], reg_q[157], toggle_out[29], reg_q[93], reg_q[61], reg_q[29], reg_q[252], reg_q[220], reg_q[156], toggle_out[28], reg_q[92], reg_q[60], reg_q[28], reg_q[251], reg_q[219], reg_q[155], toggle_out[27], reg_q[91], reg_q[59], reg_q[27], reg_q[250], reg_q[218], reg_q[154], toggle_out[26], reg_q[90], reg_q[58], reg_q[26], reg_q[249], reg_q[217], reg_q[153], toggle_out[25], reg_q[89], reg_q[57], reg_q[25], reg_q[248], reg_q[216], reg_q[152], toggle_out[24], reg_q[88], reg_q[56], reg_q[24], reg_q[247], reg_q[215], reg_q[151], toggle_out[23], reg_q[87], reg_q[55], reg_q[23], reg_q[246], reg_q[214], reg_q[150], toggle_out[22], reg_q[86], reg_q[54], reg_q[22], reg_q[245], reg_q[213], reg_q[149], toggle_out[21], reg_q[85], reg_q[53], reg_q[21], reg_q[244], reg_q[212], reg_q[148], toggle_out[20], reg_q[84], reg_q[52], reg_q[20], reg_q[243], reg_q[211], reg_q[147], toggle_out[19], reg_q[83], reg_q[51], reg_q[19], reg_q[242], reg_q[210], reg_q[146], toggle_out[18], reg_q[82], reg_q[50], reg_q[18], reg_q[241], reg_q[209], reg_q[145], toggle_out[17], reg_q[81], reg_q[49], reg_q[17], reg_q[240], reg_q[208], reg_q[144], toggle_out[16], reg_q[80], reg_q[48], reg_q[16], reg_q[239], reg_q[207], reg_q[143], toggle_out[15], reg_q[79], reg_q[47], reg_q[15], reg_q[238], reg_q[206], reg_q[142], toggle_out[14], reg_q[78], reg_q[46], reg_q[14], reg_q[237], reg_q[205], reg_q[141], toggle_out[13], reg_q[77], reg_q[45], reg_q[13], reg_q[236], reg_q[204], reg_q[140], toggle_out[12], reg_q[76], reg_q[44], reg_q[12], reg_q[235], reg_q[203], reg_q[139], toggle_out[11], reg_q[75], reg_q[43], reg_q[11], reg_q[234], reg_q[202], reg_q[138], toggle_out[10], reg_q[74], reg_q[42], reg_q[10], reg_q[233], reg_q[201], reg_q[137], toggle_out[9], reg_q[73], reg_q[41], reg_q[9], reg_q[232], reg_q[200], reg_q[136], toggle_out[8], reg_q[72], reg_q[40], reg_q[8], reg_q[231], reg_q[199], reg_q[135], toggle_out[7], reg_q[71], reg_q[39], reg_q[7], reg_q[230], reg_q[198], reg_q[134], toggle_out[6], reg_q[70], reg_q[38], reg_q[6], reg_q[229], reg_q[197], reg_q[133], toggle_out[5], reg_q[69], reg_q[37], reg_q[5], reg_q[228], reg_q[196], reg_q[132], toggle_out[4], reg_q[68], reg_q[36], reg_q[4], reg_q[227], reg_q[195], reg_q[131], toggle_out[3], reg_q[67], reg_q[35], reg_q[3], reg_q[226], reg_q[194], reg_q[130], toggle_out[2], reg_q[66], reg_q[34], reg_q[2], reg_q[225], reg_q[193], reg_q[129], toggle_out[1], reg_q[65], reg_q[33], reg_q[1], reg_q[224], reg_q[192], reg_q[128], toggle_out[0], reg_q[64], reg_q[32], reg_q[0] };
  assign obi_err = \$auto$slang_frontend.cc:694:finish$\obi_err$5743 ;
  assign w_err_d = \$auto$slang_frontend.cc:694:finish$\w_err_d$5732 ;
  assign obi_rdata = \$auto$slang_frontend.cc:694:finish$\obi_rdata$5744 ;
  assign reg_d = { \$auto$slang_frontend.cc:694:finish$\reg_d[192]$5736 , hw2reg[159], hw2reg[154], hw2reg[149], hw2reg[144], hw2reg[139], hw2reg[134], hw2reg[129], hw2reg[124], hw2reg[119], hw2reg[114], hw2reg[109], hw2reg[104], hw2reg[99], hw2reg[94], hw2reg[89], hw2reg[84], hw2reg[79], hw2reg[74], hw2reg[69], hw2reg[64], hw2reg[59], hw2reg[54], hw2reg[49], hw2reg[44], hw2reg[39], hw2reg[34], hw2reg[29], hw2reg[24], hw2reg[19], hw2reg[14], hw2reg[9], hw2reg[4], \$auto$slang_frontend.cc:694:finish$\reg_d[128]$5735 , 32'h00000000, \$auto$slang_frontend.cc:694:finish$\reg_d[64]$5734 , \$auto$slang_frontend.cc:694:finish$\reg_d[32]$5745 , \$auto$slang_frontend.cc:694:finish$\reg_d[0]$5733  };
  assign new_reg = { reg_q[255:192], hw2reg[159], hw2reg[154], hw2reg[149], hw2reg[144], hw2reg[139], hw2reg[134], hw2reg[129], hw2reg[124], hw2reg[119], hw2reg[114], hw2reg[109], hw2reg[104], hw2reg[99], hw2reg[94], hw2reg[89], hw2reg[84], hw2reg[79], hw2reg[74], hw2reg[69], hw2reg[64], hw2reg[59], hw2reg[54], hw2reg[49], hw2reg[44], hw2reg[39], hw2reg[34], hw2reg[29], hw2reg[24], hw2reg[19], hw2reg[14], hw2reg[9], hw2reg[4], \$auto$rtlil.cc:2874:Mux$5674 , \$auto$rtlil.cc:2874:Mux$5663 , \$auto$rtlil.cc:2874:Mux$5652 , \$auto$rtlil.cc:2874:Mux$5641 , \$auto$rtlil.cc:2874:Mux$5630 , \$auto$rtlil.cc:2874:Mux$5619 , \$auto$rtlil.cc:2874:Mux$5608 , \$auto$rtlil.cc:2874:Mux$5597 , \$auto$rtlil.cc:2874:Mux$5586 , \$auto$rtlil.cc:2874:Mux$5575 , \$auto$rtlil.cc:2874:Mux$5564 , \$auto$rtlil.cc:2874:Mux$5553 , \$auto$rtlil.cc:2874:Mux$5542 , \$auto$rtlil.cc:2874:Mux$5531 , \$auto$rtlil.cc:2874:Mux$5520 , \$auto$rtlil.cc:2874:Mux$5509 , \$auto$rtlil.cc:2874:Mux$5498 , \$auto$rtlil.cc:2874:Mux$5487 , \$auto$rtlil.cc:2874:Mux$5476 , \$auto$rtlil.cc:2874:Mux$5465 , \$auto$rtlil.cc:2874:Mux$5454 , \$auto$rtlil.cc:2874:Mux$5443 , \$auto$rtlil.cc:2874:Mux$5432 , \$auto$rtlil.cc:2874:Mux$5421 , \$auto$rtlil.cc:2874:Mux$5410 , \$auto$rtlil.cc:2874:Mux$5399 , \$auto$rtlil.cc:2874:Mux$5388 , \$auto$rtlil.cc:2874:Mux$5377 , \$auto$rtlil.cc:2874:Mux$5366 , \$auto$rtlil.cc:2874:Mux$5355 , \$auto$rtlil.cc:2874:Mux$5344 , \$auto$rtlil.cc:2874:Mux$5333 , 32'h00000000, reg_q[95:64], \$auto$rtlil.cc:2874:Mux$5678 , \$auto$rtlil.cc:2874:Mux$5667 , \$auto$rtlil.cc:2874:Mux$5656 , \$auto$rtlil.cc:2874:Mux$5645 , \$auto$rtlil.cc:2874:Mux$5634 , \$auto$rtlil.cc:2874:Mux$5623 , \$auto$rtlil.cc:2874:Mux$5612 , \$auto$rtlil.cc:2874:Mux$5601 , \$auto$rtlil.cc:2874:Mux$5590 , \$auto$rtlil.cc:2874:Mux$5579 , \$auto$rtlil.cc:2874:Mux$5568 , \$auto$rtlil.cc:2874:Mux$5557 , \$auto$rtlil.cc:2874:Mux$5546 , \$auto$rtlil.cc:2874:Mux$5535 , \$auto$rtlil.cc:2874:Mux$5524 , \$auto$rtlil.cc:2874:Mux$5513 , \$auto$rtlil.cc:2874:Mux$5502 , \$auto$rtlil.cc:2874:Mux$5491 , \$auto$rtlil.cc:2874:Mux$5480 , \$auto$rtlil.cc:2874:Mux$5469 , \$auto$rtlil.cc:2874:Mux$5458 , \$auto$rtlil.cc:2874:Mux$5447 , \$auto$rtlil.cc:2874:Mux$5436 , \$auto$rtlil.cc:2874:Mux$5425 , \$auto$rtlil.cc:2874:Mux$5414 , \$auto$rtlil.cc:2874:Mux$5403 , \$auto$rtlil.cc:2874:Mux$5392 , \$auto$rtlil.cc:2874:Mux$5381 , \$auto$rtlil.cc:2874:Mux$5370 , \$auto$rtlil.cc:2874:Mux$5359 , \$auto$rtlil.cc:2874:Mux$5348 , \$auto$rtlil.cc:2874:Mux$5337 , reg_q[31:0] };
  assign new_intrpt = { \$auto$builder.cc:338:Biop$5680 , \$auto$builder.cc:338:Biop$5669 , \$auto$builder.cc:338:Biop$5658 , \$auto$builder.cc:338:Biop$5647 , \$auto$builder.cc:338:Biop$5636 , \$auto$builder.cc:338:Biop$5625 , \$auto$builder.cc:338:Biop$5614 , \$auto$builder.cc:338:Biop$5603 , \$auto$builder.cc:338:Biop$5592 , \$auto$builder.cc:338:Biop$5581 , \$auto$builder.cc:338:Biop$5570 , \$auto$builder.cc:338:Biop$5559 , \$auto$builder.cc:338:Biop$5548 , \$auto$builder.cc:338:Biop$5537 , \$auto$builder.cc:338:Biop$5526 , \$auto$builder.cc:338:Biop$5515 , \$auto$builder.cc:338:Biop$5504 , \$auto$builder.cc:338:Biop$5493 , \$auto$builder.cc:338:Biop$5482 , \$auto$builder.cc:338:Biop$5471 , \$auto$builder.cc:338:Biop$5460 , \$auto$builder.cc:338:Biop$5449 , \$auto$builder.cc:338:Biop$5438 , \$auto$builder.cc:338:Biop$5427 , \$auto$builder.cc:338:Biop$5416 , \$auto$builder.cc:338:Biop$5405 , \$auto$builder.cc:338:Biop$5394 , \$auto$builder.cc:338:Biop$5383 , \$auto$builder.cc:338:Biop$5372 , \$auto$builder.cc:338:Biop$5361 , \$auto$builder.cc:338:Biop$5350 , \$auto$builder.cc:338:Biop$5339  };
  assign toggle_out = \$auto$slang_frontend.cc:694:finish$\toggle_out$5737 ;
  assign \$procmux$14224_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5739 ;
  assign \$auto$slang_frontend.cc:694:finish$\obi_rdata$5741  = \$procmux$14223_Y ;
  assign \$procmux$14231_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5739 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_d[32]$5742  = \$procmux$14230_Y ;
  assign \$procmux$14244_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5739 ;
  assign \$auto$slang_frontend.cc:694:finish$\obi_err$5740  = \$procmux$14243_Y ;
  assign \$procmux$14248_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5739 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_d[32]$5745  = \$procmux$14247_Y ;
  assign \$procmux$14252_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5739 ;
  assign \$auto$slang_frontend.cc:694:finish$\obi_rdata$5744  = \$procmux$14251_Y ;
  assign \$procmux$14256_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5739 ;
  assign \$auto$slang_frontend.cc:694:finish$\obi_err$5743  = \$procmux$14255_Y ;
  assign \$procmux$14267_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_d[192]$5729 [63:32] = \$procmux$14266_Y ;
  assign \$procmux$14274_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\toggle_out$5730  = \$procmux$14273_Y ;
  assign \$procmux$14283_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_d[192]$5729 [31:0] = \$procmux$14282_Y ;
  assign \$procmux$14291_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_d[128]$5728  = \$procmux$14290_Y ;
  assign \$procmux$14297_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_d[64]$5727  = \$procmux$14296_Y ;
  assign \$procmux$14302_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_d[0]$5726  = \$procmux$14301_Y ;
  assign \$procmux$14312_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\w_err_d$5725  = \$procmux$14311_Y ;
  assign \$procmux$14315_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\toggle_out$5737  = \$procmux$14314_Y ;
  assign \$procmux$14318_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_d[192]$5736  = \$procmux$14317_Y ;
  assign \$procmux$14321_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_d[128]$5735  = \$procmux$14320_Y ;
  assign \$procmux$14324_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_d[64]$5734  = \$procmux$14323_Y ;
  assign \$procmux$14327_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_d[0]$5733  = \$procmux$14326_Y ;
  assign \$procmux$14330_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\w_err_d$5732  = \$procmux$14329_Y ;
  assign \$procmux$14333_CMP  = \$auto$rtlil.cc:2746:ReduceBool$5682 ;
  assign \$auto$slang_frontend.cc:694:finish$\obi_err$5731  = \$procmux$14332_Y ;
  assign \$auto$rtlil.cc:2747:LogicNot$5260  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$5265  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$5270  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$5275  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$5280  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$5285  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$5290  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$5331  = hw2reg[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$5335  = hw2reg[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$5342  = hw2reg[7];
  assign \$auto$rtlil.cc:2746:ReduceBool$5346  = hw2reg[5];
  assign \$auto$rtlil.cc:2746:ReduceBool$5353  = hw2reg[12];
  assign \$auto$rtlil.cc:2746:ReduceBool$5357  = hw2reg[10];
  assign \$auto$rtlil.cc:2746:ReduceBool$5364  = hw2reg[17];
  assign \$auto$rtlil.cc:2746:ReduceBool$5368  = hw2reg[15];
  assign \$auto$rtlil.cc:2746:ReduceBool$5375  = hw2reg[22];
  assign \$auto$rtlil.cc:2746:ReduceBool$5379  = hw2reg[20];
  assign \$auto$rtlil.cc:2746:ReduceBool$5386  = hw2reg[27];
  assign \$auto$rtlil.cc:2746:ReduceBool$5390  = hw2reg[25];
  assign \$auto$rtlil.cc:2746:ReduceBool$5397  = hw2reg[32];
  assign \$auto$rtlil.cc:2746:ReduceBool$5401  = hw2reg[30];
  assign \$auto$rtlil.cc:2746:ReduceBool$5408  = hw2reg[37];
  assign \$auto$rtlil.cc:2746:ReduceBool$5412  = hw2reg[35];
  assign \$auto$rtlil.cc:2746:ReduceBool$5419  = hw2reg[42];
  assign \$auto$rtlil.cc:2746:ReduceBool$5423  = hw2reg[40];
  assign \$auto$rtlil.cc:2746:ReduceBool$5430  = hw2reg[47];
  assign \$auto$rtlil.cc:2746:ReduceBool$5434  = hw2reg[45];
  assign \$auto$rtlil.cc:2746:ReduceBool$5441  = hw2reg[52];
  assign \$auto$rtlil.cc:2746:ReduceBool$5445  = hw2reg[50];
  assign \$auto$rtlil.cc:2746:ReduceBool$5452  = hw2reg[57];
  assign \$auto$rtlil.cc:2746:ReduceBool$5456  = hw2reg[55];
  assign \$auto$rtlil.cc:2746:ReduceBool$5463  = hw2reg[62];
  assign \$auto$rtlil.cc:2746:ReduceBool$5467  = hw2reg[60];
  assign \$auto$rtlil.cc:2746:ReduceBool$5474  = hw2reg[67];
  assign \$auto$rtlil.cc:2746:ReduceBool$5478  = hw2reg[65];
  assign \$auto$rtlil.cc:2746:ReduceBool$5485  = hw2reg[72];
  assign \$auto$rtlil.cc:2746:ReduceBool$5489  = hw2reg[70];
  assign \$auto$rtlil.cc:2746:ReduceBool$5496  = hw2reg[77];
  assign \$auto$rtlil.cc:2746:ReduceBool$5500  = hw2reg[75];
  assign \$auto$rtlil.cc:2746:ReduceBool$5507  = hw2reg[82];
  assign \$auto$rtlil.cc:2746:ReduceBool$5511  = hw2reg[80];
  assign \$auto$rtlil.cc:2746:ReduceBool$5518  = hw2reg[87];
  assign \$auto$rtlil.cc:2746:ReduceBool$5522  = hw2reg[85];
  assign \$auto$rtlil.cc:2746:ReduceBool$5529  = hw2reg[92];
  assign \$auto$rtlil.cc:2746:ReduceBool$5533  = hw2reg[90];
  assign \$auto$rtlil.cc:2746:ReduceBool$5540  = hw2reg[97];
  assign \$auto$rtlil.cc:2746:ReduceBool$5544  = hw2reg[95];
  assign \$auto$rtlil.cc:2746:ReduceBool$5551  = hw2reg[102];
  assign \$auto$rtlil.cc:2746:ReduceBool$5555  = hw2reg[100];
  assign \$auto$rtlil.cc:2746:ReduceBool$5562  = hw2reg[107];
  assign \$auto$rtlil.cc:2746:ReduceBool$5566  = hw2reg[105];
  assign \$auto$rtlil.cc:2746:ReduceBool$5573  = hw2reg[112];
  assign \$auto$rtlil.cc:2746:ReduceBool$5577  = hw2reg[110];
  assign \$auto$rtlil.cc:2746:ReduceBool$5584  = hw2reg[117];
  assign \$auto$rtlil.cc:2746:ReduceBool$5588  = hw2reg[115];
  assign \$auto$rtlil.cc:2746:ReduceBool$5595  = hw2reg[122];
  assign \$auto$rtlil.cc:2746:ReduceBool$5599  = hw2reg[120];
  assign \$auto$rtlil.cc:2746:ReduceBool$5606  = hw2reg[127];
  assign \$auto$rtlil.cc:2746:ReduceBool$5610  = hw2reg[125];
  assign \$auto$rtlil.cc:2746:ReduceBool$5617  = hw2reg[132];
  assign \$auto$rtlil.cc:2746:ReduceBool$5621  = hw2reg[130];
  assign \$auto$rtlil.cc:2746:ReduceBool$5628  = hw2reg[137];
  assign \$auto$rtlil.cc:2746:ReduceBool$5632  = hw2reg[135];
  assign \$auto$rtlil.cc:2746:ReduceBool$5639  = hw2reg[142];
  assign \$auto$rtlil.cc:2746:ReduceBool$5643  = hw2reg[140];
  assign \$auto$rtlil.cc:2746:ReduceBool$5650  = hw2reg[147];
  assign \$auto$rtlil.cc:2746:ReduceBool$5654  = hw2reg[145];
  assign \$auto$rtlil.cc:2746:ReduceBool$5661  = hw2reg[152];
  assign \$auto$rtlil.cc:2746:ReduceBool$5665  = hw2reg[150];
  assign \$auto$rtlil.cc:2746:ReduceBool$5672  = hw2reg[157];
  assign \$auto$rtlil.cc:2746:ReduceBool$5676  = hw2reg[155];
  assign \$auto$rtlil.cc:2746:ReduceBool$5682  = \$auto$builder.cc:338:Biop$5255 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$5739  = \$auto$builder.cc:338:Biop$5253 ;
endmodule

/* src = "../rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower (empty_o, in_i, cnt_o);
  wire \$auto$builder.cc:338:Biop$9488 ;
  wire \$auto$builder.cc:338:Biop$9490 ;
  wire \$auto$builder.cc:338:Biop$9496 ;
  wire \$auto$builder.cc:338:Biop$9498 ;
  wire \$auto$builder.cc:338:Biop$9504 ;
  wire \$auto$builder.cc:338:Biop$9506 ;
  wire \$auto$builder.cc:364:Unop$9518 ;
  wire \$auto$builder.cc:364:Unop$9520 ;
  wire \$auto$builder.cc:364:Unop$9522 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9469 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9474 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9479 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9484 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9492 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9500 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9508 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9512 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9516 ;
  wire \$auto$rtlil.cc:2874:Mux$9471 ;
  wire \$auto$rtlil.cc:2874:Mux$9476 ;
  wire \$auto$rtlil.cc:2874:Mux$9481 ;
  wire \$auto$rtlil.cc:2874:Mux$9486 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9494 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9502 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9510 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9514 ;
  wire \$auto$rtlil.cc:2874:Mux$9524 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$9466 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9467 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9472 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9477 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9482 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$9465 ;
  /* src = "../rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "../rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "../rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "../rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9487  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$9488 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9495  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$auto$builder.cc:338:Biop$9496 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9503  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$auto$builder.cc:338:Biop$9504 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9517  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$auto$builder.cc:364:Unop$9518 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9519  (
    .A(in_i),
    .Y(\$auto$builder.cc:364:Unop$9520 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9521  (
    .A(\$auto$builder.cc:364:Unop$9520 ),
    .Y(\$auto$builder.cc:364:Unop$9522 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9493  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9492 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9494 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9501  (
    .A(2'h1),
    .B(2'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9500 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9502 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9509  (
    .A(2'h3),
    .B(2'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9508 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9510 )
  );
  assign \gen_lzc.in_tmp  = { \$auto$rtlil.cc:2874:Mux$9486 , \$auto$rtlil.cc:2874:Mux$9481 , \$auto$rtlil.cc:2874:Mux$9476 , \$auto$rtlil.cc:2874:Mux$9471  };
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$auto$builder.cc:338:Biop$9488 ;
  assign \gen_lzc.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$9494 ;
  assign \gen_lzc.sel_nodes [1] = \$auto$builder.cc:338:Biop$9496 ;
  assign \gen_lzc.index_nodes [3:2] = \$auto$rtlil.cc:2874:Mux$9502 ;
  assign \gen_lzc.sel_nodes [2] = \$auto$builder.cc:338:Biop$9504 ;
  assign \gen_lzc.index_nodes [5:4] = \$auto$rtlil.cc:2874:Mux$9510 ;
  assign cnt_o = \$auto$rtlil.cc:2874:Mux$9514 ;
  assign empty_o = \$auto$rtlil.cc:2874:Mux$9524 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9469  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9471  = in_i[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9474  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9476  = in_i[1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9479  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9481  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9484  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9486  = in_i[3];
  assign \$auto$builder.cc:338:Biop$9490  = \gen_lzc.sel_nodes [1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9492  = \$auto$builder.cc:338:Biop$9496 ;
  assign \$auto$builder.cc:338:Biop$9498  = \gen_lzc.in_tmp [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9500  = in_i[0];
  assign \$auto$builder.cc:338:Biop$9506  = \gen_lzc.in_tmp [2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9508  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9512  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9514  = \gen_lzc.index_nodes [1:0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9516  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9524  = \$auto$builder.cc:364:Unop$9518 ;
endmodule

/* src = "../rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper (empty_o, in_i, cnt_o);
  wire \$auto$builder.cc:338:Biop$9427 ;
  wire \$auto$builder.cc:338:Biop$9429 ;
  wire \$auto$builder.cc:338:Biop$9435 ;
  wire \$auto$builder.cc:338:Biop$9437 ;
  wire \$auto$builder.cc:338:Biop$9443 ;
  wire \$auto$builder.cc:338:Biop$9445 ;
  wire \$auto$builder.cc:364:Unop$9457 ;
  wire \$auto$builder.cc:364:Unop$9459 ;
  wire \$auto$builder.cc:364:Unop$9461 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9408 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9413 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9418 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9423 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9431 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9439 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9447 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9451 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9455 ;
  wire \$auto$rtlil.cc:2874:Mux$9410 ;
  wire \$auto$rtlil.cc:2874:Mux$9415 ;
  wire \$auto$rtlil.cc:2874:Mux$9420 ;
  wire \$auto$rtlil.cc:2874:Mux$9425 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9433 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9441 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9449 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9453 ;
  wire \$auto$rtlil.cc:2874:Mux$9463 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$9405 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9406 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9411 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9416 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9421 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$9404 ;
  /* src = "../rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "../rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "../rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "../rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9426  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$9427 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9434  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$auto$builder.cc:338:Biop$9435 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9442  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$auto$builder.cc:338:Biop$9443 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9456  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$auto$builder.cc:364:Unop$9457 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9458  (
    .A(in_i),
    .Y(\$auto$builder.cc:364:Unop$9459 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9460  (
    .A(\$auto$builder.cc:364:Unop$9459 ),
    .Y(\$auto$builder.cc:364:Unop$9461 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9432  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9431 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9433 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9440  (
    .A(2'h1),
    .B(2'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9439 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9441 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9448  (
    .A(2'h3),
    .B(2'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9447 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9449 )
  );
  assign \gen_lzc.in_tmp  = { \$auto$rtlil.cc:2874:Mux$9425 , \$auto$rtlil.cc:2874:Mux$9420 , \$auto$rtlil.cc:2874:Mux$9415 , \$auto$rtlil.cc:2874:Mux$9410  };
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$auto$builder.cc:338:Biop$9427 ;
  assign \gen_lzc.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$9433 ;
  assign \gen_lzc.sel_nodes [1] = \$auto$builder.cc:338:Biop$9435 ;
  assign \gen_lzc.index_nodes [3:2] = \$auto$rtlil.cc:2874:Mux$9441 ;
  assign \gen_lzc.sel_nodes [2] = \$auto$builder.cc:338:Biop$9443 ;
  assign \gen_lzc.index_nodes [5:4] = \$auto$rtlil.cc:2874:Mux$9449 ;
  assign cnt_o = \$auto$rtlil.cc:2874:Mux$9453 ;
  assign empty_o = \$auto$rtlil.cc:2874:Mux$9463 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9408  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9410  = in_i[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9413  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9415  = in_i[1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9418  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9420  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9423  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9425  = in_i[3];
  assign \$auto$builder.cc:338:Biop$9429  = \gen_lzc.sel_nodes [1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9431  = \$auto$builder.cc:338:Biop$9435 ;
  assign \$auto$builder.cc:338:Biop$9437  = \gen_lzc.in_tmp [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9439  = in_i[0];
  assign \$auto$builder.cc:338:Biop$9445  = \gen_lzc.in_tmp [2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9447  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9451  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9453  = \gen_lzc.index_nodes [1:0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9455  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9463  = \$auto$builder.cc:364:Unop$9457 ;
endmodule

/* src = "../rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower (empty_o, in_i, cnt_o);
  wire \$auto$builder.cc:338:Biop$9610 ;
  wire \$auto$builder.cc:338:Biop$9612 ;
  wire \$auto$builder.cc:338:Biop$9618 ;
  wire \$auto$builder.cc:338:Biop$9620 ;
  wire \$auto$builder.cc:338:Biop$9626 ;
  wire \$auto$builder.cc:338:Biop$9628 ;
  wire \$auto$builder.cc:364:Unop$9640 ;
  wire \$auto$builder.cc:364:Unop$9642 ;
  wire \$auto$builder.cc:364:Unop$9644 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9591 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9596 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9601 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9606 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9614 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9622 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9630 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9634 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9638 ;
  wire \$auto$rtlil.cc:2874:Mux$9593 ;
  wire \$auto$rtlil.cc:2874:Mux$9598 ;
  wire \$auto$rtlil.cc:2874:Mux$9603 ;
  wire \$auto$rtlil.cc:2874:Mux$9608 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9616 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9624 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9632 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9636 ;
  wire \$auto$rtlil.cc:2874:Mux$9646 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$9588 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9589 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9594 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9599 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9604 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$9587 ;
  /* src = "../rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "../rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "../rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "../rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9609  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$9610 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9617  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$auto$builder.cc:338:Biop$9618 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9625  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$auto$builder.cc:338:Biop$9626 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9639  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$auto$builder.cc:364:Unop$9640 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9641  (
    .A(in_i),
    .Y(\$auto$builder.cc:364:Unop$9642 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9643  (
    .A(\$auto$builder.cc:364:Unop$9642 ),
    .Y(\$auto$builder.cc:364:Unop$9644 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9615  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9614 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9616 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9623  (
    .A(2'h1),
    .B(2'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9622 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9624 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9631  (
    .A(2'h3),
    .B(2'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9630 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9632 )
  );
  assign \gen_lzc.in_tmp  = { \$auto$rtlil.cc:2874:Mux$9608 , \$auto$rtlil.cc:2874:Mux$9603 , \$auto$rtlil.cc:2874:Mux$9598 , \$auto$rtlil.cc:2874:Mux$9593  };
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$auto$builder.cc:338:Biop$9610 ;
  assign \gen_lzc.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$9616 ;
  assign \gen_lzc.sel_nodes [1] = \$auto$builder.cc:338:Biop$9618 ;
  assign \gen_lzc.index_nodes [3:2] = \$auto$rtlil.cc:2874:Mux$9624 ;
  assign \gen_lzc.sel_nodes [2] = \$auto$builder.cc:338:Biop$9626 ;
  assign \gen_lzc.index_nodes [5:4] = \$auto$rtlil.cc:2874:Mux$9632 ;
  assign cnt_o = \$auto$rtlil.cc:2874:Mux$9636 ;
  assign empty_o = \$auto$rtlil.cc:2874:Mux$9646 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9591  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9593  = in_i[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9596  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9598  = in_i[1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9601  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9603  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9606  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9608  = in_i[3];
  assign \$auto$builder.cc:338:Biop$9612  = \gen_lzc.sel_nodes [1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9614  = \$auto$builder.cc:338:Biop$9618 ;
  assign \$auto$builder.cc:338:Biop$9620  = \gen_lzc.in_tmp [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9622  = in_i[0];
  assign \$auto$builder.cc:338:Biop$9628  = \gen_lzc.in_tmp [2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9630  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9634  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9636  = \gen_lzc.index_nodes [1:0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9638  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9646  = \$auto$builder.cc:364:Unop$9640 ;
endmodule

/* src = "../rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper (empty_o, in_i, cnt_o);
  wire \$auto$builder.cc:338:Biop$9549 ;
  wire \$auto$builder.cc:338:Biop$9551 ;
  wire \$auto$builder.cc:338:Biop$9557 ;
  wire \$auto$builder.cc:338:Biop$9559 ;
  wire \$auto$builder.cc:338:Biop$9565 ;
  wire \$auto$builder.cc:338:Biop$9567 ;
  wire \$auto$builder.cc:364:Unop$9579 ;
  wire \$auto$builder.cc:364:Unop$9581 ;
  wire \$auto$builder.cc:364:Unop$9583 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9530 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9535 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9540 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9545 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9553 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9561 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9569 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9573 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9577 ;
  wire \$auto$rtlil.cc:2874:Mux$9532 ;
  wire \$auto$rtlil.cc:2874:Mux$9537 ;
  wire \$auto$rtlil.cc:2874:Mux$9542 ;
  wire \$auto$rtlil.cc:2874:Mux$9547 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9555 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9563 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9571 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9575 ;
  wire \$auto$rtlil.cc:2874:Mux$9585 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$9527 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9528 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9533 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9538 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9543 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$9526 ;
  /* src = "../rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "../rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "../rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "../rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9548  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$9549 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9556  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$auto$builder.cc:338:Biop$9557 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9564  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$auto$builder.cc:338:Biop$9565 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9578  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$auto$builder.cc:364:Unop$9579 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9580  (
    .A(in_i),
    .Y(\$auto$builder.cc:364:Unop$9581 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9582  (
    .A(\$auto$builder.cc:364:Unop$9581 ),
    .Y(\$auto$builder.cc:364:Unop$9583 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9554  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9553 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9555 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9562  (
    .A(2'h1),
    .B(2'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9561 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9563 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9570  (
    .A(2'h3),
    .B(2'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9569 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9571 )
  );
  assign \gen_lzc.in_tmp  = { \$auto$rtlil.cc:2874:Mux$9547 , \$auto$rtlil.cc:2874:Mux$9542 , \$auto$rtlil.cc:2874:Mux$9537 , \$auto$rtlil.cc:2874:Mux$9532  };
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$auto$builder.cc:338:Biop$9549 ;
  assign \gen_lzc.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$9555 ;
  assign \gen_lzc.sel_nodes [1] = \$auto$builder.cc:338:Biop$9557 ;
  assign \gen_lzc.index_nodes [3:2] = \$auto$rtlil.cc:2874:Mux$9563 ;
  assign \gen_lzc.sel_nodes [2] = \$auto$builder.cc:338:Biop$9565 ;
  assign \gen_lzc.index_nodes [5:4] = \$auto$rtlil.cc:2874:Mux$9571 ;
  assign cnt_o = \$auto$rtlil.cc:2874:Mux$9575 ;
  assign empty_o = \$auto$rtlil.cc:2874:Mux$9585 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9530  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9532  = in_i[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9535  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9537  = in_i[1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9540  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9542  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9545  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9547  = in_i[3];
  assign \$auto$builder.cc:338:Biop$9551  = \gen_lzc.sel_nodes [1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9553  = \$auto$builder.cc:338:Biop$9557 ;
  assign \$auto$builder.cc:338:Biop$9559  = \gen_lzc.in_tmp [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9561  = in_i[0];
  assign \$auto$builder.cc:338:Biop$9567  = \gen_lzc.in_tmp [2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9569  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9573  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9575  = \gen_lzc.index_nodes [1:0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9577  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9585  = \$auto$builder.cc:364:Unop$9579 ;
endmodule

/* src = "../rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower (empty_o, in_i, cnt_o);
  wire \$auto$builder.cc:338:Biop$9732 ;
  wire \$auto$builder.cc:338:Biop$9734 ;
  wire \$auto$builder.cc:338:Biop$9740 ;
  wire \$auto$builder.cc:338:Biop$9742 ;
  wire \$auto$builder.cc:338:Biop$9748 ;
  wire \$auto$builder.cc:338:Biop$9750 ;
  wire \$auto$builder.cc:364:Unop$9762 ;
  wire \$auto$builder.cc:364:Unop$9764 ;
  wire \$auto$builder.cc:364:Unop$9766 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9713 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9718 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9723 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9728 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9736 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9744 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9752 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9756 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9760 ;
  wire \$auto$rtlil.cc:2874:Mux$9715 ;
  wire \$auto$rtlil.cc:2874:Mux$9720 ;
  wire \$auto$rtlil.cc:2874:Mux$9725 ;
  wire \$auto$rtlil.cc:2874:Mux$9730 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9738 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9746 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9754 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9758 ;
  wire \$auto$rtlil.cc:2874:Mux$9768 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$9710 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9711 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9716 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9721 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9726 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$9709 ;
  /* src = "../rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "../rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "../rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "../rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9731  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$9732 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9739  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$auto$builder.cc:338:Biop$9740 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9747  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$auto$builder.cc:338:Biop$9748 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9761  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$auto$builder.cc:364:Unop$9762 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9763  (
    .A(in_i),
    .Y(\$auto$builder.cc:364:Unop$9764 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9765  (
    .A(\$auto$builder.cc:364:Unop$9764 ),
    .Y(\$auto$builder.cc:364:Unop$9766 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9737  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9736 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9738 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9745  (
    .A(2'h1),
    .B(2'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9744 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9746 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9753  (
    .A(2'h3),
    .B(2'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9752 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9754 )
  );
  assign \gen_lzc.in_tmp  = { \$auto$rtlil.cc:2874:Mux$9730 , \$auto$rtlil.cc:2874:Mux$9725 , \$auto$rtlil.cc:2874:Mux$9720 , \$auto$rtlil.cc:2874:Mux$9715  };
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$auto$builder.cc:338:Biop$9732 ;
  assign \gen_lzc.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$9738 ;
  assign \gen_lzc.sel_nodes [1] = \$auto$builder.cc:338:Biop$9740 ;
  assign \gen_lzc.index_nodes [3:2] = \$auto$rtlil.cc:2874:Mux$9746 ;
  assign \gen_lzc.sel_nodes [2] = \$auto$builder.cc:338:Biop$9748 ;
  assign \gen_lzc.index_nodes [5:4] = \$auto$rtlil.cc:2874:Mux$9754 ;
  assign cnt_o = \$auto$rtlil.cc:2874:Mux$9758 ;
  assign empty_o = \$auto$rtlil.cc:2874:Mux$9768 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9713  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9715  = in_i[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9718  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9720  = in_i[1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9723  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9725  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9728  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9730  = in_i[3];
  assign \$auto$builder.cc:338:Biop$9734  = \gen_lzc.sel_nodes [1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9736  = \$auto$builder.cc:338:Biop$9740 ;
  assign \$auto$builder.cc:338:Biop$9742  = \gen_lzc.in_tmp [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9744  = in_i[0];
  assign \$auto$builder.cc:338:Biop$9750  = \gen_lzc.in_tmp [2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9752  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9756  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9758  = \gen_lzc.index_nodes [1:0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9760  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9768  = \$auto$builder.cc:364:Unop$9762 ;
endmodule

/* src = "../rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper (empty_o, in_i, cnt_o);
  wire \$auto$builder.cc:338:Biop$9671 ;
  wire \$auto$builder.cc:338:Biop$9673 ;
  wire \$auto$builder.cc:338:Biop$9679 ;
  wire \$auto$builder.cc:338:Biop$9681 ;
  wire \$auto$builder.cc:338:Biop$9687 ;
  wire \$auto$builder.cc:338:Biop$9689 ;
  wire \$auto$builder.cc:364:Unop$9701 ;
  wire \$auto$builder.cc:364:Unop$9703 ;
  wire \$auto$builder.cc:364:Unop$9705 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9652 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9657 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9662 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9667 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9675 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9683 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9691 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9695 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9699 ;
  wire \$auto$rtlil.cc:2874:Mux$9654 ;
  wire \$auto$rtlil.cc:2874:Mux$9659 ;
  wire \$auto$rtlil.cc:2874:Mux$9664 ;
  wire \$auto$rtlil.cc:2874:Mux$9669 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9677 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9685 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9693 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9697 ;
  wire \$auto$rtlil.cc:2874:Mux$9707 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$9649 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9650 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9655 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9660 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9665 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$9648 ;
  /* src = "../rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "../rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "../rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "../rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9670  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$9671 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9678  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$auto$builder.cc:338:Biop$9679 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9686  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$auto$builder.cc:338:Biop$9687 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9700  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$auto$builder.cc:364:Unop$9701 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9702  (
    .A(in_i),
    .Y(\$auto$builder.cc:364:Unop$9703 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9704  (
    .A(\$auto$builder.cc:364:Unop$9703 ),
    .Y(\$auto$builder.cc:364:Unop$9705 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9676  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9675 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9677 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9684  (
    .A(2'h1),
    .B(2'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9683 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9685 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9692  (
    .A(2'h3),
    .B(2'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9691 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9693 )
  );
  assign \gen_lzc.in_tmp  = { \$auto$rtlil.cc:2874:Mux$9669 , \$auto$rtlil.cc:2874:Mux$9664 , \$auto$rtlil.cc:2874:Mux$9659 , \$auto$rtlil.cc:2874:Mux$9654  };
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$auto$builder.cc:338:Biop$9671 ;
  assign \gen_lzc.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$9677 ;
  assign \gen_lzc.sel_nodes [1] = \$auto$builder.cc:338:Biop$9679 ;
  assign \gen_lzc.index_nodes [3:2] = \$auto$rtlil.cc:2874:Mux$9685 ;
  assign \gen_lzc.sel_nodes [2] = \$auto$builder.cc:338:Biop$9687 ;
  assign \gen_lzc.index_nodes [5:4] = \$auto$rtlil.cc:2874:Mux$9693 ;
  assign cnt_o = \$auto$rtlil.cc:2874:Mux$9697 ;
  assign empty_o = \$auto$rtlil.cc:2874:Mux$9707 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9652  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9654  = in_i[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9657  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9659  = in_i[1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9662  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9664  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9667  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9669  = in_i[3];
  assign \$auto$builder.cc:338:Biop$9673  = \gen_lzc.sel_nodes [1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9675  = \$auto$builder.cc:338:Biop$9679 ;
  assign \$auto$builder.cc:338:Biop$9681  = \gen_lzc.in_tmp [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9683  = in_i[0];
  assign \$auto$builder.cc:338:Biop$9689  = \gen_lzc.in_tmp [2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9691  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9695  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9697  = \gen_lzc.index_nodes [1:0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9699  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9707  = \$auto$builder.cc:364:Unop$9701 ;
endmodule

/* src = "../rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower (empty_o, in_i, cnt_o);
  wire \$auto$builder.cc:338:Biop$9854 ;
  wire \$auto$builder.cc:338:Biop$9856 ;
  wire \$auto$builder.cc:338:Biop$9862 ;
  wire \$auto$builder.cc:338:Biop$9864 ;
  wire \$auto$builder.cc:338:Biop$9870 ;
  wire \$auto$builder.cc:338:Biop$9872 ;
  wire \$auto$builder.cc:364:Unop$9884 ;
  wire \$auto$builder.cc:364:Unop$9886 ;
  wire \$auto$builder.cc:364:Unop$9888 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9835 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9840 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9845 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9850 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9858 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9866 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9874 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9878 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9882 ;
  wire \$auto$rtlil.cc:2874:Mux$9837 ;
  wire \$auto$rtlil.cc:2874:Mux$9842 ;
  wire \$auto$rtlil.cc:2874:Mux$9847 ;
  wire \$auto$rtlil.cc:2874:Mux$9852 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9860 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9868 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9876 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9880 ;
  wire \$auto$rtlil.cc:2874:Mux$9890 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$9832 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9833 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9838 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9843 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9848 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$9831 ;
  /* src = "../rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "../rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "../rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "../rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9853  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$9854 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9861  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$auto$builder.cc:338:Biop$9862 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9869  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$auto$builder.cc:338:Biop$9870 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9883  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$auto$builder.cc:364:Unop$9884 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9885  (
    .A(in_i),
    .Y(\$auto$builder.cc:364:Unop$9886 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9887  (
    .A(\$auto$builder.cc:364:Unop$9886 ),
    .Y(\$auto$builder.cc:364:Unop$9888 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9859  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9858 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9860 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9867  (
    .A(2'h1),
    .B(2'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9866 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9868 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9875  (
    .A(2'h3),
    .B(2'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9874 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9876 )
  );
  assign \gen_lzc.in_tmp  = { \$auto$rtlil.cc:2874:Mux$9852 , \$auto$rtlil.cc:2874:Mux$9847 , \$auto$rtlil.cc:2874:Mux$9842 , \$auto$rtlil.cc:2874:Mux$9837  };
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$auto$builder.cc:338:Biop$9854 ;
  assign \gen_lzc.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$9860 ;
  assign \gen_lzc.sel_nodes [1] = \$auto$builder.cc:338:Biop$9862 ;
  assign \gen_lzc.index_nodes [3:2] = \$auto$rtlil.cc:2874:Mux$9868 ;
  assign \gen_lzc.sel_nodes [2] = \$auto$builder.cc:338:Biop$9870 ;
  assign \gen_lzc.index_nodes [5:4] = \$auto$rtlil.cc:2874:Mux$9876 ;
  assign cnt_o = \$auto$rtlil.cc:2874:Mux$9880 ;
  assign empty_o = \$auto$rtlil.cc:2874:Mux$9890 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9835  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9837  = in_i[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9840  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9842  = in_i[1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9845  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9847  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9850  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9852  = in_i[3];
  assign \$auto$builder.cc:338:Biop$9856  = \gen_lzc.sel_nodes [1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9858  = \$auto$builder.cc:338:Biop$9862 ;
  assign \$auto$builder.cc:338:Biop$9864  = \gen_lzc.in_tmp [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9866  = in_i[0];
  assign \$auto$builder.cc:338:Biop$9872  = \gen_lzc.in_tmp [2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9874  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9878  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9880  = \gen_lzc.index_nodes [1:0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9882  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9890  = \$auto$builder.cc:364:Unop$9884 ;
endmodule

/* src = "../rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper (empty_o, in_i, cnt_o);
  wire \$auto$builder.cc:338:Biop$9793 ;
  wire \$auto$builder.cc:338:Biop$9795 ;
  wire \$auto$builder.cc:338:Biop$9801 ;
  wire \$auto$builder.cc:338:Biop$9803 ;
  wire \$auto$builder.cc:338:Biop$9809 ;
  wire \$auto$builder.cc:338:Biop$9811 ;
  wire \$auto$builder.cc:364:Unop$9823 ;
  wire \$auto$builder.cc:364:Unop$9825 ;
  wire \$auto$builder.cc:364:Unop$9827 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9774 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9779 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9784 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9789 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9797 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9805 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9813 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9817 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9821 ;
  wire \$auto$rtlil.cc:2874:Mux$9776 ;
  wire \$auto$rtlil.cc:2874:Mux$9781 ;
  wire \$auto$rtlil.cc:2874:Mux$9786 ;
  wire \$auto$rtlil.cc:2874:Mux$9791 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9799 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9807 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9815 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9819 ;
  wire \$auto$rtlil.cc:2874:Mux$9829 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$9771 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9772 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9777 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9782 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9787 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$9770 ;
  /* src = "../rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "../rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "../rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "../rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9792  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$9793 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9800  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$auto$builder.cc:338:Biop$9801 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9808  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$auto$builder.cc:338:Biop$9809 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9822  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$auto$builder.cc:364:Unop$9823 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9824  (
    .A(in_i),
    .Y(\$auto$builder.cc:364:Unop$9825 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9826  (
    .A(\$auto$builder.cc:364:Unop$9825 ),
    .Y(\$auto$builder.cc:364:Unop$9827 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9798  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9797 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9799 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9806  (
    .A(2'h1),
    .B(2'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9805 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9807 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9814  (
    .A(2'h3),
    .B(2'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9813 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9815 )
  );
  assign \gen_lzc.in_tmp  = { \$auto$rtlil.cc:2874:Mux$9791 , \$auto$rtlil.cc:2874:Mux$9786 , \$auto$rtlil.cc:2874:Mux$9781 , \$auto$rtlil.cc:2874:Mux$9776  };
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$auto$builder.cc:338:Biop$9793 ;
  assign \gen_lzc.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$9799 ;
  assign \gen_lzc.sel_nodes [1] = \$auto$builder.cc:338:Biop$9801 ;
  assign \gen_lzc.index_nodes [3:2] = \$auto$rtlil.cc:2874:Mux$9807 ;
  assign \gen_lzc.sel_nodes [2] = \$auto$builder.cc:338:Biop$9809 ;
  assign \gen_lzc.index_nodes [5:4] = \$auto$rtlil.cc:2874:Mux$9815 ;
  assign cnt_o = \$auto$rtlil.cc:2874:Mux$9819 ;
  assign empty_o = \$auto$rtlil.cc:2874:Mux$9829 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9774  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9776  = in_i[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9779  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9781  = in_i[1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9784  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9786  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9789  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9791  = in_i[3];
  assign \$auto$builder.cc:338:Biop$9795  = \gen_lzc.sel_nodes [1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9797  = \$auto$builder.cc:338:Biop$9801 ;
  assign \$auto$builder.cc:338:Biop$9803  = \gen_lzc.in_tmp [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9805  = in_i[0];
  assign \$auto$builder.cc:338:Biop$9811  = \gen_lzc.in_tmp [2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9813  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9817  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9819  = \gen_lzc.index_nodes [1:0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9821  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9829  = \$auto$builder.cc:364:Unop$9823 ;
endmodule

/* src = "../rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower (empty_o, in_i, cnt_o);
  wire \$auto$builder.cc:338:Biop$9976 ;
  wire \$auto$builder.cc:338:Biop$9978 ;
  wire \$auto$builder.cc:338:Biop$9984 ;
  wire \$auto$builder.cc:338:Biop$9986 ;
  wire \$auto$builder.cc:338:Biop$9992 ;
  wire \$auto$builder.cc:338:Biop$9994 ;
  wire \$auto$builder.cc:364:Unop$10006 ;
  wire \$auto$builder.cc:364:Unop$10008 ;
  wire \$auto$builder.cc:364:Unop$10010 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10000 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10004 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9957 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9962 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9967 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9972 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9980 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9988 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9996 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$10002 ;
  wire \$auto$rtlil.cc:2874:Mux$10012 ;
  wire \$auto$rtlil.cc:2874:Mux$9959 ;
  wire \$auto$rtlil.cc:2874:Mux$9964 ;
  wire \$auto$rtlil.cc:2874:Mux$9969 ;
  wire \$auto$rtlil.cc:2874:Mux$9974 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9982 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9990 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9998 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$9954 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9955 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9960 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9965 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9970 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$9953 ;
  /* src = "../rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "../rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "../rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "../rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9975  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$9976 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9983  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$auto$builder.cc:338:Biop$9984 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9991  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$auto$builder.cc:338:Biop$9992 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$10005  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$auto$builder.cc:364:Unop$10006 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$10007  (
    .A(in_i),
    .Y(\$auto$builder.cc:364:Unop$10008 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$10009  (
    .A(\$auto$builder.cc:364:Unop$10008 ),
    .Y(\$auto$builder.cc:364:Unop$10010 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9981  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9980 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9982 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9989  (
    .A(2'h1),
    .B(2'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9988 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9990 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9997  (
    .A(2'h3),
    .B(2'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9996 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9998 )
  );
  assign \gen_lzc.in_tmp  = { \$auto$rtlil.cc:2874:Mux$9974 , \$auto$rtlil.cc:2874:Mux$9969 , \$auto$rtlil.cc:2874:Mux$9964 , \$auto$rtlil.cc:2874:Mux$9959  };
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$auto$builder.cc:338:Biop$9976 ;
  assign \gen_lzc.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$9982 ;
  assign \gen_lzc.sel_nodes [1] = \$auto$builder.cc:338:Biop$9984 ;
  assign \gen_lzc.index_nodes [3:2] = \$auto$rtlil.cc:2874:Mux$9990 ;
  assign \gen_lzc.sel_nodes [2] = \$auto$builder.cc:338:Biop$9992 ;
  assign \gen_lzc.index_nodes [5:4] = \$auto$rtlil.cc:2874:Mux$9998 ;
  assign cnt_o = \$auto$rtlil.cc:2874:Mux$10002 ;
  assign empty_o = \$auto$rtlil.cc:2874:Mux$10012 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9957  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9959  = in_i[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9962  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9964  = in_i[1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9967  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9969  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9972  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9974  = in_i[3];
  assign \$auto$builder.cc:338:Biop$9978  = \gen_lzc.sel_nodes [1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9980  = \$auto$builder.cc:338:Biop$9984 ;
  assign \$auto$builder.cc:338:Biop$9986  = \gen_lzc.in_tmp [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9988  = in_i[0];
  assign \$auto$builder.cc:338:Biop$9994  = \gen_lzc.in_tmp [2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9996  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$10000  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$10002  = \gen_lzc.index_nodes [1:0];
  assign \$auto$rtlil.cc:2746:ReduceBool$10004  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$10012  = \$auto$builder.cc:364:Unop$10006 ;
endmodule

/* src = "../rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper (empty_o, in_i, cnt_o);
  wire \$auto$builder.cc:338:Biop$9915 ;
  wire \$auto$builder.cc:338:Biop$9917 ;
  wire \$auto$builder.cc:338:Biop$9923 ;
  wire \$auto$builder.cc:338:Biop$9925 ;
  wire \$auto$builder.cc:338:Biop$9931 ;
  wire \$auto$builder.cc:338:Biop$9933 ;
  wire \$auto$builder.cc:364:Unop$9945 ;
  wire \$auto$builder.cc:364:Unop$9947 ;
  wire \$auto$builder.cc:364:Unop$9949 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9896 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9901 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9906 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9911 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9919 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9927 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9935 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9939 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9943 ;
  wire \$auto$rtlil.cc:2874:Mux$9898 ;
  wire \$auto$rtlil.cc:2874:Mux$9903 ;
  wire \$auto$rtlil.cc:2874:Mux$9908 ;
  wire \$auto$rtlil.cc:2874:Mux$9913 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9921 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9929 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9937 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$9941 ;
  wire \$auto$rtlil.cc:2874:Mux$9951 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$9893 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9894 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9899 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9904 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$9909 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$9892 ;
  /* src = "../rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "../rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "../rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "../rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "../rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "../rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9914  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$9915 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9922  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$auto$builder.cc:338:Biop$9923 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9930  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$auto$builder.cc:338:Biop$9931 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9944  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$auto$builder.cc:364:Unop$9945 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9946  (
    .A(in_i),
    .Y(\$auto$builder.cc:364:Unop$9947 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9948  (
    .A(\$auto$builder.cc:364:Unop$9947 ),
    .Y(\$auto$builder.cc:364:Unop$9949 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9920  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9919 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9921 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9928  (
    .A(2'h1),
    .B(2'h0),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9927 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9929 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$9936  (
    .A(2'h3),
    .B(2'h2),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9935 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9937 )
  );
  assign \gen_lzc.in_tmp  = { \$auto$rtlil.cc:2874:Mux$9913 , \$auto$rtlil.cc:2874:Mux$9908 , \$auto$rtlil.cc:2874:Mux$9903 , \$auto$rtlil.cc:2874:Mux$9898  };
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$auto$builder.cc:338:Biop$9915 ;
  assign \gen_lzc.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$9921 ;
  assign \gen_lzc.sel_nodes [1] = \$auto$builder.cc:338:Biop$9923 ;
  assign \gen_lzc.index_nodes [3:2] = \$auto$rtlil.cc:2874:Mux$9929 ;
  assign \gen_lzc.sel_nodes [2] = \$auto$builder.cc:338:Biop$9931 ;
  assign \gen_lzc.index_nodes [5:4] = \$auto$rtlil.cc:2874:Mux$9937 ;
  assign cnt_o = \$auto$rtlil.cc:2874:Mux$9941 ;
  assign empty_o = \$auto$rtlil.cc:2874:Mux$9951 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9896  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9898  = in_i[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9901  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9903  = in_i[1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9906  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9908  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9911  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$9913  = in_i[3];
  assign \$auto$builder.cc:338:Biop$9917  = \gen_lzc.sel_nodes [1];
  assign \$auto$rtlil.cc:2746:ReduceBool$9919  = \$auto$builder.cc:338:Biop$9923 ;
  assign \$auto$builder.cc:338:Biop$9925  = \gen_lzc.in_tmp [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9927  = in_i[0];
  assign \$auto$builder.cc:338:Biop$9933  = \gen_lzc.in_tmp [2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9935  = in_i[2];
  assign \$auto$rtlil.cc:2746:ReduceBool$9939  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9941  = \gen_lzc.index_nodes [1:0];
  assign \$auto$rtlil.cc:2746:ReduceBool$9943  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$9951  = \$auto$builder.cc:364:Unop$9945 ;
endmodule

/* src = "../rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$auto$builder.cc:338:Biop$2887 ;
  wire \$auto$builder.cc:338:Biop$2889 ;
  wire \$auto$builder.cc:338:Biop$2891 ;
  wire \$auto$builder.cc:338:Biop$2893 ;
  wire \$auto$builder.cc:338:Biop$2895 ;
  wire \$auto$builder.cc:338:Biop$2897 ;
  wire \$auto$builder.cc:338:Biop$2951 ;
  wire \$auto$builder.cc:338:Biop$2975 ;
  wire \$auto$builder.cc:338:Biop$2977 ;
  wire \$auto$builder.cc:364:Unop$2883 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2885 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2899 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2953 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2980 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2982 ;
  wire [359:0] \$auto$rtlil.cc:2786:And$17109 ;
  wire \$auto$rtlil.cc:2791:Lt$2901 ;
  wire \$auto$rtlil.cc:2791:Lt$2915 ;
  wire \$auto$rtlil.cc:2791:Lt$2929 ;
  wire \$auto$rtlil.cc:2791:Lt$2939 ;
  wire \$auto$rtlil.cc:2791:Lt$2945 ;
  wire \$auto$rtlil.cc:2791:Lt$2957 ;
  wire \$auto$rtlil.cc:2791:Lt$2963 ;
  wire \$auto$rtlil.cc:2791:Lt$2969 ;
  wire \$auto$rtlil.cc:2797:Ge$2903 ;
  wire \$auto$rtlil.cc:2797:Ge$2917 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$2905 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$2919 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$2907 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$2921 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$2933 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$2943 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$2949 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$2961 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$2967 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$2973 ;
  wire [359:0] \$auto$rtlil.cc:2875:Bwmux$2913 ;
  wire [359:0] \$auto$rtlil.cc:2875:Bwmux$2927 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$2931 ;
  wire [71:0] \$auto$rtlil.cc:2895:Bmux$2941 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$2947 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$2959 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$2965 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$2971 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$2909 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$2911 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$2923 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$2925 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$2876 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2877 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2878 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2879 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2880 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2881 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$2875 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$auto$slang_frontend.cc:694:finish$\cnt_up$2954 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [359:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2934 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [359:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2936 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2935 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2937 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\select_d$2955 ;
  wire [2:0] \$procmux$15076_Y ;
  wire \$procmux$15077_CMP ;
  wire \$procmux$15079_Y ;
  wire \$procmux$15080_CMP ;
  wire \$procmux$15082_Y ;
  wire \$procmux$15083_CMP ;
  wire \$procmux$15084_Y ;
  wire \$procmux$15085_CMP ;
  wire [359:0] \$procmux$15086_Y ;
  wire \$procmux$15087_CMP ;
  wire [359:0] \$procmux$15088_Y ;
  wire \$procmux$15089_CMP ;
  wire \$procmux$15091_Y ;
  wire \$procmux$15092_CMP ;
  wire [359:0] \$procmux$15094_Y ;
  wire \$procmux$15095_CMP ;
  /* src = "../rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "../rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "../rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "../rtl/obi/obi_demux.sv:28.38" */
  output [359:0] mgr_ports_req_o;
  wire [359:0] mgr_ports_req_o;
  /* src = "../rtl/obi/obi_demux.sv:29.38" */
  input [184:0] mgr_ports_rsp_i;
  wire [184:0] mgr_ports_rsp_i;
  /* src = "../rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "../rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "../rtl/obi/obi_demux.sv:25.38" */
  input [71:0] sbr_port_req_i;
  wire [71:0] sbr_port_req_i;
  /* src = "../rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "../rtl/obi/obi_demux.sv:26.38" */
  output [36:0] sbr_port_rsp_o;
  wire [36:0] sbr_port_rsp_o;
  /* src = "../rtl/obi/obi_demux.sv:24.38" */
  input [2:0] sbr_port_select_i;
  wire [2:0] sbr_port_select_i;
  /* src = "../rtl/obi/obi_demux.sv:44.12" */
  wire [2:0] select_d;
  /* src = "../rtl/obi/obi_demux.sv:44.22" */
  wire [2:0] select_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2979  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2980 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$2906  (
    .A(72'h000000000000000000),
    .B(72'h000000000000000001),
    .S(\$auto$rtlil.cc:2806:LogicAnd$2905 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2907 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$2920  (
    .A(72'h000000000000000000),
    .B(72'hfffffffffffffffffe),
    .S(\$auto$rtlil.cc:2806:LogicAnd$2919 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2921 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$2932  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$2931 ),
    .S(\$auto$rtlil.cc:2791:Lt$2929 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2933 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$2942  (
    .A(72'hxxxxxxxxxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$2941 ),
    .S(\$auto$rtlil.cc:2791:Lt$2939 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2943 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$2948  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$2947 ),
    .S(\$auto$rtlil.cc:2791:Lt$2945 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2949 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$2960  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$2959 ),
    .S(\$auto$rtlil.cc:2791:Lt$2957 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2961 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$2966  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$2965 ),
    .S(\$auto$rtlil.cc:2791:Lt$2963 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2967 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$2972  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$2971 ),
    .S(\$auto$rtlil.cc:2791:Lt$2969 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2973 )
  );
  \$bwmux  #(
    .WIDTH(32'd360)
  ) \$auto$builder.cc:128:Bwmux$2926  (
    .A(\$auto$rtlil.cc:2875:Bwmux$2913 ),
    .B({ sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$2925 [359:0]),
    .Y(\$auto$rtlil.cc:2875:Bwmux$2927 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$2930  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$2931 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:195:Bmux$2940  (
    .A({ 216'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2936  }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$2941 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$2946  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$2947 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$2958  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$2959 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$2964  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$2965 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$2970  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$2971 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2886  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$auto$builder.cc:338:Biop$2887 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2888  (
    .A(in_flight),
    .Y(\$auto$builder.cc:338:Biop$2889 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2890  (
    .A(\$auto$builder.cc:338:Biop$2887 ),
    .B(\$auto$builder.cc:338:Biop$2889 ),
    .Y(\$auto$builder.cc:338:Biop$2891 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2894  (
    .A(\$auto$builder.cc:338:Biop$2893 ),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$2895 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2896  (
    .A(\$auto$builder.cc:338:Biop$2891 ),
    .B(\$auto$builder.cc:338:Biop$2895 ),
    .Y(\$auto$builder.cc:338:Biop$2897 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2950  (
    .A(\$auto$rtlil.cc:2874:Mux$2943 [0]),
    .B(\$auto$rtlil.cc:2874:Mux$2949 [1]),
    .Y(\$auto$builder.cc:338:Biop$2951 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2976  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$2977 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2882  (
    .A(overflow),
    .Y(\$auto$builder.cc:364:Unop$2883 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$2908  (
    .A(\$auto$rtlil.cc:2874:Mux$2907 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$2909 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$2910  (
    .A(\$auto$rtlil.cc:2874:Mux$2907 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$2911 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$2922  (
    .A(\$auto$rtlil.cc:2874:Mux$2921 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$2923 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$2924  (
    .A(\$auto$rtlil.cc:2874:Mux$2921 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$2925 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$2902  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$2903 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$2916  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$2917 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2900  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$2901 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2914  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$2915 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2928  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$2929 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2938  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$2939 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2944  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$2945 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2956  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$2957 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2962  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$2963 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2968  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$2969 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$2904  (
    .A(\$auto$rtlil.cc:2797:Ge$2903 ),
    .B(\$auto$rtlil.cc:2791:Lt$2901 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$2905 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$2918  (
    .A(\$auto$rtlil.cc:2797:Ge$2917 ),
    .B(\$auto$rtlil.cc:2791:Lt$2915 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$2919 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd360),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd360),
    .Y_WIDTH(32'd360)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17108  (
    .A({ 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$auto$rtlil.cc:2896:Demux$2911 [359:0]),
    .Y(\$auto$rtlil.cc:2786:And$17109 )
  );
  /* src = "../rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$select_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$15076  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$15077_CMP ),
    .Y(\$procmux$15076_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15079  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15080_CMP ),
    .Y(\$procmux$15079_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15082  (
    .A(1'h0),
    .B(\$auto$rtlil.cc:2874:Mux$2933 [1]),
    .S(\$procmux$15083_CMP ),
    .Y(\$procmux$15082_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15084  (
    .A(\$procmux$15082_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$15084_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15086  (
    .A(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .B(\$auto$rtlil.cc:2875:Bwmux$2927 ),
    .S(\$procmux$15087_CMP ),
    .Y(\$procmux$15086_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15088  (
    .A(\$procmux$15086_Y ),
    .B(360'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$15088_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15091  (
    .A(\$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2935 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$15091_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15094  (
    .A(\$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2934 ),
    .B(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .S(overflow),
    .Y(\$procmux$15094_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$auto$builder.cc:338:Biop$2977 ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign mgr_ports_req_o = \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2936 ;
  assign cnt_up = \$auto$slang_frontend.cc:694:finish$\cnt_up$2954 ;
  assign sbr_port_gnt = \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2937 ;
  assign select_d = \$auto$slang_frontend.cc:694:finish$\select_d$2955 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[36:2] = \$auto$rtlil.cc:2874:Mux$2961 [36:2];
  assign sbr_port_rsp_o[0] = \$auto$rtlil.cc:2874:Mux$2967 [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$auto$builder.cc:338:Biop$2975 ;
  assign \$procmux$15077_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2953 ;
  assign \$auto$slang_frontend.cc:694:finish$\select_d$2955  = \$procmux$15076_Y ;
  assign \$procmux$15080_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2953 ;
  assign \$auto$slang_frontend.cc:694:finish$\cnt_up$2954  = \$procmux$15079_Y ;
  assign \$procmux$15083_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2899 ;
  assign \$procmux$15085_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2885 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2935  = \$procmux$15084_Y ;
  assign \$procmux$15087_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2899 ;
  assign \$procmux$15089_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2885 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2934  = \$procmux$15088_Y ;
  assign \$procmux$15092_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2885 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2937  = \$procmux$15091_Y ;
  assign \$procmux$15095_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2885 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2936  = \$procmux$15094_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2885  = \$auto$builder.cc:364:Unop$2883 ;
  assign \$auto$builder.cc:338:Biop$2893  = in_flight;
  assign \$auto$builder.cc:338:Biop$2975  = \$auto$rtlil.cc:2874:Mux$2973 [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$2899  = \$auto$builder.cc:338:Biop$2897 ;
  assign \$auto$rtlil.cc:2875:Bwmux$2913  = \$auto$rtlil.cc:2786:And$17109 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2953  = \$auto$builder.cc:338:Biop$2951 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2982  = rst_ni;
endmodule

/* src = "../rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$auto$builder.cc:338:Biop$2996 ;
  wire \$auto$builder.cc:338:Biop$2998 ;
  wire \$auto$builder.cc:338:Biop$3000 ;
  wire \$auto$builder.cc:338:Biop$3002 ;
  wire \$auto$builder.cc:338:Biop$3004 ;
  wire \$auto$builder.cc:338:Biop$3006 ;
  wire \$auto$builder.cc:338:Biop$3060 ;
  wire \$auto$builder.cc:338:Biop$3084 ;
  wire \$auto$builder.cc:338:Biop$3086 ;
  wire \$auto$builder.cc:364:Unop$2992 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2994 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3008 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3062 ;
  wire \$auto$rtlil.cc:2747:LogicNot$3089 ;
  wire \$auto$rtlil.cc:2747:LogicNot$3091 ;
  wire [359:0] \$auto$rtlil.cc:2786:And$17107 ;
  wire \$auto$rtlil.cc:2791:Lt$3010 ;
  wire \$auto$rtlil.cc:2791:Lt$3024 ;
  wire \$auto$rtlil.cc:2791:Lt$3038 ;
  wire \$auto$rtlil.cc:2791:Lt$3048 ;
  wire \$auto$rtlil.cc:2791:Lt$3054 ;
  wire \$auto$rtlil.cc:2791:Lt$3066 ;
  wire \$auto$rtlil.cc:2791:Lt$3072 ;
  wire \$auto$rtlil.cc:2791:Lt$3078 ;
  wire \$auto$rtlil.cc:2797:Ge$3012 ;
  wire \$auto$rtlil.cc:2797:Ge$3026 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3014 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3028 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$3016 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$3030 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3042 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$3052 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3058 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3070 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3076 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3082 ;
  wire [359:0] \$auto$rtlil.cc:2875:Bwmux$3022 ;
  wire [359:0] \$auto$rtlil.cc:2875:Bwmux$3036 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3040 ;
  wire [71:0] \$auto$rtlil.cc:2895:Bmux$3050 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3056 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3068 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3074 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3080 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3018 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3020 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3032 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3034 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$2985 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2986 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2987 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2988 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2989 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2990 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$2984 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$auto$slang_frontend.cc:694:finish$\cnt_up$3063 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [359:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3043 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [359:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3045 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3044 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3046 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\select_d$3064 ;
  wire [2:0] \$procmux$15056_Y ;
  wire \$procmux$15057_CMP ;
  wire \$procmux$15059_Y ;
  wire \$procmux$15060_CMP ;
  wire \$procmux$15062_Y ;
  wire \$procmux$15063_CMP ;
  wire \$procmux$15064_Y ;
  wire \$procmux$15065_CMP ;
  wire [359:0] \$procmux$15066_Y ;
  wire \$procmux$15067_CMP ;
  wire [359:0] \$procmux$15068_Y ;
  wire \$procmux$15069_CMP ;
  wire \$procmux$15071_Y ;
  wire \$procmux$15072_CMP ;
  wire [359:0] \$procmux$15074_Y ;
  wire \$procmux$15075_CMP ;
  /* src = "../rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "../rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "../rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "../rtl/obi/obi_demux.sv:28.38" */
  output [359:0] mgr_ports_req_o;
  wire [359:0] mgr_ports_req_o;
  /* src = "../rtl/obi/obi_demux.sv:29.38" */
  input [184:0] mgr_ports_rsp_i;
  wire [184:0] mgr_ports_rsp_i;
  /* src = "../rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "../rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "../rtl/obi/obi_demux.sv:25.38" */
  input [71:0] sbr_port_req_i;
  wire [71:0] sbr_port_req_i;
  /* src = "../rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "../rtl/obi/obi_demux.sv:26.38" */
  output [36:0] sbr_port_rsp_o;
  wire [36:0] sbr_port_rsp_o;
  /* src = "../rtl/obi/obi_demux.sv:24.38" */
  input [2:0] sbr_port_select_i;
  wire [2:0] sbr_port_select_i;
  /* src = "../rtl/obi/obi_demux.sv:44.12" */
  wire [2:0] select_d;
  /* src = "../rtl/obi/obi_demux.sv:44.22" */
  wire [2:0] select_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$3088  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$3089 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$3015  (
    .A(72'h000000000000000000),
    .B(72'h000000000000000001),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3014 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3016 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$3029  (
    .A(72'h000000000000000000),
    .B(72'hfffffffffffffffffe),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3028 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3030 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3041  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3040 ),
    .S(\$auto$rtlil.cc:2791:Lt$3038 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3042 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$3051  (
    .A(72'hxxxxxxxxxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3050 ),
    .S(\$auto$rtlil.cc:2791:Lt$3048 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3052 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3057  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3056 ),
    .S(\$auto$rtlil.cc:2791:Lt$3054 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3058 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3069  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3068 ),
    .S(\$auto$rtlil.cc:2791:Lt$3066 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3070 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3075  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3074 ),
    .S(\$auto$rtlil.cc:2791:Lt$3072 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3076 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3081  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3080 ),
    .S(\$auto$rtlil.cc:2791:Lt$3078 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3082 )
  );
  \$bwmux  #(
    .WIDTH(32'd360)
  ) \$auto$builder.cc:128:Bwmux$3035  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3022 ),
    .B({ sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3034 [359:0]),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3036 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3039  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$3040 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:195:Bmux$3049  (
    .A({ 216'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3045  }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$3050 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3055  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$3056 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3067  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$3068 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3073  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$3074 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3079  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$3080 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2995  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$auto$builder.cc:338:Biop$2996 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2997  (
    .A(in_flight),
    .Y(\$auto$builder.cc:338:Biop$2998 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2999  (
    .A(\$auto$builder.cc:338:Biop$2996 ),
    .B(\$auto$builder.cc:338:Biop$2998 ),
    .Y(\$auto$builder.cc:338:Biop$3000 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3003  (
    .A(\$auto$builder.cc:338:Biop$3002 ),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$3004 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3005  (
    .A(\$auto$builder.cc:338:Biop$3000 ),
    .B(\$auto$builder.cc:338:Biop$3004 ),
    .Y(\$auto$builder.cc:338:Biop$3006 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3059  (
    .A(\$auto$rtlil.cc:2874:Mux$3052 [0]),
    .B(\$auto$rtlil.cc:2874:Mux$3058 [1]),
    .Y(\$auto$builder.cc:338:Biop$3060 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3085  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$3086 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2991  (
    .A(overflow),
    .Y(\$auto$builder.cc:364:Unop$2992 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3017  (
    .A(\$auto$rtlil.cc:2874:Mux$3016 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3018 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3019  (
    .A(\$auto$rtlil.cc:2874:Mux$3016 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3020 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3031  (
    .A(\$auto$rtlil.cc:2874:Mux$3030 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3032 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3033  (
    .A(\$auto$rtlil.cc:2874:Mux$3030 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3034 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3011  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3012 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3025  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3026 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3009  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3010 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3023  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3024 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3037  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3038 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3047  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3048 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3053  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3054 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3065  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3066 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3071  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3072 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3077  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3078 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3013  (
    .A(\$auto$rtlil.cc:2797:Ge$3012 ),
    .B(\$auto$rtlil.cc:2791:Lt$3010 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3014 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3027  (
    .A(\$auto$rtlil.cc:2797:Ge$3026 ),
    .B(\$auto$rtlil.cc:2791:Lt$3024 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3028 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd360),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd360),
    .Y_WIDTH(32'd360)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17106  (
    .A({ 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$auto$rtlil.cc:2896:Demux$3020 [359:0]),
    .Y(\$auto$rtlil.cc:2786:And$17107 )
  );
  /* src = "../rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$select_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$15056  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$15057_CMP ),
    .Y(\$procmux$15056_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15059  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15060_CMP ),
    .Y(\$procmux$15059_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15062  (
    .A(1'h0),
    .B(\$auto$rtlil.cc:2874:Mux$3042 [1]),
    .S(\$procmux$15063_CMP ),
    .Y(\$procmux$15062_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15064  (
    .A(\$procmux$15062_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$15064_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15066  (
    .A(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .B(\$auto$rtlil.cc:2875:Bwmux$3036 ),
    .S(\$procmux$15067_CMP ),
    .Y(\$procmux$15066_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15068  (
    .A(\$procmux$15066_Y ),
    .B(360'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$15068_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15071  (
    .A(\$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3044 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$15071_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15074  (
    .A(\$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3043 ),
    .B(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .S(overflow),
    .Y(\$procmux$15074_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$auto$builder.cc:338:Biop$3086 ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign mgr_ports_req_o = \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3045 ;
  assign cnt_up = \$auto$slang_frontend.cc:694:finish$\cnt_up$3063 ;
  assign sbr_port_gnt = \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3046 ;
  assign select_d = \$auto$slang_frontend.cc:694:finish$\select_d$3064 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[36:2] = \$auto$rtlil.cc:2874:Mux$3070 [36:2];
  assign sbr_port_rsp_o[0] = \$auto$rtlil.cc:2874:Mux$3076 [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$auto$builder.cc:338:Biop$3084 ;
  assign \$procmux$15057_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3062 ;
  assign \$auto$slang_frontend.cc:694:finish$\select_d$3064  = \$procmux$15056_Y ;
  assign \$procmux$15060_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3062 ;
  assign \$auto$slang_frontend.cc:694:finish$\cnt_up$3063  = \$procmux$15059_Y ;
  assign \$procmux$15063_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3008 ;
  assign \$procmux$15065_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2994 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3044  = \$procmux$15064_Y ;
  assign \$procmux$15067_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3008 ;
  assign \$procmux$15069_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2994 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3043  = \$procmux$15068_Y ;
  assign \$procmux$15072_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2994 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3046  = \$procmux$15071_Y ;
  assign \$procmux$15075_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2994 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3045  = \$procmux$15074_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2994  = \$auto$builder.cc:364:Unop$2992 ;
  assign \$auto$builder.cc:338:Biop$3002  = in_flight;
  assign \$auto$builder.cc:338:Biop$3084  = \$auto$rtlil.cc:2874:Mux$3082 [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$3008  = \$auto$builder.cc:338:Biop$3006 ;
  assign \$auto$rtlil.cc:2875:Bwmux$3022  = \$auto$rtlil.cc:2786:And$17107 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3062  = \$auto$builder.cc:338:Biop$3060 ;
  assign \$auto$rtlil.cc:2747:LogicNot$3091  = rst_ni;
endmodule

/* src = "../rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$auto$builder.cc:338:Biop$3105 ;
  wire \$auto$builder.cc:338:Biop$3107 ;
  wire \$auto$builder.cc:338:Biop$3109 ;
  wire \$auto$builder.cc:338:Biop$3111 ;
  wire \$auto$builder.cc:338:Biop$3113 ;
  wire \$auto$builder.cc:338:Biop$3115 ;
  wire \$auto$builder.cc:338:Biop$3169 ;
  wire \$auto$builder.cc:338:Biop$3193 ;
  wire \$auto$builder.cc:338:Biop$3195 ;
  wire \$auto$builder.cc:364:Unop$3101 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3103 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3117 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3171 ;
  wire \$auto$rtlil.cc:2747:LogicNot$3198 ;
  wire \$auto$rtlil.cc:2747:LogicNot$3200 ;
  wire [359:0] \$auto$rtlil.cc:2786:And$17105 ;
  wire \$auto$rtlil.cc:2791:Lt$3119 ;
  wire \$auto$rtlil.cc:2791:Lt$3133 ;
  wire \$auto$rtlil.cc:2791:Lt$3147 ;
  wire \$auto$rtlil.cc:2791:Lt$3157 ;
  wire \$auto$rtlil.cc:2791:Lt$3163 ;
  wire \$auto$rtlil.cc:2791:Lt$3175 ;
  wire \$auto$rtlil.cc:2791:Lt$3181 ;
  wire \$auto$rtlil.cc:2791:Lt$3187 ;
  wire \$auto$rtlil.cc:2797:Ge$3121 ;
  wire \$auto$rtlil.cc:2797:Ge$3135 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3123 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3137 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$3125 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$3139 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3151 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$3161 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3167 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3179 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3185 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3191 ;
  wire [359:0] \$auto$rtlil.cc:2875:Bwmux$3131 ;
  wire [359:0] \$auto$rtlil.cc:2875:Bwmux$3145 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3149 ;
  wire [71:0] \$auto$rtlil.cc:2895:Bmux$3159 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3165 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3177 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3183 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3189 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3127 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3129 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3141 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3143 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$3094 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3095 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3096 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3097 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3098 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3099 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$3093 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$auto$slang_frontend.cc:694:finish$\cnt_up$3172 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [359:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3152 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [359:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3154 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3153 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3155 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\select_d$3173 ;
  wire [2:0] \$procmux$15036_Y ;
  wire \$procmux$15037_CMP ;
  wire \$procmux$15039_Y ;
  wire \$procmux$15040_CMP ;
  wire \$procmux$15042_Y ;
  wire \$procmux$15043_CMP ;
  wire \$procmux$15044_Y ;
  wire \$procmux$15045_CMP ;
  wire [359:0] \$procmux$15046_Y ;
  wire \$procmux$15047_CMP ;
  wire [359:0] \$procmux$15048_Y ;
  wire \$procmux$15049_CMP ;
  wire \$procmux$15051_Y ;
  wire \$procmux$15052_CMP ;
  wire [359:0] \$procmux$15054_Y ;
  wire \$procmux$15055_CMP ;
  /* src = "../rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "../rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "../rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "../rtl/obi/obi_demux.sv:28.38" */
  output [359:0] mgr_ports_req_o;
  wire [359:0] mgr_ports_req_o;
  /* src = "../rtl/obi/obi_demux.sv:29.38" */
  input [184:0] mgr_ports_rsp_i;
  wire [184:0] mgr_ports_rsp_i;
  /* src = "../rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "../rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "../rtl/obi/obi_demux.sv:25.38" */
  input [71:0] sbr_port_req_i;
  wire [71:0] sbr_port_req_i;
  /* src = "../rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "../rtl/obi/obi_demux.sv:26.38" */
  output [36:0] sbr_port_rsp_o;
  wire [36:0] sbr_port_rsp_o;
  /* src = "../rtl/obi/obi_demux.sv:24.38" */
  input [2:0] sbr_port_select_i;
  wire [2:0] sbr_port_select_i;
  /* src = "../rtl/obi/obi_demux.sv:44.12" */
  wire [2:0] select_d;
  /* src = "../rtl/obi/obi_demux.sv:44.22" */
  wire [2:0] select_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$3197  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$3198 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$3124  (
    .A(72'h000000000000000000),
    .B(72'h000000000000000001),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3123 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3125 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$3138  (
    .A(72'h000000000000000000),
    .B(72'hfffffffffffffffffe),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3137 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3139 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3150  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3149 ),
    .S(\$auto$rtlil.cc:2791:Lt$3147 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3151 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$3160  (
    .A(72'hxxxxxxxxxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3159 ),
    .S(\$auto$rtlil.cc:2791:Lt$3157 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3161 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3166  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3165 ),
    .S(\$auto$rtlil.cc:2791:Lt$3163 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3167 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3178  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3177 ),
    .S(\$auto$rtlil.cc:2791:Lt$3175 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3179 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3184  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3183 ),
    .S(\$auto$rtlil.cc:2791:Lt$3181 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3185 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3190  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3189 ),
    .S(\$auto$rtlil.cc:2791:Lt$3187 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3191 )
  );
  \$bwmux  #(
    .WIDTH(32'd360)
  ) \$auto$builder.cc:128:Bwmux$3144  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3131 ),
    .B({ sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3143 [359:0]),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3145 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3148  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$3149 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:195:Bmux$3158  (
    .A({ 216'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3154  }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$3159 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3164  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$3165 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3176  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$3177 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3182  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$3183 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3188  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$3189 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3104  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$auto$builder.cc:338:Biop$3105 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3106  (
    .A(in_flight),
    .Y(\$auto$builder.cc:338:Biop$3107 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3108  (
    .A(\$auto$builder.cc:338:Biop$3105 ),
    .B(\$auto$builder.cc:338:Biop$3107 ),
    .Y(\$auto$builder.cc:338:Biop$3109 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3112  (
    .A(\$auto$builder.cc:338:Biop$3111 ),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$3113 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3114  (
    .A(\$auto$builder.cc:338:Biop$3109 ),
    .B(\$auto$builder.cc:338:Biop$3113 ),
    .Y(\$auto$builder.cc:338:Biop$3115 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3168  (
    .A(\$auto$rtlil.cc:2874:Mux$3161 [0]),
    .B(\$auto$rtlil.cc:2874:Mux$3167 [1]),
    .Y(\$auto$builder.cc:338:Biop$3169 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3194  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$3195 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3100  (
    .A(overflow),
    .Y(\$auto$builder.cc:364:Unop$3101 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3126  (
    .A(\$auto$rtlil.cc:2874:Mux$3125 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3127 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3128  (
    .A(\$auto$rtlil.cc:2874:Mux$3125 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3129 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3140  (
    .A(\$auto$rtlil.cc:2874:Mux$3139 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3141 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3142  (
    .A(\$auto$rtlil.cc:2874:Mux$3139 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3143 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3120  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3121 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3134  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3135 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3118  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3119 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3132  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3133 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3146  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3147 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3156  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3157 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3162  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3163 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3174  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3175 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3180  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3181 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3186  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3187 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3122  (
    .A(\$auto$rtlil.cc:2797:Ge$3121 ),
    .B(\$auto$rtlil.cc:2791:Lt$3119 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3123 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3136  (
    .A(\$auto$rtlil.cc:2797:Ge$3135 ),
    .B(\$auto$rtlil.cc:2791:Lt$3133 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3137 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd360),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd360),
    .Y_WIDTH(32'd360)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17104  (
    .A({ 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$auto$rtlil.cc:2896:Demux$3129 [359:0]),
    .Y(\$auto$rtlil.cc:2786:And$17105 )
  );
  /* src = "../rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$select_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$15036  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$15037_CMP ),
    .Y(\$procmux$15036_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15039  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15040_CMP ),
    .Y(\$procmux$15039_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15042  (
    .A(1'h0),
    .B(\$auto$rtlil.cc:2874:Mux$3151 [1]),
    .S(\$procmux$15043_CMP ),
    .Y(\$procmux$15042_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15044  (
    .A(\$procmux$15042_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$15044_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15046  (
    .A(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .B(\$auto$rtlil.cc:2875:Bwmux$3145 ),
    .S(\$procmux$15047_CMP ),
    .Y(\$procmux$15046_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15048  (
    .A(\$procmux$15046_Y ),
    .B(360'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$15048_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15051  (
    .A(\$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3153 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$15051_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15054  (
    .A(\$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3152 ),
    .B(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .S(overflow),
    .Y(\$procmux$15054_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$auto$builder.cc:338:Biop$3195 ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign mgr_ports_req_o = \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3154 ;
  assign cnt_up = \$auto$slang_frontend.cc:694:finish$\cnt_up$3172 ;
  assign sbr_port_gnt = \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3155 ;
  assign select_d = \$auto$slang_frontend.cc:694:finish$\select_d$3173 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[36:2] = \$auto$rtlil.cc:2874:Mux$3179 [36:2];
  assign sbr_port_rsp_o[0] = \$auto$rtlil.cc:2874:Mux$3185 [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$auto$builder.cc:338:Biop$3193 ;
  assign \$procmux$15037_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3171 ;
  assign \$auto$slang_frontend.cc:694:finish$\select_d$3173  = \$procmux$15036_Y ;
  assign \$procmux$15040_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3171 ;
  assign \$auto$slang_frontend.cc:694:finish$\cnt_up$3172  = \$procmux$15039_Y ;
  assign \$procmux$15043_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3117 ;
  assign \$procmux$15045_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3103 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3153  = \$procmux$15044_Y ;
  assign \$procmux$15047_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3117 ;
  assign \$procmux$15049_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3103 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3152  = \$procmux$15048_Y ;
  assign \$procmux$15052_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3103 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3155  = \$procmux$15051_Y ;
  assign \$procmux$15055_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3103 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3154  = \$procmux$15054_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3103  = \$auto$builder.cc:364:Unop$3101 ;
  assign \$auto$builder.cc:338:Biop$3111  = in_flight;
  assign \$auto$builder.cc:338:Biop$3193  = \$auto$rtlil.cc:2874:Mux$3191 [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$3117  = \$auto$builder.cc:338:Biop$3115 ;
  assign \$auto$rtlil.cc:2875:Bwmux$3131  = \$auto$rtlil.cc:2786:And$17105 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3171  = \$auto$builder.cc:338:Biop$3169 ;
  assign \$auto$rtlil.cc:2747:LogicNot$3200  = rst_ni;
endmodule

/* src = "../rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$auto$builder.cc:338:Biop$3214 ;
  wire \$auto$builder.cc:338:Biop$3216 ;
  wire \$auto$builder.cc:338:Biop$3218 ;
  wire \$auto$builder.cc:338:Biop$3220 ;
  wire \$auto$builder.cc:338:Biop$3222 ;
  wire \$auto$builder.cc:338:Biop$3224 ;
  wire \$auto$builder.cc:338:Biop$3278 ;
  wire \$auto$builder.cc:338:Biop$3302 ;
  wire \$auto$builder.cc:338:Biop$3304 ;
  wire \$auto$builder.cc:364:Unop$3210 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3212 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3226 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$3280 ;
  wire \$auto$rtlil.cc:2747:LogicNot$3307 ;
  wire \$auto$rtlil.cc:2747:LogicNot$3309 ;
  wire [359:0] \$auto$rtlil.cc:2786:And$17103 ;
  wire \$auto$rtlil.cc:2791:Lt$3228 ;
  wire \$auto$rtlil.cc:2791:Lt$3242 ;
  wire \$auto$rtlil.cc:2791:Lt$3256 ;
  wire \$auto$rtlil.cc:2791:Lt$3266 ;
  wire \$auto$rtlil.cc:2791:Lt$3272 ;
  wire \$auto$rtlil.cc:2791:Lt$3284 ;
  wire \$auto$rtlil.cc:2791:Lt$3290 ;
  wire \$auto$rtlil.cc:2791:Lt$3296 ;
  wire \$auto$rtlil.cc:2797:Ge$3230 ;
  wire \$auto$rtlil.cc:2797:Ge$3244 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3232 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3246 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$3234 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$3248 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3260 ;
  wire [71:0] \$auto$rtlil.cc:2874:Mux$3270 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3276 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3288 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3294 ;
  wire [36:0] \$auto$rtlil.cc:2874:Mux$3300 ;
  wire [359:0] \$auto$rtlil.cc:2875:Bwmux$3240 ;
  wire [359:0] \$auto$rtlil.cc:2875:Bwmux$3254 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3258 ;
  wire [71:0] \$auto$rtlil.cc:2895:Bmux$3268 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3274 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3286 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3292 ;
  wire [36:0] \$auto$rtlil.cc:2895:Bmux$3298 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3236 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3238 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3250 ;
  wire [575:0] \$auto$rtlil.cc:2896:Demux$3252 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$3203 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3204 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3205 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3206 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3207 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3208 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$3202 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$auto$slang_frontend.cc:694:finish$\cnt_up$3281 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [359:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3261 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [359:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3263 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3262 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3264 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\select_d$3282 ;
  wire [2:0] \$procmux$15016_Y ;
  wire \$procmux$15017_CMP ;
  wire \$procmux$15019_Y ;
  wire \$procmux$15020_CMP ;
  wire \$procmux$15022_Y ;
  wire \$procmux$15023_CMP ;
  wire \$procmux$15024_Y ;
  wire \$procmux$15025_CMP ;
  wire [359:0] \$procmux$15026_Y ;
  wire \$procmux$15027_CMP ;
  wire [359:0] \$procmux$15028_Y ;
  wire \$procmux$15029_CMP ;
  wire \$procmux$15031_Y ;
  wire \$procmux$15032_CMP ;
  wire [359:0] \$procmux$15034_Y ;
  wire \$procmux$15035_CMP ;
  /* src = "../rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "../rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "../rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "../rtl/obi/obi_demux.sv:28.38" */
  output [359:0] mgr_ports_req_o;
  wire [359:0] mgr_ports_req_o;
  /* src = "../rtl/obi/obi_demux.sv:29.38" */
  input [184:0] mgr_ports_rsp_i;
  wire [184:0] mgr_ports_rsp_i;
  /* src = "../rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "../rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "../rtl/obi/obi_demux.sv:25.38" */
  input [71:0] sbr_port_req_i;
  wire [71:0] sbr_port_req_i;
  /* src = "../rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "../rtl/obi/obi_demux.sv:26.38" */
  output [36:0] sbr_port_rsp_o;
  wire [36:0] sbr_port_rsp_o;
  /* src = "../rtl/obi/obi_demux.sv:24.38" */
  input [2:0] sbr_port_select_i;
  wire [2:0] sbr_port_select_i;
  /* src = "../rtl/obi/obi_demux.sv:44.12" */
  wire [2:0] select_d;
  /* src = "../rtl/obi/obi_demux.sv:44.22" */
  wire [2:0] select_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$3306  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$3307 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$3233  (
    .A(72'h000000000000000000),
    .B(72'h000000000000000001),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3232 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3234 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$3247  (
    .A(72'h000000000000000000),
    .B(72'hfffffffffffffffffe),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3246 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3248 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3259  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3258 ),
    .S(\$auto$rtlil.cc:2791:Lt$3256 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3260 )
  );
  \$mux  #(
    .WIDTH(32'd72)
  ) \$auto$builder.cc:112:Mux$3269  (
    .A(72'hxxxxxxxxxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3268 ),
    .S(\$auto$rtlil.cc:2791:Lt$3266 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3270 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3275  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3274 ),
    .S(\$auto$rtlil.cc:2791:Lt$3272 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3276 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3287  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3286 ),
    .S(\$auto$rtlil.cc:2791:Lt$3284 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3288 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3293  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3292 ),
    .S(\$auto$rtlil.cc:2791:Lt$3290 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3294 )
  );
  \$mux  #(
    .WIDTH(32'd37)
  ) \$auto$builder.cc:112:Mux$3299  (
    .A(37'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$3298 ),
    .S(\$auto$rtlil.cc:2791:Lt$3296 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3300 )
  );
  \$bwmux  #(
    .WIDTH(32'd360)
  ) \$auto$builder.cc:128:Bwmux$3253  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3240 ),
    .B({ sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3252 [359:0]),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3254 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3257  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$3258 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:195:Bmux$3267  (
    .A({ 216'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3263  }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$3268 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3273  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$3274 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3285  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$3286 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3291  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$3292 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$auto$builder.cc:195:Bmux$3297  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$3298 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3213  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$auto$builder.cc:338:Biop$3214 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3215  (
    .A(in_flight),
    .Y(\$auto$builder.cc:338:Biop$3216 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3217  (
    .A(\$auto$builder.cc:338:Biop$3214 ),
    .B(\$auto$builder.cc:338:Biop$3216 ),
    .Y(\$auto$builder.cc:338:Biop$3218 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3221  (
    .A(\$auto$builder.cc:338:Biop$3220 ),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$3222 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3223  (
    .A(\$auto$builder.cc:338:Biop$3218 ),
    .B(\$auto$builder.cc:338:Biop$3222 ),
    .Y(\$auto$builder.cc:338:Biop$3224 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3277  (
    .A(\$auto$rtlil.cc:2874:Mux$3270 [0]),
    .B(\$auto$rtlil.cc:2874:Mux$3276 [1]),
    .Y(\$auto$builder.cc:338:Biop$3278 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3303  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$3304 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3209  (
    .A(overflow),
    .Y(\$auto$builder.cc:364:Unop$3210 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3235  (
    .A(\$auto$rtlil.cc:2874:Mux$3234 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3236 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3237  (
    .A(\$auto$rtlil.cc:2874:Mux$3234 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3238 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3249  (
    .A(\$auto$rtlil.cc:2874:Mux$3248 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3250 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$auto$builder.cc:38:Demux$3251  (
    .A(\$auto$rtlil.cc:2874:Mux$3248 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$3252 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3229  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3230 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3243  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3244 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3227  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3228 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3241  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3242 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3255  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3256 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3265  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3266 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3271  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3272 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3283  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3284 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3289  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3290 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3295  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$3296 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3231  (
    .A(\$auto$rtlil.cc:2797:Ge$3230 ),
    .B(\$auto$rtlil.cc:2791:Lt$3228 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3232 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3245  (
    .A(\$auto$rtlil.cc:2797:Ge$3244 ),
    .B(\$auto$rtlil.cc:2791:Lt$3242 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3246 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd360),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd360),
    .Y_WIDTH(32'd360)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17102  (
    .A({ 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$auto$rtlil.cc:2896:Demux$3238 [359:0]),
    .Y(\$auto$rtlil.cc:2786:And$17103 )
  );
  /* src = "../rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$select_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$15016  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$15017_CMP ),
    .Y(\$procmux$15016_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15019  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15020_CMP ),
    .Y(\$procmux$15019_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15022  (
    .A(1'h0),
    .B(\$auto$rtlil.cc:2874:Mux$3260 [1]),
    .S(\$procmux$15023_CMP ),
    .Y(\$procmux$15022_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15024  (
    .A(\$procmux$15022_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$15024_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15026  (
    .A(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .B(\$auto$rtlil.cc:2875:Bwmux$3254 ),
    .S(\$procmux$15027_CMP ),
    .Y(\$procmux$15026_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15028  (
    .A(\$procmux$15026_Y ),
    .B(360'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$15028_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15031  (
    .A(\$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3262 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$15031_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$15034  (
    .A(\$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3261 ),
    .B(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .S(overflow),
    .Y(\$procmux$15034_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$auto$builder.cc:338:Biop$3304 ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign mgr_ports_req_o = \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3263 ;
  assign cnt_up = \$auto$slang_frontend.cc:694:finish$\cnt_up$3281 ;
  assign sbr_port_gnt = \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3264 ;
  assign select_d = \$auto$slang_frontend.cc:694:finish$\select_d$3282 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[36:2] = \$auto$rtlil.cc:2874:Mux$3288 [36:2];
  assign sbr_port_rsp_o[0] = \$auto$rtlil.cc:2874:Mux$3294 [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$auto$builder.cc:338:Biop$3302 ;
  assign \$procmux$15017_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3280 ;
  assign \$auto$slang_frontend.cc:694:finish$\select_d$3282  = \$procmux$15016_Y ;
  assign \$procmux$15020_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3280 ;
  assign \$auto$slang_frontend.cc:694:finish$\cnt_up$3281  = \$procmux$15019_Y ;
  assign \$procmux$15023_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3226 ;
  assign \$procmux$15025_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3212 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3262  = \$procmux$15024_Y ;
  assign \$procmux$15027_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3226 ;
  assign \$procmux$15029_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3212 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3261  = \$procmux$15028_Y ;
  assign \$procmux$15032_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3212 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$3264  = \$procmux$15031_Y ;
  assign \$procmux$15035_CMP  = \$auto$rtlil.cc:2746:ReduceBool$3212 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$3263  = \$procmux$15034_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3212  = \$auto$builder.cc:364:Unop$3210 ;
  assign \$auto$builder.cc:338:Biop$3220  = in_flight;
  assign \$auto$builder.cc:338:Biop$3302  = \$auto$rtlil.cc:2874:Mux$3300 [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$3226  = \$auto$builder.cc:338:Biop$3224 ;
  assign \$auto$rtlil.cc:2875:Bwmux$3240  = \$auto$rtlil.cc:2786:And$17103 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$3280  = \$auto$builder.cc:338:Biop$3278 ;
  assign \$auto$rtlil.cc:2747:LogicNot$3309  = rst_ni;
endmodule

/* src = "../rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_croc.i_obi_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$auto$builder.cc:338:Biop$1042 ;
  wire \$auto$builder.cc:338:Biop$1044 ;
  wire \$auto$builder.cc:338:Biop$1046 ;
  wire \$auto$builder.cc:338:Biop$1048 ;
  wire \$auto$builder.cc:338:Biop$1050 ;
  wire \$auto$builder.cc:338:Biop$1052 ;
  wire \$auto$builder.cc:338:Biop$1106 ;
  wire \$auto$builder.cc:338:Biop$1130 ;
  wire \$auto$builder.cc:338:Biop$1132 ;
  wire \$auto$builder.cc:364:Unop$1038 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1040 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1054 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1108 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1135 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1137 ;
  wire [443:0] \$auto$rtlil.cc:2786:And$17113 ;
  wire \$auto$rtlil.cc:2791:Lt$1056 ;
  wire \$auto$rtlil.cc:2791:Lt$1070 ;
  wire \$auto$rtlil.cc:2791:Lt$1084 ;
  wire \$auto$rtlil.cc:2791:Lt$1094 ;
  wire \$auto$rtlil.cc:2791:Lt$1100 ;
  wire \$auto$rtlil.cc:2791:Lt$1112 ;
  wire \$auto$rtlil.cc:2791:Lt$1118 ;
  wire \$auto$rtlil.cc:2791:Lt$1124 ;
  wire \$auto$rtlil.cc:2797:Ge$1058 ;
  wire \$auto$rtlil.cc:2797:Ge$1072 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$1060 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$1074 ;
  wire [73:0] \$auto$rtlil.cc:2874:Mux$1062 ;
  wire [73:0] \$auto$rtlil.cc:2874:Mux$1076 ;
  wire [38:0] \$auto$rtlil.cc:2874:Mux$1088 ;
  wire [73:0] \$auto$rtlil.cc:2874:Mux$1098 ;
  wire [38:0] \$auto$rtlil.cc:2874:Mux$1104 ;
  wire [38:0] \$auto$rtlil.cc:2874:Mux$1116 ;
  wire [38:0] \$auto$rtlil.cc:2874:Mux$1122 ;
  wire [38:0] \$auto$rtlil.cc:2874:Mux$1128 ;
  wire [443:0] \$auto$rtlil.cc:2875:Bwmux$1068 ;
  wire [443:0] \$auto$rtlil.cc:2875:Bwmux$1082 ;
  wire [38:0] \$auto$rtlil.cc:2895:Bmux$1086 ;
  wire [73:0] \$auto$rtlil.cc:2895:Bmux$1096 ;
  wire [38:0] \$auto$rtlil.cc:2895:Bmux$1102 ;
  wire [38:0] \$auto$rtlil.cc:2895:Bmux$1114 ;
  wire [38:0] \$auto$rtlil.cc:2895:Bmux$1120 ;
  wire [38:0] \$auto$rtlil.cc:2895:Bmux$1126 ;
  wire [591:0] \$auto$rtlil.cc:2896:Demux$1064 ;
  wire [591:0] \$auto$rtlil.cc:2896:Demux$1066 ;
  wire [591:0] \$auto$rtlil.cc:2896:Demux$1078 ;
  wire [591:0] \$auto$rtlil.cc:2896:Demux$1080 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$1030 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$1031 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$1032 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$1033 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$1034 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$1035 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$1036 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$1029 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$auto$slang_frontend.cc:694:finish$\cnt_up$1109 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [443:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$1089 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [443:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$1091 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$1090 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$1092 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\select_d$1110 ;
  wire [2:0] \$procmux$15370_Y ;
  wire \$procmux$15371_CMP ;
  wire \$procmux$15373_Y ;
  wire \$procmux$15374_CMP ;
  wire \$procmux$15376_Y ;
  wire \$procmux$15377_CMP ;
  wire \$procmux$15378_Y ;
  wire \$procmux$15379_CMP ;
  wire [443:0] \$procmux$15380_Y ;
  wire \$procmux$15381_CMP ;
  wire [443:0] \$procmux$15382_Y ;
  wire \$procmux$15383_CMP ;
  wire \$procmux$15385_Y ;
  wire \$procmux$15386_CMP ;
  wire [443:0] \$procmux$15388_Y ;
  wire \$procmux$15389_CMP ;
  /* src = "../rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "../rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "../rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "../rtl/obi/obi_demux.sv:28.38" */
  output [443:0] mgr_ports_req_o;
  wire [443:0] mgr_ports_req_o;
  /* src = "../rtl/obi/obi_demux.sv:29.38" */
  input [233:0] mgr_ports_rsp_i;
  wire [233:0] mgr_ports_rsp_i;
  /* src = "../rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "../rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "../rtl/obi/obi_demux.sv:25.38" */
  input [73:0] sbr_port_req_i;
  wire [73:0] sbr_port_req_i;
  /* src = "../rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "../rtl/obi/obi_demux.sv:26.38" */
  output [38:0] sbr_port_rsp_o;
  wire [38:0] sbr_port_rsp_o;
  /* src = "../rtl/obi/obi_demux.sv:24.38" */
  input [2:0] sbr_port_select_i;
  wire [2:0] sbr_port_select_i;
  /* src = "../rtl/obi/obi_demux.sv:44.12" */
  wire [2:0] select_d;
  /* src = "../rtl/obi/obi_demux.sv:44.22" */
  wire [2:0] select_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1134  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1135 )
  );
  \$mux  #(
    .WIDTH(32'd74)
  ) \$auto$builder.cc:112:Mux$1061  (
    .A(74'h0000000000000000000),
    .B(74'h0000000000000000001),
    .S(\$auto$rtlil.cc:2806:LogicAnd$1060 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1062 )
  );
  \$mux  #(
    .WIDTH(32'd74)
  ) \$auto$builder.cc:112:Mux$1075  (
    .A(74'h0000000000000000000),
    .B(74'h3fffffffffffffffffe),
    .S(\$auto$rtlil.cc:2806:LogicAnd$1074 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1076 )
  );
  \$mux  #(
    .WIDTH(32'd39)
  ) \$auto$builder.cc:112:Mux$1087  (
    .A(39'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$1086 ),
    .S(\$auto$rtlil.cc:2791:Lt$1084 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1088 )
  );
  \$mux  #(
    .WIDTH(32'd74)
  ) \$auto$builder.cc:112:Mux$1097  (
    .A(74'hxxxxxxxxxxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$1096 ),
    .S(\$auto$rtlil.cc:2791:Lt$1094 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1098 )
  );
  \$mux  #(
    .WIDTH(32'd39)
  ) \$auto$builder.cc:112:Mux$1103  (
    .A(39'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$1102 ),
    .S(\$auto$rtlil.cc:2791:Lt$1100 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1104 )
  );
  \$mux  #(
    .WIDTH(32'd39)
  ) \$auto$builder.cc:112:Mux$1115  (
    .A(39'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$1114 ),
    .S(\$auto$rtlil.cc:2791:Lt$1112 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1116 )
  );
  \$mux  #(
    .WIDTH(32'd39)
  ) \$auto$builder.cc:112:Mux$1121  (
    .A(39'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$1120 ),
    .S(\$auto$rtlil.cc:2791:Lt$1118 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1122 )
  );
  \$mux  #(
    .WIDTH(32'd39)
  ) \$auto$builder.cc:112:Mux$1127  (
    .A(39'hxxxxxxxxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$1126 ),
    .S(\$auto$rtlil.cc:2791:Lt$1124 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1128 )
  );
  \$bwmux  #(
    .WIDTH(32'd444)
  ) \$auto$builder.cc:128:Bwmux$1081  (
    .A(\$auto$rtlil.cc:2875:Bwmux$1068 ),
    .B({ sbr_port_req_i[73:1], 1'hx, sbr_port_req_i[73:1], 1'hx, sbr_port_req_i[73:1], 1'hx, sbr_port_req_i[73:1], 1'hx, sbr_port_req_i[73:1], 1'hx, sbr_port_req_i[73:1], 1'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$1080 [443:0]),
    .Y(\$auto$rtlil.cc:2875:Bwmux$1082 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd39)
  ) \$auto$builder.cc:195:Bmux$1085  (
    .A({ 78'hxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$1086 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd74)
  ) \$auto$builder.cc:195:Bmux$1095  (
    .A({ 148'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$1091  }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$1096 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd39)
  ) \$auto$builder.cc:195:Bmux$1101  (
    .A({ 78'hxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2895:Bmux$1102 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd39)
  ) \$auto$builder.cc:195:Bmux$1113  (
    .A({ 78'hxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$1114 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd39)
  ) \$auto$builder.cc:195:Bmux$1119  (
    .A({ 78'hxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$1120 )
  );
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd39)
  ) \$auto$builder.cc:195:Bmux$1125  (
    .A({ 78'hxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$auto$rtlil.cc:2895:Bmux$1126 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1041  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$auto$builder.cc:338:Biop$1042 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1043  (
    .A(in_flight),
    .Y(\$auto$builder.cc:338:Biop$1044 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1045  (
    .A(\$auto$builder.cc:338:Biop$1042 ),
    .B(\$auto$builder.cc:338:Biop$1044 ),
    .Y(\$auto$builder.cc:338:Biop$1046 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1049  (
    .A(\$auto$builder.cc:338:Biop$1048 ),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$1050 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1051  (
    .A(\$auto$builder.cc:338:Biop$1046 ),
    .B(\$auto$builder.cc:338:Biop$1050 ),
    .Y(\$auto$builder.cc:338:Biop$1052 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1105  (
    .A(\$auto$rtlil.cc:2874:Mux$1098 [0]),
    .B(\$auto$rtlil.cc:2874:Mux$1104 [1]),
    .Y(\$auto$builder.cc:338:Biop$1106 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1131  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$1132 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1037  (
    .A(overflow),
    .Y(\$auto$builder.cc:364:Unop$1038 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd74)
  ) \$auto$builder.cc:38:Demux$1063  (
    .A(\$auto$rtlil.cc:2874:Mux$1062 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$1064 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd74)
  ) \$auto$builder.cc:38:Demux$1065  (
    .A(\$auto$rtlil.cc:2874:Mux$1062 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$1066 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd74)
  ) \$auto$builder.cc:38:Demux$1077  (
    .A(\$auto$rtlil.cc:2874:Mux$1076 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$1078 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd74)
  ) \$auto$builder.cc:38:Demux$1079  (
    .A(\$auto$rtlil.cc:2874:Mux$1076 ),
    .S(sbr_port_select_i),
    .Y(\$auto$rtlil.cc:2896:Demux$1080 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$1057  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$1058 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$1071  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$1072 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$1055  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$1056 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$1069  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$1070 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$1083  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$1084 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$1093  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$1094 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$1099  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$1100 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$1111  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$1112 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$1117  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$1118 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$1123  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$1124 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$1059  (
    .A(\$auto$rtlil.cc:2797:Ge$1058 ),
    .B(\$auto$rtlil.cc:2791:Lt$1056 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$1060 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$1073  (
    .A(\$auto$rtlil.cc:2797:Ge$1072 ),
    .B(\$auto$rtlil.cc:2791:Lt$1070 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$1074 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd444),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd444),
    .Y_WIDTH(32'd444)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17112  (
    .A({ 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$auto$rtlil.cc:2896:Demux$1066 [443:0]),
    .Y(\$auto$rtlil.cc:2786:And$17113 )
  );
  /* src = "../rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$select_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$15370  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$15371_CMP ),
    .Y(\$procmux$15370_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15373  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15374_CMP ),
    .Y(\$procmux$15373_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15376  (
    .A(1'h0),
    .B(\$auto$rtlil.cc:2874:Mux$1088 [1]),
    .S(\$procmux$15377_CMP ),
    .Y(\$procmux$15376_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15378  (
    .A(\$procmux$15376_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$15378_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd444)
  ) \$procmux$15380  (
    .A(444'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .B(\$auto$rtlil.cc:2875:Bwmux$1082 ),
    .S(\$procmux$15381_CMP ),
    .Y(\$procmux$15380_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd444)
  ) \$procmux$15382  (
    .A(\$procmux$15380_Y ),
    .B(444'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$15382_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15385  (
    .A(\$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$1090 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$15385_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd444)
  ) \$procmux$15388  (
    .A(\$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$1089 ),
    .B(444'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .S(overflow),
    .Y(\$procmux$15388_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_croc.i_obi_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$auto$builder.cc:338:Biop$1132 ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign mgr_ports_req_o = \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$1091 ;
  assign cnt_up = \$auto$slang_frontend.cc:694:finish$\cnt_up$1109 ;
  assign sbr_port_gnt = \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$1092 ;
  assign select_d = \$auto$slang_frontend.cc:694:finish$\select_d$1110 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[38:2] = \$auto$rtlil.cc:2874:Mux$1116 [38:2];
  assign sbr_port_rsp_o[0] = \$auto$rtlil.cc:2874:Mux$1122 [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$auto$builder.cc:338:Biop$1130 ;
  assign \$procmux$15371_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1108 ;
  assign \$auto$slang_frontend.cc:694:finish$\select_d$1110  = \$procmux$15370_Y ;
  assign \$procmux$15374_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1108 ;
  assign \$auto$slang_frontend.cc:694:finish$\cnt_up$1109  = \$procmux$15373_Y ;
  assign \$procmux$15377_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1054 ;
  assign \$procmux$15379_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1040 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$1090  = \$procmux$15378_Y ;
  assign \$procmux$15381_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1054 ;
  assign \$procmux$15383_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1040 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$1089  = \$procmux$15382_Y ;
  assign \$procmux$15386_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1040 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$1092  = \$procmux$15385_Y ;
  assign \$procmux$15389_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1040 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$1091  = \$procmux$15388_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$1040  = \$auto$builder.cc:364:Unop$1038 ;
  assign \$auto$builder.cc:338:Biop$1048  = in_flight;
  assign \$auto$builder.cc:338:Biop$1130  = \$auto$rtlil.cc:2874:Mux$1128 [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$1054  = \$auto$builder.cc:338:Biop$1052 ;
  assign \$auto$rtlil.cc:2875:Bwmux$1068  = \$auto$rtlil.cc:2786:And$17113 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$1108  = \$auto$builder.cc:338:Biop$1106 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1137  = rst_ni;
endmodule

/* src = "../rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_user.i_obi_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$auto$builder.cc:338:Biop$2639 ;
  wire \$auto$builder.cc:338:Biop$2641 ;
  wire \$auto$builder.cc:338:Biop$2643 ;
  wire \$auto$builder.cc:338:Biop$2645 ;
  wire \$auto$builder.cc:338:Biop$2647 ;
  wire \$auto$builder.cc:338:Biop$2649 ;
  wire \$auto$builder.cc:338:Biop$2689 ;
  wire \$auto$builder.cc:338:Biop$2707 ;
  wire \$auto$builder.cc:338:Biop$2709 ;
  wire \$auto$builder.cc:364:Unop$2635 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2637 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2651 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$2691 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2712 ;
  wire \$auto$rtlil.cc:2747:LogicNot$2714 ;
  wire [73:0] \$auto$rtlil.cc:2786:And$17111 ;
  wire \$auto$rtlil.cc:2791:Lt$2653 ;
  wire \$auto$rtlil.cc:2791:Lt$2663 ;
  wire \$auto$rtlil.cc:2791:Lt$2673 ;
  wire \$auto$rtlil.cc:2791:Lt$2681 ;
  wire \$auto$rtlil.cc:2791:Lt$2685 ;
  wire \$auto$rtlil.cc:2791:Lt$2695 ;
  wire \$auto$rtlil.cc:2791:Lt$2699 ;
  wire \$auto$rtlil.cc:2791:Lt$2703 ;
  wire \$auto$rtlil.cc:2797:Ge$2655 ;
  wire \$auto$rtlil.cc:2797:Ge$2665 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$2657 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$2667 ;
  wire [73:0] \$auto$rtlil.cc:2874:Mux$2659 ;
  wire [73:0] \$auto$rtlil.cc:2874:Mux$2669 ;
  wire [38:0] \$auto$rtlil.cc:2874:Mux$2675 ;
  wire [73:0] \$auto$rtlil.cc:2874:Mux$2683 ;
  wire [38:0] \$auto$rtlil.cc:2874:Mux$2687 ;
  wire [38:0] \$auto$rtlil.cc:2874:Mux$2697 ;
  wire [38:0] \$auto$rtlil.cc:2874:Mux$2701 ;
  wire [38:0] \$auto$rtlil.cc:2874:Mux$2705 ;
  wire [73:0] \$auto$rtlil.cc:2875:Bwmux$2661 ;
  wire [73:0] \$auto$rtlil.cc:2875:Bwmux$2671 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$2632 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$2633 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$2631 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$auto$slang_frontend.cc:694:finish$\cnt_up$2692 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [73:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2676 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [73:0] \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2678 ;
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2677 ;
  /* src = "../rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2679 ;
  /* src = "../rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$auto$slang_frontend.cc:694:finish$\select_d$2693 ;
  wire \$procmux$15279_Y ;
  wire \$procmux$15280_CMP ;
  wire \$procmux$15282_Y ;
  wire \$procmux$15283_CMP ;
  wire \$procmux$15285_Y ;
  wire \$procmux$15286_CMP ;
  wire \$procmux$15287_Y ;
  wire \$procmux$15288_CMP ;
  wire [73:0] \$procmux$15289_Y ;
  wire \$procmux$15290_CMP ;
  wire [73:0] \$procmux$15291_Y ;
  wire \$procmux$15292_CMP ;
  wire \$procmux$15294_Y ;
  wire \$procmux$15295_CMP ;
  wire [73:0] \$procmux$15297_Y ;
  wire \$procmux$15298_CMP ;
  /* src = "../rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "../rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "../rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "../rtl/obi/obi_demux.sv:28.38" */
  output [73:0] mgr_ports_req_o;
  wire [73:0] mgr_ports_req_o;
  /* src = "../rtl/obi/obi_demux.sv:29.38" */
  input [38:0] mgr_ports_rsp_i;
  wire [38:0] mgr_ports_rsp_i;
  /* src = "../rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "../rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "../rtl/obi/obi_demux.sv:25.38" */
  input [73:0] sbr_port_req_i;
  wire [73:0] sbr_port_req_i;
  /* src = "../rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "../rtl/obi/obi_demux.sv:26.38" */
  output [38:0] sbr_port_rsp_o;
  wire [38:0] sbr_port_rsp_o;
  /* src = "../rtl/obi/obi_demux.sv:24.38" */
  input sbr_port_select_i;
  wire sbr_port_select_i;
  /* src = "../rtl/obi/obi_demux.sv:44.12" */
  wire select_d;
  /* src = "../rtl/obi/obi_demux.sv:44.22" */
  wire select_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2711  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$2712 )
  );
  \$mux  #(
    .WIDTH(32'd74)
  ) \$auto$builder.cc:112:Mux$2658  (
    .A(74'h0000000000000000000),
    .B(74'h0000000000000000001),
    .S(\$auto$rtlil.cc:2806:LogicAnd$2657 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2659 )
  );
  \$mux  #(
    .WIDTH(32'd74)
  ) \$auto$builder.cc:112:Mux$2668  (
    .A(74'h0000000000000000000),
    .B(74'h3fffffffffffffffffe),
    .S(\$auto$rtlil.cc:2806:LogicAnd$2667 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2669 )
  );
  \$mux  #(
    .WIDTH(32'd39)
  ) \$auto$builder.cc:112:Mux$2674  (
    .A(39'hxxxxxxxxxx),
    .B(mgr_ports_rsp_i),
    .S(\$auto$rtlil.cc:2791:Lt$2673 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2675 )
  );
  \$mux  #(
    .WIDTH(32'd74)
  ) \$auto$builder.cc:112:Mux$2682  (
    .A(74'hxxxxxxxxxxxxxxxxxxx),
    .B(\$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2678 ),
    .S(\$auto$rtlil.cc:2791:Lt$2681 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2683 )
  );
  \$mux  #(
    .WIDTH(32'd39)
  ) \$auto$builder.cc:112:Mux$2686  (
    .A(39'hxxxxxxxxxx),
    .B(mgr_ports_rsp_i),
    .S(\$auto$rtlil.cc:2791:Lt$2685 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2687 )
  );
  \$mux  #(
    .WIDTH(32'd39)
  ) \$auto$builder.cc:112:Mux$2696  (
    .A(39'hxxxxxxxxxx),
    .B(mgr_ports_rsp_i),
    .S(\$auto$rtlil.cc:2791:Lt$2695 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2697 )
  );
  \$mux  #(
    .WIDTH(32'd39)
  ) \$auto$builder.cc:112:Mux$2700  (
    .A(39'hxxxxxxxxxx),
    .B(mgr_ports_rsp_i),
    .S(\$auto$rtlil.cc:2791:Lt$2699 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2701 )
  );
  \$mux  #(
    .WIDTH(32'd39)
  ) \$auto$builder.cc:112:Mux$2704  (
    .A(39'hxxxxxxxxxx),
    .B(mgr_ports_rsp_i),
    .S(\$auto$rtlil.cc:2791:Lt$2703 ),
    .Y(\$auto$rtlil.cc:2874:Mux$2705 )
  );
  \$bwmux  #(
    .WIDTH(32'd74)
  ) \$auto$builder.cc:128:Bwmux$2670  (
    .A(\$auto$rtlil.cc:2875:Bwmux$2661 ),
    .B({ sbr_port_req_i[73:1], 1'hx }),
    .S(\$auto$rtlil.cc:2874:Mux$2669 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$2671 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2638  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$auto$builder.cc:338:Biop$2639 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2640  (
    .A(in_flight),
    .Y(\$auto$builder.cc:338:Biop$2641 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2642  (
    .A(\$auto$builder.cc:338:Biop$2639 ),
    .B(\$auto$builder.cc:338:Biop$2641 ),
    .Y(\$auto$builder.cc:338:Biop$2643 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2646  (
    .A(\$auto$builder.cc:338:Biop$2645 ),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$2647 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2648  (
    .A(\$auto$builder.cc:338:Biop$2643 ),
    .B(\$auto$builder.cc:338:Biop$2647 ),
    .Y(\$auto$builder.cc:338:Biop$2649 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2688  (
    .A(\$auto$rtlil.cc:2874:Mux$2683 [0]),
    .B(\$auto$rtlil.cc:2874:Mux$2687 [1]),
    .Y(\$auto$builder.cc:338:Biop$2689 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2708  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$auto$builder.cc:338:Biop$2709 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2634  (
    .A(overflow),
    .Y(\$auto$builder.cc:364:Unop$2635 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$2654  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$2655 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$2664  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$2665 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2652  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$2653 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2662  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$2663 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2672  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$2673 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2680  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$2681 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2684  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$2685 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2694  (
    .A({ 1'h0, select_q }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$2695 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2698  (
    .A({ 1'h0, select_q }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$2699 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$2702  (
    .A({ 1'h0, select_q }),
    .B(2'h1),
    .Y(\$auto$rtlil.cc:2791:Lt$2703 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$2656  (
    .A(\$auto$rtlil.cc:2797:Ge$2655 ),
    .B(\$auto$rtlil.cc:2791:Lt$2653 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$2657 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$2666  (
    .A(\$auto$rtlil.cc:2797:Ge$2665 ),
    .B(\$auto$rtlil.cc:2791:Lt$2663 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$2667 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd74),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd74),
    .Y_WIDTH(32'd74)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17110  (
    .A({ 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$auto$rtlil.cc:2874:Mux$2659 ),
    .Y(\$auto$rtlil.cc:2786:And$17111 )
  );
  /* src = "../rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$select_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15279  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$15280_CMP ),
    .Y(\$procmux$15279_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:63.91-66.8|../rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15282  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$15283_CMP ),
    .Y(\$procmux$15282_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15285  (
    .A(1'h0),
    .B(\$auto$rtlil.cc:2874:Mux$2675 [1]),
    .S(\$procmux$15286_CMP ),
    .Y(\$procmux$15285_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15287  (
    .A(\$procmux$15285_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$15287_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.93-60.10|../rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd74)
  ) \$procmux$15289  (
    .A(74'h0000000000000000000),
    .B(\$auto$rtlil.cc:2875:Bwmux$2671 ),
    .S(\$procmux$15290_CMP ),
    .Y(\$procmux$15289_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd74)
  ) \$procmux$15291  (
    .A(\$procmux$15289_Y ),
    .B(74'hxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$15291_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15294  (
    .A(\$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2677 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$15294_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:56.7-60.10|../rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd74)
  ) \$procmux$15297  (
    .A(\$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2676 ),
    .B(74'h0000000000000000000),
    .S(overflow),
    .Y(\$procmux$15297_Y )
  );
  /* src = "../rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_user.i_obi_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$auto$builder.cc:338:Biop$2709 ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign mgr_ports_req_o = \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2678 ;
  assign cnt_up = \$auto$slang_frontend.cc:694:finish$\cnt_up$2692 ;
  assign sbr_port_gnt = \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2679 ;
  assign select_d = \$auto$slang_frontend.cc:694:finish$\select_d$2693 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[38:2] = \$auto$rtlil.cc:2874:Mux$2697 [38:2];
  assign sbr_port_rsp_o[0] = \$auto$rtlil.cc:2874:Mux$2701 [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$auto$builder.cc:338:Biop$2707 ;
  assign \$procmux$15280_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2691 ;
  assign \$auto$slang_frontend.cc:694:finish$\select_d$2693  = \$procmux$15279_Y ;
  assign \$procmux$15283_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2691 ;
  assign \$auto$slang_frontend.cc:694:finish$\cnt_up$2692  = \$procmux$15282_Y ;
  assign \$procmux$15286_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2651 ;
  assign \$procmux$15288_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2637 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2677  = \$procmux$15287_Y ;
  assign \$procmux$15290_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2651 ;
  assign \$procmux$15292_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2637 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2676  = \$procmux$15291_Y ;
  assign \$procmux$15295_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2637 ;
  assign \$auto$slang_frontend.cc:694:finish$\sbr_port_gnt$2679  = \$procmux$15294_Y ;
  assign \$procmux$15298_CMP  = \$auto$rtlil.cc:2746:ReduceBool$2637 ;
  assign \$auto$slang_frontend.cc:694:finish$\mgr_ports_req_o$2678  = \$procmux$15297_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2637  = \$auto$builder.cc:364:Unop$2635 ;
  assign \$auto$builder.cc:338:Biop$2645  = in_flight;
  assign \$auto$builder.cc:338:Biop$2707  = \$auto$rtlil.cc:2874:Mux$2705 [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$2651  = \$auto$builder.cc:338:Biop$2649 ;
  assign \$auto$rtlil.cc:2875:Bwmux$2661  = \$auto$rtlil.cc:2786:And$17111 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$2691  = \$auto$builder.cc:338:Biop$2689 ;
  assign \$auto$rtlil.cc:2747:LogicNot$2714  = rst_ni;
endmodule

/* src = "../rtl/obi/obi_err_sbr.sv:7.8" */
module \obi_err_sbr$croc_chip.i_croc_soc.i_croc.i_periph_err (clk_i, rst_ni, testmode_i, obi_req_i, obi_rsp_o);
  wire \$auto$builder.cc:338:Biop$1144 ;
  wire \$auto$builder.cc:364:Unop$1140 ;
  wire \$auto$builder.cc:364:Unop$1142 ;
  /* src = "../rtl/obi/obi_err_sbr.sv:19.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_err_sbr.sv:28.20" */
  wire fifo_empty;
  /* src = "../rtl/obi/obi_err_sbr.sv:28.9" */
  wire fifo_full;
  /* src = "../rtl/obi/obi_err_sbr.sv:28.32" */
  wire fifo_pop;
  /* src = "../rtl/obi/obi_err_sbr.sv:23.20" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "../rtl/obi/obi_err_sbr.sv:24.20" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "../rtl/obi/obi_err_sbr.sv:27.30" */
  wire [2:0] rid;
  /* src = "../rtl/obi/obi_err_sbr.sv:20.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_err_sbr.sv:21.16" */
  input testmode_i;
  wire testmode_i;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1143  (
    .A(obi_req_i[0]),
    .B(obi_rsp_o[1]),
    .Y(\$auto$builder.cc:338:Biop$1144 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1139  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$1140 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1141  (
    .A(fifo_empty),
    .Y(\$auto$builder.cc:364:Unop$1142 )
  );
  /* src = "../rtl/obi/obi_err_sbr.sv:50.5" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_periph_err.i_id_fifo  i_id_fifo (
    .clk_i(clk_i),
    .data_i(obi_req_i[4:2]),
    .data_o(rid),
    .empty_o(fifo_empty),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$auto$builder.cc:338:Biop$1144 ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  assign obi_rsp_o = { 32'hbadcab1e, rid, 2'h2, \$auto$builder.cc:364:Unop$1140 , \$auto$builder.cc:364:Unop$1142  };
  assign fifo_pop = obi_rsp_o[0];
endmodule

/* src = "../rtl/obi/obi_err_sbr.sv:7.8" */
module \obi_err_sbr$croc_chip.i_croc_soc.i_croc.i_xbar_err (clk_i, rst_ni, testmode_i, obi_req_i, obi_rsp_o);
  wire \$auto$builder.cc:338:Biop$1027 ;
  wire \$auto$builder.cc:364:Unop$1023 ;
  wire \$auto$builder.cc:364:Unop$1025 ;
  /* src = "../rtl/obi/obi_err_sbr.sv:19.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_err_sbr.sv:28.20" */
  wire fifo_empty;
  /* src = "../rtl/obi/obi_err_sbr.sv:28.9" */
  wire fifo_full;
  /* src = "../rtl/obi/obi_err_sbr.sv:28.32" */
  wire fifo_pop;
  /* src = "../rtl/obi/obi_err_sbr.sv:23.20" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "../rtl/obi/obi_err_sbr.sv:24.20" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "../rtl/obi/obi_err_sbr.sv:27.30" */
  wire [2:0] rid;
  /* src = "../rtl/obi/obi_err_sbr.sv:20.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_err_sbr.sv:21.16" */
  input testmode_i;
  wire testmode_i;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1026  (
    .A(obi_req_i[0]),
    .B(obi_rsp_o[1]),
    .Y(\$auto$builder.cc:338:Biop$1027 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1022  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$1023 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1024  (
    .A(fifo_empty),
    .Y(\$auto$builder.cc:364:Unop$1025 )
  );
  /* src = "../rtl/obi/obi_err_sbr.sv:50.5" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_xbar_err.i_id_fifo  i_id_fifo (
    .clk_i(clk_i),
    .data_i(obi_req_i[4:2]),
    .data_o(rid),
    .empty_o(fifo_empty),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$auto$builder.cc:338:Biop$1027 ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  assign obi_rsp_o = { 32'hbadcab1e, rid, 2'h2, \$auto$builder.cc:364:Unop$1023 , \$auto$builder.cc:364:Unop$1025  };
  assign fifo_pop = obi_rsp_o[0];
endmodule

/* src = "../rtl/obi/obi_err_sbr.sv:7.8" */
module \obi_err_sbr$croc_chip.i_croc_soc.i_user.i_user_err (clk_i, rst_ni, testmode_i, obi_req_i, obi_rsp_o);
  wire \$auto$builder.cc:338:Biop$2721 ;
  wire \$auto$builder.cc:364:Unop$2717 ;
  wire \$auto$builder.cc:364:Unop$2719 ;
  /* src = "../rtl/obi/obi_err_sbr.sv:19.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_err_sbr.sv:28.20" */
  wire fifo_empty;
  /* src = "../rtl/obi/obi_err_sbr.sv:28.9" */
  wire fifo_full;
  /* src = "../rtl/obi/obi_err_sbr.sv:28.32" */
  wire fifo_pop;
  /* src = "../rtl/obi/obi_err_sbr.sv:23.20" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "../rtl/obi/obi_err_sbr.sv:24.20" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "../rtl/obi/obi_err_sbr.sv:27.30" */
  wire [2:0] rid;
  /* src = "../rtl/obi/obi_err_sbr.sv:20.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_err_sbr.sv:21.16" */
  input testmode_i;
  wire testmode_i;
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$2720  (
    .A(obi_req_i[0]),
    .B(obi_rsp_o[1]),
    .Y(\$auto$builder.cc:338:Biop$2721 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2716  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$2717 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$2718  (
    .A(fifo_empty),
    .Y(\$auto$builder.cc:364:Unop$2719 )
  );
  /* src = "../rtl/obi/obi_err_sbr.sv:50.5" */
  \fifo_v3$croc_chip.i_croc_soc.i_user.i_user_err.i_id_fifo  i_id_fifo (
    .clk_i(clk_i),
    .data_i(obi_req_i[4:2]),
    .data_o(rid),
    .empty_o(fifo_empty),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$auto$builder.cc:338:Biop$2721 ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  assign obi_rsp_o = { 32'hbadcab1e, rid, 2'h2, \$auto$builder.cc:364:Unop$2717 , \$auto$builder.cc:364:Unop$2719  };
  assign fifo_pop = obi_rsp_o[0];
endmodule

/* src = "../rtl/obi/obi_mux.sv:10.8" */
module \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_port_req_o, mgr_port_rsp_i);
  wire \$auto$builder.cc:338:Biop$3313 ;
  wire \$auto$builder.cc:338:Biop$3317 ;
  wire \$auto$builder.cc:338:Biop$3320 ;
  wire \$auto$builder.cc:364:Unop$3311 ;
  wire \$auto$builder.cc:364:Unop$3315 ;
  wire [139:0] \$auto$rtlil.cc:2786:And$17099 ;
  wire [3:0] \$auto$rtlil.cc:2786:And$17101 ;
  wire \$auto$rtlil.cc:2791:Lt$3329 ;
  wire \$auto$rtlil.cc:2791:Lt$3343 ;
  wire \$auto$rtlil.cc:2791:Lt$3357 ;
  wire \$auto$rtlil.cc:2791:Lt$3371 ;
  wire \$auto$rtlil.cc:2791:Lt$3385 ;
  wire \$auto$rtlil.cc:2797:Ge$3331 ;
  wire \$auto$rtlil.cc:2797:Ge$3345 ;
  wire \$auto$rtlil.cc:2797:Ge$3359 ;
  wire \$auto$rtlil.cc:2797:Ge$3373 ;
  wire \$auto$rtlil.cc:2797:Ge$3387 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3333 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3347 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3361 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3375 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3389 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3335 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3349 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3363 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3377 ;
  wire \$auto$rtlil.cc:2874:Mux$3391 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3341 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3355 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3369 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3383 ;
  wire [3:0] \$auto$rtlil.cc:2875:Bwmux$3397 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3337 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3339 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3351 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3353 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3365 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3367 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3379 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3381 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$3393 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$3395 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$3323 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3324 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3325 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3326 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3327 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$3322 ;
  /* src = "../rtl/obi/obi_mux.sv:34.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_mux.sv:60.23" */
  wire fifo_full;
  /* src = "../rtl/obi/obi_mux.sv:60.34" */
  wire fifo_pop;
  /* src = "../rtl/obi/obi_mux.sv:58.21" */
  wire [70:0] mgr_port_a_in_sbr;
  /* src = "../rtl/obi/obi_mux.sv:60.9" */
  wire mgr_port_req;
  /* src = "../rtl/obi/obi_mux.sv:41.47" */
  output [73:0] mgr_port_req_o;
  wire [73:0] mgr_port_req_o;
  /* src = "../rtl/obi/obi_mux.sv:42.47" */
  input [38:0] mgr_port_rsp_i;
  wire [38:0] mgr_port_rsp_i;
  /* src = "../rtl/obi/obi_mux.sv:59.49" */
  wire [1:0] response_id;
  /* src = "../rtl/obi/obi_mux.sv:102.37" */
  wire rsp_rid;
  /* src = "../rtl/obi/obi_mux.sv:35.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_mux.sv:51.39" */
  wire [283:0] sbr_ports_a;
  /* src = "../rtl/obi/obi_mux.sv:50.42" */
  wire [3:0] sbr_ports_gnt;
  /* src = "../rtl/obi/obi_mux.sv:50.27" */
  wire [3:0] sbr_ports_req;
  /* src = "../rtl/obi/obi_mux.sv:38.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "../rtl/obi/obi_mux.sv:39.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "../rtl/obi/obi_mux.sv:141.39" */
  wire [139:0] sbr_rsp_r;
  /* src = "../rtl/obi/obi_mux.sv:140.27" */
  wire [3:0] sbr_rsp_rvalid;
  /* src = "../rtl/obi/obi_mux.sv:59.36" */
  wire [1:0] selected_id;
  /* src = "../rtl/obi/obi_mux.sv:36.16" */
  input testmode_i;
  wire testmode_i;
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3334  (
    .A(35'h000000000),
    .B(35'h7fffffff8),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3333 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3335 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3348  (
    .A(35'h000000000),
    .B(35'h000000004),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3347 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3349 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3362  (
    .A(35'h000000000),
    .B(35'h000000002),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3361 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3363 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3376  (
    .A(35'h000000000),
    .B(35'h000000001),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3375 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3377 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$builder.cc:112:Mux$3390  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3389 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3391 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3354  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3341 ),
    .B({ 32'hxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 2'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3353 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3355 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3368  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3355 ),
    .B({ 33'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 1'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3367 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3369 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3382  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3369 ),
    .B({ 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2] }),
    .S(\$auto$rtlil.cc:2896:Demux$3381 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3383 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3312  (
    .A(mgr_port_rsp_i[1]),
    .B(\$auto$builder.cc:364:Unop$3311 ),
    .Y(\$auto$builder.cc:338:Biop$3313 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3316  (
    .A(mgr_port_req),
    .B(\$auto$builder.cc:364:Unop$3315 ),
    .Y(\$auto$builder.cc:338:Biop$3317 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3319  (
    .A(mgr_port_req_o[0]),
    .B(mgr_port_rsp_i[1]),
    .Y(\$auto$builder.cc:338:Biop$3320 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3310  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$3311 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3314  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$3315 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3336  (
    .A(\$auto$rtlil.cc:2874:Mux$3335 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3337 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3338  (
    .A(\$auto$rtlil.cc:2874:Mux$3335 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3339 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3350  (
    .A(\$auto$rtlil.cc:2874:Mux$3349 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3351 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3352  (
    .A(\$auto$rtlil.cc:2874:Mux$3349 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3353 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3364  (
    .A(\$auto$rtlil.cc:2874:Mux$3363 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3365 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3366  (
    .A(\$auto$rtlil.cc:2874:Mux$3363 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3367 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3378  (
    .A(\$auto$rtlil.cc:2874:Mux$3377 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3379 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3380  (
    .A(\$auto$rtlil.cc:2874:Mux$3377 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3381 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$3392  (
    .A(\$auto$rtlil.cc:2874:Mux$3391 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3393 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$3394  (
    .A(\$auto$rtlil.cc:2874:Mux$3391 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3395 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3330  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3331 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3344  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3345 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3358  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3359 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3372  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3373 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3386  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3387 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3328  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3329 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3342  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3343 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3356  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3357 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3370  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3371 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3384  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3385 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3332  (
    .A(\$auto$rtlil.cc:2797:Ge$3331 ),
    .B(\$auto$rtlil.cc:2791:Lt$3329 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3333 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3346  (
    .A(\$auto$rtlil.cc:2797:Ge$3345 ),
    .B(\$auto$rtlil.cc:2791:Lt$3343 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3347 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3360  (
    .A(\$auto$rtlil.cc:2797:Ge$3359 ),
    .B(\$auto$rtlil.cc:2791:Lt$3357 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3361 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3374  (
    .A(\$auto$rtlil.cc:2797:Ge$3373 ),
    .B(\$auto$rtlil.cc:2791:Lt$3371 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3375 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3388  (
    .A(\$auto$rtlil.cc:2797:Ge$3387 ),
    .B(\$auto$rtlil.cc:2791:Lt$3385 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3389 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd140),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd140),
    .Y_WIDTH(32'd140)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17098  (
    .A({ mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx }),
    .B(\$auto$rtlil.cc:2896:Demux$3339 ),
    .Y(\$auto$rtlil.cc:2786:And$17099 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17100  (
    .A({ mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0] }),
    .B(\$auto$rtlil.cc:2896:Demux$3395 ),
    .Y(\$auto$rtlil.cc:2786:And$17101 )
  );
  /* src = "../rtl/obi/obi_mux.sv:119.7" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.gen_no_id_assign.i_fifo  \gen_no_id_assign.i_fifo  (
    .clk_i(clk_i),
    .data_i(selected_id),
    .data_o(response_id),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$auto$builder.cc:338:Biop$3320 ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* src = "../rtl/obi/obi_mux.sv:67.5" */
  \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb  i_rr_arb (
    .clk_i(clk_i),
    .data_i(sbr_ports_a),
    .data_o(mgr_port_a_in_sbr),
    .flush_i(1'h0),
    .gnt_i(\$auto$builder.cc:338:Biop$3313 ),
    .gnt_o(sbr_ports_gnt),
    .idx_o(selected_id),
    .req_i(sbr_ports_req),
    .req_o(mgr_port_req),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign sbr_ports_req[0] = sbr_ports_req_i[0];
  assign sbr_ports_a[70:0] = sbr_ports_req_i[71:1];
  assign sbr_ports_rsp_o[1] = sbr_ports_gnt[0];
  assign sbr_ports_req[1] = sbr_ports_req_i[72];
  assign sbr_ports_a[141:71] = sbr_ports_req_i[143:73];
  assign sbr_ports_rsp_o[38] = sbr_ports_gnt[1];
  assign sbr_ports_req[2] = sbr_ports_req_i[144];
  assign sbr_ports_a[212:142] = sbr_ports_req_i[215:145];
  assign sbr_ports_rsp_o[75] = sbr_ports_gnt[2];
  assign sbr_ports_req[3] = sbr_ports_req_i[216];
  assign sbr_ports_a[283:213] = sbr_ports_req_i[287:217];
  assign sbr_ports_rsp_o[112] = sbr_ports_gnt[3];
  assign mgr_port_req_o[0] = \$auto$builder.cc:338:Biop$3317 ;
  assign mgr_port_req_o[73:1] = { mgr_port_a_in_sbr[70:2], selected_id, mgr_port_a_in_sbr[1:0] };
  assign sbr_rsp_rvalid = \$auto$rtlil.cc:2875:Bwmux$3397 ;
  assign sbr_rsp_r = \$auto$rtlil.cc:2875:Bwmux$3383 ;
  assign sbr_ports_rsp_o[36:2] = sbr_rsp_r[34:0];
  assign sbr_ports_rsp_o[0] = sbr_rsp_rvalid[0];
  assign sbr_ports_rsp_o[73:39] = sbr_rsp_r[69:35];
  assign sbr_ports_rsp_o[37] = sbr_rsp_rvalid[1];
  assign sbr_ports_rsp_o[110:76] = sbr_rsp_r[104:70];
  assign sbr_ports_rsp_o[74] = sbr_rsp_rvalid[2];
  assign sbr_ports_rsp_o[147:113] = sbr_rsp_r[139:105];
  assign sbr_ports_rsp_o[111] = sbr_rsp_rvalid[3];
  assign fifo_pop = mgr_port_rsp_i[0];
  assign \$auto$rtlil.cc:2875:Bwmux$3341  = \$auto$rtlil.cc:2786:And$17099 ;
  assign \$auto$rtlil.cc:2875:Bwmux$3397  = \$auto$rtlil.cc:2786:And$17101 ;
endmodule

/* src = "../rtl/obi/obi_mux.sv:10.8" */
module \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_port_req_o, mgr_port_rsp_i);
  wire \$auto$builder.cc:338:Biop$3401 ;
  wire \$auto$builder.cc:338:Biop$3405 ;
  wire \$auto$builder.cc:338:Biop$3408 ;
  wire \$auto$builder.cc:364:Unop$3399 ;
  wire \$auto$builder.cc:364:Unop$3403 ;
  wire [139:0] \$auto$rtlil.cc:2786:And$17095 ;
  wire [3:0] \$auto$rtlil.cc:2786:And$17097 ;
  wire \$auto$rtlil.cc:2791:Lt$3417 ;
  wire \$auto$rtlil.cc:2791:Lt$3431 ;
  wire \$auto$rtlil.cc:2791:Lt$3445 ;
  wire \$auto$rtlil.cc:2791:Lt$3459 ;
  wire \$auto$rtlil.cc:2791:Lt$3473 ;
  wire \$auto$rtlil.cc:2797:Ge$3419 ;
  wire \$auto$rtlil.cc:2797:Ge$3433 ;
  wire \$auto$rtlil.cc:2797:Ge$3447 ;
  wire \$auto$rtlil.cc:2797:Ge$3461 ;
  wire \$auto$rtlil.cc:2797:Ge$3475 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3421 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3435 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3449 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3463 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3477 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3423 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3437 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3451 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3465 ;
  wire \$auto$rtlil.cc:2874:Mux$3479 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3429 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3443 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3457 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3471 ;
  wire [3:0] \$auto$rtlil.cc:2875:Bwmux$3485 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3425 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3427 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3439 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3441 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3453 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3455 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3467 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3469 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$3481 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$3483 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$3411 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3412 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3413 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3414 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3415 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$3410 ;
  /* src = "../rtl/obi/obi_mux.sv:34.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_mux.sv:60.23" */
  wire fifo_full;
  /* src = "../rtl/obi/obi_mux.sv:60.34" */
  wire fifo_pop;
  /* src = "../rtl/obi/obi_mux.sv:58.21" */
  wire [70:0] mgr_port_a_in_sbr;
  /* src = "../rtl/obi/obi_mux.sv:60.9" */
  wire mgr_port_req;
  /* src = "../rtl/obi/obi_mux.sv:41.47" */
  output [73:0] mgr_port_req_o;
  wire [73:0] mgr_port_req_o;
  /* src = "../rtl/obi/obi_mux.sv:42.47" */
  input [38:0] mgr_port_rsp_i;
  wire [38:0] mgr_port_rsp_i;
  /* src = "../rtl/obi/obi_mux.sv:59.49" */
  wire [1:0] response_id;
  /* src = "../rtl/obi/obi_mux.sv:102.37" */
  wire rsp_rid;
  /* src = "../rtl/obi/obi_mux.sv:35.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_mux.sv:51.39" */
  wire [283:0] sbr_ports_a;
  /* src = "../rtl/obi/obi_mux.sv:50.42" */
  wire [3:0] sbr_ports_gnt;
  /* src = "../rtl/obi/obi_mux.sv:50.27" */
  wire [3:0] sbr_ports_req;
  /* src = "../rtl/obi/obi_mux.sv:38.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "../rtl/obi/obi_mux.sv:39.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "../rtl/obi/obi_mux.sv:141.39" */
  wire [139:0] sbr_rsp_r;
  /* src = "../rtl/obi/obi_mux.sv:140.27" */
  wire [3:0] sbr_rsp_rvalid;
  /* src = "../rtl/obi/obi_mux.sv:59.36" */
  wire [1:0] selected_id;
  /* src = "../rtl/obi/obi_mux.sv:36.16" */
  input testmode_i;
  wire testmode_i;
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3422  (
    .A(35'h000000000),
    .B(35'h7fffffff8),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3421 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3423 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3436  (
    .A(35'h000000000),
    .B(35'h000000004),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3435 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3437 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3450  (
    .A(35'h000000000),
    .B(35'h000000002),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3449 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3451 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3464  (
    .A(35'h000000000),
    .B(35'h000000001),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3463 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3465 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$builder.cc:112:Mux$3478  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3477 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3479 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3442  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3429 ),
    .B({ 32'hxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 2'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3441 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3443 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3456  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3443 ),
    .B({ 33'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 1'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3455 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3457 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3470  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3457 ),
    .B({ 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2] }),
    .S(\$auto$rtlil.cc:2896:Demux$3469 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3471 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3400  (
    .A(mgr_port_rsp_i[1]),
    .B(\$auto$builder.cc:364:Unop$3399 ),
    .Y(\$auto$builder.cc:338:Biop$3401 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3404  (
    .A(mgr_port_req),
    .B(\$auto$builder.cc:364:Unop$3403 ),
    .Y(\$auto$builder.cc:338:Biop$3405 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3407  (
    .A(mgr_port_req_o[0]),
    .B(mgr_port_rsp_i[1]),
    .Y(\$auto$builder.cc:338:Biop$3408 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3398  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$3399 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3402  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$3403 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3424  (
    .A(\$auto$rtlil.cc:2874:Mux$3423 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3425 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3426  (
    .A(\$auto$rtlil.cc:2874:Mux$3423 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3427 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3438  (
    .A(\$auto$rtlil.cc:2874:Mux$3437 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3439 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3440  (
    .A(\$auto$rtlil.cc:2874:Mux$3437 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3441 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3452  (
    .A(\$auto$rtlil.cc:2874:Mux$3451 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3453 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3454  (
    .A(\$auto$rtlil.cc:2874:Mux$3451 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3455 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3466  (
    .A(\$auto$rtlil.cc:2874:Mux$3465 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3467 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3468  (
    .A(\$auto$rtlil.cc:2874:Mux$3465 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3469 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$3480  (
    .A(\$auto$rtlil.cc:2874:Mux$3479 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3481 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$3482  (
    .A(\$auto$rtlil.cc:2874:Mux$3479 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3483 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3418  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3419 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3432  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3433 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3446  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3447 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3460  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3461 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3474  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3475 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3416  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3417 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3430  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3431 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3444  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3445 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3458  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3459 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3472  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3473 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3420  (
    .A(\$auto$rtlil.cc:2797:Ge$3419 ),
    .B(\$auto$rtlil.cc:2791:Lt$3417 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3421 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3434  (
    .A(\$auto$rtlil.cc:2797:Ge$3433 ),
    .B(\$auto$rtlil.cc:2791:Lt$3431 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3435 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3448  (
    .A(\$auto$rtlil.cc:2797:Ge$3447 ),
    .B(\$auto$rtlil.cc:2791:Lt$3445 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3449 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3462  (
    .A(\$auto$rtlil.cc:2797:Ge$3461 ),
    .B(\$auto$rtlil.cc:2791:Lt$3459 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3463 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3476  (
    .A(\$auto$rtlil.cc:2797:Ge$3475 ),
    .B(\$auto$rtlil.cc:2791:Lt$3473 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3477 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd140),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd140),
    .Y_WIDTH(32'd140)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17094  (
    .A({ mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx }),
    .B(\$auto$rtlil.cc:2896:Demux$3427 ),
    .Y(\$auto$rtlil.cc:2786:And$17095 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17096  (
    .A({ mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0] }),
    .B(\$auto$rtlil.cc:2896:Demux$3483 ),
    .Y(\$auto$rtlil.cc:2786:And$17097 )
  );
  /* src = "../rtl/obi/obi_mux.sv:119.7" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.gen_no_id_assign.i_fifo  \gen_no_id_assign.i_fifo  (
    .clk_i(clk_i),
    .data_i(selected_id),
    .data_o(response_id),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$auto$builder.cc:338:Biop$3408 ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* src = "../rtl/obi/obi_mux.sv:67.5" */
  \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb  i_rr_arb (
    .clk_i(clk_i),
    .data_i(sbr_ports_a),
    .data_o(mgr_port_a_in_sbr),
    .flush_i(1'h0),
    .gnt_i(\$auto$builder.cc:338:Biop$3401 ),
    .gnt_o(sbr_ports_gnt),
    .idx_o(selected_id),
    .req_i(sbr_ports_req),
    .req_o(mgr_port_req),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign sbr_ports_req[0] = sbr_ports_req_i[0];
  assign sbr_ports_a[70:0] = sbr_ports_req_i[71:1];
  assign sbr_ports_rsp_o[1] = sbr_ports_gnt[0];
  assign sbr_ports_req[1] = sbr_ports_req_i[72];
  assign sbr_ports_a[141:71] = sbr_ports_req_i[143:73];
  assign sbr_ports_rsp_o[38] = sbr_ports_gnt[1];
  assign sbr_ports_req[2] = sbr_ports_req_i[144];
  assign sbr_ports_a[212:142] = sbr_ports_req_i[215:145];
  assign sbr_ports_rsp_o[75] = sbr_ports_gnt[2];
  assign sbr_ports_req[3] = sbr_ports_req_i[216];
  assign sbr_ports_a[283:213] = sbr_ports_req_i[287:217];
  assign sbr_ports_rsp_o[112] = sbr_ports_gnt[3];
  assign mgr_port_req_o[0] = \$auto$builder.cc:338:Biop$3405 ;
  assign mgr_port_req_o[73:1] = { mgr_port_a_in_sbr[70:2], selected_id, mgr_port_a_in_sbr[1:0] };
  assign sbr_rsp_rvalid = \$auto$rtlil.cc:2875:Bwmux$3485 ;
  assign sbr_rsp_r = \$auto$rtlil.cc:2875:Bwmux$3471 ;
  assign sbr_ports_rsp_o[36:2] = sbr_rsp_r[34:0];
  assign sbr_ports_rsp_o[0] = sbr_rsp_rvalid[0];
  assign sbr_ports_rsp_o[73:39] = sbr_rsp_r[69:35];
  assign sbr_ports_rsp_o[37] = sbr_rsp_rvalid[1];
  assign sbr_ports_rsp_o[110:76] = sbr_rsp_r[104:70];
  assign sbr_ports_rsp_o[74] = sbr_rsp_rvalid[2];
  assign sbr_ports_rsp_o[147:113] = sbr_rsp_r[139:105];
  assign sbr_ports_rsp_o[111] = sbr_rsp_rvalid[3];
  assign fifo_pop = mgr_port_rsp_i[0];
  assign \$auto$rtlil.cc:2875:Bwmux$3429  = \$auto$rtlil.cc:2786:And$17095 ;
  assign \$auto$rtlil.cc:2875:Bwmux$3485  = \$auto$rtlil.cc:2786:And$17097 ;
endmodule

/* src = "../rtl/obi/obi_mux.sv:10.8" */
module \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_port_req_o, mgr_port_rsp_i);
  wire \$auto$builder.cc:338:Biop$3489 ;
  wire \$auto$builder.cc:338:Biop$3493 ;
  wire \$auto$builder.cc:338:Biop$3496 ;
  wire \$auto$builder.cc:364:Unop$3487 ;
  wire \$auto$builder.cc:364:Unop$3491 ;
  wire [139:0] \$auto$rtlil.cc:2786:And$17091 ;
  wire [3:0] \$auto$rtlil.cc:2786:And$17093 ;
  wire \$auto$rtlil.cc:2791:Lt$3505 ;
  wire \$auto$rtlil.cc:2791:Lt$3519 ;
  wire \$auto$rtlil.cc:2791:Lt$3533 ;
  wire \$auto$rtlil.cc:2791:Lt$3547 ;
  wire \$auto$rtlil.cc:2791:Lt$3561 ;
  wire \$auto$rtlil.cc:2797:Ge$3507 ;
  wire \$auto$rtlil.cc:2797:Ge$3521 ;
  wire \$auto$rtlil.cc:2797:Ge$3535 ;
  wire \$auto$rtlil.cc:2797:Ge$3549 ;
  wire \$auto$rtlil.cc:2797:Ge$3563 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3509 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3523 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3537 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3551 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3565 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3511 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3525 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3539 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3553 ;
  wire \$auto$rtlil.cc:2874:Mux$3567 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3517 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3531 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3545 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3559 ;
  wire [3:0] \$auto$rtlil.cc:2875:Bwmux$3573 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3513 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3515 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3527 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3529 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3541 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3543 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3555 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3557 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$3569 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$3571 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$3499 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3500 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3501 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3502 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3503 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$3498 ;
  /* src = "../rtl/obi/obi_mux.sv:34.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_mux.sv:60.23" */
  wire fifo_full;
  /* src = "../rtl/obi/obi_mux.sv:60.34" */
  wire fifo_pop;
  /* src = "../rtl/obi/obi_mux.sv:58.21" */
  wire [70:0] mgr_port_a_in_sbr;
  /* src = "../rtl/obi/obi_mux.sv:60.9" */
  wire mgr_port_req;
  /* src = "../rtl/obi/obi_mux.sv:41.47" */
  output [73:0] mgr_port_req_o;
  wire [73:0] mgr_port_req_o;
  /* src = "../rtl/obi/obi_mux.sv:42.47" */
  input [38:0] mgr_port_rsp_i;
  wire [38:0] mgr_port_rsp_i;
  /* src = "../rtl/obi/obi_mux.sv:59.49" */
  wire [1:0] response_id;
  /* src = "../rtl/obi/obi_mux.sv:102.37" */
  wire rsp_rid;
  /* src = "../rtl/obi/obi_mux.sv:35.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_mux.sv:51.39" */
  wire [283:0] sbr_ports_a;
  /* src = "../rtl/obi/obi_mux.sv:50.42" */
  wire [3:0] sbr_ports_gnt;
  /* src = "../rtl/obi/obi_mux.sv:50.27" */
  wire [3:0] sbr_ports_req;
  /* src = "../rtl/obi/obi_mux.sv:38.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "../rtl/obi/obi_mux.sv:39.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "../rtl/obi/obi_mux.sv:141.39" */
  wire [139:0] sbr_rsp_r;
  /* src = "../rtl/obi/obi_mux.sv:140.27" */
  wire [3:0] sbr_rsp_rvalid;
  /* src = "../rtl/obi/obi_mux.sv:59.36" */
  wire [1:0] selected_id;
  /* src = "../rtl/obi/obi_mux.sv:36.16" */
  input testmode_i;
  wire testmode_i;
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3510  (
    .A(35'h000000000),
    .B(35'h7fffffff8),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3509 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3511 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3524  (
    .A(35'h000000000),
    .B(35'h000000004),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3523 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3525 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3538  (
    .A(35'h000000000),
    .B(35'h000000002),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3537 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3539 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3552  (
    .A(35'h000000000),
    .B(35'h000000001),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3551 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3553 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$builder.cc:112:Mux$3566  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3565 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3567 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3530  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3517 ),
    .B({ 32'hxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 2'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3529 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3531 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3544  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3531 ),
    .B({ 33'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 1'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3543 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3545 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3558  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3545 ),
    .B({ 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2] }),
    .S(\$auto$rtlil.cc:2896:Demux$3557 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3559 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3488  (
    .A(mgr_port_rsp_i[1]),
    .B(\$auto$builder.cc:364:Unop$3487 ),
    .Y(\$auto$builder.cc:338:Biop$3489 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3492  (
    .A(mgr_port_req),
    .B(\$auto$builder.cc:364:Unop$3491 ),
    .Y(\$auto$builder.cc:338:Biop$3493 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3495  (
    .A(mgr_port_req_o[0]),
    .B(mgr_port_rsp_i[1]),
    .Y(\$auto$builder.cc:338:Biop$3496 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3486  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$3487 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3490  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$3491 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3512  (
    .A(\$auto$rtlil.cc:2874:Mux$3511 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3513 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3514  (
    .A(\$auto$rtlil.cc:2874:Mux$3511 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3515 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3526  (
    .A(\$auto$rtlil.cc:2874:Mux$3525 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3527 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3528  (
    .A(\$auto$rtlil.cc:2874:Mux$3525 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3529 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3540  (
    .A(\$auto$rtlil.cc:2874:Mux$3539 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3541 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3542  (
    .A(\$auto$rtlil.cc:2874:Mux$3539 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3543 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3554  (
    .A(\$auto$rtlil.cc:2874:Mux$3553 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3555 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3556  (
    .A(\$auto$rtlil.cc:2874:Mux$3553 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3557 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$3568  (
    .A(\$auto$rtlil.cc:2874:Mux$3567 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3569 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$3570  (
    .A(\$auto$rtlil.cc:2874:Mux$3567 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3571 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3506  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3507 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3520  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3521 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3534  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3535 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3548  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3549 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3562  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3563 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3504  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3505 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3518  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3519 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3532  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3533 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3546  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3547 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3560  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3561 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3508  (
    .A(\$auto$rtlil.cc:2797:Ge$3507 ),
    .B(\$auto$rtlil.cc:2791:Lt$3505 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3509 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3522  (
    .A(\$auto$rtlil.cc:2797:Ge$3521 ),
    .B(\$auto$rtlil.cc:2791:Lt$3519 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3523 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3536  (
    .A(\$auto$rtlil.cc:2797:Ge$3535 ),
    .B(\$auto$rtlil.cc:2791:Lt$3533 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3537 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3550  (
    .A(\$auto$rtlil.cc:2797:Ge$3549 ),
    .B(\$auto$rtlil.cc:2791:Lt$3547 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3551 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3564  (
    .A(\$auto$rtlil.cc:2797:Ge$3563 ),
    .B(\$auto$rtlil.cc:2791:Lt$3561 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3565 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd140),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd140),
    .Y_WIDTH(32'd140)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17090  (
    .A({ mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx }),
    .B(\$auto$rtlil.cc:2896:Demux$3515 ),
    .Y(\$auto$rtlil.cc:2786:And$17091 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17092  (
    .A({ mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0] }),
    .B(\$auto$rtlil.cc:2896:Demux$3571 ),
    .Y(\$auto$rtlil.cc:2786:And$17093 )
  );
  /* src = "../rtl/obi/obi_mux.sv:119.7" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.gen_no_id_assign.i_fifo  \gen_no_id_assign.i_fifo  (
    .clk_i(clk_i),
    .data_i(selected_id),
    .data_o(response_id),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$auto$builder.cc:338:Biop$3496 ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* src = "../rtl/obi/obi_mux.sv:67.5" */
  \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb  i_rr_arb (
    .clk_i(clk_i),
    .data_i(sbr_ports_a),
    .data_o(mgr_port_a_in_sbr),
    .flush_i(1'h0),
    .gnt_i(\$auto$builder.cc:338:Biop$3489 ),
    .gnt_o(sbr_ports_gnt),
    .idx_o(selected_id),
    .req_i(sbr_ports_req),
    .req_o(mgr_port_req),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign sbr_ports_req[0] = sbr_ports_req_i[0];
  assign sbr_ports_a[70:0] = sbr_ports_req_i[71:1];
  assign sbr_ports_rsp_o[1] = sbr_ports_gnt[0];
  assign sbr_ports_req[1] = sbr_ports_req_i[72];
  assign sbr_ports_a[141:71] = sbr_ports_req_i[143:73];
  assign sbr_ports_rsp_o[38] = sbr_ports_gnt[1];
  assign sbr_ports_req[2] = sbr_ports_req_i[144];
  assign sbr_ports_a[212:142] = sbr_ports_req_i[215:145];
  assign sbr_ports_rsp_o[75] = sbr_ports_gnt[2];
  assign sbr_ports_req[3] = sbr_ports_req_i[216];
  assign sbr_ports_a[283:213] = sbr_ports_req_i[287:217];
  assign sbr_ports_rsp_o[112] = sbr_ports_gnt[3];
  assign mgr_port_req_o[0] = \$auto$builder.cc:338:Biop$3493 ;
  assign mgr_port_req_o[73:1] = { mgr_port_a_in_sbr[70:2], selected_id, mgr_port_a_in_sbr[1:0] };
  assign sbr_rsp_rvalid = \$auto$rtlil.cc:2875:Bwmux$3573 ;
  assign sbr_rsp_r = \$auto$rtlil.cc:2875:Bwmux$3559 ;
  assign sbr_ports_rsp_o[36:2] = sbr_rsp_r[34:0];
  assign sbr_ports_rsp_o[0] = sbr_rsp_rvalid[0];
  assign sbr_ports_rsp_o[73:39] = sbr_rsp_r[69:35];
  assign sbr_ports_rsp_o[37] = sbr_rsp_rvalid[1];
  assign sbr_ports_rsp_o[110:76] = sbr_rsp_r[104:70];
  assign sbr_ports_rsp_o[74] = sbr_rsp_rvalid[2];
  assign sbr_ports_rsp_o[147:113] = sbr_rsp_r[139:105];
  assign sbr_ports_rsp_o[111] = sbr_rsp_rvalid[3];
  assign fifo_pop = mgr_port_rsp_i[0];
  assign \$auto$rtlil.cc:2875:Bwmux$3517  = \$auto$rtlil.cc:2786:And$17091 ;
  assign \$auto$rtlil.cc:2875:Bwmux$3573  = \$auto$rtlil.cc:2786:And$17093 ;
endmodule

/* src = "../rtl/obi/obi_mux.sv:10.8" */
module \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_port_req_o, mgr_port_rsp_i);
  wire \$auto$builder.cc:338:Biop$3577 ;
  wire \$auto$builder.cc:338:Biop$3581 ;
  wire \$auto$builder.cc:338:Biop$3584 ;
  wire \$auto$builder.cc:364:Unop$3575 ;
  wire \$auto$builder.cc:364:Unop$3579 ;
  wire [139:0] \$auto$rtlil.cc:2786:And$17087 ;
  wire [3:0] \$auto$rtlil.cc:2786:And$17089 ;
  wire \$auto$rtlil.cc:2791:Lt$3593 ;
  wire \$auto$rtlil.cc:2791:Lt$3607 ;
  wire \$auto$rtlil.cc:2791:Lt$3621 ;
  wire \$auto$rtlil.cc:2791:Lt$3635 ;
  wire \$auto$rtlil.cc:2791:Lt$3649 ;
  wire \$auto$rtlil.cc:2797:Ge$3595 ;
  wire \$auto$rtlil.cc:2797:Ge$3609 ;
  wire \$auto$rtlil.cc:2797:Ge$3623 ;
  wire \$auto$rtlil.cc:2797:Ge$3637 ;
  wire \$auto$rtlil.cc:2797:Ge$3651 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3597 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3611 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3625 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3639 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3653 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3599 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3613 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3627 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3641 ;
  wire \$auto$rtlil.cc:2874:Mux$3655 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3605 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3619 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3633 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3647 ;
  wire [3:0] \$auto$rtlil.cc:2875:Bwmux$3661 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3601 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3603 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3615 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3617 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3629 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3631 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3643 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3645 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$3657 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$3659 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$3587 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3588 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3589 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3590 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3591 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$3586 ;
  /* src = "../rtl/obi/obi_mux.sv:34.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_mux.sv:60.23" */
  wire fifo_full;
  /* src = "../rtl/obi/obi_mux.sv:60.34" */
  wire fifo_pop;
  /* src = "../rtl/obi/obi_mux.sv:58.21" */
  wire [70:0] mgr_port_a_in_sbr;
  /* src = "../rtl/obi/obi_mux.sv:60.9" */
  wire mgr_port_req;
  /* src = "../rtl/obi/obi_mux.sv:41.47" */
  output [73:0] mgr_port_req_o;
  wire [73:0] mgr_port_req_o;
  /* src = "../rtl/obi/obi_mux.sv:42.47" */
  input [38:0] mgr_port_rsp_i;
  wire [38:0] mgr_port_rsp_i;
  /* src = "../rtl/obi/obi_mux.sv:59.49" */
  wire [1:0] response_id;
  /* src = "../rtl/obi/obi_mux.sv:102.37" */
  wire rsp_rid;
  /* src = "../rtl/obi/obi_mux.sv:35.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_mux.sv:51.39" */
  wire [283:0] sbr_ports_a;
  /* src = "../rtl/obi/obi_mux.sv:50.42" */
  wire [3:0] sbr_ports_gnt;
  /* src = "../rtl/obi/obi_mux.sv:50.27" */
  wire [3:0] sbr_ports_req;
  /* src = "../rtl/obi/obi_mux.sv:38.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "../rtl/obi/obi_mux.sv:39.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "../rtl/obi/obi_mux.sv:141.39" */
  wire [139:0] sbr_rsp_r;
  /* src = "../rtl/obi/obi_mux.sv:140.27" */
  wire [3:0] sbr_rsp_rvalid;
  /* src = "../rtl/obi/obi_mux.sv:59.36" */
  wire [1:0] selected_id;
  /* src = "../rtl/obi/obi_mux.sv:36.16" */
  input testmode_i;
  wire testmode_i;
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3598  (
    .A(35'h000000000),
    .B(35'h7fffffff8),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3597 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3599 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3612  (
    .A(35'h000000000),
    .B(35'h000000004),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3611 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3613 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3626  (
    .A(35'h000000000),
    .B(35'h000000002),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3625 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3627 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3640  (
    .A(35'h000000000),
    .B(35'h000000001),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3639 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3641 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$builder.cc:112:Mux$3654  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3653 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3655 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3618  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3605 ),
    .B({ 32'hxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 2'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3617 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3619 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3632  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3619 ),
    .B({ 33'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 1'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3631 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3633 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3646  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3633 ),
    .B({ 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2] }),
    .S(\$auto$rtlil.cc:2896:Demux$3645 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3647 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3576  (
    .A(mgr_port_rsp_i[1]),
    .B(\$auto$builder.cc:364:Unop$3575 ),
    .Y(\$auto$builder.cc:338:Biop$3577 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3580  (
    .A(mgr_port_req),
    .B(\$auto$builder.cc:364:Unop$3579 ),
    .Y(\$auto$builder.cc:338:Biop$3581 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3583  (
    .A(mgr_port_req_o[0]),
    .B(mgr_port_rsp_i[1]),
    .Y(\$auto$builder.cc:338:Biop$3584 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3574  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$3575 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3578  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$3579 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3600  (
    .A(\$auto$rtlil.cc:2874:Mux$3599 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3601 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3602  (
    .A(\$auto$rtlil.cc:2874:Mux$3599 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3603 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3614  (
    .A(\$auto$rtlil.cc:2874:Mux$3613 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3615 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3616  (
    .A(\$auto$rtlil.cc:2874:Mux$3613 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3617 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3628  (
    .A(\$auto$rtlil.cc:2874:Mux$3627 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3629 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3630  (
    .A(\$auto$rtlil.cc:2874:Mux$3627 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3631 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3642  (
    .A(\$auto$rtlil.cc:2874:Mux$3641 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3643 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3644  (
    .A(\$auto$rtlil.cc:2874:Mux$3641 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3645 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$3656  (
    .A(\$auto$rtlil.cc:2874:Mux$3655 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3657 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$3658  (
    .A(\$auto$rtlil.cc:2874:Mux$3655 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3659 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3594  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3595 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3608  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3609 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3622  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3623 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3636  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3637 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3650  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3651 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3592  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3593 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3606  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3607 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3620  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3621 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3634  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3635 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3648  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3649 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3596  (
    .A(\$auto$rtlil.cc:2797:Ge$3595 ),
    .B(\$auto$rtlil.cc:2791:Lt$3593 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3597 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3610  (
    .A(\$auto$rtlil.cc:2797:Ge$3609 ),
    .B(\$auto$rtlil.cc:2791:Lt$3607 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3611 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3624  (
    .A(\$auto$rtlil.cc:2797:Ge$3623 ),
    .B(\$auto$rtlil.cc:2791:Lt$3621 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3625 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3638  (
    .A(\$auto$rtlil.cc:2797:Ge$3637 ),
    .B(\$auto$rtlil.cc:2791:Lt$3635 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3639 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3652  (
    .A(\$auto$rtlil.cc:2797:Ge$3651 ),
    .B(\$auto$rtlil.cc:2791:Lt$3649 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3653 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd140),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd140),
    .Y_WIDTH(32'd140)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17086  (
    .A({ mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx }),
    .B(\$auto$rtlil.cc:2896:Demux$3603 ),
    .Y(\$auto$rtlil.cc:2786:And$17087 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17088  (
    .A({ mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0] }),
    .B(\$auto$rtlil.cc:2896:Demux$3659 ),
    .Y(\$auto$rtlil.cc:2786:And$17089 )
  );
  /* src = "../rtl/obi/obi_mux.sv:119.7" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.gen_no_id_assign.i_fifo  \gen_no_id_assign.i_fifo  (
    .clk_i(clk_i),
    .data_i(selected_id),
    .data_o(response_id),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$auto$builder.cc:338:Biop$3584 ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* src = "../rtl/obi/obi_mux.sv:67.5" */
  \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb  i_rr_arb (
    .clk_i(clk_i),
    .data_i(sbr_ports_a),
    .data_o(mgr_port_a_in_sbr),
    .flush_i(1'h0),
    .gnt_i(\$auto$builder.cc:338:Biop$3577 ),
    .gnt_o(sbr_ports_gnt),
    .idx_o(selected_id),
    .req_i(sbr_ports_req),
    .req_o(mgr_port_req),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign sbr_ports_req[0] = sbr_ports_req_i[0];
  assign sbr_ports_a[70:0] = sbr_ports_req_i[71:1];
  assign sbr_ports_rsp_o[1] = sbr_ports_gnt[0];
  assign sbr_ports_req[1] = sbr_ports_req_i[72];
  assign sbr_ports_a[141:71] = sbr_ports_req_i[143:73];
  assign sbr_ports_rsp_o[38] = sbr_ports_gnt[1];
  assign sbr_ports_req[2] = sbr_ports_req_i[144];
  assign sbr_ports_a[212:142] = sbr_ports_req_i[215:145];
  assign sbr_ports_rsp_o[75] = sbr_ports_gnt[2];
  assign sbr_ports_req[3] = sbr_ports_req_i[216];
  assign sbr_ports_a[283:213] = sbr_ports_req_i[287:217];
  assign sbr_ports_rsp_o[112] = sbr_ports_gnt[3];
  assign mgr_port_req_o[0] = \$auto$builder.cc:338:Biop$3581 ;
  assign mgr_port_req_o[73:1] = { mgr_port_a_in_sbr[70:2], selected_id, mgr_port_a_in_sbr[1:0] };
  assign sbr_rsp_rvalid = \$auto$rtlil.cc:2875:Bwmux$3661 ;
  assign sbr_rsp_r = \$auto$rtlil.cc:2875:Bwmux$3647 ;
  assign sbr_ports_rsp_o[36:2] = sbr_rsp_r[34:0];
  assign sbr_ports_rsp_o[0] = sbr_rsp_rvalid[0];
  assign sbr_ports_rsp_o[73:39] = sbr_rsp_r[69:35];
  assign sbr_ports_rsp_o[37] = sbr_rsp_rvalid[1];
  assign sbr_ports_rsp_o[110:76] = sbr_rsp_r[104:70];
  assign sbr_ports_rsp_o[74] = sbr_rsp_rvalid[2];
  assign sbr_ports_rsp_o[147:113] = sbr_rsp_r[139:105];
  assign sbr_ports_rsp_o[111] = sbr_rsp_rvalid[3];
  assign fifo_pop = mgr_port_rsp_i[0];
  assign \$auto$rtlil.cc:2875:Bwmux$3605  = \$auto$rtlil.cc:2786:And$17087 ;
  assign \$auto$rtlil.cc:2875:Bwmux$3661  = \$auto$rtlil.cc:2786:And$17089 ;
endmodule

/* src = "../rtl/obi/obi_mux.sv:10.8" */
module \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_port_req_o, mgr_port_rsp_i);
  wire \$auto$builder.cc:338:Biop$3665 ;
  wire \$auto$builder.cc:338:Biop$3669 ;
  wire \$auto$builder.cc:338:Biop$3672 ;
  wire \$auto$builder.cc:364:Unop$3663 ;
  wire \$auto$builder.cc:364:Unop$3667 ;
  wire [139:0] \$auto$rtlil.cc:2786:And$17083 ;
  wire [3:0] \$auto$rtlil.cc:2786:And$17085 ;
  wire \$auto$rtlil.cc:2791:Lt$3681 ;
  wire \$auto$rtlil.cc:2791:Lt$3695 ;
  wire \$auto$rtlil.cc:2791:Lt$3709 ;
  wire \$auto$rtlil.cc:2791:Lt$3723 ;
  wire \$auto$rtlil.cc:2791:Lt$3737 ;
  wire \$auto$rtlil.cc:2797:Ge$3683 ;
  wire \$auto$rtlil.cc:2797:Ge$3697 ;
  wire \$auto$rtlil.cc:2797:Ge$3711 ;
  wire \$auto$rtlil.cc:2797:Ge$3725 ;
  wire \$auto$rtlil.cc:2797:Ge$3739 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3685 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3699 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3713 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3727 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$3741 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3687 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3701 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3715 ;
  wire [34:0] \$auto$rtlil.cc:2874:Mux$3729 ;
  wire \$auto$rtlil.cc:2874:Mux$3743 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3693 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3707 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3721 ;
  wire [139:0] \$auto$rtlil.cc:2875:Bwmux$3735 ;
  wire [3:0] \$auto$rtlil.cc:2875:Bwmux$3749 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3689 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3691 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3703 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3705 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3717 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3719 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3731 ;
  wire [139:0] \$auto$rtlil.cc:2896:Demux$3733 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$3745 ;
  wire [3:0] \$auto$rtlil.cc:2896:Demux$3747 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$3675 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3676 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3677 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3678 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$3679 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$3674 ;
  /* src = "../rtl/obi/obi_mux.sv:34.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_mux.sv:60.23" */
  wire fifo_full;
  /* src = "../rtl/obi/obi_mux.sv:60.34" */
  wire fifo_pop;
  /* src = "../rtl/obi/obi_mux.sv:58.21" */
  wire [70:0] mgr_port_a_in_sbr;
  /* src = "../rtl/obi/obi_mux.sv:60.9" */
  wire mgr_port_req;
  /* src = "../rtl/obi/obi_mux.sv:41.47" */
  output [73:0] mgr_port_req_o;
  wire [73:0] mgr_port_req_o;
  /* src = "../rtl/obi/obi_mux.sv:42.47" */
  input [38:0] mgr_port_rsp_i;
  wire [38:0] mgr_port_rsp_i;
  /* src = "../rtl/obi/obi_mux.sv:59.49" */
  wire [1:0] response_id;
  /* src = "../rtl/obi/obi_mux.sv:102.37" */
  wire rsp_rid;
  /* src = "../rtl/obi/obi_mux.sv:35.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_mux.sv:51.39" */
  wire [283:0] sbr_ports_a;
  /* src = "../rtl/obi/obi_mux.sv:50.42" */
  wire [3:0] sbr_ports_gnt;
  /* src = "../rtl/obi/obi_mux.sv:50.27" */
  wire [3:0] sbr_ports_req;
  /* src = "../rtl/obi/obi_mux.sv:38.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "../rtl/obi/obi_mux.sv:39.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "../rtl/obi/obi_mux.sv:141.39" */
  wire [139:0] sbr_rsp_r;
  /* src = "../rtl/obi/obi_mux.sv:140.27" */
  wire [3:0] sbr_rsp_rvalid;
  /* src = "../rtl/obi/obi_mux.sv:59.36" */
  wire [1:0] selected_id;
  /* src = "../rtl/obi/obi_mux.sv:36.16" */
  input testmode_i;
  wire testmode_i;
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3686  (
    .A(35'h000000000),
    .B(35'h7fffffff8),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3685 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3687 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3700  (
    .A(35'h000000000),
    .B(35'h000000004),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3699 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3701 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3714  (
    .A(35'h000000000),
    .B(35'h000000002),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3713 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3715 )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$auto$builder.cc:112:Mux$3728  (
    .A(35'h000000000),
    .B(35'h000000001),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3727 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3729 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$builder.cc:112:Mux$3742  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2806:LogicAnd$3741 ),
    .Y(\$auto$rtlil.cc:2874:Mux$3743 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3706  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3693 ),
    .B({ 32'hxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 2'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3705 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3707 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3720  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3707 ),
    .B({ 33'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 1'hx }),
    .S(\$auto$rtlil.cc:2896:Demux$3719 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3721 )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$auto$builder.cc:128:Bwmux$3734  (
    .A(\$auto$rtlil.cc:2875:Bwmux$3721 ),
    .B({ 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2] }),
    .S(\$auto$rtlil.cc:2896:Demux$3733 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$3735 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3664  (
    .A(mgr_port_rsp_i[1]),
    .B(\$auto$builder.cc:364:Unop$3663 ),
    .Y(\$auto$builder.cc:338:Biop$3665 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3668  (
    .A(mgr_port_req),
    .B(\$auto$builder.cc:364:Unop$3667 ),
    .Y(\$auto$builder.cc:338:Biop$3669 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$3671  (
    .A(mgr_port_req_o[0]),
    .B(mgr_port_rsp_i[1]),
    .Y(\$auto$builder.cc:338:Biop$3672 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3662  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$3663 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$3666  (
    .A(fifo_full),
    .Y(\$auto$builder.cc:364:Unop$3667 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3688  (
    .A(\$auto$rtlil.cc:2874:Mux$3687 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3689 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3690  (
    .A(\$auto$rtlil.cc:2874:Mux$3687 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3691 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3702  (
    .A(\$auto$rtlil.cc:2874:Mux$3701 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3703 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3704  (
    .A(\$auto$rtlil.cc:2874:Mux$3701 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3705 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3716  (
    .A(\$auto$rtlil.cc:2874:Mux$3715 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3717 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3718  (
    .A(\$auto$rtlil.cc:2874:Mux$3715 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3719 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3730  (
    .A(\$auto$rtlil.cc:2874:Mux$3729 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3731 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$auto$builder.cc:38:Demux$3732  (
    .A(\$auto$rtlil.cc:2874:Mux$3729 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3733 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$3744  (
    .A(\$auto$rtlil.cc:2874:Mux$3743 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3745 )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$3746  (
    .A(\$auto$rtlil.cc:2874:Mux$3743 ),
    .S(response_id),
    .Y(\$auto$rtlil.cc:2896:Demux$3747 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3682  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3683 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3696  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3697 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3710  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3711 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3724  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3725 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$3738  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$3739 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3680  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3681 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3694  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3695 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3708  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3709 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3722  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3723 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$3736  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$auto$rtlil.cc:2791:Lt$3737 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3684  (
    .A(\$auto$rtlil.cc:2797:Ge$3683 ),
    .B(\$auto$rtlil.cc:2791:Lt$3681 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3685 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3698  (
    .A(\$auto$rtlil.cc:2797:Ge$3697 ),
    .B(\$auto$rtlil.cc:2791:Lt$3695 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3699 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3712  (
    .A(\$auto$rtlil.cc:2797:Ge$3711 ),
    .B(\$auto$rtlil.cc:2791:Lt$3709 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3713 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3726  (
    .A(\$auto$rtlil.cc:2797:Ge$3725 ),
    .B(\$auto$rtlil.cc:2791:Lt$3723 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3727 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$3740  (
    .A(\$auto$rtlil.cc:2797:Ge$3739 ),
    .B(\$auto$rtlil.cc:2791:Lt$3737 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$3741 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd140),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd140),
    .Y_WIDTH(32'd140)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17082  (
    .A({ mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx }),
    .B(\$auto$rtlil.cc:2896:Demux$3691 ),
    .Y(\$auto$rtlil.cc:2786:And$17083 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$opt_expr.cc:785:replace_const_cells$17084  (
    .A({ mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0] }),
    .B(\$auto$rtlil.cc:2896:Demux$3747 ),
    .Y(\$auto$rtlil.cc:2786:And$17085 )
  );
  /* src = "../rtl/obi/obi_mux.sv:119.7" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.gen_no_id_assign.i_fifo  \gen_no_id_assign.i_fifo  (
    .clk_i(clk_i),
    .data_i(selected_id),
    .data_o(response_id),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$auto$builder.cc:338:Biop$3672 ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* src = "../rtl/obi/obi_mux.sv:67.5" */
  \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb  i_rr_arb (
    .clk_i(clk_i),
    .data_i(sbr_ports_a),
    .data_o(mgr_port_a_in_sbr),
    .flush_i(1'h0),
    .gnt_i(\$auto$builder.cc:338:Biop$3665 ),
    .gnt_o(sbr_ports_gnt),
    .idx_o(selected_id),
    .req_i(sbr_ports_req),
    .req_o(mgr_port_req),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign sbr_ports_req[0] = sbr_ports_req_i[0];
  assign sbr_ports_a[70:0] = sbr_ports_req_i[71:1];
  assign sbr_ports_rsp_o[1] = sbr_ports_gnt[0];
  assign sbr_ports_req[1] = sbr_ports_req_i[72];
  assign sbr_ports_a[141:71] = sbr_ports_req_i[143:73];
  assign sbr_ports_rsp_o[38] = sbr_ports_gnt[1];
  assign sbr_ports_req[2] = sbr_ports_req_i[144];
  assign sbr_ports_a[212:142] = sbr_ports_req_i[215:145];
  assign sbr_ports_rsp_o[75] = sbr_ports_gnt[2];
  assign sbr_ports_req[3] = sbr_ports_req_i[216];
  assign sbr_ports_a[283:213] = sbr_ports_req_i[287:217];
  assign sbr_ports_rsp_o[112] = sbr_ports_gnt[3];
  assign mgr_port_req_o[0] = \$auto$builder.cc:338:Biop$3669 ;
  assign mgr_port_req_o[73:1] = { mgr_port_a_in_sbr[70:2], selected_id, mgr_port_a_in_sbr[1:0] };
  assign sbr_rsp_rvalid = \$auto$rtlil.cc:2875:Bwmux$3749 ;
  assign sbr_rsp_r = \$auto$rtlil.cc:2875:Bwmux$3735 ;
  assign sbr_ports_rsp_o[36:2] = sbr_rsp_r[34:0];
  assign sbr_ports_rsp_o[0] = sbr_rsp_rvalid[0];
  assign sbr_ports_rsp_o[73:39] = sbr_rsp_r[69:35];
  assign sbr_ports_rsp_o[37] = sbr_rsp_rvalid[1];
  assign sbr_ports_rsp_o[110:76] = sbr_rsp_r[104:70];
  assign sbr_ports_rsp_o[74] = sbr_rsp_rvalid[2];
  assign sbr_ports_rsp_o[147:113] = sbr_rsp_r[139:105];
  assign sbr_ports_rsp_o[111] = sbr_rsp_rvalid[3];
  assign fifo_pop = mgr_port_rsp_i[0];
  assign \$auto$rtlil.cc:2875:Bwmux$3693  = \$auto$rtlil.cc:2786:And$17083 ;
  assign \$auto$rtlil.cc:2875:Bwmux$3749  = \$auto$rtlil.cc:2786:And$17085 ;
endmodule

/* src = "../rtl/obi/obi_sram_shim.sv:7.8" */
module \obi_sram_shim$croc_chip.i_croc_soc.i_croc.gen_sram_bank[0].i_sram_shim (clk_i, rst_ni, obi_req_i, obi_rsp_o, req_o, we_o, addr_o, wdata_o, be_o, gnt_i, rdata_i);
  wire \$auto$builder.cc:338:Biop$205 ;
  wire \$auto$rtlil.cc:2747:LogicNot$208 ;
  wire \$auto$rtlil.cc:2747:LogicNot$210 ;
  /* src = "../rtl/obi/obi_sram_shim.sv:23.41" */
  output [31:0] addr_o;
  wire [31:0] addr_o;
  /* src = "../rtl/obi/obi_sram_shim.sv:25.41" */
  output [3:0] be_o;
  wire [3:0] be_o;
  /* src = "../rtl/obi/obi_sram_shim.sv:15.41" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_sram_shim.sv:27.41" */
  input gnt_i;
  wire gnt_i;
  /* src = "../rtl/obi/obi_sram_shim.sv:38.30" */
  wire [2:0] id_d;
  /* src = "../rtl/obi/obi_sram_shim.sv:38.36" */
  wire [2:0] id_q;
  /* src = "../rtl/obi/obi_sram_shim.sv:18.41" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "../rtl/obi/obi_sram_shim.sv:19.41" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "../rtl/obi/obi_sram_shim.sv:28.41" */
  input [31:0] rdata_i;
  wire [31:0] rdata_i;
  /* src = "../rtl/obi/obi_sram_shim.sv:21.41" */
  output req_o;
  wire req_o;
  /* src = "../rtl/obi/obi_sram_shim.sv:16.41" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_sram_shim.sv:37.9" */
  wire rvalid_d;
  /* src = "../rtl/obi/obi_sram_shim.sv:37.19" */
  wire rvalid_q;
  /* src = "../rtl/obi/obi_sram_shim.sv:24.41" */
  output [31:0] wdata_o;
  wire [31:0] wdata_o;
  /* src = "../rtl/obi/obi_sram_shim.sv:22.41" */
  output we_o;
  wire we_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$207  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$208 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$204  (
    .A(obi_req_i[0]),
    .B(obi_rsp_o[1]),
    .Y(\$auto$builder.cc:338:Biop$205 )
  );
  /* src = "../rtl/obi/obi_sram_shim.sv:58.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$id_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(id_d),
    .Q(id_q)
  );
  /* src = "../rtl/obi/obi_sram_shim.sv:58.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$rvalid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(rvalid_d),
    .Q(rvalid_q)
  );
  assign req_o = obi_req_i[0];
  assign we_o = obi_req_i[41];
  assign addr_o = obi_req_i[73:42];
  assign wdata_o = obi_req_i[36:5];
  assign be_o = obi_req_i[40:37];
  assign obi_rsp_o = { rdata_i, id_q, 2'h0, gnt_i, rvalid_q };
  assign rvalid_d = \$auto$builder.cc:338:Biop$205 ;
  assign id_d = obi_req_i[4:2];
  assign \$auto$rtlil.cc:2747:LogicNot$210  = rst_ni;
endmodule

/* src = "../rtl/obi/obi_sram_shim.sv:7.8" */
module \obi_sram_shim$croc_chip.i_croc_soc.i_croc.gen_sram_bank[1].i_sram_shim (clk_i, rst_ni, obi_req_i, obi_rsp_o, req_o, we_o, addr_o, wdata_o, be_o, gnt_i, rdata_i);
  wire \$auto$builder.cc:338:Biop$614 ;
  wire \$auto$rtlil.cc:2747:LogicNot$617 ;
  wire \$auto$rtlil.cc:2747:LogicNot$619 ;
  /* src = "../rtl/obi/obi_sram_shim.sv:23.41" */
  output [31:0] addr_o;
  wire [31:0] addr_o;
  /* src = "../rtl/obi/obi_sram_shim.sv:25.41" */
  output [3:0] be_o;
  wire [3:0] be_o;
  /* src = "../rtl/obi/obi_sram_shim.sv:15.41" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_sram_shim.sv:27.41" */
  input gnt_i;
  wire gnt_i;
  /* src = "../rtl/obi/obi_sram_shim.sv:38.30" */
  wire [2:0] id_d;
  /* src = "../rtl/obi/obi_sram_shim.sv:38.36" */
  wire [2:0] id_q;
  /* src = "../rtl/obi/obi_sram_shim.sv:18.41" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "../rtl/obi/obi_sram_shim.sv:19.41" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "../rtl/obi/obi_sram_shim.sv:28.41" */
  input [31:0] rdata_i;
  wire [31:0] rdata_i;
  /* src = "../rtl/obi/obi_sram_shim.sv:21.41" */
  output req_o;
  wire req_o;
  /* src = "../rtl/obi/obi_sram_shim.sv:16.41" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_sram_shim.sv:37.9" */
  wire rvalid_d;
  /* src = "../rtl/obi/obi_sram_shim.sv:37.19" */
  wire rvalid_q;
  /* src = "../rtl/obi/obi_sram_shim.sv:24.41" */
  output [31:0] wdata_o;
  wire [31:0] wdata_o;
  /* src = "../rtl/obi/obi_sram_shim.sv:22.41" */
  output we_o;
  wire we_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$616  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$617 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$613  (
    .A(obi_req_i[0]),
    .B(obi_rsp_o[1]),
    .Y(\$auto$builder.cc:338:Biop$614 )
  );
  /* src = "../rtl/obi/obi_sram_shim.sv:58.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$id_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(id_d),
    .Q(id_q)
  );
  /* src = "../rtl/obi/obi_sram_shim.sv:58.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$rvalid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(rvalid_d),
    .Q(rvalid_q)
  );
  assign req_o = obi_req_i[0];
  assign we_o = obi_req_i[41];
  assign addr_o = obi_req_i[73:42];
  assign wdata_o = obi_req_i[36:5];
  assign be_o = obi_req_i[40:37];
  assign obi_rsp_o = { rdata_i, id_q, 2'h0, gnt_i, rvalid_q };
  assign rvalid_d = \$auto$builder.cc:338:Biop$614 ;
  assign id_d = obi_req_i[4:2];
  assign \$auto$rtlil.cc:2747:LogicNot$619  = rst_ni;
endmodule

/* src = "../rtl/obi/obi_xbar.sv:8.8" */
module \obi_xbar$croc_chip.i_croc_soc.i_croc.i_main_xbar (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_ports_req_o, mgr_ports_rsp_i, addr_map_i, en_default_idx_i, default_idx_i);
  /* src = "../rtl/obi/obi_xbar.sv:50.47" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "../rtl/obi/obi_xbar.sv:40.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/obi/obi_xbar.sv:52.75" */
  input [11:0] default_idx_i;
  wire [11:0] default_idx_i;
  /* src = "../rtl/obi/obi_xbar.sv:51.47" */
  input [3:0] en_default_idx_i;
  wire [3:0] en_default_idx_i;
  /* src = "../rtl/obi/obi_xbar.sv:47.47" */
  output [369:0] mgr_ports_req_o;
  wire [369:0] mgr_ports_req_o;
  /* src = "../rtl/obi/obi_xbar.sv:48.47" */
  input [194:0] mgr_ports_rsp_i;
  wire [194:0] mgr_ports_rsp_i;
  /* src = "../rtl/obi/obi_xbar.sv:62.57" */
  wire [1439:0] mgr_reqs;
  /* src = "../rtl/obi/obi_xbar.sv:63.57" */
  wire [739:0] mgr_rsps;
  /* src = "../rtl/obi/obi_xbar.sv:41.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/obi/obi_xbar.sv:55.68" */
  wire [11:0] sbr_port_select;
  /* src = "../rtl/obi/obi_xbar.sv:44.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "../rtl/obi/obi_xbar.sv:45.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "../rtl/obi/obi_xbar.sv:58.57" */
  wire [1439:0] sbr_reqs;
  /* src = "../rtl/obi/obi_xbar.sv:59.57" */
  wire [739:0] sbr_rsps;
  /* src = "../rtl/obi/obi_xbar.sv:42.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/obi/obi_xbar.sv:71.7" */
  \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_addr_decode  \gen_demux[0].i_addr_decode  (
    .addr_i(sbr_ports_req_i[71:40]),
    .addr_map_i(addr_map_i),
    .default_idx_i(default_idx_i[2:0]),
    .en_default_idx_i(en_default_idx_i[0]),
    .idx_o(sbr_port_select[2:0])
  );
  /* src = "../rtl/obi/obi_xbar.sv:87.7" */
  \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_demux  \gen_demux[0].i_demux  (
    .clk_i(clk_i),
    .mgr_ports_req_o(sbr_reqs[359:0]),
    .mgr_ports_rsp_i(sbr_rsps[184:0]),
    .rst_ni(rst_ni),
    .sbr_port_req_i(sbr_ports_req_i[71:0]),
    .sbr_port_rsp_o(sbr_ports_rsp_o[36:0]),
    .sbr_port_select_i(sbr_port_select[2:0])
  );
  /* src = "../rtl/obi/obi_xbar.sv:71.7" */
  \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_addr_decode  \gen_demux[1].i_addr_decode  (
    .addr_i(sbr_ports_req_i[143:112]),
    .addr_map_i(addr_map_i),
    .default_idx_i(default_idx_i[5:3]),
    .en_default_idx_i(en_default_idx_i[1]),
    .idx_o(sbr_port_select[5:3])
  );
  /* src = "../rtl/obi/obi_xbar.sv:87.7" */
  \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_demux  \gen_demux[1].i_demux  (
    .clk_i(clk_i),
    .mgr_ports_req_o(sbr_reqs[719:360]),
    .mgr_ports_rsp_i(sbr_rsps[369:185]),
    .rst_ni(rst_ni),
    .sbr_port_req_i(sbr_ports_req_i[143:72]),
    .sbr_port_rsp_o(sbr_ports_rsp_o[73:37]),
    .sbr_port_select_i(sbr_port_select[5:3])
  );
  /* src = "../rtl/obi/obi_xbar.sv:71.7" */
  \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_addr_decode  \gen_demux[2].i_addr_decode  (
    .addr_i(sbr_ports_req_i[215:184]),
    .addr_map_i(addr_map_i),
    .default_idx_i(default_idx_i[8:6]),
    .en_default_idx_i(en_default_idx_i[2]),
    .idx_o(sbr_port_select[8:6])
  );
  /* src = "../rtl/obi/obi_xbar.sv:87.7" */
  \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_demux  \gen_demux[2].i_demux  (
    .clk_i(clk_i),
    .mgr_ports_req_o(sbr_reqs[1079:720]),
    .mgr_ports_rsp_i(sbr_rsps[554:370]),
    .rst_ni(rst_ni),
    .sbr_port_req_i(sbr_ports_req_i[215:144]),
    .sbr_port_rsp_o(sbr_ports_rsp_o[110:74]),
    .sbr_port_select_i(sbr_port_select[8:6])
  );
  /* src = "../rtl/obi/obi_xbar.sv:71.7" */
  \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_addr_decode  \gen_demux[3].i_addr_decode  (
    .addr_i(sbr_ports_req_i[287:256]),
    .addr_map_i(addr_map_i),
    .default_idx_i(default_idx_i[11:9]),
    .en_default_idx_i(en_default_idx_i[3]),
    .idx_o(sbr_port_select[11:9])
  );
  /* src = "../rtl/obi/obi_xbar.sv:87.7" */
  \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_demux  \gen_demux[3].i_demux  (
    .clk_i(clk_i),
    .mgr_ports_req_o(sbr_reqs[1439:1080]),
    .mgr_ports_rsp_i(sbr_rsps[739:555]),
    .rst_ni(rst_ni),
    .sbr_port_req_i(sbr_ports_req_i[287:216]),
    .sbr_port_rsp_o(sbr_ports_rsp_o[147:111]),
    .sbr_port_select_i(sbr_port_select[11:9])
  );
  /* src = "../rtl/obi/obi_xbar.sv:145.7" */
  \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux  \gen_mux[0].i_mux  (
    .clk_i(clk_i),
    .mgr_port_req_o(mgr_ports_req_o[73:0]),
    .mgr_port_rsp_i(mgr_ports_rsp_i[38:0]),
    .rst_ni(rst_ni),
    .sbr_ports_req_i(mgr_reqs[287:0]),
    .sbr_ports_rsp_o(mgr_rsps[147:0]),
    .testmode_i(testmode_i)
  );
  /* src = "../rtl/obi/obi_xbar.sv:145.7" */
  \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux  \gen_mux[1].i_mux  (
    .clk_i(clk_i),
    .mgr_port_req_o(mgr_ports_req_o[147:74]),
    .mgr_port_rsp_i(mgr_ports_rsp_i[77:39]),
    .rst_ni(rst_ni),
    .sbr_ports_req_i(mgr_reqs[575:288]),
    .sbr_ports_rsp_o(mgr_rsps[295:148]),
    .testmode_i(testmode_i)
  );
  /* src = "../rtl/obi/obi_xbar.sv:145.7" */
  \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux  \gen_mux[2].i_mux  (
    .clk_i(clk_i),
    .mgr_port_req_o(mgr_ports_req_o[221:148]),
    .mgr_port_rsp_i(mgr_ports_rsp_i[116:78]),
    .rst_ni(rst_ni),
    .sbr_ports_req_i(mgr_reqs[863:576]),
    .sbr_ports_rsp_o(mgr_rsps[443:296]),
    .testmode_i(testmode_i)
  );
  /* src = "../rtl/obi/obi_xbar.sv:145.7" */
  \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux  \gen_mux[3].i_mux  (
    .clk_i(clk_i),
    .mgr_port_req_o(mgr_ports_req_o[295:222]),
    .mgr_port_rsp_i(mgr_ports_rsp_i[155:117]),
    .rst_ni(rst_ni),
    .sbr_ports_req_i(mgr_reqs[1151:864]),
    .sbr_ports_rsp_o(mgr_rsps[591:444]),
    .testmode_i(testmode_i)
  );
  /* src = "../rtl/obi/obi_xbar.sv:145.7" */
  \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux  \gen_mux[4].i_mux  (
    .clk_i(clk_i),
    .mgr_port_req_o(mgr_ports_req_o[369:296]),
    .mgr_port_rsp_i(mgr_ports_rsp_i[194:156]),
    .rst_ni(rst_ni),
    .sbr_ports_req_i(mgr_reqs[1439:1152]),
    .sbr_ports_rsp_o(mgr_rsps[739:592]),
    .testmode_i(testmode_i)
  );
  assign mgr_reqs[71:0] = sbr_reqs[71:0];
  assign sbr_rsps[36:0] = mgr_rsps[36:0];
  assign mgr_reqs[359:288] = sbr_reqs[143:72];
  assign sbr_rsps[73:37] = mgr_rsps[184:148];
  assign mgr_reqs[647:576] = sbr_reqs[215:144];
  assign sbr_rsps[110:74] = mgr_rsps[332:296];
  assign mgr_reqs[935:864] = sbr_reqs[287:216];
  assign sbr_rsps[147:111] = mgr_rsps[480:444];
  assign mgr_reqs[1223:1152] = sbr_reqs[359:288];
  assign sbr_rsps[184:148] = mgr_rsps[628:592];
  assign mgr_reqs[143:72] = sbr_reqs[431:360];
  assign sbr_rsps[221:185] = mgr_rsps[73:37];
  assign mgr_reqs[431:360] = sbr_reqs[503:432];
  assign sbr_rsps[258:222] = mgr_rsps[221:185];
  assign mgr_reqs[719:648] = sbr_reqs[575:504];
  assign sbr_rsps[295:259] = mgr_rsps[369:333];
  assign mgr_reqs[1007:936] = sbr_reqs[647:576];
  assign sbr_rsps[332:296] = mgr_rsps[517:481];
  assign mgr_reqs[1295:1224] = sbr_reqs[719:648];
  assign sbr_rsps[369:333] = mgr_rsps[665:629];
  assign mgr_reqs[215:144] = sbr_reqs[791:720];
  assign sbr_rsps[406:370] = mgr_rsps[110:74];
  assign mgr_reqs[503:432] = sbr_reqs[863:792];
  assign sbr_rsps[443:407] = mgr_rsps[258:222];
  assign mgr_reqs[791:720] = sbr_reqs[935:864];
  assign sbr_rsps[480:444] = mgr_rsps[406:370];
  assign mgr_reqs[1079:1008] = sbr_reqs[1007:936];
  assign sbr_rsps[517:481] = mgr_rsps[554:518];
  assign mgr_reqs[1367:1296] = sbr_reqs[1079:1008];
  assign sbr_rsps[554:518] = mgr_rsps[702:666];
  assign mgr_reqs[287:216] = sbr_reqs[1151:1080];
  assign sbr_rsps[591:555] = mgr_rsps[147:111];
  assign mgr_reqs[575:504] = sbr_reqs[1223:1152];
  assign sbr_rsps[628:592] = mgr_rsps[295:259];
  assign mgr_reqs[863:792] = sbr_reqs[1295:1224];
  assign sbr_rsps[665:629] = mgr_rsps[443:407];
  assign mgr_reqs[1151:1080] = sbr_reqs[1367:1296];
  assign sbr_rsps[702:666] = mgr_rsps[591:555];
  assign mgr_reqs[1439:1368] = sbr_reqs[1439:1368];
  assign sbr_rsps[739:703] = mgr_rsps[739:703];
endmodule

/* src = "../rtl/register_interface/periph_to_reg.sv:13.8" */
module \periph_to_reg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl_translate (clk_i, rst_ni, req_i, wen_i, gnt_o, r_valid_o, r_opc_o, wdata_i, be_i, add_i, id_i, r_rdata_o, r_id_o, reg_req_o, reg_rsp_i);
  wire \$auto$builder.cc:338:Biop$1154 ;
  wire \$auto$builder.cc:364:Unop$1152 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1148 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1150 ;
  /* src = "../rtl/register_interface/periph_to_reg.sv:25.28" */
  input [31:0] add_i;
  wire [31:0] add_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:28.28" */
  input [3:0] be_i;
  wire [3:0] be_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:21.28" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:30.28" */
  output gnt_o;
  wire gnt_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:29.28" */
  input [2:0] id_i;
  wire [2:0] id_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:40.18" */
  wire [2:0] r_id_d;
  /* src = "../rtl/register_interface/periph_to_reg.sv:33.28" */
  output [2:0] r_id_o;
  wire [2:0] r_id_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:40.26" */
  wire [2:0] r_id_q;
  /* src = "../rtl/register_interface/periph_to_reg.sv:41.18" */
  wire r_opc_d;
  /* src = "../rtl/register_interface/periph_to_reg.sv:32.28" */
  output r_opc_o;
  wire r_opc_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:41.27" */
  wire r_opc_q;
  /* src = "../rtl/register_interface/periph_to_reg.sv:43.18" */
  wire [31:0] r_rdata_d;
  /* src = "../rtl/register_interface/periph_to_reg.sv:31.28" */
  output [31:0] r_rdata_o;
  wire [31:0] r_rdata_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:43.29" */
  wire [31:0] r_rdata_q;
  /* src = "../rtl/register_interface/periph_to_reg.sv:42.18" */
  wire r_valid_d;
  /* src = "../rtl/register_interface/periph_to_reg.sv:34.28" */
  output r_valid_o;
  wire r_valid_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:42.29" */
  wire r_valid_q;
  /* src = "../rtl/register_interface/periph_to_reg.sv:36.28" */
  output [69:0] reg_req_o;
  wire [69:0] reg_req_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:37.28" */
  input [33:0] reg_rsp_i;
  wire [33:0] reg_rsp_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:24.28" */
  input req_i;
  wire req_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:22.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/register_interface/periph_to_reg.sv:27.28" */
  input [31:0] wdata_i;
  wire [31:0] wdata_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:26.28" */
  input wen_i;
  wire wen_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1147  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1148 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1153  (
    .A(req_i),
    .B(reg_rsp_i[0]),
    .Y(\$auto$builder.cc:338:Biop$1154 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1151  (
    .A(wen_i),
    .Y(\$auto$builder.cc:364:Unop$1152 )
  );
  /* src = "../rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$r_id_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_id_d),
    .Q(r_id_q)
  );
  /* src = "../rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$r_opc_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_opc_d),
    .Q(r_opc_q)
  );
  /* src = "../rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$r_rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_rdata_d),
    .Q(r_rdata_q)
  );
  /* src = "../rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$r_valid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_valid_d),
    .Q(r_valid_q)
  );
  assign r_id_d = id_i;
  assign r_opc_d = reg_rsp_i[1];
  assign r_valid_d = gnt_o;
  assign r_rdata_d = reg_rsp_i[33:2];
  assign reg_req_o[69:38] = add_i;
  assign reg_req_o[37] = \$auto$builder.cc:364:Unop$1152 ;
  assign reg_req_o[36:5] = wdata_i;
  assign reg_req_o[4:1] = be_i;
  assign reg_req_o[0] = req_i;
  assign gnt_o = \$auto$builder.cc:338:Biop$1154 ;
  assign r_rdata_o = r_rdata_q;
  assign r_opc_o = r_opc_q;
  assign r_id_o = r_id_q;
  assign r_valid_o = r_valid_q;
  assign \$auto$rtlil.cc:2747:LogicNot$1150  = rst_ni;
endmodule

/* src = "../rtl/register_interface/periph_to_reg.sv:13.8" */
module \periph_to_reg$croc_chip.i_croc_soc.i_croc.i_uart_translate (clk_i, rst_ni, req_i, wen_i, gnt_o, r_valid_o, r_opc_o, wdata_i, be_i, add_i, id_i, r_rdata_o, r_id_o, reg_req_o, reg_rsp_i);
  wire \$auto$builder.cc:338:Biop$1282 ;
  wire \$auto$builder.cc:364:Unop$1280 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1276 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1278 ;
  /* src = "../rtl/register_interface/periph_to_reg.sv:25.28" */
  input [31:0] add_i;
  wire [31:0] add_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:28.28" */
  input [3:0] be_i;
  wire [3:0] be_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:21.28" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:30.28" */
  output gnt_o;
  wire gnt_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:29.28" */
  input [2:0] id_i;
  wire [2:0] id_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:40.18" */
  wire [2:0] r_id_d;
  /* src = "../rtl/register_interface/periph_to_reg.sv:33.28" */
  output [2:0] r_id_o;
  wire [2:0] r_id_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:40.26" */
  wire [2:0] r_id_q;
  /* src = "../rtl/register_interface/periph_to_reg.sv:41.18" */
  wire r_opc_d;
  /* src = "../rtl/register_interface/periph_to_reg.sv:32.28" */
  output r_opc_o;
  wire r_opc_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:41.27" */
  wire r_opc_q;
  /* src = "../rtl/register_interface/periph_to_reg.sv:43.18" */
  wire [31:0] r_rdata_d;
  /* src = "../rtl/register_interface/periph_to_reg.sv:31.28" */
  output [31:0] r_rdata_o;
  wire [31:0] r_rdata_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:43.29" */
  wire [31:0] r_rdata_q;
  /* src = "../rtl/register_interface/periph_to_reg.sv:42.18" */
  wire r_valid_d;
  /* src = "../rtl/register_interface/periph_to_reg.sv:34.28" */
  output r_valid_o;
  wire r_valid_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:42.29" */
  wire r_valid_q;
  /* src = "../rtl/register_interface/periph_to_reg.sv:36.28" */
  output [69:0] reg_req_o;
  wire [69:0] reg_req_o;
  /* src = "../rtl/register_interface/periph_to_reg.sv:37.28" */
  input [33:0] reg_rsp_i;
  wire [33:0] reg_rsp_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:24.28" */
  input req_i;
  wire req_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:22.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/register_interface/periph_to_reg.sv:27.28" */
  input [31:0] wdata_i;
  wire [31:0] wdata_i;
  /* src = "../rtl/register_interface/periph_to_reg.sv:26.28" */
  input wen_i;
  wire wen_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1275  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1276 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1281  (
    .A(req_i),
    .B(reg_rsp_i[0]),
    .Y(\$auto$builder.cc:338:Biop$1282 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1279  (
    .A(wen_i),
    .Y(\$auto$builder.cc:364:Unop$1280 )
  );
  /* src = "../rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$r_id_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_id_d),
    .Q(r_id_q)
  );
  /* src = "../rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$r_opc_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_opc_d),
    .Q(r_opc_q)
  );
  /* src = "../rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$r_rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_rdata_d),
    .Q(r_rdata_q)
  );
  /* src = "../rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$r_valid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_valid_d),
    .Q(r_valid_q)
  );
  assign r_id_d = id_i;
  assign r_opc_d = reg_rsp_i[1];
  assign r_valid_d = gnt_o;
  assign r_rdata_d = reg_rsp_i[33:2];
  assign reg_req_o[69:38] = add_i;
  assign reg_req_o[37] = \$auto$builder.cc:364:Unop$1280 ;
  assign reg_req_o[36:5] = wdata_i;
  assign reg_req_o[4:1] = be_i;
  assign reg_req_o[0] = req_i;
  assign gnt_o = \$auto$builder.cc:338:Biop$1282 ;
  assign r_rdata_o = r_rdata_q;
  assign r_opc_o = r_opc_q;
  assign r_id_o = r_id_q;
  assign r_valid_o = r_valid_q;
  assign \$auto$rtlil.cc:2747:LogicNot$1278  = rst_ni;
endmodule

/* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:7.8" */
module \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootaddr (clk_i, rst_ni, we, wd, de, d, q, qs, qe);
  wire \$auto$rtlil.cc:2746:ReduceBool$4153 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4144 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4146 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4149 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4151 ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\q$4154 ;
  wire [31:0] \$procmux$14787_Y ;
  wire \$procmux$14788_CMP ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:12.9" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:22.18" */
  input [31:0] d;
  wire [31:0] d;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:21.18" */
  input de;
  wire de;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:26.25" */
  output [31:0] q;
  wire [31:0] q;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:25.25" */
  output qe;
  wire qe;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:27.25" */
  output [31:0] qs;
  wire [31:0] qs;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:13.9" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:18.18" */
  input [31:0] wd;
  wire [31:0] wd;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:17.18" */
  input we;
  wire we;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:31.18" */
  wire [31:0] wr_data;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:30.18" */
  wire wr_en;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4143  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4144 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4148  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4149 )
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:54.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$q  (
    .AD(32'd268435456),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\q$4154 ),
    .Q(q)
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:46.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$qe  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we),
    .Q(qe)
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:58.7-58.20|../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14787  (
    .A(q),
    .B(wr_data),
    .S(\$procmux$14788_CMP ),
    .Y(\$procmux$14787_Y )
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:36.5" */
  \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootaddr.wr_en_data_arb  wr_en_data_arb (
    .d(d),
    .de(de),
    .q(q),
    .wd(wd),
    .we(we),
    .wr_data(wr_data),
    .wr_en(wr_en)
  );
  assign qs = q;
  assign \$procmux$14788_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4153 ;
  assign \$auto$slang_frontend.cc:694:finish$\q$4154  = \$procmux$14787_Y ;
  assign \$auto$rtlil.cc:2747:LogicNot$4146  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$4151  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$4153  = wr_en;
endmodule

/* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:7.8" */
module \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootmode (clk_i, rst_ni, we, wd, de, d, q, qs, qe);
  wire \$auto$rtlil.cc:2746:ReduceBool$4192 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4183 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4185 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4188 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4190 ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  wire \$auto$slang_frontend.cc:694:finish$\q$4193 ;
  wire \$procmux$14781_Y ;
  wire \$procmux$14782_CMP ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:12.9" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:22.18" */
  input d;
  wire d;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:21.18" */
  input de;
  wire de;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:26.25" */
  output q;
  wire q;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:25.25" */
  output qe;
  wire qe;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:27.25" */
  output qs;
  wire qs;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:13.9" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:18.18" */
  input wd;
  wire wd;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:17.18" */
  input we;
  wire we;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:31.18" */
  wire wr_data;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:30.18" */
  wire wr_en;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4182  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4183 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4187  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4188 )
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:54.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\q$4193 ),
    .Q(q)
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:46.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$qe  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we),
    .Q(qe)
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:58.7-58.20|../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14781  (
    .A(q),
    .B(wr_data),
    .S(\$procmux$14782_CMP ),
    .Y(\$procmux$14781_Y )
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:36.5" */
  \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootmode.wr_en_data_arb  wr_en_data_arb (
    .d(d),
    .de(de),
    .q(q),
    .wd(wd),
    .we(we),
    .wr_data(wr_data),
    .wr_en(wr_en)
  );
  assign qs = q;
  assign \$procmux$14782_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4192 ;
  assign \$auto$slang_frontend.cc:694:finish$\q$4193  = \$procmux$14781_Y ;
  assign \$auto$rtlil.cc:2747:LogicNot$4185  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$4190  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$4192  = wr_en;
endmodule

/* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:7.8" */
module \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_corestatus (clk_i, rst_ni, we, wd, de, d, q, qs, qe);
  wire \$auto$rtlil.cc:2746:ReduceBool$4179 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4170 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4172 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4175 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4177 ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\q$4180 ;
  wire [31:0] \$procmux$14783_Y ;
  wire \$procmux$14784_CMP ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:12.9" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:22.18" */
  input [31:0] d;
  wire [31:0] d;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:21.18" */
  input de;
  wire de;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:26.25" */
  output [31:0] q;
  wire [31:0] q;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:25.25" */
  output qe;
  wire qe;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:27.25" */
  output [31:0] qs;
  wire [31:0] qs;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:13.9" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:18.18" */
  input [31:0] wd;
  wire [31:0] wd;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:17.18" */
  input we;
  wire we;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:31.18" */
  wire [31:0] wr_data;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:30.18" */
  wire wr_en;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4169  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4170 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4174  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4175 )
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:54.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\q$4180 ),
    .Q(q)
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:46.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$qe  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we),
    .Q(qe)
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:58.7-58.20|../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$14783  (
    .A(q),
    .B(wr_data),
    .S(\$procmux$14784_CMP ),
    .Y(\$procmux$14783_Y )
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:36.5" */
  \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_corestatus.wr_en_data_arb  wr_en_data_arb (
    .d(d),
    .de(de),
    .q(q),
    .wd(wd),
    .we(we),
    .wr_data(wr_data),
    .wr_en(wr_en)
  );
  assign qs = q;
  assign \$procmux$14784_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4179 ;
  assign \$auto$slang_frontend.cc:694:finish$\q$4180  = \$procmux$14783_Y ;
  assign \$auto$rtlil.cc:2747:LogicNot$4172  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$4177  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$4179  = wr_en;
endmodule

/* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:7.8" */
module \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_fetchen (clk_i, rst_ni, we, wd, de, d, q, qs, qe);
  wire \$auto$rtlil.cc:2746:ReduceBool$4166 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4157 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4159 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4162 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4164 ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  wire \$auto$slang_frontend.cc:694:finish$\q$4167 ;
  wire \$procmux$14785_Y ;
  wire \$procmux$14786_CMP ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:12.9" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:22.18" */
  input d;
  wire d;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:21.18" */
  input de;
  wire de;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:26.25" */
  output q;
  wire q;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:25.25" */
  output qe;
  wire qe;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:27.25" */
  output qs;
  wire qs;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:13.9" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:18.18" */
  input wd;
  wire wd;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:17.18" */
  input we;
  wire we;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:31.18" */
  wire wr_data;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:30.18" */
  wire wr_en;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4156  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4157 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4161  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4162 )
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:54.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\q$4167 ),
    .Q(q)
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:46.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$qe  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we),
    .Q(qe)
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:58.7-58.20|../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14785  (
    .A(q),
    .B(wr_data),
    .S(\$procmux$14786_CMP ),
    .Y(\$procmux$14785_Y )
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:36.5" */
  \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_fetchen.wr_en_data_arb  wr_en_data_arb (
    .d(d),
    .de(de),
    .q(q),
    .wd(wd),
    .we(we),
    .wr_data(wr_data),
    .wr_en(wr_en)
  );
  assign qs = q;
  assign \$procmux$14786_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4166 ;
  assign \$auto$slang_frontend.cc:694:finish$\q$4167  = \$procmux$14785_Y ;
  assign \$auto$rtlil.cc:2747:LogicNot$4159  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$4164  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$4166  = wr_en;
endmodule

/* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:7.8" */
module \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_sram_dly (clk_i, rst_ni, we, wd, de, d, q, qs, qe);
  wire \$auto$rtlil.cc:2746:ReduceBool$4205 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4196 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4198 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4201 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4203 ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  wire \$auto$slang_frontend.cc:694:finish$\q$4206 ;
  wire \$procmux$14779_Y ;
  wire \$procmux$14780_CMP ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:12.9" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:22.18" */
  input d;
  wire d;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:21.18" */
  input de;
  wire de;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:26.25" */
  output q;
  wire q;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:25.25" */
  output qe;
  wire qe;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:27.25" */
  output qs;
  wire qs;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:13.9" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:18.18" */
  input wd;
  wire wd;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:17.18" */
  input we;
  wire we;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:31.18" */
  wire wr_data;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:30.18" */
  wire wr_en;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4195  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4196 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4200  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4201 )
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:54.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$q  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\q$4206 ),
    .Q(q)
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:46.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$qe  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we),
    .Q(qe)
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:58.7-58.20|../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14779  (
    .A(q),
    .B(wr_data),
    .S(\$procmux$14780_CMP ),
    .Y(\$procmux$14779_Y )
  );
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:36.5" */
  \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_sram_dly.wr_en_data_arb  wr_en_data_arb (
    .d(d),
    .de(de),
    .q(q),
    .wd(wd),
    .we(we),
    .wr_data(wr_data),
    .wr_en(wr_en)
  );
  assign qs = q;
  assign \$procmux$14780_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4205 ;
  assign \$auto$slang_frontend.cc:694:finish$\q$4206  = \$procmux$14779_Y ;
  assign \$auto$rtlil.cc:2747:LogicNot$4198  = rst_ni;
  assign \$auto$rtlil.cc:2747:LogicNot$4203  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$4205  = wr_en;
endmodule

/* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:7.8" */
module \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootaddr.wr_en_data_arb (we, wd, de, d, q, wr_en, wr_data);
  wire \$auto$builder.cc:338:Biop$8060 ;
  wire \$auto$builder.cc:338:Biop$8062 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8064 ;
  wire [31:0] \$auto$rtlil.cc:2874:Mux$8066 ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:18.18" */
  input [31:0] d;
  wire [31:0] d;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:17.18" */
  input de;
  wire de;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:32.20" */
  wire [31:0] \gen_w.unused_q ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:21.18" */
  input [31:0] q;
  wire [31:0] q;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:14.18" */
  input [31:0] wd;
  wire [31:0] wd;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:13.18" */
  input we;
  wire we;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:25.25" */
  output [31:0] wr_data;
  wire [31:0] wr_data;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:24.25" */
  output wr_en;
  wire wr_en;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8059  (
    .A(we),
    .B(de),
    .Y(\$auto$builder.cc:338:Biop$8060 )
  );
  \$mux  #(
    .WIDTH(32'd32)
  ) \$auto$slang_frontend.cc:2041:operator()$8065  (
    .A(d),
    .B(wd),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8064 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8066 )
  );
  assign wr_en = \$auto$builder.cc:338:Biop$8060 ;
  assign wr_data = \$auto$rtlil.cc:2874:Mux$8066 ;
  assign \gen_w.unused_q  = q;
  assign \$auto$builder.cc:338:Biop$8062  = we;
  assign \$auto$rtlil.cc:2746:ReduceBool$8064  = we;
endmodule

/* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:7.8" */
module \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootmode.wr_en_data_arb (we, wd, de, d, q, wr_en, wr_data);
  wire \$auto$builder.cc:338:Biop$8084 ;
  wire \$auto$builder.cc:338:Biop$8086 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8088 ;
  wire \$auto$rtlil.cc:2874:Mux$8090 ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:18.18" */
  input d;
  wire d;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:17.18" */
  input de;
  wire de;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:32.20" */
  wire \gen_w.unused_q ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:21.18" */
  input q;
  wire q;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:14.18" */
  input wd;
  wire wd;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:13.18" */
  input we;
  wire we;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:25.25" */
  output wr_data;
  wire wr_data;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:24.25" */
  output wr_en;
  wire wr_en;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8083  (
    .A(we),
    .B(de),
    .Y(\$auto$builder.cc:338:Biop$8084 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8089  (
    .A(d),
    .B(wd),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8088 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8090 )
  );
  assign wr_en = \$auto$builder.cc:338:Biop$8084 ;
  assign wr_data = \$auto$rtlil.cc:2874:Mux$8090 ;
  assign \gen_w.unused_q  = q;
  assign \$auto$builder.cc:338:Biop$8086  = we;
  assign \$auto$rtlil.cc:2746:ReduceBool$8088  = we;
endmodule

/* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:7.8" */
module \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_corestatus.wr_en_data_arb (we, wd, de, d, q, wr_en, wr_data);
  wire \$auto$builder.cc:338:Biop$8076 ;
  wire \$auto$builder.cc:338:Biop$8078 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8080 ;
  wire [31:0] \$auto$rtlil.cc:2874:Mux$8082 ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:18.18" */
  input [31:0] d;
  wire [31:0] d;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:17.18" */
  input de;
  wire de;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:32.20" */
  wire [31:0] \gen_w.unused_q ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:21.18" */
  input [31:0] q;
  wire [31:0] q;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:14.18" */
  input [31:0] wd;
  wire [31:0] wd;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:13.18" */
  input we;
  wire we;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:25.25" */
  output [31:0] wr_data;
  wire [31:0] wr_data;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:24.25" */
  output wr_en;
  wire wr_en;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8075  (
    .A(we),
    .B(de),
    .Y(\$auto$builder.cc:338:Biop$8076 )
  );
  \$mux  #(
    .WIDTH(32'd32)
  ) \$auto$slang_frontend.cc:2041:operator()$8081  (
    .A(d),
    .B(wd),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8080 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8082 )
  );
  assign wr_en = \$auto$builder.cc:338:Biop$8076 ;
  assign wr_data = \$auto$rtlil.cc:2874:Mux$8082 ;
  assign \gen_w.unused_q  = q;
  assign \$auto$builder.cc:338:Biop$8078  = we;
  assign \$auto$rtlil.cc:2746:ReduceBool$8080  = we;
endmodule

/* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:7.8" */
module \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_fetchen.wr_en_data_arb (we, wd, de, d, q, wr_en, wr_data);
  wire \$auto$builder.cc:338:Biop$8068 ;
  wire \$auto$builder.cc:338:Biop$8070 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8072 ;
  wire \$auto$rtlil.cc:2874:Mux$8074 ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:18.18" */
  input d;
  wire d;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:17.18" */
  input de;
  wire de;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:32.20" */
  wire \gen_w.unused_q ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:21.18" */
  input q;
  wire q;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:14.18" */
  input wd;
  wire wd;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:13.18" */
  input we;
  wire we;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:25.25" */
  output wr_data;
  wire wr_data;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:24.25" */
  output wr_en;
  wire wr_en;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8067  (
    .A(we),
    .B(de),
    .Y(\$auto$builder.cc:338:Biop$8068 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8073  (
    .A(d),
    .B(wd),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8072 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8074 )
  );
  assign wr_en = \$auto$builder.cc:338:Biop$8068 ;
  assign wr_data = \$auto$rtlil.cc:2874:Mux$8074 ;
  assign \gen_w.unused_q  = q;
  assign \$auto$builder.cc:338:Biop$8070  = we;
  assign \$auto$rtlil.cc:2746:ReduceBool$8072  = we;
endmodule

/* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:7.8" */
module \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_sram_dly.wr_en_data_arb (we, wd, de, d, q, wr_en, wr_data);
  wire \$auto$builder.cc:338:Biop$8092 ;
  wire \$auto$builder.cc:338:Biop$8094 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8096 ;
  wire \$auto$rtlil.cc:2874:Mux$8098 ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:18.18" */
  input d;
  wire d;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:17.18" */
  input de;
  wire de;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:32.20" */
  wire \gen_w.unused_q ;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:21.18" */
  input q;
  wire q;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:14.18" */
  input wd;
  wire wd;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:13.18" */
  input we;
  wire we;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:25.25" */
  output wr_data;
  wire wr_data;
  /* src = "../rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:24.25" */
  output wr_en;
  wire wr_en;
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8091  (
    .A(we),
    .B(de),
    .Y(\$auto$builder.cc:338:Biop$8092 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8097  (
    .A(d),
    .B(wd),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8096 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8098 )
  );
  assign wr_en = \$auto$builder.cc:338:Biop$8092 ;
  assign wr_data = \$auto$rtlil.cc:2874:Mux$8098 ;
  assign \gen_w.unused_q  = q;
  assign \$auto$builder.cc:338:Biop$8094  = we;
  assign \$auto$rtlil.cc:2746:ReduceBool$8096  = we;
endmodule

/* src = "../rtl/register_interface/reg_to_apb.sv:7.8" */
module \reg_to_apb$croc_chip.i_croc_soc.i_croc.i_uart.i_reg_uart_reg_to_apb (clk_i, rst_ni, reg_req_i, reg_rsp_o, apb_req_o, apb_rsp_i);
  wire \$auto$rtlil.cc:2746:ReduceBool$4209 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$4212 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4219 ;
  wire \$auto$rtlil.cc:2747:LogicNot$4221 ;
  /* src = "../rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  wire \$auto$slang_frontend.cc:694:finish$\apb_req_o[37]$4216 ;
  /* src = "../rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  wire \$auto$slang_frontend.cc:694:finish$\reg_rsp_o[0]$4214 ;
  /* src = "../rtl/register_interface/reg_to_apb.sv:54.14-54.52" */
  wire \$auto$slang_frontend.cc:694:finish$\state_d$4210 ;
  /* src = "../rtl/register_interface/reg_to_apb.sv:59.9-59.47" */
  wire \$auto$slang_frontend.cc:694:finish$\state_d$4213 ;
  /* src = "../rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  wire \$auto$slang_frontend.cc:694:finish$\state_d$4215 ;
  wire \$procmux$14759_Y ;
  wire \$procmux$14760_CMP ;
  wire \$procmux$14761_Y ;
  wire \$procmux$14762_CMP ;
  wire \$procmux$14764_Y ;
  wire \$procmux$14765_CMP ;
  wire \$procmux$14767_CMP ;
  wire \$procmux$14769_Y ;
  wire \$procmux$14770_CMP ;
  wire \$procmux$14771_Y ;
  wire \$procmux$14772_CMP ;
  wire \$procmux$14774_Y ;
  wire \$procmux$14775_CMP ;
  wire \$procmux$14777_Y ;
  wire \$procmux$14778_CMP ;
  /* src = "../rtl/register_interface/reg_to_apb.sv:26.20" */
  output [73:0] apb_req_o;
  wire [73:0] apb_req_o;
  /* src = "../rtl/register_interface/reg_to_apb.sv:27.20" */
  input [33:0] apb_rsp_i;
  wire [33:0] apb_rsp_i;
  /* src = "../rtl/register_interface/reg_to_apb.sv:18.20" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/register_interface/reg_to_apb.sv:22.20" */
  input [69:0] reg_req_i;
  wire [69:0] reg_req_i;
  /* src = "../rtl/register_interface/reg_to_apb.sv:23.20" */
  output [33:0] reg_rsp_o;
  wire [33:0] reg_rsp_o;
  /* src = "../rtl/register_interface/reg_to_apb.sv:19.20" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/register_interface/reg_to_apb.sv:32.11" */
  wire state_d;
  /* src = "../rtl/register_interface/reg_to_apb.sv:32.20" */
  wire state_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$4218  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$4219 )
  );
  /* src = "../rtl/register_interface/reg_to_apb.sv:66.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$state_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "../rtl/register_interface/reg_to_apb.sv:59.31-59.47|../rtl/register_interface/reg_to_apb.sv:59.9-59.47" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14759  (
    .A(state_q),
    .B(1'h0),
    .S(\$procmux$14760_CMP ),
    .Y(\$procmux$14759_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/register_interface/reg_to_apb.sv:56.15-60.10|../rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14761  (
    .A(1'hx),
    .B(\$procmux$14759_Y ),
    .S(\$procmux$14762_CMP ),
    .Y(\$procmux$14761_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/register_interface/reg_to_apb.sv:56.15-60.10|../rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$14764  (
    .A(1'hx),
    .B({ \$auto$slang_frontend.cc:694:finish$\state_d$4210 , \$auto$slang_frontend.cc:694:finish$\state_d$4213  }),
    .S({ \$procmux$14767_CMP , \$procmux$14765_CMP  }),
    .Y(\$procmux$14764_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/register_interface/reg_to_apb.sv:54.14-54.52|../rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$14767_CMP0  (
    .A(state_q),
    .Y(\$procmux$14767_CMP )
  );
  /* src = "../rtl/register_interface/reg_to_apb.sv:54.35-54.52|../rtl/register_interface/reg_to_apb.sv:54.14-54.52" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14769  (
    .A(state_q),
    .B(1'h1),
    .S(\$procmux$14770_CMP ),
    .Y(\$procmux$14769_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/register_interface/reg_to_apb.sv:54.14-54.52|../rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14771  (
    .A(\$procmux$14769_Y ),
    .B(1'hx),
    .S(state_q),
    .Y(\$procmux$14771_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/register_interface/reg_to_apb.sv:54.14-54.52|../rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$14772_CMP0  (
    .A(state_q),
    .Y(\$procmux$14772_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/register_interface/reg_to_apb.sv:56.15-60.10|../rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14774  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$14775_CMP ),
    .Y(\$procmux$14774_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/register_interface/reg_to_apb.sv:56.15-60.10|../rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$14777  (
    .A(1'h0),
    .B(apb_rsp_i[33]),
    .S(\$procmux$14778_CMP ),
    .Y(\$procmux$14777_Y )
  );
  assign apb_req_o[73:42] = reg_req_i[69:38];
  assign apb_req_o[36] = reg_req_i[37];
  assign apb_req_o[35:4] = reg_req_i[36:5];
  assign apb_req_o[38] = reg_req_i[0];
  assign apb_req_o[3:0] = reg_req_i[4:1];
  assign reg_rsp_o[1] = apb_rsp_i[0];
  assign reg_rsp_o[33:2] = apb_rsp_i[32:1];
  assign apb_req_o[41:39] = 3'h2;
  assign reg_rsp_o[0] = \$auto$slang_frontend.cc:694:finish$\reg_rsp_o[0]$4214 ;
  assign state_d = \$auto$slang_frontend.cc:694:finish$\state_d$4215 ;
  assign apb_req_o[37] = \$auto$slang_frontend.cc:694:finish$\apb_req_o[37]$4216 ;
  assign \$procmux$14760_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4212 ;
  assign \$procmux$14762_CMP  = state_q;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$4213  = \$procmux$14761_Y ;
  assign \$procmux$14765_CMP  = state_q;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$4215  = \$procmux$14764_Y ;
  assign \$procmux$14770_CMP  = \$auto$rtlil.cc:2746:ReduceBool$4209 ;
  assign \$auto$slang_frontend.cc:694:finish$\state_d$4210  = \$procmux$14771_Y ;
  assign \$procmux$14775_CMP  = state_q;
  assign \$auto$slang_frontend.cc:694:finish$\apb_req_o[37]$4216  = \$procmux$14774_Y ;
  assign \$procmux$14778_CMP  = state_q;
  assign \$auto$slang_frontend.cc:694:finish$\reg_rsp_o[0]$4214  = \$procmux$14777_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$4209  = reg_req_i[0];
  assign \$auto$rtlil.cc:2746:ReduceBool$4212  = apb_rsp_i[33];
  assign \$auto$rtlil.cc:2747:LogicNot$4221  = rst_ni;
endmodule

/* src = "../rtl/apb_uart/reg_uart_wrap.sv:31.8" */
module \reg_uart_wrap$croc_chip.i_croc_soc.i_croc.i_uart (clk_i, rst_ni, reg_req_i, reg_rsp_o, intr_o, cts_ni, dsr_ni, dcd_ni, rin_ni, sin_i, sout_o, out1_no, out2_no, rts_no, dtr_no);
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:36.16" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:49.16" */
  input cts_ni;
  wire cts_ni;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:51.16" */
  input dcd_ni;
  wire dcd_ni;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:50.16" */
  input dsr_ni;
  wire dsr_ni;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:48.16" */
  output dtr_no;
  wire dtr_no;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:44.16" */
  output intr_o;
  wire intr_o;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:45.16" */
  output out1_no;
  wire out1_no;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:46.16" */
  output out2_no;
  wire out2_no;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:40.20" */
  input [69:0] reg_req_i;
  wire [69:0] reg_req_i;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:41.20" */
  output [33:0] reg_rsp_o;
  wire [33:0] reg_rsp_o;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:52.16" */
  input rin_ni;
  wire rin_ni;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:37.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:47.16" */
  output rts_no;
  wire rts_no;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:53.16" */
  input sin_i;
  wire sin_i;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:54.16" */
  output sout_o;
  wire sout_o;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:59.22" */
  wire [73:0] uart_apb_req;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:60.22" */
  wire [33:0] uart_apb_rsp;
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:76.12" */
  \apb_uart$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart  i_apb_uart (
    .CLK(clk_i),
    .CTSN(cts_ni),
    .DCDN(dcd_ni),
    .DSRN(dsr_ni),
    .DTRN(dtr_no),
    .INT(intr_o),
    .OUT1N(out1_no),
    .OUT2N(out2_no),
    .PADDR(uart_apb_req[46:44]),
    .PENABLE(uart_apb_req[37]),
    .PRDATA(uart_apb_rsp[32:1]),
    .PREADY(uart_apb_rsp[33]),
    .PSEL(uart_apb_req[38]),
    .PSLVERR(uart_apb_rsp[0]),
    .PWDATA(uart_apb_req[35:4]),
    .PWRITE(uart_apb_req[36]),
    .RIN(rin_ni),
    .RSTN(rst_ni),
    .RTSN(rts_no),
    .SIN(sin_i),
    .SOUT(sout_o)
  );
  /* src = "../rtl/apb_uart/reg_uart_wrap.sv:67.5" */
  \reg_to_apb$croc_chip.i_croc_soc.i_croc.i_uart.i_reg_uart_reg_to_apb  i_reg_uart_reg_to_apb (
    .apb_req_o(uart_apb_req),
    .apb_rsp_i(uart_apb_rsp),
    .clk_i(clk_i),
    .reg_req_i(reg_req_i),
    .reg_rsp_o(reg_rsp_o),
    .rst_ni(rst_ni)
  );
endmodule

/* src = "../rtl/common_cells/rr_arb_tree.sv:49.8" */
module \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb (clk_i, rst_ni, req_i, gnt_o, req_o, gnt_i, idx_o, flush_i, data_i, data_o, rr_i);
  wire \$auto$builder.cc:338:Biop$6697 ;
  wire \$auto$builder.cc:338:Biop$6727 ;
  wire \$auto$builder.cc:338:Biop$6733 ;
  wire \$auto$builder.cc:338:Biop$6739 ;
  wire \$auto$builder.cc:338:Biop$6745 ;
  wire \$auto$builder.cc:338:Biop$6751 ;
  wire \$auto$builder.cc:338:Biop$6757 ;
  wire \$auto$builder.cc:338:Biop$6767 ;
  wire \$auto$builder.cc:338:Biop$6781 ;
  wire \$auto$builder.cc:338:Biop$6785 ;
  wire \$auto$builder.cc:338:Biop$6787 ;
  wire \$auto$builder.cc:338:Biop$6799 ;
  wire \$auto$builder.cc:338:Biop$6801 ;
  wire \$auto$builder.cc:338:Biop$6803 ;
  wire \$auto$builder.cc:338:Biop$6807 ;
  wire \$auto$builder.cc:338:Biop$6809 ;
  wire \$auto$builder.cc:338:Biop$6815 ;
  wire \$auto$builder.cc:338:Biop$6817 ;
  wire \$auto$builder.cc:338:Biop$6821 ;
  wire \$auto$builder.cc:338:Biop$6823 ;
  wire \$auto$builder.cc:338:Biop$6825 ;
  wire \$auto$builder.cc:338:Biop$6827 ;
  wire \$auto$builder.cc:338:Biop$6829 ;
  wire \$auto$builder.cc:338:Biop$6833 ;
  wire \$auto$builder.cc:338:Biop$6835 ;
  wire \$auto$builder.cc:338:Biop$6841 ;
  wire \$auto$builder.cc:338:Biop$6843 ;
  wire \$auto$builder.cc:338:Biop$6847 ;
  wire \$auto$builder.cc:338:Biop$6849 ;
  wire \$auto$builder.cc:338:Biop$6851 ;
  wire \$auto$builder.cc:338:Biop$6853 ;
  wire \$auto$builder.cc:364:Unop$6695 ;
  wire \$auto$builder.cc:364:Unop$6783 ;
  wire \$auto$builder.cc:364:Unop$6797 ;
  wire \$auto$builder.cc:364:Unop$6805 ;
  wire \$auto$builder.cc:364:Unop$6819 ;
  wire \$auto$builder.cc:364:Unop$6831 ;
  wire \$auto$builder.cc:364:Unop$6845 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6699 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6708 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6716 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6719 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6723 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6729 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6735 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6741 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6747 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6753 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6759 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6763 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6769 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6778 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6789 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6793 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6811 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6837 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6704 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6706 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6712 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6714 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6774 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6776 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$6701 ;
  wire \$auto$rtlil.cc:2874:Mux$6721 ;
  wire \$auto$rtlil.cc:2874:Mux$6725 ;
  wire \$auto$rtlil.cc:2874:Mux$6731 ;
  wire \$auto$rtlil.cc:2874:Mux$6737 ;
  wire \$auto$rtlil.cc:2874:Mux$6743 ;
  wire \$auto$rtlil.cc:2874:Mux$6749 ;
  wire \$auto$rtlil.cc:2874:Mux$6755 ;
  wire \$auto$rtlil.cc:2874:Mux$6761 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$6765 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$6771 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$6791 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$6795 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$6813 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$6839 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  wire \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$6709 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$6717 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$6779 ;
  wire [1:0] \$procmux$13768_Y ;
  wire \$procmux$13769_CMP ;
  wire [3:0] \$procmux$13771_Y ;
  wire \$procmux$13772_CMP ;
  wire \$procmux$13774_Y ;
  wire \$procmux$13775_CMP ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:89.31" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:103.31" */
  input [283:0] data_i;
  wire [283:0] data_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:109.31" */
  output [70:0] data_o;
  wire [70:0] data_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:93.31" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:126.33" */
  wire [212:0] \gen_arbiter.data_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:193.40" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_empty ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.40" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:191.40" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.53" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:193.27" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.27" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:191.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:146.16" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:146.24" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:147.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:142.13" */
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:127.33" */
  wire [2:0] \gen_arbiter.gnt_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:125.33" */
  wire [5:0] \gen_arbiter.index_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:131.33" */
  wire [3:0] \gen_arbiter.req_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:128.33" */
  wire [2:0] \gen_arbiter.req_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:130.33" */
  wire [1:0] \gen_arbiter.rr_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:107.31" */
  input gnt_i;
  wire gnt_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:100.31" */
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:111.31" */
  output [1:0] idx_o;
  wire [1:0] idx_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:97.31" */
  input [3:0] req_i;
  wire [3:0] req_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:105.31" */
  output req_o;
  wire req_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:95.31" */
  input [1:0] rr_i;
  wire [1:0] rr_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:91.31" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6703  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6704 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6711  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6712 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6773  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6774 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6696  (
    .A(req_o),
    .B(\$auto$builder.cc:364:Unop$6695 ),
    .Y(\$auto$builder.cc:338:Biop$6697 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6726  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$6727 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6732  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$6733 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6738  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$6739 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6744  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$6745 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6750  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$6751 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6756  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$6757 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6766  (
    .A(gnt_i),
    .B(req_o),
    .Y(\$auto$builder.cc:338:Biop$6767 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6780  (
    .A(\gen_arbiter.req_nodes [1]),
    .B(\gen_arbiter.req_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$6781 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6784  (
    .A(\gen_arbiter.req_nodes [2]),
    .B(\gen_arbiter.rr_q [1]),
    .Y(\$auto$builder.cc:338:Biop$6785 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6786  (
    .A(\$auto$builder.cc:364:Unop$6783 ),
    .B(\$auto$builder.cc:338:Biop$6785 ),
    .Y(\$auto$builder.cc:338:Biop$6787 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6798  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\$auto$builder.cc:364:Unop$6797 ),
    .Y(\$auto$builder.cc:338:Biop$6799 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6800  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$auto$builder.cc:338:Biop$6801 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6802  (
    .A(\gen_arbiter.req_d [0]),
    .B(\gen_arbiter.req_d [1]),
    .Y(\$auto$builder.cc:338:Biop$6803 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6806  (
    .A(\gen_arbiter.req_d [1]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$auto$builder.cc:338:Biop$6807 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6808  (
    .A(\$auto$builder.cc:364:Unop$6805 ),
    .B(\$auto$builder.cc:338:Biop$6807 ),
    .Y(\$auto$builder.cc:338:Biop$6809 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6820  (
    .A(\$auto$builder.cc:338:Biop$6817 ),
    .B(\$auto$builder.cc:364:Unop$6819 ),
    .Y(\$auto$builder.cc:338:Biop$6821 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6826  (
    .A(\$auto$builder.cc:338:Biop$6825 ),
    .B(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$auto$builder.cc:338:Biop$6827 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6828  (
    .A(\gen_arbiter.req_d [2]),
    .B(\gen_arbiter.req_d [3]),
    .Y(\$auto$builder.cc:338:Biop$6829 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6832  (
    .A(\gen_arbiter.req_d [3]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$auto$builder.cc:338:Biop$6833 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6834  (
    .A(\$auto$builder.cc:364:Unop$6831 ),
    .B(\$auto$builder.cc:338:Biop$6833 ),
    .Y(\$auto$builder.cc:338:Biop$6835 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6846  (
    .A(\$auto$builder.cc:338:Biop$6843 ),
    .B(\$auto$builder.cc:364:Unop$6845 ),
    .Y(\$auto$builder.cc:338:Biop$6847 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6852  (
    .A(\$auto$builder.cc:338:Biop$6851 ),
    .B(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$auto$builder.cc:338:Biop$6853 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6694  (
    .A(gnt_i),
    .Y(\$auto$builder.cc:364:Unop$6695 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6782  (
    .A(\gen_arbiter.req_nodes [1]),
    .Y(\$auto$builder.cc:364:Unop$6783 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6796  (
    .A(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$auto$builder.cc:364:Unop$6797 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6804  (
    .A(\gen_arbiter.req_d [0]),
    .Y(\$auto$builder.cc:364:Unop$6805 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6818  (
    .A(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$auto$builder.cc:364:Unop$6819 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6830  (
    .A(\gen_arbiter.req_d [2]),
    .Y(\$auto$builder.cc:364:Unop$6831 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6844  (
    .A(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$auto$builder.cc:364:Unop$6845 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$6700  (
    .A(req_i),
    .B(\gen_arbiter.gen_int_rr.gen_lock.req_q ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6699 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6701 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$6730  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6729 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6731 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$6736  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6735 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6737 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$6742  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6741 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6743 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$6748  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6747 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6749 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$6754  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6753 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6755 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$6760  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6759 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6761 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$6764  (
    .A(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6763 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6765 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$6770  (
    .A(\gen_arbiter.rr_q ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6769 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6771 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$6790  (
    .A({ 1'h0, \gen_arbiter.index_nodes [2] }),
    .B({ 1'h1, \gen_arbiter.index_nodes [4] }),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6789 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6791 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$6794  (
    .A(\gen_arbiter.data_nodes [141:71]),
    .B(\gen_arbiter.data_nodes [212:142]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6793 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6795 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$6812  (
    .A(data_i[70:0]),
    .B(data_i[141:71]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6811 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6813 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$6838  (
    .A(data_i[212:142]),
    .B(data_i[283:213]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6837 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6839 )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:152.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.lock_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$6709 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.lock_q )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:175.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.req_q  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$6717 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.req_q )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:226.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$gen_arbiter.rr_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$6779 ),
    .Q(\gen_arbiter.rr_q )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:231.13-231.26|../rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13768  (
    .A(\$auto$rtlil.cc:2874:Mux$6771 ),
    .B(2'h0),
    .S(\$procmux$13769_CMP ),
    .Y(\$procmux$13768_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:180.15-180.28|../rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13771  (
    .A(\$auto$rtlil.cc:2874:Mux$6701 ),
    .B(4'h0),
    .S(\$procmux$13772_CMP ),
    .Y(\$procmux$13771_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:157.15-157.28|../rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13774  (
    .A(\$auto$builder.cc:338:Biop$6697 ),
    .B(1'h0),
    .S(\$procmux$13775_CMP ),
    .Y(\$procmux$13774_Y )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:212.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:203.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign req_o = \gen_arbiter.req_nodes [0];
  assign data_o = \gen_arbiter.data_nodes [70:0];
  assign idx_o = \gen_arbiter.index_nodes [1:0];
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d  = \$auto$builder.cc:338:Biop$6697 ;
  assign \gen_arbiter.req_d  = \$auto$rtlil.cc:2874:Mux$6701 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = \$auto$rtlil.cc:2874:Mux$6721 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = \$auto$rtlil.cc:2874:Mux$6725 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = \$auto$rtlil.cc:2874:Mux$6731 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = \$auto$rtlil.cc:2874:Mux$6737 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = \$auto$rtlil.cc:2874:Mux$6743 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = \$auto$rtlil.cc:2874:Mux$6749 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = \$auto$rtlil.cc:2874:Mux$6755 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = \$auto$rtlil.cc:2874:Mux$6761 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \$auto$rtlil.cc:2874:Mux$6765 ;
  assign \gen_arbiter.gen_int_rr.rr_d  = \$auto$rtlil.cc:2874:Mux$6771 ;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.req_nodes [0] = \$auto$builder.cc:338:Biop$6781 ;
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = \$auto$builder.cc:338:Biop$6787 ;
  assign \gen_arbiter.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$6791 ;
  assign \gen_arbiter.data_nodes [70:0] = \$auto$rtlil.cc:2874:Mux$6795 ;
  assign \gen_arbiter.gnt_nodes [1] = \$auto$builder.cc:338:Biop$6799 ;
  assign \gen_arbiter.gnt_nodes [2] = \$auto$builder.cc:338:Biop$6801 ;
  assign \gen_arbiter.req_nodes [1] = \$auto$builder.cc:338:Biop$6803 ;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = \$auto$builder.cc:338:Biop$6809 ;
  assign \gen_arbiter.index_nodes [3:2] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign \gen_arbiter.data_nodes [141:71] = \$auto$rtlil.cc:2874:Mux$6813 ;
  assign gnt_o[0] = \$auto$builder.cc:338:Biop$6821 ;
  assign gnt_o[1] = \$auto$builder.cc:338:Biop$6827 ;
  assign \gen_arbiter.req_nodes [2] = \$auto$builder.cc:338:Biop$6829 ;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = \$auto$builder.cc:338:Biop$6835 ;
  assign \gen_arbiter.index_nodes [5:4] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel  };
  assign \gen_arbiter.data_nodes [212:142] = \$auto$rtlil.cc:2874:Mux$6839 ;
  assign gnt_o[2] = \$auto$builder.cc:338:Biop$6847 ;
  assign gnt_o[3] = \$auto$builder.cc:338:Biop$6853 ;
  assign \$procmux$13769_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6778 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$6779  = \$procmux$13768_Y ;
  assign \$procmux$13772_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6716 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$6717  = \$procmux$13771_Y ;
  assign \$procmux$13775_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6708 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$6709  = \$procmux$13774_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6699  = \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  assign \$auto$rtlil.cc:2747:LogicNot$6706  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$6708  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$6714  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$6716  = flush_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6719  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$6721  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$6723  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$6725  = \gen_arbiter.req_d [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$6729  = \$auto$builder.cc:338:Biop$6727 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6735  = \$auto$builder.cc:338:Biop$6733 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6741  = \$auto$builder.cc:338:Biop$6739 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6747  = \$auto$builder.cc:338:Biop$6745 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6753  = \$auto$builder.cc:338:Biop$6751 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6759  = \$auto$builder.cc:338:Biop$6757 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6763  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6769  = \$auto$builder.cc:338:Biop$6767 ;
  assign \$auto$rtlil.cc:2747:LogicNot$6776  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$6778  = flush_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6789  = \$auto$builder.cc:338:Biop$6787 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6793  = \$auto$builder.cc:338:Biop$6787 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6811  = \$auto$builder.cc:338:Biop$6809 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6837  = \$auto$builder.cc:338:Biop$6835 ;
  assign \$auto$builder.cc:338:Biop$6815  = 1'h1;
  assign \$auto$builder.cc:338:Biop$6817  = \$auto$builder.cc:338:Biop$6799 ;
  assign \$auto$builder.cc:338:Biop$6823  = 1'h1;
  assign \$auto$builder.cc:338:Biop$6825  = \$auto$builder.cc:338:Biop$6799 ;
  assign \$auto$builder.cc:338:Biop$6841  = 1'h1;
  assign \$auto$builder.cc:338:Biop$6843  = \$auto$builder.cc:338:Biop$6801 ;
  assign \$auto$builder.cc:338:Biop$6849  = 1'h1;
  assign \$auto$builder.cc:338:Biop$6851  = \$auto$builder.cc:338:Biop$6801 ;
endmodule

/* src = "../rtl/common_cells/rr_arb_tree.sv:49.8" */
module \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb (clk_i, rst_ni, req_i, gnt_o, req_o, gnt_i, idx_o, flush_i, data_i, data_o, rr_i);
  wire \$auto$builder.cc:338:Biop$6970 ;
  wire \$auto$builder.cc:338:Biop$7000 ;
  wire \$auto$builder.cc:338:Biop$7006 ;
  wire \$auto$builder.cc:338:Biop$7012 ;
  wire \$auto$builder.cc:338:Biop$7018 ;
  wire \$auto$builder.cc:338:Biop$7024 ;
  wire \$auto$builder.cc:338:Biop$7030 ;
  wire \$auto$builder.cc:338:Biop$7040 ;
  wire \$auto$builder.cc:338:Biop$7054 ;
  wire \$auto$builder.cc:338:Biop$7058 ;
  wire \$auto$builder.cc:338:Biop$7060 ;
  wire \$auto$builder.cc:338:Biop$7072 ;
  wire \$auto$builder.cc:338:Biop$7074 ;
  wire \$auto$builder.cc:338:Biop$7076 ;
  wire \$auto$builder.cc:338:Biop$7080 ;
  wire \$auto$builder.cc:338:Biop$7082 ;
  wire \$auto$builder.cc:338:Biop$7088 ;
  wire \$auto$builder.cc:338:Biop$7090 ;
  wire \$auto$builder.cc:338:Biop$7094 ;
  wire \$auto$builder.cc:338:Biop$7096 ;
  wire \$auto$builder.cc:338:Biop$7098 ;
  wire \$auto$builder.cc:338:Biop$7100 ;
  wire \$auto$builder.cc:338:Biop$7102 ;
  wire \$auto$builder.cc:338:Biop$7106 ;
  wire \$auto$builder.cc:338:Biop$7108 ;
  wire \$auto$builder.cc:338:Biop$7114 ;
  wire \$auto$builder.cc:338:Biop$7116 ;
  wire \$auto$builder.cc:338:Biop$7120 ;
  wire \$auto$builder.cc:338:Biop$7122 ;
  wire \$auto$builder.cc:338:Biop$7124 ;
  wire \$auto$builder.cc:338:Biop$7126 ;
  wire \$auto$builder.cc:364:Unop$6968 ;
  wire \$auto$builder.cc:364:Unop$7056 ;
  wire \$auto$builder.cc:364:Unop$7070 ;
  wire \$auto$builder.cc:364:Unop$7078 ;
  wire \$auto$builder.cc:364:Unop$7092 ;
  wire \$auto$builder.cc:364:Unop$7104 ;
  wire \$auto$builder.cc:364:Unop$7118 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6972 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6981 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6989 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6992 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$6996 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7002 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7008 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7014 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7020 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7026 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7032 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7036 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7042 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7051 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7062 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7066 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7084 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7110 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6977 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6979 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6985 ;
  wire \$auto$rtlil.cc:2747:LogicNot$6987 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7047 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7049 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$6974 ;
  wire \$auto$rtlil.cc:2874:Mux$6994 ;
  wire \$auto$rtlil.cc:2874:Mux$6998 ;
  wire \$auto$rtlil.cc:2874:Mux$7004 ;
  wire \$auto$rtlil.cc:2874:Mux$7010 ;
  wire \$auto$rtlil.cc:2874:Mux$7016 ;
  wire \$auto$rtlil.cc:2874:Mux$7022 ;
  wire \$auto$rtlil.cc:2874:Mux$7028 ;
  wire \$auto$rtlil.cc:2874:Mux$7034 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7038 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7044 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7064 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7068 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7086 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7112 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  wire \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$6982 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$6990 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7052 ;
  wire [1:0] \$procmux$13701_Y ;
  wire \$procmux$13702_CMP ;
  wire [3:0] \$procmux$13704_Y ;
  wire \$procmux$13705_CMP ;
  wire \$procmux$13707_Y ;
  wire \$procmux$13708_CMP ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:89.31" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:103.31" */
  input [283:0] data_i;
  wire [283:0] data_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:109.31" */
  output [70:0] data_o;
  wire [70:0] data_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:93.31" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:126.33" */
  wire [212:0] \gen_arbiter.data_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:193.40" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_empty ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.40" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:191.40" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.53" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:193.27" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.27" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:191.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:146.16" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:146.24" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:147.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:142.13" */
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:127.33" */
  wire [2:0] \gen_arbiter.gnt_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:125.33" */
  wire [5:0] \gen_arbiter.index_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:131.33" */
  wire [3:0] \gen_arbiter.req_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:128.33" */
  wire [2:0] \gen_arbiter.req_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:130.33" */
  wire [1:0] \gen_arbiter.rr_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:107.31" */
  input gnt_i;
  wire gnt_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:100.31" */
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:111.31" */
  output [1:0] idx_o;
  wire [1:0] idx_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:97.31" */
  input [3:0] req_i;
  wire [3:0] req_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:105.31" */
  output req_o;
  wire req_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:95.31" */
  input [1:0] rr_i;
  wire [1:0] rr_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:91.31" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6976  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6977 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$6984  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$6985 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7046  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7047 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6969  (
    .A(req_o),
    .B(\$auto$builder.cc:364:Unop$6968 ),
    .Y(\$auto$builder.cc:338:Biop$6970 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$6999  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7000 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7005  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7006 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7011  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7012 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7017  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7018 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7023  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7024 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7029  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7030 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7039  (
    .A(gnt_i),
    .B(req_o),
    .Y(\$auto$builder.cc:338:Biop$7040 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7053  (
    .A(\gen_arbiter.req_nodes [1]),
    .B(\gen_arbiter.req_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$7054 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7057  (
    .A(\gen_arbiter.req_nodes [2]),
    .B(\gen_arbiter.rr_q [1]),
    .Y(\$auto$builder.cc:338:Biop$7058 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7059  (
    .A(\$auto$builder.cc:364:Unop$7056 ),
    .B(\$auto$builder.cc:338:Biop$7058 ),
    .Y(\$auto$builder.cc:338:Biop$7060 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7071  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\$auto$builder.cc:364:Unop$7070 ),
    .Y(\$auto$builder.cc:338:Biop$7072 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7073  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$auto$builder.cc:338:Biop$7074 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7075  (
    .A(\gen_arbiter.req_d [0]),
    .B(\gen_arbiter.req_d [1]),
    .Y(\$auto$builder.cc:338:Biop$7076 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7079  (
    .A(\gen_arbiter.req_d [1]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$auto$builder.cc:338:Biop$7080 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7081  (
    .A(\$auto$builder.cc:364:Unop$7078 ),
    .B(\$auto$builder.cc:338:Biop$7080 ),
    .Y(\$auto$builder.cc:338:Biop$7082 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7093  (
    .A(\$auto$builder.cc:338:Biop$7090 ),
    .B(\$auto$builder.cc:364:Unop$7092 ),
    .Y(\$auto$builder.cc:338:Biop$7094 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7099  (
    .A(\$auto$builder.cc:338:Biop$7098 ),
    .B(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$auto$builder.cc:338:Biop$7100 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7101  (
    .A(\gen_arbiter.req_d [2]),
    .B(\gen_arbiter.req_d [3]),
    .Y(\$auto$builder.cc:338:Biop$7102 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7105  (
    .A(\gen_arbiter.req_d [3]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$auto$builder.cc:338:Biop$7106 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7107  (
    .A(\$auto$builder.cc:364:Unop$7104 ),
    .B(\$auto$builder.cc:338:Biop$7106 ),
    .Y(\$auto$builder.cc:338:Biop$7108 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7119  (
    .A(\$auto$builder.cc:338:Biop$7116 ),
    .B(\$auto$builder.cc:364:Unop$7118 ),
    .Y(\$auto$builder.cc:338:Biop$7120 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7125  (
    .A(\$auto$builder.cc:338:Biop$7124 ),
    .B(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$auto$builder.cc:338:Biop$7126 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$6967  (
    .A(gnt_i),
    .Y(\$auto$builder.cc:364:Unop$6968 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7055  (
    .A(\gen_arbiter.req_nodes [1]),
    .Y(\$auto$builder.cc:364:Unop$7056 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7069  (
    .A(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$auto$builder.cc:364:Unop$7070 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7077  (
    .A(\gen_arbiter.req_d [0]),
    .Y(\$auto$builder.cc:364:Unop$7078 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7091  (
    .A(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$auto$builder.cc:364:Unop$7092 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7103  (
    .A(\gen_arbiter.req_d [2]),
    .Y(\$auto$builder.cc:364:Unop$7104 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7117  (
    .A(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$auto$builder.cc:364:Unop$7118 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$6973  (
    .A(req_i),
    .B(\gen_arbiter.gen_int_rr.gen_lock.req_q ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$6972 ),
    .Y(\$auto$rtlil.cc:2874:Mux$6974 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7003  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7002 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7004 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7009  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7008 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7010 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7015  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7014 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7016 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7021  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7020 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7022 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7027  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7026 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7028 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7033  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7032 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7034 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7037  (
    .A(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7036 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7038 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7043  (
    .A(\gen_arbiter.rr_q ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7042 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7044 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7063  (
    .A({ 1'h0, \gen_arbiter.index_nodes [2] }),
    .B({ 1'h1, \gen_arbiter.index_nodes [4] }),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7062 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7064 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7067  (
    .A(\gen_arbiter.data_nodes [141:71]),
    .B(\gen_arbiter.data_nodes [212:142]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7066 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7068 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7085  (
    .A(data_i[70:0]),
    .B(data_i[141:71]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7084 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7086 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7111  (
    .A(data_i[212:142]),
    .B(data_i[283:213]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7110 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7112 )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:152.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.lock_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$6982 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.lock_q )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:175.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.req_q  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$6990 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.req_q )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:226.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$gen_arbiter.rr_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7052 ),
    .Q(\gen_arbiter.rr_q )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:231.13-231.26|../rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13701  (
    .A(\$auto$rtlil.cc:2874:Mux$7044 ),
    .B(2'h0),
    .S(\$procmux$13702_CMP ),
    .Y(\$procmux$13701_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:180.15-180.28|../rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13704  (
    .A(\$auto$rtlil.cc:2874:Mux$6974 ),
    .B(4'h0),
    .S(\$procmux$13705_CMP ),
    .Y(\$procmux$13704_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:157.15-157.28|../rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13707  (
    .A(\$auto$builder.cc:338:Biop$6970 ),
    .B(1'h0),
    .S(\$procmux$13708_CMP ),
    .Y(\$procmux$13707_Y )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:212.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:203.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign req_o = \gen_arbiter.req_nodes [0];
  assign data_o = \gen_arbiter.data_nodes [70:0];
  assign idx_o = \gen_arbiter.index_nodes [1:0];
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d  = \$auto$builder.cc:338:Biop$6970 ;
  assign \gen_arbiter.req_d  = \$auto$rtlil.cc:2874:Mux$6974 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = \$auto$rtlil.cc:2874:Mux$6994 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = \$auto$rtlil.cc:2874:Mux$6998 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = \$auto$rtlil.cc:2874:Mux$7004 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = \$auto$rtlil.cc:2874:Mux$7010 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = \$auto$rtlil.cc:2874:Mux$7016 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = \$auto$rtlil.cc:2874:Mux$7022 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = \$auto$rtlil.cc:2874:Mux$7028 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = \$auto$rtlil.cc:2874:Mux$7034 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \$auto$rtlil.cc:2874:Mux$7038 ;
  assign \gen_arbiter.gen_int_rr.rr_d  = \$auto$rtlil.cc:2874:Mux$7044 ;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.req_nodes [0] = \$auto$builder.cc:338:Biop$7054 ;
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = \$auto$builder.cc:338:Biop$7060 ;
  assign \gen_arbiter.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$7064 ;
  assign \gen_arbiter.data_nodes [70:0] = \$auto$rtlil.cc:2874:Mux$7068 ;
  assign \gen_arbiter.gnt_nodes [1] = \$auto$builder.cc:338:Biop$7072 ;
  assign \gen_arbiter.gnt_nodes [2] = \$auto$builder.cc:338:Biop$7074 ;
  assign \gen_arbiter.req_nodes [1] = \$auto$builder.cc:338:Biop$7076 ;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = \$auto$builder.cc:338:Biop$7082 ;
  assign \gen_arbiter.index_nodes [3:2] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign \gen_arbiter.data_nodes [141:71] = \$auto$rtlil.cc:2874:Mux$7086 ;
  assign gnt_o[0] = \$auto$builder.cc:338:Biop$7094 ;
  assign gnt_o[1] = \$auto$builder.cc:338:Biop$7100 ;
  assign \gen_arbiter.req_nodes [2] = \$auto$builder.cc:338:Biop$7102 ;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = \$auto$builder.cc:338:Biop$7108 ;
  assign \gen_arbiter.index_nodes [5:4] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel  };
  assign \gen_arbiter.data_nodes [212:142] = \$auto$rtlil.cc:2874:Mux$7112 ;
  assign gnt_o[2] = \$auto$builder.cc:338:Biop$7120 ;
  assign gnt_o[3] = \$auto$builder.cc:338:Biop$7126 ;
  assign \$procmux$13702_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7051 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7052  = \$procmux$13701_Y ;
  assign \$procmux$13705_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6989 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$6990  = \$procmux$13704_Y ;
  assign \$procmux$13708_CMP  = \$auto$rtlil.cc:2746:ReduceBool$6981 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$6982  = \$procmux$13707_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$6972  = \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  assign \$auto$rtlil.cc:2747:LogicNot$6979  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$6981  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$6987  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$6989  = flush_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$6992  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$6994  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$6996  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$6998  = \gen_arbiter.req_d [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$7002  = \$auto$builder.cc:338:Biop$7000 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7008  = \$auto$builder.cc:338:Biop$7006 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7014  = \$auto$builder.cc:338:Biop$7012 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7020  = \$auto$builder.cc:338:Biop$7018 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7026  = \$auto$builder.cc:338:Biop$7024 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7032  = \$auto$builder.cc:338:Biop$7030 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7036  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7042  = \$auto$builder.cc:338:Biop$7040 ;
  assign \$auto$rtlil.cc:2747:LogicNot$7049  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7051  = flush_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$7062  = \$auto$builder.cc:338:Biop$7060 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7066  = \$auto$builder.cc:338:Biop$7060 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7084  = \$auto$builder.cc:338:Biop$7082 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7110  = \$auto$builder.cc:338:Biop$7108 ;
  assign \$auto$builder.cc:338:Biop$7088  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7090  = \$auto$builder.cc:338:Biop$7072 ;
  assign \$auto$builder.cc:338:Biop$7096  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7098  = \$auto$builder.cc:338:Biop$7072 ;
  assign \$auto$builder.cc:338:Biop$7114  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7116  = \$auto$builder.cc:338:Biop$7074 ;
  assign \$auto$builder.cc:338:Biop$7122  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7124  = \$auto$builder.cc:338:Biop$7074 ;
endmodule

/* src = "../rtl/common_cells/rr_arb_tree.sv:49.8" */
module \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb (clk_i, rst_ni, req_i, gnt_o, req_o, gnt_i, idx_o, flush_i, data_i, data_o, rr_i);
  wire \$auto$builder.cc:338:Biop$7243 ;
  wire \$auto$builder.cc:338:Biop$7273 ;
  wire \$auto$builder.cc:338:Biop$7279 ;
  wire \$auto$builder.cc:338:Biop$7285 ;
  wire \$auto$builder.cc:338:Biop$7291 ;
  wire \$auto$builder.cc:338:Biop$7297 ;
  wire \$auto$builder.cc:338:Biop$7303 ;
  wire \$auto$builder.cc:338:Biop$7313 ;
  wire \$auto$builder.cc:338:Biop$7327 ;
  wire \$auto$builder.cc:338:Biop$7331 ;
  wire \$auto$builder.cc:338:Biop$7333 ;
  wire \$auto$builder.cc:338:Biop$7345 ;
  wire \$auto$builder.cc:338:Biop$7347 ;
  wire \$auto$builder.cc:338:Biop$7349 ;
  wire \$auto$builder.cc:338:Biop$7353 ;
  wire \$auto$builder.cc:338:Biop$7355 ;
  wire \$auto$builder.cc:338:Biop$7361 ;
  wire \$auto$builder.cc:338:Biop$7363 ;
  wire \$auto$builder.cc:338:Biop$7367 ;
  wire \$auto$builder.cc:338:Biop$7369 ;
  wire \$auto$builder.cc:338:Biop$7371 ;
  wire \$auto$builder.cc:338:Biop$7373 ;
  wire \$auto$builder.cc:338:Biop$7375 ;
  wire \$auto$builder.cc:338:Biop$7379 ;
  wire \$auto$builder.cc:338:Biop$7381 ;
  wire \$auto$builder.cc:338:Biop$7387 ;
  wire \$auto$builder.cc:338:Biop$7389 ;
  wire \$auto$builder.cc:338:Biop$7393 ;
  wire \$auto$builder.cc:338:Biop$7395 ;
  wire \$auto$builder.cc:338:Biop$7397 ;
  wire \$auto$builder.cc:338:Biop$7399 ;
  wire \$auto$builder.cc:364:Unop$7241 ;
  wire \$auto$builder.cc:364:Unop$7329 ;
  wire \$auto$builder.cc:364:Unop$7343 ;
  wire \$auto$builder.cc:364:Unop$7351 ;
  wire \$auto$builder.cc:364:Unop$7365 ;
  wire \$auto$builder.cc:364:Unop$7377 ;
  wire \$auto$builder.cc:364:Unop$7391 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7245 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7254 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7262 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7265 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7269 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7275 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7281 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7287 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7293 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7299 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7305 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7309 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7315 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7324 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7335 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7339 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7357 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7383 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7250 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7252 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7258 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7260 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7320 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7322 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$7247 ;
  wire \$auto$rtlil.cc:2874:Mux$7267 ;
  wire \$auto$rtlil.cc:2874:Mux$7271 ;
  wire \$auto$rtlil.cc:2874:Mux$7277 ;
  wire \$auto$rtlil.cc:2874:Mux$7283 ;
  wire \$auto$rtlil.cc:2874:Mux$7289 ;
  wire \$auto$rtlil.cc:2874:Mux$7295 ;
  wire \$auto$rtlil.cc:2874:Mux$7301 ;
  wire \$auto$rtlil.cc:2874:Mux$7307 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7311 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7317 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7337 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7341 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7359 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7385 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  wire \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$7255 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$7263 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7325 ;
  wire [1:0] \$procmux$13634_Y ;
  wire \$procmux$13635_CMP ;
  wire [3:0] \$procmux$13637_Y ;
  wire \$procmux$13638_CMP ;
  wire \$procmux$13640_Y ;
  wire \$procmux$13641_CMP ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:89.31" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:103.31" */
  input [283:0] data_i;
  wire [283:0] data_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:109.31" */
  output [70:0] data_o;
  wire [70:0] data_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:93.31" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:126.33" */
  wire [212:0] \gen_arbiter.data_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:193.40" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_empty ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.40" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:191.40" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.53" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:193.27" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.27" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:191.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:146.16" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:146.24" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:147.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:142.13" */
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:127.33" */
  wire [2:0] \gen_arbiter.gnt_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:125.33" */
  wire [5:0] \gen_arbiter.index_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:131.33" */
  wire [3:0] \gen_arbiter.req_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:128.33" */
  wire [2:0] \gen_arbiter.req_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:130.33" */
  wire [1:0] \gen_arbiter.rr_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:107.31" */
  input gnt_i;
  wire gnt_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:100.31" */
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:111.31" */
  output [1:0] idx_o;
  wire [1:0] idx_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:97.31" */
  input [3:0] req_i;
  wire [3:0] req_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:105.31" */
  output req_o;
  wire req_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:95.31" */
  input [1:0] rr_i;
  wire [1:0] rr_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:91.31" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7249  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7250 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7257  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7258 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7319  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7320 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7242  (
    .A(req_o),
    .B(\$auto$builder.cc:364:Unop$7241 ),
    .Y(\$auto$builder.cc:338:Biop$7243 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7272  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7273 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7278  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7279 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7284  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7285 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7290  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7291 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7296  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7297 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7302  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7303 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7312  (
    .A(gnt_i),
    .B(req_o),
    .Y(\$auto$builder.cc:338:Biop$7313 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7326  (
    .A(\gen_arbiter.req_nodes [1]),
    .B(\gen_arbiter.req_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$7327 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7330  (
    .A(\gen_arbiter.req_nodes [2]),
    .B(\gen_arbiter.rr_q [1]),
    .Y(\$auto$builder.cc:338:Biop$7331 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7332  (
    .A(\$auto$builder.cc:364:Unop$7329 ),
    .B(\$auto$builder.cc:338:Biop$7331 ),
    .Y(\$auto$builder.cc:338:Biop$7333 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7344  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\$auto$builder.cc:364:Unop$7343 ),
    .Y(\$auto$builder.cc:338:Biop$7345 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7346  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$auto$builder.cc:338:Biop$7347 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7348  (
    .A(\gen_arbiter.req_d [0]),
    .B(\gen_arbiter.req_d [1]),
    .Y(\$auto$builder.cc:338:Biop$7349 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7352  (
    .A(\gen_arbiter.req_d [1]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$auto$builder.cc:338:Biop$7353 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7354  (
    .A(\$auto$builder.cc:364:Unop$7351 ),
    .B(\$auto$builder.cc:338:Biop$7353 ),
    .Y(\$auto$builder.cc:338:Biop$7355 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7366  (
    .A(\$auto$builder.cc:338:Biop$7363 ),
    .B(\$auto$builder.cc:364:Unop$7365 ),
    .Y(\$auto$builder.cc:338:Biop$7367 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7372  (
    .A(\$auto$builder.cc:338:Biop$7371 ),
    .B(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$auto$builder.cc:338:Biop$7373 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7374  (
    .A(\gen_arbiter.req_d [2]),
    .B(\gen_arbiter.req_d [3]),
    .Y(\$auto$builder.cc:338:Biop$7375 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7378  (
    .A(\gen_arbiter.req_d [3]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$auto$builder.cc:338:Biop$7379 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7380  (
    .A(\$auto$builder.cc:364:Unop$7377 ),
    .B(\$auto$builder.cc:338:Biop$7379 ),
    .Y(\$auto$builder.cc:338:Biop$7381 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7392  (
    .A(\$auto$builder.cc:338:Biop$7389 ),
    .B(\$auto$builder.cc:364:Unop$7391 ),
    .Y(\$auto$builder.cc:338:Biop$7393 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7398  (
    .A(\$auto$builder.cc:338:Biop$7397 ),
    .B(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$auto$builder.cc:338:Biop$7399 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7240  (
    .A(gnt_i),
    .Y(\$auto$builder.cc:364:Unop$7241 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7328  (
    .A(\gen_arbiter.req_nodes [1]),
    .Y(\$auto$builder.cc:364:Unop$7329 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7342  (
    .A(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$auto$builder.cc:364:Unop$7343 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7350  (
    .A(\gen_arbiter.req_d [0]),
    .Y(\$auto$builder.cc:364:Unop$7351 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7364  (
    .A(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$auto$builder.cc:364:Unop$7365 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7376  (
    .A(\gen_arbiter.req_d [2]),
    .Y(\$auto$builder.cc:364:Unop$7377 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7390  (
    .A(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$auto$builder.cc:364:Unop$7391 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$7246  (
    .A(req_i),
    .B(\gen_arbiter.gen_int_rr.gen_lock.req_q ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7245 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7247 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7276  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7275 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7277 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7282  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7281 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7283 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7288  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7287 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7289 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7294  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7293 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7295 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7300  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7299 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7301 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7306  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7305 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7307 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7310  (
    .A(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7309 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7311 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7316  (
    .A(\gen_arbiter.rr_q ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7315 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7317 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7336  (
    .A({ 1'h0, \gen_arbiter.index_nodes [2] }),
    .B({ 1'h1, \gen_arbiter.index_nodes [4] }),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7335 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7337 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7340  (
    .A(\gen_arbiter.data_nodes [141:71]),
    .B(\gen_arbiter.data_nodes [212:142]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7339 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7341 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7358  (
    .A(data_i[70:0]),
    .B(data_i[141:71]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7357 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7359 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7384  (
    .A(data_i[212:142]),
    .B(data_i[283:213]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7383 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7385 )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:152.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.lock_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$7255 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.lock_q )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:175.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.req_q  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$7263 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.req_q )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:226.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$gen_arbiter.rr_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7325 ),
    .Q(\gen_arbiter.rr_q )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:231.13-231.26|../rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13634  (
    .A(\$auto$rtlil.cc:2874:Mux$7317 ),
    .B(2'h0),
    .S(\$procmux$13635_CMP ),
    .Y(\$procmux$13634_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:180.15-180.28|../rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13637  (
    .A(\$auto$rtlil.cc:2874:Mux$7247 ),
    .B(4'h0),
    .S(\$procmux$13638_CMP ),
    .Y(\$procmux$13637_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:157.15-157.28|../rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13640  (
    .A(\$auto$builder.cc:338:Biop$7243 ),
    .B(1'h0),
    .S(\$procmux$13641_CMP ),
    .Y(\$procmux$13640_Y )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:212.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:203.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign req_o = \gen_arbiter.req_nodes [0];
  assign data_o = \gen_arbiter.data_nodes [70:0];
  assign idx_o = \gen_arbiter.index_nodes [1:0];
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d  = \$auto$builder.cc:338:Biop$7243 ;
  assign \gen_arbiter.req_d  = \$auto$rtlil.cc:2874:Mux$7247 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = \$auto$rtlil.cc:2874:Mux$7267 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = \$auto$rtlil.cc:2874:Mux$7271 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = \$auto$rtlil.cc:2874:Mux$7277 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = \$auto$rtlil.cc:2874:Mux$7283 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = \$auto$rtlil.cc:2874:Mux$7289 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = \$auto$rtlil.cc:2874:Mux$7295 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = \$auto$rtlil.cc:2874:Mux$7301 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = \$auto$rtlil.cc:2874:Mux$7307 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \$auto$rtlil.cc:2874:Mux$7311 ;
  assign \gen_arbiter.gen_int_rr.rr_d  = \$auto$rtlil.cc:2874:Mux$7317 ;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.req_nodes [0] = \$auto$builder.cc:338:Biop$7327 ;
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = \$auto$builder.cc:338:Biop$7333 ;
  assign \gen_arbiter.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$7337 ;
  assign \gen_arbiter.data_nodes [70:0] = \$auto$rtlil.cc:2874:Mux$7341 ;
  assign \gen_arbiter.gnt_nodes [1] = \$auto$builder.cc:338:Biop$7345 ;
  assign \gen_arbiter.gnt_nodes [2] = \$auto$builder.cc:338:Biop$7347 ;
  assign \gen_arbiter.req_nodes [1] = \$auto$builder.cc:338:Biop$7349 ;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = \$auto$builder.cc:338:Biop$7355 ;
  assign \gen_arbiter.index_nodes [3:2] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign \gen_arbiter.data_nodes [141:71] = \$auto$rtlil.cc:2874:Mux$7359 ;
  assign gnt_o[0] = \$auto$builder.cc:338:Biop$7367 ;
  assign gnt_o[1] = \$auto$builder.cc:338:Biop$7373 ;
  assign \gen_arbiter.req_nodes [2] = \$auto$builder.cc:338:Biop$7375 ;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = \$auto$builder.cc:338:Biop$7381 ;
  assign \gen_arbiter.index_nodes [5:4] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel  };
  assign \gen_arbiter.data_nodes [212:142] = \$auto$rtlil.cc:2874:Mux$7385 ;
  assign gnt_o[2] = \$auto$builder.cc:338:Biop$7393 ;
  assign gnt_o[3] = \$auto$builder.cc:338:Biop$7399 ;
  assign \$procmux$13635_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7324 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7325  = \$procmux$13634_Y ;
  assign \$procmux$13638_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7262 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$7263  = \$procmux$13637_Y ;
  assign \$procmux$13641_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7254 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$7255  = \$procmux$13640_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7245  = \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  assign \$auto$rtlil.cc:2747:LogicNot$7252  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7254  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$7260  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7262  = flush_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$7265  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$7267  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$7269  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$7271  = \gen_arbiter.req_d [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$7275  = \$auto$builder.cc:338:Biop$7273 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7281  = \$auto$builder.cc:338:Biop$7279 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7287  = \$auto$builder.cc:338:Biop$7285 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7293  = \$auto$builder.cc:338:Biop$7291 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7299  = \$auto$builder.cc:338:Biop$7297 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7305  = \$auto$builder.cc:338:Biop$7303 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7309  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7315  = \$auto$builder.cc:338:Biop$7313 ;
  assign \$auto$rtlil.cc:2747:LogicNot$7322  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7324  = flush_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$7335  = \$auto$builder.cc:338:Biop$7333 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7339  = \$auto$builder.cc:338:Biop$7333 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7357  = \$auto$builder.cc:338:Biop$7355 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7383  = \$auto$builder.cc:338:Biop$7381 ;
  assign \$auto$builder.cc:338:Biop$7361  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7363  = \$auto$builder.cc:338:Biop$7345 ;
  assign \$auto$builder.cc:338:Biop$7369  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7371  = \$auto$builder.cc:338:Biop$7345 ;
  assign \$auto$builder.cc:338:Biop$7387  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7389  = \$auto$builder.cc:338:Biop$7347 ;
  assign \$auto$builder.cc:338:Biop$7395  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7397  = \$auto$builder.cc:338:Biop$7347 ;
endmodule

/* src = "../rtl/common_cells/rr_arb_tree.sv:49.8" */
module \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb (clk_i, rst_ni, req_i, gnt_o, req_o, gnt_i, idx_o, flush_i, data_i, data_o, rr_i);
  wire \$auto$builder.cc:338:Biop$7516 ;
  wire \$auto$builder.cc:338:Biop$7546 ;
  wire \$auto$builder.cc:338:Biop$7552 ;
  wire \$auto$builder.cc:338:Biop$7558 ;
  wire \$auto$builder.cc:338:Biop$7564 ;
  wire \$auto$builder.cc:338:Biop$7570 ;
  wire \$auto$builder.cc:338:Biop$7576 ;
  wire \$auto$builder.cc:338:Biop$7586 ;
  wire \$auto$builder.cc:338:Biop$7600 ;
  wire \$auto$builder.cc:338:Biop$7604 ;
  wire \$auto$builder.cc:338:Biop$7606 ;
  wire \$auto$builder.cc:338:Biop$7618 ;
  wire \$auto$builder.cc:338:Biop$7620 ;
  wire \$auto$builder.cc:338:Biop$7622 ;
  wire \$auto$builder.cc:338:Biop$7626 ;
  wire \$auto$builder.cc:338:Biop$7628 ;
  wire \$auto$builder.cc:338:Biop$7634 ;
  wire \$auto$builder.cc:338:Biop$7636 ;
  wire \$auto$builder.cc:338:Biop$7640 ;
  wire \$auto$builder.cc:338:Biop$7642 ;
  wire \$auto$builder.cc:338:Biop$7644 ;
  wire \$auto$builder.cc:338:Biop$7646 ;
  wire \$auto$builder.cc:338:Biop$7648 ;
  wire \$auto$builder.cc:338:Biop$7652 ;
  wire \$auto$builder.cc:338:Biop$7654 ;
  wire \$auto$builder.cc:338:Biop$7660 ;
  wire \$auto$builder.cc:338:Biop$7662 ;
  wire \$auto$builder.cc:338:Biop$7666 ;
  wire \$auto$builder.cc:338:Biop$7668 ;
  wire \$auto$builder.cc:338:Biop$7670 ;
  wire \$auto$builder.cc:338:Biop$7672 ;
  wire \$auto$builder.cc:364:Unop$7514 ;
  wire \$auto$builder.cc:364:Unop$7602 ;
  wire \$auto$builder.cc:364:Unop$7616 ;
  wire \$auto$builder.cc:364:Unop$7624 ;
  wire \$auto$builder.cc:364:Unop$7638 ;
  wire \$auto$builder.cc:364:Unop$7650 ;
  wire \$auto$builder.cc:364:Unop$7664 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7518 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7527 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7535 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7538 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7542 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7548 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7554 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7560 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7566 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7572 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7578 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7582 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7588 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7597 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7608 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7612 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7630 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7656 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7523 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7525 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7531 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7533 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7593 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7595 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$7520 ;
  wire \$auto$rtlil.cc:2874:Mux$7540 ;
  wire \$auto$rtlil.cc:2874:Mux$7544 ;
  wire \$auto$rtlil.cc:2874:Mux$7550 ;
  wire \$auto$rtlil.cc:2874:Mux$7556 ;
  wire \$auto$rtlil.cc:2874:Mux$7562 ;
  wire \$auto$rtlil.cc:2874:Mux$7568 ;
  wire \$auto$rtlil.cc:2874:Mux$7574 ;
  wire \$auto$rtlil.cc:2874:Mux$7580 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7584 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7590 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7610 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7614 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7632 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7658 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  wire \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$7528 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$7536 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7598 ;
  wire [1:0] \$procmux$13567_Y ;
  wire \$procmux$13568_CMP ;
  wire [3:0] \$procmux$13570_Y ;
  wire \$procmux$13571_CMP ;
  wire \$procmux$13573_Y ;
  wire \$procmux$13574_CMP ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:89.31" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:103.31" */
  input [283:0] data_i;
  wire [283:0] data_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:109.31" */
  output [70:0] data_o;
  wire [70:0] data_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:93.31" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:126.33" */
  wire [212:0] \gen_arbiter.data_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:193.40" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_empty ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.40" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:191.40" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.53" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:193.27" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.27" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:191.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:146.16" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:146.24" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:147.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:142.13" */
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:127.33" */
  wire [2:0] \gen_arbiter.gnt_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:125.33" */
  wire [5:0] \gen_arbiter.index_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:131.33" */
  wire [3:0] \gen_arbiter.req_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:128.33" */
  wire [2:0] \gen_arbiter.req_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:130.33" */
  wire [1:0] \gen_arbiter.rr_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:107.31" */
  input gnt_i;
  wire gnt_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:100.31" */
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:111.31" */
  output [1:0] idx_o;
  wire [1:0] idx_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:97.31" */
  input [3:0] req_i;
  wire [3:0] req_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:105.31" */
  output req_o;
  wire req_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:95.31" */
  input [1:0] rr_i;
  wire [1:0] rr_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:91.31" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7522  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7523 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7530  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7531 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7592  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7593 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7515  (
    .A(req_o),
    .B(\$auto$builder.cc:364:Unop$7514 ),
    .Y(\$auto$builder.cc:338:Biop$7516 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7545  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7546 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7551  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7552 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7557  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7558 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7563  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7564 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7569  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7570 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7575  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7576 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7585  (
    .A(gnt_i),
    .B(req_o),
    .Y(\$auto$builder.cc:338:Biop$7586 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7599  (
    .A(\gen_arbiter.req_nodes [1]),
    .B(\gen_arbiter.req_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$7600 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7603  (
    .A(\gen_arbiter.req_nodes [2]),
    .B(\gen_arbiter.rr_q [1]),
    .Y(\$auto$builder.cc:338:Biop$7604 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7605  (
    .A(\$auto$builder.cc:364:Unop$7602 ),
    .B(\$auto$builder.cc:338:Biop$7604 ),
    .Y(\$auto$builder.cc:338:Biop$7606 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7617  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\$auto$builder.cc:364:Unop$7616 ),
    .Y(\$auto$builder.cc:338:Biop$7618 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7619  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$auto$builder.cc:338:Biop$7620 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7621  (
    .A(\gen_arbiter.req_d [0]),
    .B(\gen_arbiter.req_d [1]),
    .Y(\$auto$builder.cc:338:Biop$7622 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7625  (
    .A(\gen_arbiter.req_d [1]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$auto$builder.cc:338:Biop$7626 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7627  (
    .A(\$auto$builder.cc:364:Unop$7624 ),
    .B(\$auto$builder.cc:338:Biop$7626 ),
    .Y(\$auto$builder.cc:338:Biop$7628 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7639  (
    .A(\$auto$builder.cc:338:Biop$7636 ),
    .B(\$auto$builder.cc:364:Unop$7638 ),
    .Y(\$auto$builder.cc:338:Biop$7640 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7645  (
    .A(\$auto$builder.cc:338:Biop$7644 ),
    .B(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$auto$builder.cc:338:Biop$7646 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7647  (
    .A(\gen_arbiter.req_d [2]),
    .B(\gen_arbiter.req_d [3]),
    .Y(\$auto$builder.cc:338:Biop$7648 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7651  (
    .A(\gen_arbiter.req_d [3]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$auto$builder.cc:338:Biop$7652 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7653  (
    .A(\$auto$builder.cc:364:Unop$7650 ),
    .B(\$auto$builder.cc:338:Biop$7652 ),
    .Y(\$auto$builder.cc:338:Biop$7654 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7665  (
    .A(\$auto$builder.cc:338:Biop$7662 ),
    .B(\$auto$builder.cc:364:Unop$7664 ),
    .Y(\$auto$builder.cc:338:Biop$7666 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7671  (
    .A(\$auto$builder.cc:338:Biop$7670 ),
    .B(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$auto$builder.cc:338:Biop$7672 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7513  (
    .A(gnt_i),
    .Y(\$auto$builder.cc:364:Unop$7514 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7601  (
    .A(\gen_arbiter.req_nodes [1]),
    .Y(\$auto$builder.cc:364:Unop$7602 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7615  (
    .A(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$auto$builder.cc:364:Unop$7616 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7623  (
    .A(\gen_arbiter.req_d [0]),
    .Y(\$auto$builder.cc:364:Unop$7624 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7637  (
    .A(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$auto$builder.cc:364:Unop$7638 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7649  (
    .A(\gen_arbiter.req_d [2]),
    .Y(\$auto$builder.cc:364:Unop$7650 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7663  (
    .A(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$auto$builder.cc:364:Unop$7664 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$7519  (
    .A(req_i),
    .B(\gen_arbiter.gen_int_rr.gen_lock.req_q ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7518 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7520 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7549  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7548 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7550 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7555  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7554 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7556 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7561  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7560 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7562 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7567  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7566 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7568 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7573  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7572 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7574 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7579  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7578 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7580 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7583  (
    .A(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7582 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7584 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7589  (
    .A(\gen_arbiter.rr_q ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7588 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7590 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7609  (
    .A({ 1'h0, \gen_arbiter.index_nodes [2] }),
    .B({ 1'h1, \gen_arbiter.index_nodes [4] }),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7608 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7610 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7613  (
    .A(\gen_arbiter.data_nodes [141:71]),
    .B(\gen_arbiter.data_nodes [212:142]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7612 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7614 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7631  (
    .A(data_i[70:0]),
    .B(data_i[141:71]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7630 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7632 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7657  (
    .A(data_i[212:142]),
    .B(data_i[283:213]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7656 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7658 )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:152.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.lock_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$7528 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.lock_q )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:175.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.req_q  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$7536 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.req_q )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:226.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$gen_arbiter.rr_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7598 ),
    .Q(\gen_arbiter.rr_q )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:231.13-231.26|../rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13567  (
    .A(\$auto$rtlil.cc:2874:Mux$7590 ),
    .B(2'h0),
    .S(\$procmux$13568_CMP ),
    .Y(\$procmux$13567_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:180.15-180.28|../rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13570  (
    .A(\$auto$rtlil.cc:2874:Mux$7520 ),
    .B(4'h0),
    .S(\$procmux$13571_CMP ),
    .Y(\$procmux$13570_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:157.15-157.28|../rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13573  (
    .A(\$auto$builder.cc:338:Biop$7516 ),
    .B(1'h0),
    .S(\$procmux$13574_CMP ),
    .Y(\$procmux$13573_Y )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:212.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:203.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign req_o = \gen_arbiter.req_nodes [0];
  assign data_o = \gen_arbiter.data_nodes [70:0];
  assign idx_o = \gen_arbiter.index_nodes [1:0];
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d  = \$auto$builder.cc:338:Biop$7516 ;
  assign \gen_arbiter.req_d  = \$auto$rtlil.cc:2874:Mux$7520 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = \$auto$rtlil.cc:2874:Mux$7540 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = \$auto$rtlil.cc:2874:Mux$7544 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = \$auto$rtlil.cc:2874:Mux$7550 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = \$auto$rtlil.cc:2874:Mux$7556 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = \$auto$rtlil.cc:2874:Mux$7562 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = \$auto$rtlil.cc:2874:Mux$7568 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = \$auto$rtlil.cc:2874:Mux$7574 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = \$auto$rtlil.cc:2874:Mux$7580 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \$auto$rtlil.cc:2874:Mux$7584 ;
  assign \gen_arbiter.gen_int_rr.rr_d  = \$auto$rtlil.cc:2874:Mux$7590 ;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.req_nodes [0] = \$auto$builder.cc:338:Biop$7600 ;
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = \$auto$builder.cc:338:Biop$7606 ;
  assign \gen_arbiter.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$7610 ;
  assign \gen_arbiter.data_nodes [70:0] = \$auto$rtlil.cc:2874:Mux$7614 ;
  assign \gen_arbiter.gnt_nodes [1] = \$auto$builder.cc:338:Biop$7618 ;
  assign \gen_arbiter.gnt_nodes [2] = \$auto$builder.cc:338:Biop$7620 ;
  assign \gen_arbiter.req_nodes [1] = \$auto$builder.cc:338:Biop$7622 ;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = \$auto$builder.cc:338:Biop$7628 ;
  assign \gen_arbiter.index_nodes [3:2] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign \gen_arbiter.data_nodes [141:71] = \$auto$rtlil.cc:2874:Mux$7632 ;
  assign gnt_o[0] = \$auto$builder.cc:338:Biop$7640 ;
  assign gnt_o[1] = \$auto$builder.cc:338:Biop$7646 ;
  assign \gen_arbiter.req_nodes [2] = \$auto$builder.cc:338:Biop$7648 ;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = \$auto$builder.cc:338:Biop$7654 ;
  assign \gen_arbiter.index_nodes [5:4] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel  };
  assign \gen_arbiter.data_nodes [212:142] = \$auto$rtlil.cc:2874:Mux$7658 ;
  assign gnt_o[2] = \$auto$builder.cc:338:Biop$7666 ;
  assign gnt_o[3] = \$auto$builder.cc:338:Biop$7672 ;
  assign \$procmux$13568_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7597 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7598  = \$procmux$13567_Y ;
  assign \$procmux$13571_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7535 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$7536  = \$procmux$13570_Y ;
  assign \$procmux$13574_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7527 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$7528  = \$procmux$13573_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7518  = \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  assign \$auto$rtlil.cc:2747:LogicNot$7525  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7527  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$7533  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7535  = flush_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$7538  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$7540  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$7542  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$7544  = \gen_arbiter.req_d [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$7548  = \$auto$builder.cc:338:Biop$7546 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7554  = \$auto$builder.cc:338:Biop$7552 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7560  = \$auto$builder.cc:338:Biop$7558 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7566  = \$auto$builder.cc:338:Biop$7564 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7572  = \$auto$builder.cc:338:Biop$7570 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7578  = \$auto$builder.cc:338:Biop$7576 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7582  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7588  = \$auto$builder.cc:338:Biop$7586 ;
  assign \$auto$rtlil.cc:2747:LogicNot$7595  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7597  = flush_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$7608  = \$auto$builder.cc:338:Biop$7606 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7612  = \$auto$builder.cc:338:Biop$7606 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7630  = \$auto$builder.cc:338:Biop$7628 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7656  = \$auto$builder.cc:338:Biop$7654 ;
  assign \$auto$builder.cc:338:Biop$7634  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7636  = \$auto$builder.cc:338:Biop$7618 ;
  assign \$auto$builder.cc:338:Biop$7642  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7644  = \$auto$builder.cc:338:Biop$7618 ;
  assign \$auto$builder.cc:338:Biop$7660  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7662  = \$auto$builder.cc:338:Biop$7620 ;
  assign \$auto$builder.cc:338:Biop$7668  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7670  = \$auto$builder.cc:338:Biop$7620 ;
endmodule

/* src = "../rtl/common_cells/rr_arb_tree.sv:49.8" */
module \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb (clk_i, rst_ni, req_i, gnt_o, req_o, gnt_i, idx_o, flush_i, data_i, data_o, rr_i);
  wire \$auto$builder.cc:338:Biop$7789 ;
  wire \$auto$builder.cc:338:Biop$7819 ;
  wire \$auto$builder.cc:338:Biop$7825 ;
  wire \$auto$builder.cc:338:Biop$7831 ;
  wire \$auto$builder.cc:338:Biop$7837 ;
  wire \$auto$builder.cc:338:Biop$7843 ;
  wire \$auto$builder.cc:338:Biop$7849 ;
  wire \$auto$builder.cc:338:Biop$7859 ;
  wire \$auto$builder.cc:338:Biop$7873 ;
  wire \$auto$builder.cc:338:Biop$7877 ;
  wire \$auto$builder.cc:338:Biop$7879 ;
  wire \$auto$builder.cc:338:Biop$7891 ;
  wire \$auto$builder.cc:338:Biop$7893 ;
  wire \$auto$builder.cc:338:Biop$7895 ;
  wire \$auto$builder.cc:338:Biop$7899 ;
  wire \$auto$builder.cc:338:Biop$7901 ;
  wire \$auto$builder.cc:338:Biop$7907 ;
  wire \$auto$builder.cc:338:Biop$7909 ;
  wire \$auto$builder.cc:338:Biop$7913 ;
  wire \$auto$builder.cc:338:Biop$7915 ;
  wire \$auto$builder.cc:338:Biop$7917 ;
  wire \$auto$builder.cc:338:Biop$7919 ;
  wire \$auto$builder.cc:338:Biop$7921 ;
  wire \$auto$builder.cc:338:Biop$7925 ;
  wire \$auto$builder.cc:338:Biop$7927 ;
  wire \$auto$builder.cc:338:Biop$7933 ;
  wire \$auto$builder.cc:338:Biop$7935 ;
  wire \$auto$builder.cc:338:Biop$7939 ;
  wire \$auto$builder.cc:338:Biop$7941 ;
  wire \$auto$builder.cc:338:Biop$7943 ;
  wire \$auto$builder.cc:338:Biop$7945 ;
  wire \$auto$builder.cc:364:Unop$7787 ;
  wire \$auto$builder.cc:364:Unop$7875 ;
  wire \$auto$builder.cc:364:Unop$7889 ;
  wire \$auto$builder.cc:364:Unop$7897 ;
  wire \$auto$builder.cc:364:Unop$7911 ;
  wire \$auto$builder.cc:364:Unop$7923 ;
  wire \$auto$builder.cc:364:Unop$7937 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7791 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7800 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7808 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7811 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7815 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7821 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7827 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7833 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7839 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7845 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7851 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7855 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7861 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7870 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7881 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7885 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7903 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$7929 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7796 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7798 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7804 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7806 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7866 ;
  wire \$auto$rtlil.cc:2747:LogicNot$7868 ;
  wire [3:0] \$auto$rtlil.cc:2874:Mux$7793 ;
  wire \$auto$rtlil.cc:2874:Mux$7813 ;
  wire \$auto$rtlil.cc:2874:Mux$7817 ;
  wire \$auto$rtlil.cc:2874:Mux$7823 ;
  wire \$auto$rtlil.cc:2874:Mux$7829 ;
  wire \$auto$rtlil.cc:2874:Mux$7835 ;
  wire \$auto$rtlil.cc:2874:Mux$7841 ;
  wire \$auto$rtlil.cc:2874:Mux$7847 ;
  wire \$auto$rtlil.cc:2874:Mux$7853 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7857 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7863 ;
  wire [1:0] \$auto$rtlil.cc:2874:Mux$7883 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7887 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7905 ;
  wire [70:0] \$auto$rtlil.cc:2874:Mux$7931 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  wire \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$7801 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$7809 ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7871 ;
  wire [1:0] \$procmux$13500_Y ;
  wire \$procmux$13501_CMP ;
  wire [3:0] \$procmux$13503_Y ;
  wire \$procmux$13504_CMP ;
  wire \$procmux$13506_Y ;
  wire \$procmux$13507_CMP ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:89.31" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:103.31" */
  input [283:0] data_i;
  wire [283:0] data_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:109.31" */
  output [70:0] data_o;
  wire [70:0] data_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:93.31" */
  input flush_i;
  wire flush_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:126.33" */
  wire [212:0] \gen_arbiter.data_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:193.40" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_empty ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.40" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:191.40" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.53" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:193.27" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:192.27" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:191.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:146.16" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:146.24" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:147.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:142.13" */
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:127.33" */
  wire [2:0] \gen_arbiter.gnt_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:125.33" */
  wire [5:0] \gen_arbiter.index_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:131.33" */
  wire [3:0] \gen_arbiter.req_d ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:128.33" */
  wire [2:0] \gen_arbiter.req_nodes ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:130.33" */
  wire [1:0] \gen_arbiter.rr_q ;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:107.31" */
  input gnt_i;
  wire gnt_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:100.31" */
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:111.31" */
  output [1:0] idx_o;
  wire [1:0] idx_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:97.31" */
  input [3:0] req_i;
  wire [3:0] req_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:105.31" */
  output req_o;
  wire req_o;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:95.31" */
  input [1:0] rr_i;
  wire [1:0] rr_i;
  /* src = "../rtl/common_cells/rr_arb_tree.sv:91.31" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7795  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7796 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7803  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7804 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$7865  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$7866 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7788  (
    .A(req_o),
    .B(\$auto$builder.cc:364:Unop$7787 ),
    .Y(\$auto$builder.cc:338:Biop$7789 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7818  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7819 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7824  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7825 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7830  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7831 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7836  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7837 )
  );
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7842  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7843 )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7848  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$auto$builder.cc:338:Biop$7849 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7858  (
    .A(gnt_i),
    .B(req_o),
    .Y(\$auto$builder.cc:338:Biop$7859 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7872  (
    .A(\gen_arbiter.req_nodes [1]),
    .B(\gen_arbiter.req_nodes [2]),
    .Y(\$auto$builder.cc:338:Biop$7873 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7876  (
    .A(\gen_arbiter.req_nodes [2]),
    .B(\gen_arbiter.rr_q [1]),
    .Y(\$auto$builder.cc:338:Biop$7877 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7878  (
    .A(\$auto$builder.cc:364:Unop$7875 ),
    .B(\$auto$builder.cc:338:Biop$7877 ),
    .Y(\$auto$builder.cc:338:Biop$7879 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7890  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\$auto$builder.cc:364:Unop$7889 ),
    .Y(\$auto$builder.cc:338:Biop$7891 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7892  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$auto$builder.cc:338:Biop$7893 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7894  (
    .A(\gen_arbiter.req_d [0]),
    .B(\gen_arbiter.req_d [1]),
    .Y(\$auto$builder.cc:338:Biop$7895 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7898  (
    .A(\gen_arbiter.req_d [1]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$auto$builder.cc:338:Biop$7899 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7900  (
    .A(\$auto$builder.cc:364:Unop$7897 ),
    .B(\$auto$builder.cc:338:Biop$7899 ),
    .Y(\$auto$builder.cc:338:Biop$7901 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7912  (
    .A(\$auto$builder.cc:338:Biop$7909 ),
    .B(\$auto$builder.cc:364:Unop$7911 ),
    .Y(\$auto$builder.cc:338:Biop$7913 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7918  (
    .A(\$auto$builder.cc:338:Biop$7917 ),
    .B(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$auto$builder.cc:338:Biop$7919 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7920  (
    .A(\gen_arbiter.req_d [2]),
    .B(\gen_arbiter.req_d [3]),
    .Y(\$auto$builder.cc:338:Biop$7921 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7924  (
    .A(\gen_arbiter.req_d [3]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$auto$builder.cc:338:Biop$7925 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7926  (
    .A(\$auto$builder.cc:364:Unop$7923 ),
    .B(\$auto$builder.cc:338:Biop$7925 ),
    .Y(\$auto$builder.cc:338:Biop$7927 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7938  (
    .A(\$auto$builder.cc:338:Biop$7935 ),
    .B(\$auto$builder.cc:364:Unop$7937 ),
    .Y(\$auto$builder.cc:338:Biop$7939 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$7944  (
    .A(\$auto$builder.cc:338:Biop$7943 ),
    .B(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$auto$builder.cc:338:Biop$7945 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7786  (
    .A(gnt_i),
    .Y(\$auto$builder.cc:364:Unop$7787 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7874  (
    .A(\gen_arbiter.req_nodes [1]),
    .Y(\$auto$builder.cc:364:Unop$7875 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7888  (
    .A(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$auto$builder.cc:364:Unop$7889 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7896  (
    .A(\gen_arbiter.req_d [0]),
    .Y(\$auto$builder.cc:364:Unop$7897 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7910  (
    .A(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$auto$builder.cc:364:Unop$7911 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7922  (
    .A(\gen_arbiter.req_d [2]),
    .Y(\$auto$builder.cc:364:Unop$7923 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$7936  (
    .A(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$auto$builder.cc:364:Unop$7937 )
  );
  \$mux  #(
    .WIDTH(32'd4)
  ) \$auto$slang_frontend.cc:2041:operator()$7792  (
    .A(req_i),
    .B(\gen_arbiter.gen_int_rr.gen_lock.req_q ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7791 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7793 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7822  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7821 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7823 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7828  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7827 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7829 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7834  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7833 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7835 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7840  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7839 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7841 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7846  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7845 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7847 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$7852  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7851 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7853 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7856  (
    .A(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7855 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7857 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7862  (
    .A(\gen_arbiter.rr_q ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7861 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7863 )
  );
  \$mux  #(
    .WIDTH(32'd2)
  ) \$auto$slang_frontend.cc:2041:operator()$7882  (
    .A({ 1'h0, \gen_arbiter.index_nodes [2] }),
    .B({ 1'h1, \gen_arbiter.index_nodes [4] }),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7881 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7883 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7886  (
    .A(\gen_arbiter.data_nodes [141:71]),
    .B(\gen_arbiter.data_nodes [212:142]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7885 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7887 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7904  (
    .A(data_i[70:0]),
    .B(data_i[141:71]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7903 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7905 )
  );
  \$mux  #(
    .WIDTH(32'd71)
  ) \$auto$slang_frontend.cc:2041:operator()$7930  (
    .A(data_i[212:142]),
    .B(data_i[283:213]),
    .S(\$auto$rtlil.cc:2746:ReduceBool$7929 ),
    .Y(\$auto$rtlil.cc:2874:Mux$7931 )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:152.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.lock_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$7801 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.lock_q )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:175.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.req_q  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$7809 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.req_q )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:226.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$gen_arbiter.rr_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7871 ),
    .Q(\gen_arbiter.rr_q )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:231.13-231.26|../rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13500  (
    .A(\$auto$rtlil.cc:2874:Mux$7863 ),
    .B(2'h0),
    .S(\$procmux$13501_CMP ),
    .Y(\$procmux$13500_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:180.15-180.28|../rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13503  (
    .A(\$auto$rtlil.cc:2874:Mux$7793 ),
    .B(4'h0),
    .S(\$procmux$13504_CMP ),
    .Y(\$procmux$13503_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/common_cells/rr_arb_tree.sv:157.15-157.28|../rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13506  (
    .A(\$auto$builder.cc:338:Biop$7789 ),
    .B(1'h0),
    .S(\$procmux$13507_CMP ),
    .Y(\$procmux$13506_Y )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:212.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  /* src = "../rtl/common_cells/rr_arb_tree.sv:203.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign req_o = \gen_arbiter.req_nodes [0];
  assign data_o = \gen_arbiter.data_nodes [70:0];
  assign idx_o = \gen_arbiter.index_nodes [1:0];
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d  = \$auto$builder.cc:338:Biop$7789 ;
  assign \gen_arbiter.req_d  = \$auto$rtlil.cc:2874:Mux$7793 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = \$auto$rtlil.cc:2874:Mux$7813 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = \$auto$rtlil.cc:2874:Mux$7817 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = \$auto$rtlil.cc:2874:Mux$7823 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = \$auto$rtlil.cc:2874:Mux$7829 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = \$auto$rtlil.cc:2874:Mux$7835 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = \$auto$rtlil.cc:2874:Mux$7841 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = \$auto$rtlil.cc:2874:Mux$7847 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = \$auto$rtlil.cc:2874:Mux$7853 ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \$auto$rtlil.cc:2874:Mux$7857 ;
  assign \gen_arbiter.gen_int_rr.rr_d  = \$auto$rtlil.cc:2874:Mux$7863 ;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.req_nodes [0] = \$auto$builder.cc:338:Biop$7873 ;
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = \$auto$builder.cc:338:Biop$7879 ;
  assign \gen_arbiter.index_nodes [1:0] = \$auto$rtlil.cc:2874:Mux$7883 ;
  assign \gen_arbiter.data_nodes [70:0] = \$auto$rtlil.cc:2874:Mux$7887 ;
  assign \gen_arbiter.gnt_nodes [1] = \$auto$builder.cc:338:Biop$7891 ;
  assign \gen_arbiter.gnt_nodes [2] = \$auto$builder.cc:338:Biop$7893 ;
  assign \gen_arbiter.req_nodes [1] = \$auto$builder.cc:338:Biop$7895 ;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = \$auto$builder.cc:338:Biop$7901 ;
  assign \gen_arbiter.index_nodes [3:2] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign \gen_arbiter.data_nodes [141:71] = \$auto$rtlil.cc:2874:Mux$7905 ;
  assign gnt_o[0] = \$auto$builder.cc:338:Biop$7913 ;
  assign gnt_o[1] = \$auto$builder.cc:338:Biop$7919 ;
  assign \gen_arbiter.req_nodes [2] = \$auto$builder.cc:338:Biop$7921 ;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = \$auto$builder.cc:338:Biop$7927 ;
  assign \gen_arbiter.index_nodes [5:4] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel  };
  assign \gen_arbiter.data_nodes [212:142] = \$auto$rtlil.cc:2874:Mux$7931 ;
  assign gnt_o[2] = \$auto$builder.cc:338:Biop$7939 ;
  assign gnt_o[3] = \$auto$builder.cc:338:Biop$7945 ;
  assign \$procmux$13501_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7870 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.rr_q$7871  = \$procmux$13500_Y ;
  assign \$procmux$13504_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7808 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.req_q$7809  = \$procmux$13503_Y ;
  assign \$procmux$13507_CMP  = \$auto$rtlil.cc:2746:ReduceBool$7800 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_arbiter.gen_int_rr.gen_lock.lock_q$7801  = \$procmux$13506_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7791  = \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  assign \$auto$rtlil.cc:2747:LogicNot$7798  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7800  = flush_i;
  assign \$auto$rtlil.cc:2747:LogicNot$7806  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7808  = flush_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$7811  = 1'h0;
  assign \$auto$rtlil.cc:2874:Mux$7813  = 1'h0;
  assign \$auto$rtlil.cc:2746:ReduceBool$7815  = 1'h1;
  assign \$auto$rtlil.cc:2874:Mux$7817  = \gen_arbiter.req_d [0];
  assign \$auto$rtlil.cc:2746:ReduceBool$7821  = \$auto$builder.cc:338:Biop$7819 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7827  = \$auto$builder.cc:338:Biop$7825 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7833  = \$auto$builder.cc:338:Biop$7831 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7839  = \$auto$builder.cc:338:Biop$7837 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7845  = \$auto$builder.cc:338:Biop$7843 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7851  = \$auto$builder.cc:338:Biop$7849 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7855  = \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7861  = \$auto$builder.cc:338:Biop$7859 ;
  assign \$auto$rtlil.cc:2747:LogicNot$7868  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$7870  = flush_i;
  assign \$auto$rtlil.cc:2746:ReduceBool$7881  = \$auto$builder.cc:338:Biop$7879 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7885  = \$auto$builder.cc:338:Biop$7879 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7903  = \$auto$builder.cc:338:Biop$7901 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$7929  = \$auto$builder.cc:338:Biop$7927 ;
  assign \$auto$builder.cc:338:Biop$7907  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7909  = \$auto$builder.cc:338:Biop$7891 ;
  assign \$auto$builder.cc:338:Biop$7915  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7917  = \$auto$builder.cc:338:Biop$7891 ;
  assign \$auto$builder.cc:338:Biop$7933  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7935  = \$auto$builder.cc:338:Biop$7893 ;
  assign \$auto$builder.cc:338:Biop$7941  = 1'h1;
  assign \$auto$builder.cc:338:Biop$7943  = \$auto$builder.cc:338:Biop$7893 ;
endmodule

/* src = "../rtl/common_cells/rstgen.sv:13.8" */
module \rstgen$croc_chip.i_croc_soc.i_rstgen (clk_i, rst_ni, test_mode_i, rst_no, init_no);
  /* src = "../rtl/common_cells/rstgen.sv:14.18" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/rstgen.sv:18.18" */
  output init_no;
  wire init_no;
  /* src = "../rtl/common_cells/rstgen.sv:15.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/rstgen.sv:17.18" */
  output rst_no;
  wire rst_no;
  /* src = "../rtl/common_cells/rstgen.sv:16.18" */
  input test_mode_i;
  wire test_mode_i;
  /* src = "../rtl/common_cells/rstgen.sv:21.19" */
  \rstgen_bypass$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass  i_rstgen_bypass (
    .clk_i(clk_i),
    .init_no(init_no),
    .rst_ni(rst_ni),
    .rst_no(rst_no),
    .rst_test_mode_ni(rst_ni),
    .test_mode_i(test_mode_i)
  );
endmodule

/* src = "../rtl/common_cells/rstgen_bypass.sv:15.8" */
module \rstgen_bypass$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass (clk_i, rst_ni, test_mode_i, rst_no, init_no, rst_test_mode_ni);
  wire \$auto$rtlil.cc:2747:LogicNot$17 ;
  wire \$auto$rtlil.cc:2747:LogicNot$19 ;
  /* src = "../rtl/common_cells/rstgen_bypass.sv:18.18" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/common_cells/rstgen_bypass.sv:23.18" */
  output init_no;
  wire init_no;
  /* src = "../rtl/common_cells/rstgen_bypass.sv:27.11" */
  wire rst_n;
  /* src = "../rtl/common_cells/rstgen_bypass.sv:19.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/rstgen_bypass.sv:22.18" */
  output rst_no;
  wire rst_no;
  /* src = "../rtl/common_cells/rstgen_bypass.sv:20.18" */
  input rst_test_mode_ni;
  wire rst_test_mode_ni;
  /* src = "../rtl/common_cells/rstgen_bypass.sv:29.25" */
  wire [3:0] synch_regs_q;
  /* src = "../rtl/common_cells/rstgen_bypass.sv:21.18" */
  input test_mode_i;
  wire test_mode_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$16  (
    .A(rst_n),
    .Y(\$auto$rtlil.cc:2747:LogicNot$17 )
  );
  /* src = "../rtl/common_cells/rstgen_bypass.sv:53.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$synch_regs_q  (
    .AD(4'h0),
    .ALOAD(rst_n),
    .CLK(clk_i),
    .D({ synch_regs_q[2:0], 1'h1 }),
    .Q(synch_regs_q)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/rstgen_bypass.sv:46.17" */
  \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_init_no  i_tc_clk_mux2_init_no (
    .clk0_i(synch_regs_q[3]),
    .clk1_i(1'h1),
    .clk_o(init_no),
    .clk_sel_i(test_mode_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/rstgen_bypass.sv:32.17" */
  \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_rst_n  i_tc_clk_mux2_rst_n (
    .clk0_i(rst_ni),
    .clk1_i(rst_test_mode_ni),
    .clk_o(rst_n),
    .clk_sel_i(test_mode_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "../rtl/common_cells/rstgen_bypass.sv:39.17" */
  \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_rst_no  i_tc_clk_mux2_rst_no (
    .clk0_i(synch_regs_q[3]),
    .clk1_i(rst_test_mode_ni),
    .clk_o(rst_no),
    .clk_sel_i(test_mode_i)
  );
  assign \$auto$rtlil.cc:2747:LogicNot$19  = rst_n;
endmodule

/* src = "../rtl/apb_uart/slib_clock_div.sv:35.8" */
module \slib_clock_div$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BG2 (CLK, Q, RST, CE);
  wire \$auto$builder.cc:338:Biop$8541 ;
  wire \$auto$builder.cc:338:Biop$8545 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8549 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8543 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8547 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8539 ;
  /* src = "../rtl/apb_uart/slib_clock_div.sv:58.7-66.26" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\iCounter$8550 ;
  /* src = "../rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\iCounter$8552 ;
  /* src = "../rtl/apb_uart/slib_clock_div.sv:58.7-66.26" */
  wire \$auto$slang_frontend.cc:694:finish$\iQ$8551 ;
  /* src = "../rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  wire \$auto$slang_frontend.cc:694:finish$\iQ$8553 ;
  wire \$procmux$13254_Y ;
  wire \$procmux$13255_CMP ;
  wire \$procmux$13256_Y ;
  wire \$procmux$13257_CMP ;
  wire [2:0] \$procmux$13259_Y ;
  wire \$procmux$13260_CMP ;
  wire [2:0] \$procmux$13261_Y ;
  wire \$procmux$13262_CMP ;
  wire \$procmux$13264_Y ;
  wire \$procmux$13265_CMP ;
  wire [2:0] \$procmux$13267_Y ;
  wire \$procmux$13268_CMP ;
  /* src = "../rtl/apb_uart/slib_clock_div.sv:38.14" */
  input CE;
  wire CE;
  /* src = "../rtl/apb_uart/slib_clock_div.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_clock_div.sv:39.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_clock_div.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_clock_div.sv:44.27" */
  wire [2:0] iCounter;
  /* src = "../rtl/apb_uart/slib_clock_div.sv:43.5" */
  wire iQ;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8538  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8539 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8544  (
    .A(iCounter),
    .B(3'h7),
    .Y(\$auto$builder.cc:338:Biop$8545 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8548  (
    .A({ 29'h00000000, iCounter }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8549 )
  );
  /* src = "../rtl/apb_uart/slib_clock_div.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$iCounter  (
    .AD(3'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iCounter$8552 ),
    .Q(iCounter)
  );
  /* src = "../rtl/apb_uart/slib_clock_div.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iQ  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iQ$8553 ),
    .Q(iQ)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_clock_div.sv:59.19-62.26|../rtl/apb_uart/slib_clock_div.sv:58.7-66.26" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13254  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$13255_CMP ),
    .Y(\$procmux$13254_Y )
  );
  /* src = "../rtl/apb_uart/slib_clock_div.sv:58.7-66.26|../rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13256  (
    .A(1'hx),
    .B(\$procmux$13254_Y ),
    .S(\$procmux$13257_CMP ),
    .Y(\$procmux$13256_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_clock_div.sv:59.19-62.26|../rtl/apb_uart/slib_clock_div.sv:58.7-66.26" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13259  (
    .A(\$auto$builder.cc:338:Biop$8549 [2:0]),
    .B(3'h0),
    .S(\$procmux$13260_CMP ),
    .Y(\$procmux$13259_Y )
  );
  /* src = "../rtl/apb_uart/slib_clock_div.sv:58.7-66.26|../rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13261  (
    .A(3'hx),
    .B(\$procmux$13259_Y ),
    .S(\$procmux$13262_CMP ),
    .Y(\$procmux$13261_Y )
  );
  /* src = "../rtl/apb_uart/slib_clock_div.sv:58.7-66.26|../rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13264  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\iQ$8551 ),
    .S(\$procmux$13265_CMP ),
    .Y(\$procmux$13264_Y )
  );
  /* src = "../rtl/apb_uart/slib_clock_div.sv:58.7-66.26|../rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13267  (
    .A(iCounter),
    .B(\$auto$slang_frontend.cc:694:finish$\iCounter$8550 ),
    .S(\$procmux$13268_CMP ),
    .Y(\$procmux$13267_Y )
  );
  assign Q = iQ;
  assign \$procmux$13255_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8547 ;
  assign \$procmux$13257_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8543 ;
  assign \$auto$slang_frontend.cc:694:finish$\iQ$8551  = \$procmux$13256_Y ;
  assign \$procmux$13260_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8547 ;
  assign \$procmux$13262_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8543 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$8550  = \$procmux$13261_Y ;
  assign \$procmux$13265_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8543 ;
  assign \$auto$slang_frontend.cc:694:finish$\iQ$8553  = \$procmux$13264_Y ;
  assign \$procmux$13268_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8543 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$8552  = \$procmux$13267_Y ;
  assign \$auto$builder.cc:338:Biop$8541  = CE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8543  = CE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8547  = \$auto$builder.cc:338:Biop$8545 ;
endmodule

/* src = "../rtl/apb_uart/slib_counter.sv:35.8" */
module \slib_counter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_BRC (CLK, D, Q, RST, CLEAR, LOAD, ENABLE, DOWN, OVERFLOW);
  wire \$auto$builder.cc:338:Biop$10017 ;
  wire \$auto$builder.cc:338:Biop$10021 ;
  wire \$auto$builder.cc:338:Biop$10025 ;
  wire \$auto$builder.cc:338:Biop$10029 ;
  wire [31:0] \$auto$builder.cc:338:Biop$10033 ;
  wire [31:0] \$auto$builder.cc:338:Biop$10035 ;
  wire \$auto$builder.cc:338:Biop$10041 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10019 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10023 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10027 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10031 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10043 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10015 ;
  /* src = "../rtl/apb_uart/slib_counter.sv:70.11-77.16" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\iCounter$10036 ;
  /* src = "../rtl/apb_uart/slib_counter.sv:68.11-78.11" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\iCounter$10037 ;
  /* src = "../rtl/apb_uart/slib_counter.sv:63.11-78.11" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\iCounter$10038 ;
  /* src = "../rtl/apb_uart/slib_counter.sv:58.6-78.11" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\iCounter$10039 ;
  /* src = "../rtl/apb_uart/slib_counter.sv:80.6-83.11" */
  wire \$auto$slang_frontend.cc:694:finish$\iCounter[4]$10044 ;
  wire \$procmux$12633_Y ;
  wire \$procmux$12634_CMP ;
  wire [4:0] \$procmux$12637_Y ;
  wire \$procmux$12638_CMP ;
  wire [4:0] \$procmux$12639_Y ;
  wire \$procmux$12640_CMP ;
  wire [4:0] \$procmux$12642_Y ;
  wire \$procmux$12643_CMP ;
  wire [4:0] \$procmux$12645_Y ;
  wire \$procmux$12646_CMP ;
  wire [4:0] \$procmux$12648_Y ;
  wire \$procmux$12649_CMP ;
  wire [4:0] \$procmux$12651_Y ;
  wire \$procmux$12652_CMP ;
  wire [4:0] \$procmux$12654_Y ;
  wire \$procmux$12655_CMP ;
  wire [4:0] \$procmux$12658_Y ;
  wire \$procmux$12659_CMP ;
  wire [4:0] \$procmux$12661_Y ;
  wire \$procmux$12662_CMP ;
  wire [4:0] \$procmux$12665_Y ;
  wire \$procmux$12666_CMP ;
  /* src = "../rtl/apb_uart/slib_counter.sv:38.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "../rtl/apb_uart/slib_counter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_counter.sv:42.28" */
  input [3:0] D;
  wire [3:0] D;
  /* src = "../rtl/apb_uart/slib_counter.sv:41.14" */
  input DOWN;
  wire DOWN;
  /* src = "../rtl/apb_uart/slib_counter.sv:40.14" */
  input ENABLE;
  wire ENABLE;
  /* src = "../rtl/apb_uart/slib_counter.sv:39.14" */
  input LOAD;
  wire LOAD;
  /* src = "../rtl/apb_uart/slib_counter.sv:44.16" */
  output OVERFLOW;
  wire OVERFLOW;
  /* src = "../rtl/apb_uart/slib_counter.sv:43.30" */
  output [3:0] Q;
  wire [3:0] Q;
  /* src = "../rtl/apb_uart/slib_counter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_counter.sv:48.15" */
  wire [4:0] iCounter;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10014  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10015 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10028  (
    .A(DOWN),
    .Y(\$auto$builder.cc:338:Biop$10029 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$10032  (
    .A({ 27'h0000000, iCounter }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$10033 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$10034  (
    .A({ 27'h0000000, iCounter }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$10035 )
  );
  /* src = "../rtl/apb_uart/slib_counter.sv:50.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd5)
  ) \$driver$iCounter  (
    .AD(5'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ \$auto$slang_frontend.cc:694:finish$\iCounter[4]$10044 , \$auto$slang_frontend.cc:694:finish$\iCounter$10039 [3:0] }),
    .Q(iCounter)
  );
  /* src = "../rtl/apb_uart/slib_counter.sv:82.11-82.32|../rtl/apb_uart/slib_counter.sv:80.6-83.11" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12633  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCounter$10039 [4]),
    .B(1'h0),
    .S(\$procmux$12634_CMP ),
    .Y(\$procmux$12633_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_counter.sv:72.16-72.41|../rtl/apb_uart/slib_counter.sv:70.11-77.16" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12637  (
    .A(\$auto$builder.cc:338:Biop$10033 [4:0]),
    .B(\$auto$builder.cc:338:Biop$10035 [4:0]),
    .S(DOWN),
    .Y(\$procmux$12637_Y )
  );
  /* src = "../rtl/apb_uart/slib_counter.sv:70.11-77.16|../rtl/apb_uart/slib_counter.sv:68.11-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12639  (
    .A(5'hxx),
    .B(\$procmux$12637_Y ),
    .S(\$procmux$12640_CMP ),
    .Y(\$procmux$12639_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_counter.sv:65.11-65.45|../rtl/apb_uart/slib_counter.sv:63.11-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12642  (
    .A(\$procmux$12639_Y ),
    .B(5'hxx),
    .S(\$procmux$12643_CMP ),
    .Y(\$procmux$12642_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_counter.sv:61.11-61.25|../rtl/apb_uart/slib_counter.sv:58.6-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12645  (
    .A(\$procmux$12642_Y ),
    .B(5'hxx),
    .S(\$procmux$12646_CMP ),
    .Y(\$procmux$12645_Y )
  );
  /* src = "../rtl/apb_uart/slib_counter.sv:70.11-77.16|../rtl/apb_uart/slib_counter.sv:68.11-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12648  (
    .A(iCounter),
    .B(\$auto$slang_frontend.cc:694:finish$\iCounter$10036 ),
    .S(\$procmux$12649_CMP ),
    .Y(\$procmux$12648_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_counter.sv:65.11-65.45|../rtl/apb_uart/slib_counter.sv:63.11-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12651  (
    .A(\$procmux$12648_Y ),
    .B(5'hxx),
    .S(\$procmux$12652_CMP ),
    .Y(\$procmux$12651_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_counter.sv:61.11-61.25|../rtl/apb_uart/slib_counter.sv:58.6-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12654  (
    .A(\$procmux$12651_Y ),
    .B(5'hxx),
    .S(\$procmux$12655_CMP ),
    .Y(\$procmux$12654_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_counter.sv:65.11-65.45|../rtl/apb_uart/slib_counter.sv:63.11-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12658  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCounter$10037 ),
    .B({ 1'h0, D }),
    .S(\$procmux$12659_CMP ),
    .Y(\$procmux$12658_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_counter.sv:61.11-61.25|../rtl/apb_uart/slib_counter.sv:58.6-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12661  (
    .A(\$procmux$12658_Y ),
    .B(5'hxx),
    .S(\$procmux$12662_CMP ),
    .Y(\$procmux$12661_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_counter.sv:61.11-61.25|../rtl/apb_uart/slib_counter.sv:58.6-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12665  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCounter$10038 ),
    .B(5'h00),
    .S(\$procmux$12666_CMP ),
    .Y(\$procmux$12665_Y )
  );
  assign Q = iCounter[3:0];
  assign OVERFLOW = iCounter[4];
  assign \$procmux$12634_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10043 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter[4]$10044  = \$procmux$12633_Y ;
  assign \$procmux$12638_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10031 ;
  assign \$procmux$12640_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10027 ;
  assign \$procmux$12643_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10023 ;
  assign \$procmux$12646_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10019 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$10036  = \$procmux$12645_Y ;
  assign \$procmux$12649_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10027 ;
  assign \$procmux$12652_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10023 ;
  assign \$procmux$12655_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10019 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$10037  = \$procmux$12654_Y ;
  assign \$procmux$12659_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10023 ;
  assign \$procmux$12662_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10019 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$10038  = \$procmux$12661_Y ;
  assign \$procmux$12666_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10019 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$10039  = \$procmux$12665_Y ;
  assign \$auto$builder.cc:338:Biop$10017  = CLEAR;
  assign \$auto$rtlil.cc:2746:ReduceBool$10019  = CLEAR;
  assign \$auto$builder.cc:338:Biop$10021  = LOAD;
  assign \$auto$rtlil.cc:2746:ReduceBool$10023  = LOAD;
  assign \$auto$builder.cc:338:Biop$10025  = ENABLE;
  assign \$auto$rtlil.cc:2746:ReduceBool$10027  = ENABLE;
  assign \$auto$rtlil.cc:2746:ReduceBool$10031  = \$auto$builder.cc:338:Biop$10029 ;
  assign \$auto$builder.cc:338:Biop$10041  = iCounter[4];
  assign \$auto$rtlil.cc:2746:ReduceBool$10043  = iCounter[4];
endmodule

/* src = "../rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BIDET (CLK, D, RST, RE, FE);
  wire \$auto$builder.cc:338:Biop$8403 ;
  wire \$auto$builder.cc:338:Biop$8405 ;
  wire \$auto$builder.cc:338:Biop$8407 ;
  wire \$auto$builder.cc:338:Biop$8413 ;
  wire \$auto$builder.cc:338:Biop$8415 ;
  wire \$auto$builder.cc:338:Biop$8417 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8409 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8419 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8401 ;
  wire \$auto$rtlil.cc:2874:Mux$8411 ;
  wire \$auto$rtlil.cc:2874:Mux$8421 ;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8400  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8401 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8402  (
    .A(iDd),
    .Y(\$auto$builder.cc:338:Biop$8403 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8406  (
    .A(\$auto$builder.cc:338:Biop$8403 ),
    .B(\$auto$builder.cc:338:Biop$8405 ),
    .Y(\$auto$builder.cc:338:Biop$8407 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8414  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8415 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8416  (
    .A(\$auto$builder.cc:338:Biop$8413 ),
    .B(\$auto$builder.cc:338:Biop$8415 ),
    .Y(\$auto$builder.cc:338:Biop$8417 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8410  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8409 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8411 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8420  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8419 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8421 )
  );
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$auto$rtlil.cc:2874:Mux$8411 ;
  assign FE = \$auto$rtlil.cc:2874:Mux$8421 ;
  assign \$auto$builder.cc:338:Biop$8405  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8409  = \$auto$builder.cc:338:Biop$8407 ;
  assign \$auto$builder.cc:338:Biop$8413  = iDd;
  assign \$auto$rtlil.cc:2746:ReduceBool$8419  = \$auto$builder.cc:338:Biop$8417 ;
endmodule

/* src = "../rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_CTS (CLK, D, RST, RE, FE);
  wire \$auto$builder.cc:338:Biop$8426 ;
  wire \$auto$builder.cc:338:Biop$8428 ;
  wire \$auto$builder.cc:338:Biop$8430 ;
  wire \$auto$builder.cc:338:Biop$8436 ;
  wire \$auto$builder.cc:338:Biop$8438 ;
  wire \$auto$builder.cc:338:Biop$8440 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8432 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8442 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8424 ;
  wire \$auto$rtlil.cc:2874:Mux$8434 ;
  wire \$auto$rtlil.cc:2874:Mux$8444 ;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8423  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8424 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8425  (
    .A(iDd),
    .Y(\$auto$builder.cc:338:Biop$8426 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8429  (
    .A(\$auto$builder.cc:338:Biop$8426 ),
    .B(\$auto$builder.cc:338:Biop$8428 ),
    .Y(\$auto$builder.cc:338:Biop$8430 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8437  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8438 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8439  (
    .A(\$auto$builder.cc:338:Biop$8436 ),
    .B(\$auto$builder.cc:338:Biop$8438 ),
    .Y(\$auto$builder.cc:338:Biop$8440 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8433  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8432 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8434 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8443  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8442 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8444 )
  );
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$auto$rtlil.cc:2874:Mux$8434 ;
  assign FE = \$auto$rtlil.cc:2874:Mux$8444 ;
  assign \$auto$builder.cc:338:Biop$8428  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8432  = \$auto$builder.cc:338:Biop$8430 ;
  assign \$auto$builder.cc:338:Biop$8436  = iDd;
  assign \$auto$rtlil.cc:2746:ReduceBool$8442  = \$auto$builder.cc:338:Biop$8440 ;
endmodule

/* src = "../rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_DCD (CLK, D, RST, RE, FE);
  wire \$auto$builder.cc:338:Biop$8495 ;
  wire \$auto$builder.cc:338:Biop$8497 ;
  wire \$auto$builder.cc:338:Biop$8499 ;
  wire \$auto$builder.cc:338:Biop$8505 ;
  wire \$auto$builder.cc:338:Biop$8507 ;
  wire \$auto$builder.cc:338:Biop$8509 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8501 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8511 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8493 ;
  wire \$auto$rtlil.cc:2874:Mux$8503 ;
  wire \$auto$rtlil.cc:2874:Mux$8513 ;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8492  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8493 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8494  (
    .A(iDd),
    .Y(\$auto$builder.cc:338:Biop$8495 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8498  (
    .A(\$auto$builder.cc:338:Biop$8495 ),
    .B(\$auto$builder.cc:338:Biop$8497 ),
    .Y(\$auto$builder.cc:338:Biop$8499 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8506  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8507 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8508  (
    .A(\$auto$builder.cc:338:Biop$8505 ),
    .B(\$auto$builder.cc:338:Biop$8507 ),
    .Y(\$auto$builder.cc:338:Biop$8509 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8502  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8501 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8503 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8512  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8511 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8513 )
  );
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$auto$rtlil.cc:2874:Mux$8503 ;
  assign FE = \$auto$rtlil.cc:2874:Mux$8513 ;
  assign \$auto$builder.cc:338:Biop$8497  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8501  = \$auto$builder.cc:338:Biop$8499 ;
  assign \$auto$builder.cc:338:Biop$8505  = iDd;
  assign \$auto$rtlil.cc:2746:ReduceBool$8511  = \$auto$builder.cc:338:Biop$8509 ;
endmodule

/* src = "../rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_DSR (CLK, D, RST, RE, FE);
  wire \$auto$builder.cc:338:Biop$8449 ;
  wire \$auto$builder.cc:338:Biop$8451 ;
  wire \$auto$builder.cc:338:Biop$8453 ;
  wire \$auto$builder.cc:338:Biop$8459 ;
  wire \$auto$builder.cc:338:Biop$8461 ;
  wire \$auto$builder.cc:338:Biop$8463 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8455 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8465 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8447 ;
  wire \$auto$rtlil.cc:2874:Mux$8457 ;
  wire \$auto$rtlil.cc:2874:Mux$8467 ;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8446  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8447 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8448  (
    .A(iDd),
    .Y(\$auto$builder.cc:338:Biop$8449 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8452  (
    .A(\$auto$builder.cc:338:Biop$8449 ),
    .B(\$auto$builder.cc:338:Biop$8451 ),
    .Y(\$auto$builder.cc:338:Biop$8453 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8460  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8461 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8462  (
    .A(\$auto$builder.cc:338:Biop$8459 ),
    .B(\$auto$builder.cc:338:Biop$8461 ),
    .Y(\$auto$builder.cc:338:Biop$8463 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8456  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8455 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8457 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8466  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8465 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8467 )
  );
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$auto$rtlil.cc:2874:Mux$8457 ;
  assign FE = \$auto$rtlil.cc:2874:Mux$8467 ;
  assign \$auto$builder.cc:338:Biop$8451  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8455  = \$auto$builder.cc:338:Biop$8453 ;
  assign \$auto$builder.cc:338:Biop$8459  = iDd;
  assign \$auto$rtlil.cc:2746:ReduceBool$8465  = \$auto$builder.cc:338:Biop$8463 ;
endmodule

/* src = "../rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_RI (CLK, D, RST, RE, FE);
  wire \$auto$builder.cc:338:Biop$8472 ;
  wire \$auto$builder.cc:338:Biop$8474 ;
  wire \$auto$builder.cc:338:Biop$8476 ;
  wire \$auto$builder.cc:338:Biop$8482 ;
  wire \$auto$builder.cc:338:Biop$8484 ;
  wire \$auto$builder.cc:338:Biop$8486 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8478 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8488 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8470 ;
  wire \$auto$rtlil.cc:2874:Mux$8480 ;
  wire \$auto$rtlil.cc:2874:Mux$8490 ;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8469  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8470 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8471  (
    .A(iDd),
    .Y(\$auto$builder.cc:338:Biop$8472 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8475  (
    .A(\$auto$builder.cc:338:Biop$8472 ),
    .B(\$auto$builder.cc:338:Biop$8474 ),
    .Y(\$auto$builder.cc:338:Biop$8476 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8483  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8484 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8485  (
    .A(\$auto$builder.cc:338:Biop$8482 ),
    .B(\$auto$builder.cc:338:Biop$8484 ),
    .Y(\$auto$builder.cc:338:Biop$8486 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8479  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8478 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8480 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8489  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8488 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8490 )
  );
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$auto$rtlil.cc:2874:Mux$8480 ;
  assign FE = \$auto$rtlil.cc:2874:Mux$8490 ;
  assign \$auto$builder.cc:338:Biop$8474  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8478  = \$auto$builder.cc:338:Biop$8476 ;
  assign \$auto$builder.cc:338:Biop$8482  = iDd;
  assign \$auto$rtlil.cc:2746:ReduceBool$8488  = \$auto$builder.cc:338:Biop$8486 ;
endmodule

/* src = "../rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_FEDET (CLK, D, RST, RE, FE);
  wire \$auto$builder.cc:338:Biop$8380 ;
  wire \$auto$builder.cc:338:Biop$8382 ;
  wire \$auto$builder.cc:338:Biop$8384 ;
  wire \$auto$builder.cc:338:Biop$8390 ;
  wire \$auto$builder.cc:338:Biop$8392 ;
  wire \$auto$builder.cc:338:Biop$8394 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8386 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8396 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8378 ;
  wire \$auto$rtlil.cc:2874:Mux$8388 ;
  wire \$auto$rtlil.cc:2874:Mux$8398 ;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8377  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8378 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8379  (
    .A(iDd),
    .Y(\$auto$builder.cc:338:Biop$8380 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8383  (
    .A(\$auto$builder.cc:338:Biop$8380 ),
    .B(\$auto$builder.cc:338:Biop$8382 ),
    .Y(\$auto$builder.cc:338:Biop$8384 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8391  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8392 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8393  (
    .A(\$auto$builder.cc:338:Biop$8390 ),
    .B(\$auto$builder.cc:338:Biop$8392 ),
    .Y(\$auto$builder.cc:338:Biop$8394 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8387  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8386 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8388 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8397  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8396 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8398 )
  );
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$auto$rtlil.cc:2874:Mux$8388 ;
  assign FE = \$auto$rtlil.cc:2874:Mux$8398 ;
  assign \$auto$builder.cc:338:Biop$8382  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8386  = \$auto$builder.cc:338:Biop$8384 ;
  assign \$auto$builder.cc:338:Biop$8390  = iDd;
  assign \$auto$rtlil.cc:2746:ReduceBool$8396  = \$auto$builder.cc:338:Biop$8394 ;
endmodule

/* src = "../rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IIC_THRE_ED (CLK, D, RST, RE, FE);
  wire \$auto$builder.cc:338:Biop$8334 ;
  wire \$auto$builder.cc:338:Biop$8336 ;
  wire \$auto$builder.cc:338:Biop$8338 ;
  wire \$auto$builder.cc:338:Biop$8344 ;
  wire \$auto$builder.cc:338:Biop$8346 ;
  wire \$auto$builder.cc:338:Biop$8348 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8340 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8350 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8332 ;
  wire \$auto$rtlil.cc:2874:Mux$8342 ;
  wire \$auto$rtlil.cc:2874:Mux$8352 ;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8331  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8332 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8333  (
    .A(iDd),
    .Y(\$auto$builder.cc:338:Biop$8334 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8337  (
    .A(\$auto$builder.cc:338:Biop$8334 ),
    .B(\$auto$builder.cc:338:Biop$8336 ),
    .Y(\$auto$builder.cc:338:Biop$8338 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8345  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8346 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8347  (
    .A(\$auto$builder.cc:338:Biop$8344 ),
    .B(\$auto$builder.cc:338:Biop$8346 ),
    .Y(\$auto$builder.cc:338:Biop$8348 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8341  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8340 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8342 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8351  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8350 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8352 )
  );
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$auto$rtlil.cc:2874:Mux$8342 ;
  assign FE = \$auto$rtlil.cc:2874:Mux$8352 ;
  assign \$auto$builder.cc:338:Biop$8336  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8340  = \$auto$builder.cc:338:Biop$8338 ;
  assign \$auto$builder.cc:338:Biop$8344  = iDd;
  assign \$auto$rtlil.cc:2746:ReduceBool$8350  = \$auto$builder.cc:338:Biop$8348 ;
endmodule

/* src = "../rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_PEDET (CLK, D, RST, RE, FE);
  wire \$auto$builder.cc:338:Biop$8357 ;
  wire \$auto$builder.cc:338:Biop$8359 ;
  wire \$auto$builder.cc:338:Biop$8361 ;
  wire \$auto$builder.cc:338:Biop$8367 ;
  wire \$auto$builder.cc:338:Biop$8369 ;
  wire \$auto$builder.cc:338:Biop$8371 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8363 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8373 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8355 ;
  wire \$auto$rtlil.cc:2874:Mux$8365 ;
  wire \$auto$rtlil.cc:2874:Mux$8375 ;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8354  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8355 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8356  (
    .A(iDd),
    .Y(\$auto$builder.cc:338:Biop$8357 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8360  (
    .A(\$auto$builder.cc:338:Biop$8357 ),
    .B(\$auto$builder.cc:338:Biop$8359 ),
    .Y(\$auto$builder.cc:338:Biop$8361 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8368  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8369 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8370  (
    .A(\$auto$builder.cc:338:Biop$8367 ),
    .B(\$auto$builder.cc:338:Biop$8369 ),
    .Y(\$auto$builder.cc:338:Biop$8371 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8364  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8363 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8365 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8374  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8373 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8375 )
  );
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$auto$rtlil.cc:2874:Mux$8365 ;
  assign FE = \$auto$rtlil.cc:2874:Mux$8375 ;
  assign \$auto$builder.cc:338:Biop$8359  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8363  = \$auto$builder.cc:338:Biop$8361 ;
  assign \$auto$builder.cc:338:Biop$8367  = iDd;
  assign \$auto$rtlil.cc:2746:ReduceBool$8373  = \$auto$builder.cc:338:Biop$8371 ;
endmodule

/* src = "../rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RCLK (CLK, D, RST, RE, FE);
  wire \$auto$builder.cc:338:Biop$8558 ;
  wire \$auto$builder.cc:338:Biop$8560 ;
  wire \$auto$builder.cc:338:Biop$8562 ;
  wire \$auto$builder.cc:338:Biop$8568 ;
  wire \$auto$builder.cc:338:Biop$8570 ;
  wire \$auto$builder.cc:338:Biop$8572 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8564 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8574 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8556 ;
  wire \$auto$rtlil.cc:2874:Mux$8566 ;
  wire \$auto$rtlil.cc:2874:Mux$8576 ;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8555  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8556 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8557  (
    .A(iDd),
    .Y(\$auto$builder.cc:338:Biop$8558 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8561  (
    .A(\$auto$builder.cc:338:Biop$8558 ),
    .B(\$auto$builder.cc:338:Biop$8560 ),
    .Y(\$auto$builder.cc:338:Biop$8562 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8569  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8570 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8571  (
    .A(\$auto$builder.cc:338:Biop$8568 ),
    .B(\$auto$builder.cc:338:Biop$8570 ),
    .Y(\$auto$builder.cc:338:Biop$8572 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8565  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8564 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8566 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8575  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8574 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8576 )
  );
  /* src = "../rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$auto$rtlil.cc:2874:Mux$8566 ;
  assign FE = \$auto$rtlil.cc:2874:Mux$8576 ;
  assign \$auto$builder.cc:338:Biop$8560  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8564  = \$auto$builder.cc:338:Biop$8562 ;
  assign \$auto$builder.cc:338:Biop$8568  = iDd;
  assign \$auto$rtlil.cc:2746:ReduceBool$8574  = \$auto$builder.cc:338:Biop$8572 ;
endmodule

/* src = "../rtl/apb_uart/slib_fifo.sv:35.8" */
module \slib_fifo$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RXFF (CLK, D, FULL, Q, RST, CLEAR, WRITE, READ, EMPTY, USAGE);
  wire \$auto$builder.cc:338:Biop$8763 ;
  wire \$auto$builder.cc:338:Biop$8765 ;
  wire \$auto$builder.cc:338:Biop$8767 ;
  wire \$auto$builder.cc:338:Biop$8776 ;
  wire \$auto$builder.cc:338:Biop$8778 ;
  wire \$auto$builder.cc:338:Biop$8780 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8784 ;
  wire \$auto$builder.cc:338:Biop$8787 ;
  wire \$auto$builder.cc:338:Biop$8789 ;
  wire \$auto$builder.cc:338:Biop$8791 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8795 ;
  wire \$auto$builder.cc:338:Biop$8798 ;
  wire \$auto$builder.cc:338:Biop$8804 ;
  wire \$auto$builder.cc:338:Biop$8877 ;
  wire \$auto$builder.cc:338:Biop$8879 ;
  wire \$auto$builder.cc:338:Biop$8881 ;
  wire \$auto$builder.cc:338:Biop$8913 ;
  wire \$auto$builder.cc:338:Biop$8917 ;
  wire \$auto$builder.cc:338:Biop$8919 ;
  wire \$auto$builder.cc:338:Biop$8921 ;
  wire \$auto$builder.cc:338:Biop$8923 ;
  wire \$auto$builder.cc:338:Biop$8925 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8929 ;
  wire \$auto$builder.cc:338:Biop$8932 ;
  wire \$auto$builder.cc:338:Biop$8934 ;
  wire \$auto$builder.cc:338:Biop$8936 ;
  wire \$auto$builder.cc:338:Biop$8938 ;
  wire \$auto$builder.cc:338:Biop$8940 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8944 ;
  wire [6:0] \$auto$rtlil.cc:2739:Not$8885 ;
  wire [6:0] \$auto$rtlil.cc:2739:Not$8900 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8769 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8782 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8793 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8800 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8806 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8883 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8915 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8927 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8942 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8774 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8875 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8911 ;
  wire \$auto$rtlil.cc:2791:Lt$8887 ;
  wire \$auto$rtlil.cc:2797:Ge$8889 ;
  wire \$auto$rtlil.cc:2797:Ge$8902 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$8891 ;
  wire \$auto$rtlil.cc:2874:Mux$8771 ;
  wire [10:0] \$auto$rtlil.cc:2874:Mux$8893 ;
  wire [10:0] \$auto$rtlil.cc:2874:Mux$8906 ;
  wire [10:0] \$auto$rtlil.cc:2874:Mux$8908 ;
  wire [703:0] \$auto$rtlil.cc:2875:Bwmux$8897 ;
  wire [10:0] \$auto$rtlil.cc:2895:Bmux$8904 ;
  wire [703:0] \$auto$rtlil.cc:2896:Demux$8895 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$8809 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8810 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8811 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8812 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8813 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8814 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8815 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8816 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8817 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8818 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8819 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8820 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8821 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8822 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8823 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8824 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8825 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8826 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8827 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8828 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8829 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8830 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8831 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8832 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8833 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8834 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8835 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8836 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8837 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8838 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8839 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8840 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8841 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8842 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8843 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8844 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8845 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8846 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8847 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8848 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8849 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8850 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8851 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8852 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8853 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8854 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8855 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8856 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8857 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8858 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8859 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8860 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8861 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8862 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8863 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8864 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8865 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8866 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8867 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8868 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8869 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8870 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8871 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8872 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8873 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:89.1-96.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iEMPTY$8807 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:113.3-116.8" */
  wire [703:0] \$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:76.1-79.18" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\iRDAddr$8796 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\iRDAddr$8802 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:140.7-143.26" */
  wire [5:0] \$auto$slang_frontend.cc:694:finish$\iUSAGE$8930 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:145.1-148.26" */
  wire [5:0] \$auto$slang_frontend.cc:694:finish$\iUSAGE$8945 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  wire [5:0] \$auto$slang_frontend.cc:694:finish$\iUSAGE$8946 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:71.3-74.18" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\iWRAddr$8785 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\iWRAddr$8801 ;
  wire [5:0] \$procmux$13179_Y ;
  wire \$procmux$13180_CMP ;
  wire [5:0] \$procmux$13183_Y ;
  wire \$procmux$13184_CMP ;
  wire [5:0] \$procmux$13185_Y ;
  wire \$procmux$13186_CMP ;
  wire [5:0] \$procmux$13188_Y ;
  wire \$procmux$13189_CMP ;
  wire [5:0] \$procmux$13193_Y ;
  wire \$procmux$13194_CMP ;
  wire [703:0] \$procmux$13195_Y ;
  wire \$procmux$13196_CMP ;
  wire \$procmux$13198_Y ;
  wire \$procmux$13199_CMP ;
  wire [6:0] \$procmux$13203_Y ;
  wire \$procmux$13204_CMP ;
  wire [6:0] \$procmux$13207_Y ;
  wire \$procmux$13208_CMP ;
  wire [6:0] \$procmux$13211_Y ;
  wire \$procmux$13212_CMP ;
  wire [6:0] \$procmux$13214_Y ;
  wire \$procmux$13215_CMP ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:38.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "../rtl/apb_uart/slib_fifo.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_fifo.sv:41.28" */
  input [10:0] D;
  wire [10:0] D;
  /* src = "../rtl/apb_uart/slib_fifo.sv:43.16" */
  output EMPTY;
  wire EMPTY;
  /* src = "../rtl/apb_uart/slib_fifo.sv:44.16" */
  output FULL;
  wire FULL;
  /* src = "../rtl/apb_uart/slib_fifo.sv:42.30" */
  output [10:0] Q;
  wire [10:0] Q;
  /* src = "../rtl/apb_uart/slib_fifo.sv:40.14" */
  input READ;
  wire READ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_fifo.sv:45.31" */
  output [5:0] USAGE;
  wire [5:0] USAGE;
  /* src = "../rtl/apb_uart/slib_fifo.sv:39.14" */
  input WRITE;
  wire WRITE;
  /* src = "../rtl/apb_uart/slib_fifo.sv:49.5" */
  wire iEMPTY;
  /* src = "../rtl/apb_uart/slib_fifo.sv:55.17" */
  wire [703:0] iFIFOMem;
  /* src = "../rtl/apb_uart/slib_fifo.sv:50.5" */
  wire iFULL;
  /* src = "../rtl/apb_uart/slib_fifo.sv:52.16" */
  wire [6:0] iRDAddr;
  /* src = "../rtl/apb_uart/slib_fifo.sv:54.20" */
  wire [5:0] iUSAGE;
  /* src = "../rtl/apb_uart/slib_fifo.sv:51.16" */
  wire [6:0] iWRAddr;
  /* src = "../rtl/apb_uart/slib_fifo.sv:53.16" */
  wire [6:0] init;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8773  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8774 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8874  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8875 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8910  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8911 )
  );
  \$mux  #(
    .WIDTH(32'd11)
  ) \$auto$builder.cc:112:Mux$8892  (
    .A(11'h000),
    .B(11'h7ff),
    .S(\$auto$rtlil.cc:2806:LogicAnd$8891 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8893 )
  );
  \$mux  #(
    .WIDTH(32'd11)
  ) \$auto$builder.cc:112:Mux$8905  (
    .A(11'hxxx),
    .B(\$auto$rtlil.cc:2895:Bmux$8904 ),
    .S(\$auto$rtlil.cc:2797:Ge$8902 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8906 )
  );
  \$mux  #(
    .WIDTH(32'd11)
  ) \$auto$builder.cc:112:Mux$8907  (
    .A(11'hxxx),
    .B(\$auto$rtlil.cc:2874:Mux$8906 ),
    .S(\$auto$rtlil.cc:2739:Not$8900 [6]),
    .Y(\$auto$rtlil.cc:2874:Mux$8908 )
  );
  \$bwmux  #(
    .WIDTH(32'd704)
  ) \$auto$builder.cc:128:Bwmux$8896  (
    .A(iFIFOMem),
    .B({ D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D }),
    .S(\$auto$rtlil.cc:2896:Demux$8895 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$8897 )
  );
  \$bmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd11)
  ) \$auto$builder.cc:195:Bmux$8903  (
    .A(iFIFOMem),
    .S(\$auto$rtlil.cc:2739:Not$8900 [5:0]),
    .Y(\$auto$rtlil.cc:2895:Bmux$8904 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd7)
  ) \$auto$builder.cc:202:Not$8884  (
    .A({ 1'h0, iWRAddr[5:0] }),
    .Y(\$auto$rtlil.cc:2739:Not$8885 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd7)
  ) \$auto$builder.cc:202:Not$8899  (
    .A({ 1'h0, iRDAddr[5:0] }),
    .Y(\$auto$rtlil.cc:2739:Not$8900 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8762  (
    .A(iRDAddr[5:0]),
    .B(iWRAddr[5:0]),
    .Y(\$auto$builder.cc:338:Biop$8763 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8764  (
    .A(iRDAddr[6]),
    .B(iWRAddr[6]),
    .Y(\$auto$builder.cc:338:Biop$8765 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8766  (
    .A(\$auto$builder.cc:338:Biop$8763 ),
    .B(\$auto$builder.cc:338:Biop$8765 ),
    .Y(\$auto$builder.cc:338:Biop$8767 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8777  (
    .A(iFULL),
    .Y(\$auto$builder.cc:338:Biop$8778 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8779  (
    .A(\$auto$builder.cc:338:Biop$8776 ),
    .B(\$auto$builder.cc:338:Biop$8778 ),
    .Y(\$auto$builder.cc:338:Biop$8780 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8783  (
    .A({ 25'h0000000, iWRAddr }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8784 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8788  (
    .A(iEMPTY),
    .Y(\$auto$builder.cc:338:Biop$8789 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8790  (
    .A(\$auto$builder.cc:338:Biop$8787 ),
    .B(\$auto$builder.cc:338:Biop$8789 ),
    .Y(\$auto$builder.cc:338:Biop$8791 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8794  (
    .A({ 25'h0000000, iRDAddr }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8795 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8803  (
    .A(iRDAddr),
    .B(iWRAddr),
    .Y(\$auto$builder.cc:338:Biop$8804 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8878  (
    .A(iFULL),
    .Y(\$auto$builder.cc:338:Biop$8879 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8880  (
    .A(\$auto$builder.cc:338:Biop$8877 ),
    .B(\$auto$builder.cc:338:Biop$8879 ),
    .Y(\$auto$builder.cc:338:Biop$8881 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8916  (
    .A(READ),
    .Y(\$auto$builder.cc:338:Biop$8917 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8920  (
    .A(\$auto$builder.cc:338:Biop$8917 ),
    .B(\$auto$builder.cc:338:Biop$8919 ),
    .Y(\$auto$builder.cc:338:Biop$8921 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8922  (
    .A(iFULL),
    .Y(\$auto$builder.cc:338:Biop$8923 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8924  (
    .A(\$auto$builder.cc:338:Biop$8921 ),
    .B(\$auto$builder.cc:338:Biop$8923 ),
    .Y(\$auto$builder.cc:338:Biop$8925 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8928  (
    .A({ 26'h0000000, iUSAGE }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8929 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8931  (
    .A(WRITE),
    .Y(\$auto$builder.cc:338:Biop$8932 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8935  (
    .A(\$auto$builder.cc:338:Biop$8932 ),
    .B(\$auto$builder.cc:338:Biop$8934 ),
    .Y(\$auto$builder.cc:338:Biop$8936 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8937  (
    .A(iEMPTY),
    .Y(\$auto$builder.cc:338:Biop$8938 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8939  (
    .A(\$auto$builder.cc:338:Biop$8936 ),
    .B(\$auto$builder.cc:338:Biop$8938 ),
    .Y(\$auto$builder.cc:338:Biop$8940 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8943  (
    .A({ 26'h0000000, iUSAGE }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8944 )
  );
  \$demux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd11)
  ) \$auto$builder.cc:38:Demux$8894  (
    .A(\$auto$rtlil.cc:2874:Mux$8893 ),
    .S(\$auto$rtlil.cc:2739:Not$8885 [5:0]),
    .Y(\$auto$rtlil.cc:2896:Demux$8895 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$8888  (
    .A(\$auto$rtlil.cc:2739:Not$8885 ),
    .B(7'h40),
    .Y(\$auto$rtlil.cc:2797:Ge$8889 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$8901  (
    .A(\$auto$rtlil.cc:2739:Not$8900 ),
    .B(7'h40),
    .Y(\$auto$rtlil.cc:2797:Ge$8902 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$8886  (
    .A(\$auto$rtlil.cc:2739:Not$8885 ),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2791:Lt$8887 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$8890  (
    .A(\$auto$rtlil.cc:2797:Ge$8889 ),
    .B(\$auto$rtlil.cc:2791:Lt$8887 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$8891 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8770  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8769 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8771 )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$Q  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$rtlil.cc:2874:Mux$8908 ),
    .Q(Q)
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iEMPTY  (
    .AD(1'h1),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iEMPTY$8807 ),
    .Q(iEMPTY)
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[0]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [703:693]),
    .Q(iFIFOMem[703:693])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[10]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [593:583]),
    .Q(iFIFOMem[593:583])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[11]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [582:572]),
    .Q(iFIFOMem[582:572])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[12]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [571:561]),
    .Q(iFIFOMem[571:561])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[13]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [560:550]),
    .Q(iFIFOMem[560:550])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[14]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [549:539]),
    .Q(iFIFOMem[549:539])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[15]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [538:528]),
    .Q(iFIFOMem[538:528])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[16]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [527:517]),
    .Q(iFIFOMem[527:517])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[17]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [516:506]),
    .Q(iFIFOMem[516:506])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[18]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [505:495]),
    .Q(iFIFOMem[505:495])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[19]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [494:484]),
    .Q(iFIFOMem[494:484])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[1]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [692:682]),
    .Q(iFIFOMem[692:682])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[20]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [483:473]),
    .Q(iFIFOMem[483:473])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[21]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [472:462]),
    .Q(iFIFOMem[472:462])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[22]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [461:451]),
    .Q(iFIFOMem[461:451])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[23]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [450:440]),
    .Q(iFIFOMem[450:440])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[24]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [439:429]),
    .Q(iFIFOMem[439:429])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[25]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [428:418]),
    .Q(iFIFOMem[428:418])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[26]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [417:407]),
    .Q(iFIFOMem[417:407])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[27]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [406:396]),
    .Q(iFIFOMem[406:396])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[28]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [395:385]),
    .Q(iFIFOMem[395:385])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[29]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [384:374]),
    .Q(iFIFOMem[384:374])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[2]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [681:671]),
    .Q(iFIFOMem[681:671])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[30]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [373:363]),
    .Q(iFIFOMem[373:363])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[31]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [362:352]),
    .Q(iFIFOMem[362:352])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[32]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [351:341]),
    .Q(iFIFOMem[351:341])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[33]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [340:330]),
    .Q(iFIFOMem[340:330])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[34]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [329:319]),
    .Q(iFIFOMem[329:319])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[35]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [318:308]),
    .Q(iFIFOMem[318:308])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[36]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [307:297]),
    .Q(iFIFOMem[307:297])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[37]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [296:286]),
    .Q(iFIFOMem[296:286])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[38]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [285:275]),
    .Q(iFIFOMem[285:275])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[39]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [274:264]),
    .Q(iFIFOMem[274:264])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[3]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [670:660]),
    .Q(iFIFOMem[670:660])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[40]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [263:253]),
    .Q(iFIFOMem[263:253])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[41]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [252:242]),
    .Q(iFIFOMem[252:242])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[42]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [241:231]),
    .Q(iFIFOMem[241:231])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[43]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [230:220]),
    .Q(iFIFOMem[230:220])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[44]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [219:209]),
    .Q(iFIFOMem[219:209])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[45]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [208:198]),
    .Q(iFIFOMem[208:198])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[46]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [197:187]),
    .Q(iFIFOMem[197:187])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[47]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [186:176]),
    .Q(iFIFOMem[186:176])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[48]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [175:165]),
    .Q(iFIFOMem[175:165])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[49]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [164:154]),
    .Q(iFIFOMem[164:154])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[4]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [659:649]),
    .Q(iFIFOMem[659:649])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[50]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [153:143]),
    .Q(iFIFOMem[153:143])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[51]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [142:132]),
    .Q(iFIFOMem[142:132])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[52]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [131:121]),
    .Q(iFIFOMem[131:121])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[53]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [120:110]),
    .Q(iFIFOMem[120:110])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[54]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [109:99]),
    .Q(iFIFOMem[109:99])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[55]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [98:88]),
    .Q(iFIFOMem[98:88])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[56]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [87:77]),
    .Q(iFIFOMem[87:77])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[57]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [76:66]),
    .Q(iFIFOMem[76:66])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[58]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [65:55]),
    .Q(iFIFOMem[65:55])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[59]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [54:44]),
    .Q(iFIFOMem[54:44])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[5]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [648:638]),
    .Q(iFIFOMem[648:638])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[60]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [43:33]),
    .Q(iFIFOMem[43:33])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[61]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [32:22]),
    .Q(iFIFOMem[32:22])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[62]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [21:11]),
    .Q(iFIFOMem[21:11])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[63]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [10:0]),
    .Q(iFIFOMem[10:0])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[6]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [637:627]),
    .Q(iFIFOMem[637:627])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[7]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [626:616]),
    .Q(iFIFOMem[626:616])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[8]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [615:605]),
    .Q(iFIFOMem[615:605])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[9]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898 [604:594]),
    .Q(iFIFOMem[604:594])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$iRDAddr  (
    .AD(7'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iRDAddr$8802 ),
    .Q(iRDAddr)
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:124.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd6)
  ) \$driver$iUSAGE  (
    .AD(6'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iUSAGE$8946 ),
    .Q(iUSAGE)
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$iWRAddr  (
    .AD(7'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iWRAddr$8801 ),
    .Q(iWRAddr)
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:147.11-147.32|../rtl/apb_uart/slib_fifo.sv:145.1-148.26" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$13179  (
    .A(\$auto$slang_frontend.cc:694:finish$\iUSAGE$8930 ),
    .B(\$auto$builder.cc:338:Biop$8944 [5:0]),
    .S(\$procmux$13180_CMP ),
    .Y(\$procmux$13179_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_fifo.sv:136.1-136.13|../rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$13183  (
    .A(\$procmux$13179_Y ),
    .B(6'hxx),
    .S(\$procmux$13184_CMP ),
    .Y(\$procmux$13183_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:142.11-142.32|../rtl/apb_uart/slib_fifo.sv:140.7-143.26" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$13185  (
    .A(iUSAGE),
    .B(\$auto$builder.cc:338:Biop$8929 [5:0]),
    .S(\$procmux$13186_CMP ),
    .Y(\$procmux$13185_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_fifo.sv:136.1-136.13|../rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$13188  (
    .A(\$procmux$13185_Y ),
    .B(6'hxx),
    .S(\$procmux$13189_CMP ),
    .Y(\$procmux$13188_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_fifo.sv:136.1-136.13|../rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$13193  (
    .A(\$auto$slang_frontend.cc:694:finish$\iUSAGE$8945 ),
    .B(6'h00),
    .S(\$procmux$13194_CMP ),
    .Y(\$procmux$13193_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:115.8-115.43|../rtl/apb_uart/slib_fifo.sv:113.3-116.8" */
  \$mux  #(
    .WIDTH(32'd704)
  ) \$procmux$13195  (
    .A(iFIFOMem),
    .B(\$auto$rtlil.cc:2875:Bwmux$8897 ),
    .S(\$procmux$13196_CMP ),
    .Y(\$procmux$13195_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_fifo.sv:91.7-91.23|../rtl/apb_uart/slib_fifo.sv:89.1-96.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13198  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$13199_CMP ),
    .Y(\$procmux$13198_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:82.11-87.10|../rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13203  (
    .A(\$auto$slang_frontend.cc:694:finish$\iRDAddr$8796 ),
    .B(7'h00),
    .S(\$procmux$13204_CMP ),
    .Y(\$procmux$13203_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:82.11-87.10|../rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13207  (
    .A(\$auto$slang_frontend.cc:694:finish$\iWRAddr$8785 ),
    .B(7'h00),
    .S(\$procmux$13208_CMP ),
    .Y(\$procmux$13207_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:78.7-78.30|../rtl/apb_uart/slib_fifo.sv:76.1-79.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13211  (
    .A(iRDAddr),
    .B(\$auto$builder.cc:338:Biop$8795 [6:0]),
    .S(\$procmux$13212_CMP ),
    .Y(\$procmux$13211_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:73.7-73.30|../rtl/apb_uart/slib_fifo.sv:71.3-74.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13214  (
    .A(iWRAddr),
    .B(\$auto$builder.cc:338:Biop$8784 [6:0]),
    .S(\$procmux$13215_CMP ),
    .Y(\$procmux$13214_Y )
  );
  assign iFULL = \$auto$rtlil.cc:2874:Mux$8771 ;
  assign EMPTY = iEMPTY;
  assign FULL = iFULL;
  assign USAGE = iUSAGE;
  assign \$procmux$13180_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8942 ;
  assign \$procmux$13184_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8915 ;
  assign \$auto$slang_frontend.cc:694:finish$\iUSAGE$8945  = \$procmux$13183_Y ;
  assign \$procmux$13186_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8927 ;
  assign \$procmux$13189_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8915 ;
  assign \$auto$slang_frontend.cc:694:finish$\iUSAGE$8930  = \$procmux$13188_Y ;
  assign \$procmux$13194_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8915 ;
  assign \$auto$slang_frontend.cc:694:finish$\iUSAGE$8946  = \$procmux$13193_Y ;
  assign \$procmux$13196_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8883 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFIFOMem$8898  = \$procmux$13195_Y ;
  assign \$procmux$13199_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8806 ;
  assign \$auto$slang_frontend.cc:694:finish$\iEMPTY$8807  = \$procmux$13198_Y ;
  assign \$procmux$13204_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8800 ;
  assign \$auto$slang_frontend.cc:694:finish$\iRDAddr$8802  = \$procmux$13203_Y ;
  assign \$procmux$13208_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8800 ;
  assign \$auto$slang_frontend.cc:694:finish$\iWRAddr$8801  = \$procmux$13207_Y ;
  assign \$procmux$13212_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8793 ;
  assign \$auto$slang_frontend.cc:694:finish$\iRDAddr$8796  = \$procmux$13211_Y ;
  assign \$procmux$13215_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8782 ;
  assign \$auto$slang_frontend.cc:694:finish$\iWRAddr$8785  = \$procmux$13214_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8769  = \$auto$builder.cc:338:Biop$8767 ;
  assign \$auto$builder.cc:338:Biop$8776  = WRITE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8782  = \$auto$builder.cc:338:Biop$8780 ;
  assign \$auto$builder.cc:338:Biop$8787  = READ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8793  = \$auto$builder.cc:338:Biop$8791 ;
  assign \$auto$builder.cc:338:Biop$8798  = CLEAR;
  assign \$auto$rtlil.cc:2746:ReduceBool$8800  = CLEAR;
  assign \$auto$rtlil.cc:2746:ReduceBool$8806  = \$auto$builder.cc:338:Biop$8804 ;
  assign \$auto$builder.cc:338:Biop$8877  = WRITE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8883  = \$auto$builder.cc:338:Biop$8881 ;
  assign \$auto$builder.cc:338:Biop$8913  = CLEAR;
  assign \$auto$rtlil.cc:2746:ReduceBool$8915  = CLEAR;
  assign \$auto$builder.cc:338:Biop$8919  = WRITE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8927  = \$auto$builder.cc:338:Biop$8925 ;
  assign \$auto$builder.cc:338:Biop$8934  = READ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8942  = \$auto$builder.cc:338:Biop$8940 ;
endmodule

/* src = "../rtl/apb_uart/slib_fifo.sv:35.8" */
module \slib_fifo$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_TXFF (CLK, D, FULL, Q, RST, CLEAR, WRITE, READ, EMPTY, USAGE);
  wire \$auto$builder.cc:338:Biop$8578 ;
  wire \$auto$builder.cc:338:Biop$8580 ;
  wire \$auto$builder.cc:338:Biop$8582 ;
  wire \$auto$builder.cc:338:Biop$8591 ;
  wire \$auto$builder.cc:338:Biop$8593 ;
  wire \$auto$builder.cc:338:Biop$8595 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8599 ;
  wire \$auto$builder.cc:338:Biop$8602 ;
  wire \$auto$builder.cc:338:Biop$8604 ;
  wire \$auto$builder.cc:338:Biop$8606 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8610 ;
  wire \$auto$builder.cc:338:Biop$8613 ;
  wire \$auto$builder.cc:338:Biop$8619 ;
  wire \$auto$builder.cc:338:Biop$8692 ;
  wire \$auto$builder.cc:338:Biop$8694 ;
  wire \$auto$builder.cc:338:Biop$8696 ;
  wire \$auto$builder.cc:338:Biop$8728 ;
  wire \$auto$builder.cc:338:Biop$8732 ;
  wire \$auto$builder.cc:338:Biop$8734 ;
  wire \$auto$builder.cc:338:Biop$8736 ;
  wire \$auto$builder.cc:338:Biop$8738 ;
  wire \$auto$builder.cc:338:Biop$8740 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8744 ;
  wire \$auto$builder.cc:338:Biop$8747 ;
  wire \$auto$builder.cc:338:Biop$8749 ;
  wire \$auto$builder.cc:338:Biop$8751 ;
  wire \$auto$builder.cc:338:Biop$8753 ;
  wire \$auto$builder.cc:338:Biop$8755 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8759 ;
  wire [6:0] \$auto$rtlil.cc:2739:Not$8700 ;
  wire [6:0] \$auto$rtlil.cc:2739:Not$8715 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8584 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8597 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8608 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8615 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8621 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8698 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8730 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8742 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8757 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8589 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8690 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8726 ;
  wire \$auto$rtlil.cc:2791:Lt$8702 ;
  wire \$auto$rtlil.cc:2797:Ge$8704 ;
  wire \$auto$rtlil.cc:2797:Ge$8717 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$8706 ;
  wire \$auto$rtlil.cc:2874:Mux$8586 ;
  wire [7:0] \$auto$rtlil.cc:2874:Mux$8708 ;
  wire [7:0] \$auto$rtlil.cc:2874:Mux$8721 ;
  wire [7:0] \$auto$rtlil.cc:2874:Mux$8723 ;
  wire [511:0] \$auto$rtlil.cc:2875:Bwmux$8712 ;
  wire [7:0] \$auto$rtlil.cc:2895:Bmux$8719 ;
  wire [511:0] \$auto$rtlil.cc:2896:Demux$8710 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$8624 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8625 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8626 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8627 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8628 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8629 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8630 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8631 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8632 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8633 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8634 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8635 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8636 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8637 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8638 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8639 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8640 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8641 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8642 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8643 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8644 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8645 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8646 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8647 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8648 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8649 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8650 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8651 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8652 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8653 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8654 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8655 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8656 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8657 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8658 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8659 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8660 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8661 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8662 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8663 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8664 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8665 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8666 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8667 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8668 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8669 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8670 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8671 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8672 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8673 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8674 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8675 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8676 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8677 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8678 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8679 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8680 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8681 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8682 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8683 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8684 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8685 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8686 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8687 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$8688 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:89.1-96.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iEMPTY$8622 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:113.3-116.8" */
  wire [511:0] \$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:76.1-79.18" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\iRDAddr$8611 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\iRDAddr$8617 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:140.7-143.26" */
  wire [5:0] \$auto$slang_frontend.cc:694:finish$\iUSAGE$8745 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:145.1-148.26" */
  wire [5:0] \$auto$slang_frontend.cc:694:finish$\iUSAGE$8760 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  wire [5:0] \$auto$slang_frontend.cc:694:finish$\iUSAGE$8761 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:71.3-74.18" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\iWRAddr$8600 ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  wire [6:0] \$auto$slang_frontend.cc:694:finish$\iWRAddr$8616 ;
  wire [5:0] \$procmux$13216_Y ;
  wire \$procmux$13217_CMP ;
  wire [5:0] \$procmux$13220_Y ;
  wire \$procmux$13221_CMP ;
  wire [5:0] \$procmux$13222_Y ;
  wire \$procmux$13223_CMP ;
  wire [5:0] \$procmux$13225_Y ;
  wire \$procmux$13226_CMP ;
  wire [5:0] \$procmux$13230_Y ;
  wire \$procmux$13231_CMP ;
  wire [511:0] \$procmux$13232_Y ;
  wire \$procmux$13233_CMP ;
  wire \$procmux$13235_Y ;
  wire \$procmux$13236_CMP ;
  wire [6:0] \$procmux$13240_Y ;
  wire \$procmux$13241_CMP ;
  wire [6:0] \$procmux$13244_Y ;
  wire \$procmux$13245_CMP ;
  wire [6:0] \$procmux$13248_Y ;
  wire \$procmux$13249_CMP ;
  wire [6:0] \$procmux$13251_Y ;
  wire \$procmux$13252_CMP ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:38.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "../rtl/apb_uart/slib_fifo.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_fifo.sv:41.28" */
  input [7:0] D;
  wire [7:0] D;
  /* src = "../rtl/apb_uart/slib_fifo.sv:43.16" */
  output EMPTY;
  wire EMPTY;
  /* src = "../rtl/apb_uart/slib_fifo.sv:44.16" */
  output FULL;
  wire FULL;
  /* src = "../rtl/apb_uart/slib_fifo.sv:42.30" */
  output [7:0] Q;
  wire [7:0] Q;
  /* src = "../rtl/apb_uart/slib_fifo.sv:40.14" */
  input READ;
  wire READ;
  /* src = "../rtl/apb_uart/slib_fifo.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_fifo.sv:45.31" */
  output [5:0] USAGE;
  wire [5:0] USAGE;
  /* src = "../rtl/apb_uart/slib_fifo.sv:39.14" */
  input WRITE;
  wire WRITE;
  /* src = "../rtl/apb_uart/slib_fifo.sv:49.5" */
  wire iEMPTY;
  /* src = "../rtl/apb_uart/slib_fifo.sv:55.17" */
  wire [511:0] iFIFOMem;
  /* src = "../rtl/apb_uart/slib_fifo.sv:50.5" */
  wire iFULL;
  /* src = "../rtl/apb_uart/slib_fifo.sv:52.16" */
  wire [6:0] iRDAddr;
  /* src = "../rtl/apb_uart/slib_fifo.sv:54.20" */
  wire [5:0] iUSAGE;
  /* src = "../rtl/apb_uart/slib_fifo.sv:51.16" */
  wire [6:0] iWRAddr;
  /* src = "../rtl/apb_uart/slib_fifo.sv:53.16" */
  wire [6:0] init;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8588  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8589 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8689  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8690 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8725  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8726 )
  );
  \$mux  #(
    .WIDTH(32'd8)
  ) \$auto$builder.cc:112:Mux$8707  (
    .A(8'h00),
    .B(8'hff),
    .S(\$auto$rtlil.cc:2806:LogicAnd$8706 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8708 )
  );
  \$mux  #(
    .WIDTH(32'd8)
  ) \$auto$builder.cc:112:Mux$8720  (
    .A(8'hxx),
    .B(\$auto$rtlil.cc:2895:Bmux$8719 ),
    .S(\$auto$rtlil.cc:2797:Ge$8717 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8721 )
  );
  \$mux  #(
    .WIDTH(32'd8)
  ) \$auto$builder.cc:112:Mux$8722  (
    .A(8'hxx),
    .B(\$auto$rtlil.cc:2874:Mux$8721 ),
    .S(\$auto$rtlil.cc:2739:Not$8715 [6]),
    .Y(\$auto$rtlil.cc:2874:Mux$8723 )
  );
  \$bwmux  #(
    .WIDTH(32'd512)
  ) \$auto$builder.cc:128:Bwmux$8711  (
    .A(iFIFOMem),
    .B({ D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D }),
    .S(\$auto$rtlil.cc:2896:Demux$8710 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$8712 )
  );
  \$bmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd8)
  ) \$auto$builder.cc:195:Bmux$8718  (
    .A(iFIFOMem),
    .S(\$auto$rtlil.cc:2739:Not$8715 [5:0]),
    .Y(\$auto$rtlil.cc:2895:Bmux$8719 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd7)
  ) \$auto$builder.cc:202:Not$8699  (
    .A({ 1'h0, iWRAddr[5:0] }),
    .Y(\$auto$rtlil.cc:2739:Not$8700 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd7)
  ) \$auto$builder.cc:202:Not$8714  (
    .A({ 1'h0, iRDAddr[5:0] }),
    .Y(\$auto$rtlil.cc:2739:Not$8715 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8577  (
    .A(iRDAddr[5:0]),
    .B(iWRAddr[5:0]),
    .Y(\$auto$builder.cc:338:Biop$8578 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8579  (
    .A(iRDAddr[6]),
    .B(iWRAddr[6]),
    .Y(\$auto$builder.cc:338:Biop$8580 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8581  (
    .A(\$auto$builder.cc:338:Biop$8578 ),
    .B(\$auto$builder.cc:338:Biop$8580 ),
    .Y(\$auto$builder.cc:338:Biop$8582 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8592  (
    .A(iFULL),
    .Y(\$auto$builder.cc:338:Biop$8593 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8594  (
    .A(\$auto$builder.cc:338:Biop$8591 ),
    .B(\$auto$builder.cc:338:Biop$8593 ),
    .Y(\$auto$builder.cc:338:Biop$8595 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8598  (
    .A({ 25'h0000000, iWRAddr }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8599 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8603  (
    .A(iEMPTY),
    .Y(\$auto$builder.cc:338:Biop$8604 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8605  (
    .A(\$auto$builder.cc:338:Biop$8602 ),
    .B(\$auto$builder.cc:338:Biop$8604 ),
    .Y(\$auto$builder.cc:338:Biop$8606 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8609  (
    .A({ 25'h0000000, iRDAddr }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8610 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8618  (
    .A(iRDAddr),
    .B(iWRAddr),
    .Y(\$auto$builder.cc:338:Biop$8619 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8693  (
    .A(iFULL),
    .Y(\$auto$builder.cc:338:Biop$8694 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8695  (
    .A(\$auto$builder.cc:338:Biop$8692 ),
    .B(\$auto$builder.cc:338:Biop$8694 ),
    .Y(\$auto$builder.cc:338:Biop$8696 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8731  (
    .A(READ),
    .Y(\$auto$builder.cc:338:Biop$8732 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8735  (
    .A(\$auto$builder.cc:338:Biop$8732 ),
    .B(\$auto$builder.cc:338:Biop$8734 ),
    .Y(\$auto$builder.cc:338:Biop$8736 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8737  (
    .A(iFULL),
    .Y(\$auto$builder.cc:338:Biop$8738 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8739  (
    .A(\$auto$builder.cc:338:Biop$8736 ),
    .B(\$auto$builder.cc:338:Biop$8738 ),
    .Y(\$auto$builder.cc:338:Biop$8740 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8743  (
    .A({ 26'h0000000, iUSAGE }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8744 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8746  (
    .A(WRITE),
    .Y(\$auto$builder.cc:338:Biop$8747 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8750  (
    .A(\$auto$builder.cc:338:Biop$8747 ),
    .B(\$auto$builder.cc:338:Biop$8749 ),
    .Y(\$auto$builder.cc:338:Biop$8751 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8752  (
    .A(iEMPTY),
    .Y(\$auto$builder.cc:338:Biop$8753 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8754  (
    .A(\$auto$builder.cc:338:Biop$8751 ),
    .B(\$auto$builder.cc:338:Biop$8753 ),
    .Y(\$auto$builder.cc:338:Biop$8755 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8758  (
    .A({ 26'h0000000, iUSAGE }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8759 )
  );
  \$demux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd8)
  ) \$auto$builder.cc:38:Demux$8709  (
    .A(\$auto$rtlil.cc:2874:Mux$8708 ),
    .S(\$auto$rtlil.cc:2739:Not$8700 [5:0]),
    .Y(\$auto$rtlil.cc:2896:Demux$8710 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$8703  (
    .A(\$auto$rtlil.cc:2739:Not$8700 ),
    .B(7'h40),
    .Y(\$auto$rtlil.cc:2797:Ge$8704 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$8716  (
    .A(\$auto$rtlil.cc:2739:Not$8715 ),
    .B(7'h40),
    .Y(\$auto$rtlil.cc:2797:Ge$8717 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$8701  (
    .A(\$auto$rtlil.cc:2739:Not$8700 ),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2791:Lt$8702 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$8705  (
    .A(\$auto$rtlil.cc:2797:Ge$8704 ),
    .B(\$auto$rtlil.cc:2791:Lt$8702 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$8706 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$8585  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$8584 ),
    .Y(\$auto$rtlil.cc:2874:Mux$8586 )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$Q  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$rtlil.cc:2874:Mux$8723 ),
    .Q(Q)
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iEMPTY  (
    .AD(1'h1),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iEMPTY$8622 ),
    .Q(iEMPTY)
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[0]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [511:504]),
    .Q(iFIFOMem[511:504])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[10]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [431:424]),
    .Q(iFIFOMem[431:424])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[11]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [423:416]),
    .Q(iFIFOMem[423:416])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[12]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [415:408]),
    .Q(iFIFOMem[415:408])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[13]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [407:400]),
    .Q(iFIFOMem[407:400])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[14]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [399:392]),
    .Q(iFIFOMem[399:392])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[15]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [391:384]),
    .Q(iFIFOMem[391:384])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[16]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [383:376]),
    .Q(iFIFOMem[383:376])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[17]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [375:368]),
    .Q(iFIFOMem[375:368])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[18]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [367:360]),
    .Q(iFIFOMem[367:360])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[19]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [359:352]),
    .Q(iFIFOMem[359:352])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[1]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [503:496]),
    .Q(iFIFOMem[503:496])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[20]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [351:344]),
    .Q(iFIFOMem[351:344])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[21]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [343:336]),
    .Q(iFIFOMem[343:336])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[22]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [335:328]),
    .Q(iFIFOMem[335:328])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[23]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [327:320]),
    .Q(iFIFOMem[327:320])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[24]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [319:312]),
    .Q(iFIFOMem[319:312])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[25]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [311:304]),
    .Q(iFIFOMem[311:304])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[26]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [303:296]),
    .Q(iFIFOMem[303:296])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[27]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [295:288]),
    .Q(iFIFOMem[295:288])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[28]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [287:280]),
    .Q(iFIFOMem[287:280])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[29]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [279:272]),
    .Q(iFIFOMem[279:272])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[2]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [495:488]),
    .Q(iFIFOMem[495:488])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[30]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [271:264]),
    .Q(iFIFOMem[271:264])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[31]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [263:256]),
    .Q(iFIFOMem[263:256])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[32]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [255:248]),
    .Q(iFIFOMem[255:248])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[33]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [247:240]),
    .Q(iFIFOMem[247:240])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[34]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [239:232]),
    .Q(iFIFOMem[239:232])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[35]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [231:224]),
    .Q(iFIFOMem[231:224])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[36]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [223:216]),
    .Q(iFIFOMem[223:216])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[37]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [215:208]),
    .Q(iFIFOMem[215:208])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[38]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [207:200]),
    .Q(iFIFOMem[207:200])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[39]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [199:192]),
    .Q(iFIFOMem[199:192])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[3]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [487:480]),
    .Q(iFIFOMem[487:480])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[40]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [191:184]),
    .Q(iFIFOMem[191:184])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[41]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [183:176]),
    .Q(iFIFOMem[183:176])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[42]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [175:168]),
    .Q(iFIFOMem[175:168])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[43]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [167:160]),
    .Q(iFIFOMem[167:160])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[44]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [159:152]),
    .Q(iFIFOMem[159:152])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[45]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [151:144]),
    .Q(iFIFOMem[151:144])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[46]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [143:136]),
    .Q(iFIFOMem[143:136])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[47]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [135:128]),
    .Q(iFIFOMem[135:128])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[48]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [127:120]),
    .Q(iFIFOMem[127:120])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[49]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [119:112]),
    .Q(iFIFOMem[119:112])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[4]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [479:472]),
    .Q(iFIFOMem[479:472])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[50]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [111:104]),
    .Q(iFIFOMem[111:104])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[51]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [103:96]),
    .Q(iFIFOMem[103:96])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[52]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [95:88]),
    .Q(iFIFOMem[95:88])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[53]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [87:80]),
    .Q(iFIFOMem[87:80])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[54]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [79:72]),
    .Q(iFIFOMem[79:72])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[55]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [71:64]),
    .Q(iFIFOMem[71:64])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[56]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [63:56]),
    .Q(iFIFOMem[63:56])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[57]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [55:48]),
    .Q(iFIFOMem[55:48])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[58]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [47:40]),
    .Q(iFIFOMem[47:40])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[59]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [39:32]),
    .Q(iFIFOMem[39:32])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[5]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [471:464]),
    .Q(iFIFOMem[471:464])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[60]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [31:24]),
    .Q(iFIFOMem[31:24])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[61]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [23:16]),
    .Q(iFIFOMem[23:16])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[62]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [15:8]),
    .Q(iFIFOMem[15:8])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[63]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [7:0]),
    .Q(iFIFOMem[7:0])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[6]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [463:456]),
    .Q(iFIFOMem[463:456])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[7]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [455:448]),
    .Q(iFIFOMem[455:448])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[8]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [447:440]),
    .Q(iFIFOMem[447:440])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[9]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713 [439:432]),
    .Q(iFIFOMem[439:432])
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$iRDAddr  (
    .AD(7'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iRDAddr$8617 ),
    .Q(iRDAddr)
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:124.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd6)
  ) \$driver$iUSAGE  (
    .AD(6'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iUSAGE$8761 ),
    .Q(iUSAGE)
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$iWRAddr  (
    .AD(7'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iWRAddr$8616 ),
    .Q(iWRAddr)
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:147.11-147.32|../rtl/apb_uart/slib_fifo.sv:145.1-148.26" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$13216  (
    .A(\$auto$slang_frontend.cc:694:finish$\iUSAGE$8745 ),
    .B(\$auto$builder.cc:338:Biop$8759 [5:0]),
    .S(\$procmux$13217_CMP ),
    .Y(\$procmux$13216_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_fifo.sv:136.1-136.13|../rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$13220  (
    .A(\$procmux$13216_Y ),
    .B(6'hxx),
    .S(\$procmux$13221_CMP ),
    .Y(\$procmux$13220_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:142.11-142.32|../rtl/apb_uart/slib_fifo.sv:140.7-143.26" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$13222  (
    .A(iUSAGE),
    .B(\$auto$builder.cc:338:Biop$8744 [5:0]),
    .S(\$procmux$13223_CMP ),
    .Y(\$procmux$13222_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_fifo.sv:136.1-136.13|../rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$13225  (
    .A(\$procmux$13222_Y ),
    .B(6'hxx),
    .S(\$procmux$13226_CMP ),
    .Y(\$procmux$13225_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_fifo.sv:136.1-136.13|../rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$13230  (
    .A(\$auto$slang_frontend.cc:694:finish$\iUSAGE$8760 ),
    .B(6'h00),
    .S(\$procmux$13231_CMP ),
    .Y(\$procmux$13230_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:115.8-115.43|../rtl/apb_uart/slib_fifo.sv:113.3-116.8" */
  \$mux  #(
    .WIDTH(32'd512)
  ) \$procmux$13232  (
    .A(iFIFOMem),
    .B(\$auto$rtlil.cc:2875:Bwmux$8712 ),
    .S(\$procmux$13233_CMP ),
    .Y(\$procmux$13232_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_fifo.sv:91.7-91.23|../rtl/apb_uart/slib_fifo.sv:89.1-96.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13235  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$13236_CMP ),
    .Y(\$procmux$13235_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:82.11-87.10|../rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13240  (
    .A(\$auto$slang_frontend.cc:694:finish$\iRDAddr$8611 ),
    .B(7'h00),
    .S(\$procmux$13241_CMP ),
    .Y(\$procmux$13240_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:82.11-87.10|../rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13244  (
    .A(\$auto$slang_frontend.cc:694:finish$\iWRAddr$8600 ),
    .B(7'h00),
    .S(\$procmux$13245_CMP ),
    .Y(\$procmux$13244_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:78.7-78.30|../rtl/apb_uart/slib_fifo.sv:76.1-79.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13248  (
    .A(iRDAddr),
    .B(\$auto$builder.cc:338:Biop$8610 [6:0]),
    .S(\$procmux$13249_CMP ),
    .Y(\$procmux$13248_Y )
  );
  /* src = "../rtl/apb_uart/slib_fifo.sv:73.7-73.30|../rtl/apb_uart/slib_fifo.sv:71.3-74.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13251  (
    .A(iWRAddr),
    .B(\$auto$builder.cc:338:Biop$8599 [6:0]),
    .S(\$procmux$13252_CMP ),
    .Y(\$procmux$13251_Y )
  );
  assign iFULL = \$auto$rtlil.cc:2874:Mux$8586 ;
  assign EMPTY = iEMPTY;
  assign FULL = iFULL;
  assign USAGE = iUSAGE;
  assign \$procmux$13217_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8757 ;
  assign \$procmux$13221_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8730 ;
  assign \$auto$slang_frontend.cc:694:finish$\iUSAGE$8760  = \$procmux$13220_Y ;
  assign \$procmux$13223_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8742 ;
  assign \$procmux$13226_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8730 ;
  assign \$auto$slang_frontend.cc:694:finish$\iUSAGE$8745  = \$procmux$13225_Y ;
  assign \$procmux$13231_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8730 ;
  assign \$auto$slang_frontend.cc:694:finish$\iUSAGE$8761  = \$procmux$13230_Y ;
  assign \$procmux$13233_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8698 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFIFOMem$8713  = \$procmux$13232_Y ;
  assign \$procmux$13236_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8621 ;
  assign \$auto$slang_frontend.cc:694:finish$\iEMPTY$8622  = \$procmux$13235_Y ;
  assign \$procmux$13241_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8615 ;
  assign \$auto$slang_frontend.cc:694:finish$\iRDAddr$8617  = \$procmux$13240_Y ;
  assign \$procmux$13245_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8615 ;
  assign \$auto$slang_frontend.cc:694:finish$\iWRAddr$8616  = \$procmux$13244_Y ;
  assign \$procmux$13249_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8608 ;
  assign \$auto$slang_frontend.cc:694:finish$\iRDAddr$8611  = \$procmux$13248_Y ;
  assign \$procmux$13252_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8597 ;
  assign \$auto$slang_frontend.cc:694:finish$\iWRAddr$8600  = \$procmux$13251_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8584  = \$auto$builder.cc:338:Biop$8582 ;
  assign \$auto$builder.cc:338:Biop$8591  = WRITE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8597  = \$auto$builder.cc:338:Biop$8595 ;
  assign \$auto$builder.cc:338:Biop$8602  = READ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8608  = \$auto$builder.cc:338:Biop$8606 ;
  assign \$auto$builder.cc:338:Biop$8613  = CLEAR;
  assign \$auto$rtlil.cc:2746:ReduceBool$8615  = CLEAR;
  assign \$auto$rtlil.cc:2746:ReduceBool$8621  = \$auto$builder.cc:338:Biop$8619 ;
  assign \$auto$builder.cc:338:Biop$8692  = WRITE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8698  = \$auto$builder.cc:338:Biop$8696 ;
  assign \$auto$builder.cc:338:Biop$8728  = CLEAR;
  assign \$auto$rtlil.cc:2746:ReduceBool$8730  = CLEAR;
  assign \$auto$builder.cc:338:Biop$8734  = WRITE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8742  = \$auto$builder.cc:338:Biop$8740 ;
  assign \$auto$builder.cc:338:Biop$8749  = READ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8757  = \$auto$builder.cc:338:Biop$8755 ;
endmodule

/* src = "../rtl/apb_uart/slib_input_filter.sv:35.8" */
module \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_CTS (CLK, D, Q, RST, CE);
  wire \$auto$builder.cc:338:Biop$8118 ;
  wire \$auto$builder.cc:338:Biop$8122 ;
  wire \$auto$builder.cc:338:Biop$8124 ;
  wire \$auto$builder.cc:338:Biop$8126 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8130 ;
  wire \$auto$builder.cc:338:Biop$8132 ;
  wire \$auto$builder.cc:338:Biop$8134 ;
  wire \$auto$builder.cc:338:Biop$8136 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8140 ;
  wire \$auto$builder.cc:338:Biop$8145 ;
  wire \$auto$builder.cc:338:Biop$8149 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8120 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8128 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8138 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8147 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8151 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8116 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  wire \$auto$slang_frontend.cc:694:finish$\Q$8152 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  wire \$auto$slang_frontend.cc:694:finish$\Q$8153 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8141 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8142 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8143 ;
  wire \$procmux$13414_Y ;
  wire \$procmux$13415_CMP ;
  wire \$procmux$13417_Y ;
  wire \$procmux$13418_CMP ;
  wire \$procmux$13422_Y ;
  wire \$procmux$13423_CMP ;
  wire [1:0] \$procmux$13425_Y ;
  wire \$procmux$13426_CMP ;
  wire [1:0] \$procmux$13428_Y ;
  wire \$procmux$13429_CMP ;
  wire [1:0] \$procmux$13430_Y ;
  wire \$procmux$13431_CMP ;
  wire [1:0] \$procmux$13434_Y ;
  wire \$procmux$13435_CMP ;
  wire [1:0] \$procmux$13436_Y ;
  wire \$procmux$13437_CMP ;
  wire [1:0] \$procmux$13439_Y ;
  wire \$procmux$13440_CMP ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:38.14" */
  input CE;
  wire CE;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:39.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:40.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:45.26" */
  wire [1:0] iCount;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8115  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8116 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8123  (
    .A(iCount),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$8124 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8125  (
    .A(\$auto$builder.cc:338:Biop$8122 ),
    .B(\$auto$builder.cc:338:Biop$8124 ),
    .Y(\$auto$builder.cc:338:Biop$8126 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8129  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8130 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8131  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8132 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8133  (
    .A(iCount),
    .Y(\$auto$builder.cc:338:Biop$8134 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8135  (
    .A(\$auto$builder.cc:338:Biop$8132 ),
    .B(\$auto$builder.cc:338:Biop$8134 ),
    .Y(\$auto$builder.cc:338:Biop$8136 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8139  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8140 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8144  (
    .A(iCount),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$8145 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8148  (
    .A(iCount),
    .Y(\$auto$builder.cc:338:Biop$8149 )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$Q  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\Q$8153 ),
    .Q(Q)
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iCount  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iCount$8143 ),
    .Q(iCount)
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:74.16-74.27|../rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13414  (
    .A(Q),
    .B(1'h0),
    .S(\$procmux$13415_CMP ),
    .Y(\$procmux$13414_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:70.16-70.27|../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13417  (
    .A(\$procmux$13414_Y ),
    .B(1'hx),
    .S(\$procmux$13418_CMP ),
    .Y(\$procmux$13417_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:70.16-70.27|../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13422  (
    .A(\$auto$slang_frontend.cc:694:finish$\Q$8152 ),
    .B(1'h1),
    .S(\$procmux$13423_CMP ),
    .Y(\$procmux$13422_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:64.21-64.42|../rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13425  (
    .A(iCount),
    .B(\$auto$builder.cc:338:Biop$8140 [1:0]),
    .S(\$procmux$13426_CMP ),
    .Y(\$procmux$13425_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:60.21-60.42|../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13428  (
    .A(\$procmux$13425_Y ),
    .B(2'hx),
    .S(\$procmux$13429_CMP ),
    .Y(\$procmux$13428_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13430  (
    .A(2'hx),
    .B(\$procmux$13428_Y ),
    .S(\$procmux$13431_CMP ),
    .Y(\$procmux$13430_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:60.21-60.42|../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13434  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCount$8141 ),
    .B(\$auto$builder.cc:338:Biop$8130 [1:0]),
    .S(\$procmux$13435_CMP ),
    .Y(\$procmux$13434_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13436  (
    .A(2'hx),
    .B(\$procmux$13434_Y ),
    .S(\$procmux$13437_CMP ),
    .Y(\$procmux$13436_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13439  (
    .A(iCount),
    .B(\$auto$slang_frontend.cc:694:finish$\iCount$8142 ),
    .S(\$procmux$13440_CMP ),
    .Y(\$procmux$13439_Y )
  );
  assign \$procmux$13415_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8151 ;
  assign \$procmux$13418_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8147 ;
  assign \$auto$slang_frontend.cc:694:finish$\Q$8152  = \$procmux$13417_Y ;
  assign \$procmux$13423_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8147 ;
  assign \$auto$slang_frontend.cc:694:finish$\Q$8153  = \$procmux$13422_Y ;
  assign \$procmux$13426_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8138 ;
  assign \$procmux$13429_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8128 ;
  assign \$procmux$13431_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8120 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8141  = \$procmux$13430_Y ;
  assign \$procmux$13435_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8128 ;
  assign \$procmux$13437_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8120 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8142  = \$procmux$13436_Y ;
  assign \$procmux$13440_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8120 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8143  = \$procmux$13439_Y ;
  assign \$auto$builder.cc:338:Biop$8118  = CE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8120  = CE;
  assign \$auto$builder.cc:338:Biop$8122  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8128  = \$auto$builder.cc:338:Biop$8126 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8138  = \$auto$builder.cc:338:Biop$8136 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8147  = \$auto$builder.cc:338:Biop$8145 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8151  = \$auto$builder.cc:338:Biop$8149 ;
endmodule

/* src = "../rtl/apb_uart/slib_input_filter.sv:35.8" */
module \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_DCD (CLK, D, Q, RST, CE);
  wire \$auto$builder.cc:338:Biop$8198 ;
  wire \$auto$builder.cc:338:Biop$8202 ;
  wire \$auto$builder.cc:338:Biop$8204 ;
  wire \$auto$builder.cc:338:Biop$8206 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8210 ;
  wire \$auto$builder.cc:338:Biop$8212 ;
  wire \$auto$builder.cc:338:Biop$8214 ;
  wire \$auto$builder.cc:338:Biop$8216 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8220 ;
  wire \$auto$builder.cc:338:Biop$8225 ;
  wire \$auto$builder.cc:338:Biop$8229 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8200 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8208 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8218 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8227 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8231 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8196 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  wire \$auto$slang_frontend.cc:694:finish$\Q$8232 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  wire \$auto$slang_frontend.cc:694:finish$\Q$8233 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8221 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8222 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8223 ;
  wire \$procmux$13360_Y ;
  wire \$procmux$13361_CMP ;
  wire \$procmux$13363_Y ;
  wire \$procmux$13364_CMP ;
  wire \$procmux$13368_Y ;
  wire \$procmux$13369_CMP ;
  wire [1:0] \$procmux$13371_Y ;
  wire \$procmux$13372_CMP ;
  wire [1:0] \$procmux$13374_Y ;
  wire \$procmux$13375_CMP ;
  wire [1:0] \$procmux$13376_Y ;
  wire \$procmux$13377_CMP ;
  wire [1:0] \$procmux$13380_Y ;
  wire \$procmux$13381_CMP ;
  wire [1:0] \$procmux$13382_Y ;
  wire \$procmux$13383_CMP ;
  wire [1:0] \$procmux$13385_Y ;
  wire \$procmux$13386_CMP ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:38.14" */
  input CE;
  wire CE;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:39.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:40.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:45.26" */
  wire [1:0] iCount;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8195  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8196 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8203  (
    .A(iCount),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$8204 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8205  (
    .A(\$auto$builder.cc:338:Biop$8202 ),
    .B(\$auto$builder.cc:338:Biop$8204 ),
    .Y(\$auto$builder.cc:338:Biop$8206 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8209  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8210 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8211  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8212 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8213  (
    .A(iCount),
    .Y(\$auto$builder.cc:338:Biop$8214 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8215  (
    .A(\$auto$builder.cc:338:Biop$8212 ),
    .B(\$auto$builder.cc:338:Biop$8214 ),
    .Y(\$auto$builder.cc:338:Biop$8216 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8219  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8220 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8224  (
    .A(iCount),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$8225 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8228  (
    .A(iCount),
    .Y(\$auto$builder.cc:338:Biop$8229 )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$Q  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\Q$8233 ),
    .Q(Q)
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iCount  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iCount$8223 ),
    .Q(iCount)
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:74.16-74.27|../rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13360  (
    .A(Q),
    .B(1'h0),
    .S(\$procmux$13361_CMP ),
    .Y(\$procmux$13360_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:70.16-70.27|../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13363  (
    .A(\$procmux$13360_Y ),
    .B(1'hx),
    .S(\$procmux$13364_CMP ),
    .Y(\$procmux$13363_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:70.16-70.27|../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13368  (
    .A(\$auto$slang_frontend.cc:694:finish$\Q$8232 ),
    .B(1'h1),
    .S(\$procmux$13369_CMP ),
    .Y(\$procmux$13368_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:64.21-64.42|../rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13371  (
    .A(iCount),
    .B(\$auto$builder.cc:338:Biop$8220 [1:0]),
    .S(\$procmux$13372_CMP ),
    .Y(\$procmux$13371_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:60.21-60.42|../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13374  (
    .A(\$procmux$13371_Y ),
    .B(2'hx),
    .S(\$procmux$13375_CMP ),
    .Y(\$procmux$13374_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13376  (
    .A(2'hx),
    .B(\$procmux$13374_Y ),
    .S(\$procmux$13377_CMP ),
    .Y(\$procmux$13376_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:60.21-60.42|../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13380  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCount$8221 ),
    .B(\$auto$builder.cc:338:Biop$8210 [1:0]),
    .S(\$procmux$13381_CMP ),
    .Y(\$procmux$13380_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13382  (
    .A(2'hx),
    .B(\$procmux$13380_Y ),
    .S(\$procmux$13383_CMP ),
    .Y(\$procmux$13382_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13385  (
    .A(iCount),
    .B(\$auto$slang_frontend.cc:694:finish$\iCount$8222 ),
    .S(\$procmux$13386_CMP ),
    .Y(\$procmux$13385_Y )
  );
  assign \$procmux$13361_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8231 ;
  assign \$procmux$13364_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8227 ;
  assign \$auto$slang_frontend.cc:694:finish$\Q$8232  = \$procmux$13363_Y ;
  assign \$procmux$13369_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8227 ;
  assign \$auto$slang_frontend.cc:694:finish$\Q$8233  = \$procmux$13368_Y ;
  assign \$procmux$13372_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8218 ;
  assign \$procmux$13375_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8208 ;
  assign \$procmux$13377_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8200 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8221  = \$procmux$13376_Y ;
  assign \$procmux$13381_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8208 ;
  assign \$procmux$13383_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8200 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8222  = \$procmux$13382_Y ;
  assign \$procmux$13386_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8200 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8223  = \$procmux$13385_Y ;
  assign \$auto$builder.cc:338:Biop$8198  = CE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8200  = CE;
  assign \$auto$builder.cc:338:Biop$8202  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8208  = \$auto$builder.cc:338:Biop$8206 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8218  = \$auto$builder.cc:338:Biop$8216 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8227  = \$auto$builder.cc:338:Biop$8225 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8231  = \$auto$builder.cc:338:Biop$8229 ;
endmodule

/* src = "../rtl/apb_uart/slib_input_filter.sv:35.8" */
module \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_DSR (CLK, D, Q, RST, CE);
  wire \$auto$builder.cc:338:Biop$8158 ;
  wire \$auto$builder.cc:338:Biop$8162 ;
  wire \$auto$builder.cc:338:Biop$8164 ;
  wire \$auto$builder.cc:338:Biop$8166 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8170 ;
  wire \$auto$builder.cc:338:Biop$8172 ;
  wire \$auto$builder.cc:338:Biop$8174 ;
  wire \$auto$builder.cc:338:Biop$8176 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8180 ;
  wire \$auto$builder.cc:338:Biop$8185 ;
  wire \$auto$builder.cc:338:Biop$8189 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8160 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8168 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8178 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8187 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8191 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8156 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  wire \$auto$slang_frontend.cc:694:finish$\Q$8192 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  wire \$auto$slang_frontend.cc:694:finish$\Q$8193 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8181 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8182 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8183 ;
  wire \$procmux$13387_Y ;
  wire \$procmux$13388_CMP ;
  wire \$procmux$13390_Y ;
  wire \$procmux$13391_CMP ;
  wire \$procmux$13395_Y ;
  wire \$procmux$13396_CMP ;
  wire [1:0] \$procmux$13398_Y ;
  wire \$procmux$13399_CMP ;
  wire [1:0] \$procmux$13401_Y ;
  wire \$procmux$13402_CMP ;
  wire [1:0] \$procmux$13403_Y ;
  wire \$procmux$13404_CMP ;
  wire [1:0] \$procmux$13407_Y ;
  wire \$procmux$13408_CMP ;
  wire [1:0] \$procmux$13409_Y ;
  wire \$procmux$13410_CMP ;
  wire [1:0] \$procmux$13412_Y ;
  wire \$procmux$13413_CMP ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:38.14" */
  input CE;
  wire CE;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:39.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:40.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:45.26" */
  wire [1:0] iCount;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8155  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8156 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8163  (
    .A(iCount),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$8164 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8165  (
    .A(\$auto$builder.cc:338:Biop$8162 ),
    .B(\$auto$builder.cc:338:Biop$8164 ),
    .Y(\$auto$builder.cc:338:Biop$8166 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8169  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8170 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8171  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8172 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8173  (
    .A(iCount),
    .Y(\$auto$builder.cc:338:Biop$8174 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8175  (
    .A(\$auto$builder.cc:338:Biop$8172 ),
    .B(\$auto$builder.cc:338:Biop$8174 ),
    .Y(\$auto$builder.cc:338:Biop$8176 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8179  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8180 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8184  (
    .A(iCount),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$8185 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8188  (
    .A(iCount),
    .Y(\$auto$builder.cc:338:Biop$8189 )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$Q  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\Q$8193 ),
    .Q(Q)
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iCount  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iCount$8183 ),
    .Q(iCount)
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:74.16-74.27|../rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13387  (
    .A(Q),
    .B(1'h0),
    .S(\$procmux$13388_CMP ),
    .Y(\$procmux$13387_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:70.16-70.27|../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13390  (
    .A(\$procmux$13387_Y ),
    .B(1'hx),
    .S(\$procmux$13391_CMP ),
    .Y(\$procmux$13390_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:70.16-70.27|../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13395  (
    .A(\$auto$slang_frontend.cc:694:finish$\Q$8192 ),
    .B(1'h1),
    .S(\$procmux$13396_CMP ),
    .Y(\$procmux$13395_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:64.21-64.42|../rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13398  (
    .A(iCount),
    .B(\$auto$builder.cc:338:Biop$8180 [1:0]),
    .S(\$procmux$13399_CMP ),
    .Y(\$procmux$13398_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:60.21-60.42|../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13401  (
    .A(\$procmux$13398_Y ),
    .B(2'hx),
    .S(\$procmux$13402_CMP ),
    .Y(\$procmux$13401_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13403  (
    .A(2'hx),
    .B(\$procmux$13401_Y ),
    .S(\$procmux$13404_CMP ),
    .Y(\$procmux$13403_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:60.21-60.42|../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13407  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCount$8181 ),
    .B(\$auto$builder.cc:338:Biop$8170 [1:0]),
    .S(\$procmux$13408_CMP ),
    .Y(\$procmux$13407_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13409  (
    .A(2'hx),
    .B(\$procmux$13407_Y ),
    .S(\$procmux$13410_CMP ),
    .Y(\$procmux$13409_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13412  (
    .A(iCount),
    .B(\$auto$slang_frontend.cc:694:finish$\iCount$8182 ),
    .S(\$procmux$13413_CMP ),
    .Y(\$procmux$13412_Y )
  );
  assign \$procmux$13388_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8191 ;
  assign \$procmux$13391_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8187 ;
  assign \$auto$slang_frontend.cc:694:finish$\Q$8192  = \$procmux$13390_Y ;
  assign \$procmux$13396_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8187 ;
  assign \$auto$slang_frontend.cc:694:finish$\Q$8193  = \$procmux$13395_Y ;
  assign \$procmux$13399_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8178 ;
  assign \$procmux$13402_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8168 ;
  assign \$procmux$13404_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8160 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8181  = \$procmux$13403_Y ;
  assign \$procmux$13408_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8168 ;
  assign \$procmux$13410_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8160 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8182  = \$procmux$13409_Y ;
  assign \$procmux$13413_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8160 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8183  = \$procmux$13412_Y ;
  assign \$auto$builder.cc:338:Biop$8158  = CE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8160  = CE;
  assign \$auto$builder.cc:338:Biop$8162  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8168  = \$auto$builder.cc:338:Biop$8166 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8178  = \$auto$builder.cc:338:Biop$8176 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8187  = \$auto$builder.cc:338:Biop$8185 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8191  = \$auto$builder.cc:338:Biop$8189 ;
endmodule

/* src = "../rtl/apb_uart/slib_input_filter.sv:35.8" */
module \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_RI (CLK, D, Q, RST, CE);
  wire \$auto$builder.cc:338:Biop$8238 ;
  wire \$auto$builder.cc:338:Biop$8242 ;
  wire \$auto$builder.cc:338:Biop$8244 ;
  wire \$auto$builder.cc:338:Biop$8246 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8250 ;
  wire \$auto$builder.cc:338:Biop$8252 ;
  wire \$auto$builder.cc:338:Biop$8254 ;
  wire \$auto$builder.cc:338:Biop$8256 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8260 ;
  wire \$auto$builder.cc:338:Biop$8265 ;
  wire \$auto$builder.cc:338:Biop$8269 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8240 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8248 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8258 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8267 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8271 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8236 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  wire \$auto$slang_frontend.cc:694:finish$\Q$8272 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  wire \$auto$slang_frontend.cc:694:finish$\Q$8273 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8261 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8262 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  wire [1:0] \$auto$slang_frontend.cc:694:finish$\iCount$8263 ;
  wire \$procmux$13333_Y ;
  wire \$procmux$13334_CMP ;
  wire \$procmux$13336_Y ;
  wire \$procmux$13337_CMP ;
  wire \$procmux$13341_Y ;
  wire \$procmux$13342_CMP ;
  wire [1:0] \$procmux$13344_Y ;
  wire \$procmux$13345_CMP ;
  wire [1:0] \$procmux$13347_Y ;
  wire \$procmux$13348_CMP ;
  wire [1:0] \$procmux$13349_Y ;
  wire \$procmux$13350_CMP ;
  wire [1:0] \$procmux$13353_Y ;
  wire \$procmux$13354_CMP ;
  wire [1:0] \$procmux$13355_Y ;
  wire \$procmux$13356_CMP ;
  wire [1:0] \$procmux$13358_Y ;
  wire \$procmux$13359_CMP ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:38.14" */
  input CE;
  wire CE;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:39.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:40.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:45.26" */
  wire [1:0] iCount;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8235  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8236 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8243  (
    .A(iCount),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$8244 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8245  (
    .A(\$auto$builder.cc:338:Biop$8242 ),
    .B(\$auto$builder.cc:338:Biop$8244 ),
    .Y(\$auto$builder.cc:338:Biop$8246 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8249  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8250 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8251  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$8252 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8253  (
    .A(iCount),
    .Y(\$auto$builder.cc:338:Biop$8254 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8255  (
    .A(\$auto$builder.cc:338:Biop$8252 ),
    .B(\$auto$builder.cc:338:Biop$8254 ),
    .Y(\$auto$builder.cc:338:Biop$8256 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8259  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8260 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8264  (
    .A(iCount),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$8265 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8268  (
    .A(iCount),
    .Y(\$auto$builder.cc:338:Biop$8269 )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$Q  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\Q$8273 ),
    .Q(Q)
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iCount  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iCount$8263 ),
    .Q(iCount)
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:74.16-74.27|../rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13333  (
    .A(Q),
    .B(1'h0),
    .S(\$procmux$13334_CMP ),
    .Y(\$procmux$13333_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:70.16-70.27|../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13336  (
    .A(\$procmux$13333_Y ),
    .B(1'hx),
    .S(\$procmux$13337_CMP ),
    .Y(\$procmux$13336_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:70.16-70.27|../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13341  (
    .A(\$auto$slang_frontend.cc:694:finish$\Q$8272 ),
    .B(1'h1),
    .S(\$procmux$13342_CMP ),
    .Y(\$procmux$13341_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:64.21-64.42|../rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13344  (
    .A(iCount),
    .B(\$auto$builder.cc:338:Biop$8260 [1:0]),
    .S(\$procmux$13345_CMP ),
    .Y(\$procmux$13344_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:60.21-60.42|../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13347  (
    .A(\$procmux$13344_Y ),
    .B(2'hx),
    .S(\$procmux$13348_CMP ),
    .Y(\$procmux$13347_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13349  (
    .A(2'hx),
    .B(\$procmux$13347_Y ),
    .S(\$procmux$13350_CMP ),
    .Y(\$procmux$13349_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:60.21-60.42|../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13353  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCount$8261 ),
    .B(\$auto$builder.cc:338:Biop$8250 [1:0]),
    .S(\$procmux$13354_CMP ),
    .Y(\$procmux$13353_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13355  (
    .A(2'hx),
    .B(\$procmux$13353_Y ),
    .S(\$procmux$13356_CMP ),
    .Y(\$procmux$13355_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13358  (
    .A(iCount),
    .B(\$auto$slang_frontend.cc:694:finish$\iCount$8262 ),
    .S(\$procmux$13359_CMP ),
    .Y(\$procmux$13358_Y )
  );
  assign \$procmux$13334_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8271 ;
  assign \$procmux$13337_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8267 ;
  assign \$auto$slang_frontend.cc:694:finish$\Q$8272  = \$procmux$13336_Y ;
  assign \$procmux$13342_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8267 ;
  assign \$auto$slang_frontend.cc:694:finish$\Q$8273  = \$procmux$13341_Y ;
  assign \$procmux$13345_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8258 ;
  assign \$procmux$13348_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8248 ;
  assign \$procmux$13350_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8240 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8261  = \$procmux$13349_Y ;
  assign \$procmux$13354_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8248 ;
  assign \$procmux$13356_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8240 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8262  = \$procmux$13355_Y ;
  assign \$procmux$13359_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8240 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$8263  = \$procmux$13358_Y ;
  assign \$auto$builder.cc:338:Biop$8238  = CE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8240  = CE;
  assign \$auto$builder.cc:338:Biop$8242  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$8248  = \$auto$builder.cc:338:Biop$8246 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8258  = \$auto$builder.cc:338:Biop$8256 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8267  = \$auto$builder.cc:338:Biop$8265 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$8271  = \$auto$builder.cc:338:Biop$8269 ;
endmodule

/* src = "../rtl/apb_uart/slib_input_filter.sv:35.8" */
module \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_IFSB (CLK, D, Q, RST, CE);
  wire \$auto$builder.cc:338:Biop$10075 ;
  wire \$auto$builder.cc:338:Biop$10079 ;
  wire \$auto$builder.cc:338:Biop$10081 ;
  wire \$auto$builder.cc:338:Biop$10083 ;
  wire [31:0] \$auto$builder.cc:338:Biop$10087 ;
  wire \$auto$builder.cc:338:Biop$10089 ;
  wire \$auto$builder.cc:338:Biop$10091 ;
  wire \$auto$builder.cc:338:Biop$10093 ;
  wire [31:0] \$auto$builder.cc:338:Biop$10097 ;
  wire \$auto$builder.cc:338:Biop$10102 ;
  wire \$auto$builder.cc:338:Biop$10106 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10077 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10085 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10095 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10104 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10108 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10073 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  wire \$auto$slang_frontend.cc:694:finish$\Q$10109 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  wire \$auto$slang_frontend.cc:694:finish$\Q$10110 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\iCount$10098 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\iCount$10099 ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\iCount$10100 ;
  wire \$procmux$12587_Y ;
  wire \$procmux$12588_CMP ;
  wire \$procmux$12590_Y ;
  wire \$procmux$12591_CMP ;
  wire \$procmux$12595_Y ;
  wire \$procmux$12596_CMP ;
  wire [2:0] \$procmux$12598_Y ;
  wire \$procmux$12599_CMP ;
  wire [2:0] \$procmux$12601_Y ;
  wire \$procmux$12602_CMP ;
  wire [2:0] \$procmux$12603_Y ;
  wire \$procmux$12604_CMP ;
  wire [2:0] \$procmux$12607_Y ;
  wire \$procmux$12608_CMP ;
  wire [2:0] \$procmux$12609_Y ;
  wire \$procmux$12610_CMP ;
  wire [2:0] \$procmux$12612_Y ;
  wire \$procmux$12613_CMP ;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:38.14" */
  input CE;
  wire CE;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:39.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:40.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_input_filter.sv:45.26" */
  wire [2:0] iCount;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10072  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10073 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10080  (
    .A(iCount),
    .B(3'h4),
    .Y(\$auto$builder.cc:338:Biop$10081 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10082  (
    .A(\$auto$builder.cc:338:Biop$10079 ),
    .B(\$auto$builder.cc:338:Biop$10081 ),
    .Y(\$auto$builder.cc:338:Biop$10083 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$10086  (
    .A({ 29'h00000000, iCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$10087 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10088  (
    .A(D),
    .Y(\$auto$builder.cc:338:Biop$10089 )
  );
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10090  (
    .A(iCount),
    .Y(\$auto$builder.cc:338:Biop$10091 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10092  (
    .A(\$auto$builder.cc:338:Biop$10089 ),
    .B(\$auto$builder.cc:338:Biop$10091 ),
    .Y(\$auto$builder.cc:338:Biop$10093 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$10096  (
    .A({ 29'h00000000, iCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$10097 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10101  (
    .A(iCount),
    .B(3'h4),
    .Y(\$auto$builder.cc:338:Biop$10102 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10105  (
    .A(iCount),
    .Y(\$auto$builder.cc:338:Biop$10106 )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$Q  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\Q$10110 ),
    .Q(Q)
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$iCount  (
    .AD(3'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iCount$10100 ),
    .Q(iCount)
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:74.16-74.27|../rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12587  (
    .A(Q),
    .B(1'h0),
    .S(\$procmux$12588_CMP ),
    .Y(\$procmux$12587_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:70.16-70.27|../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12590  (
    .A(\$procmux$12587_Y ),
    .B(1'hx),
    .S(\$procmux$12591_CMP ),
    .Y(\$procmux$12590_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:70.16-70.27|../rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12595  (
    .A(\$auto$slang_frontend.cc:694:finish$\Q$10109 ),
    .B(1'h1),
    .S(\$procmux$12596_CMP ),
    .Y(\$procmux$12595_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:64.21-64.42|../rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12598  (
    .A(iCount),
    .B(\$auto$builder.cc:338:Biop$10097 [2:0]),
    .S(\$procmux$12599_CMP ),
    .Y(\$procmux$12598_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:60.21-60.42|../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12601  (
    .A(\$procmux$12598_Y ),
    .B(3'hx),
    .S(\$procmux$12602_CMP ),
    .Y(\$procmux$12601_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12603  (
    .A(3'hx),
    .B(\$procmux$12601_Y ),
    .S(\$procmux$12604_CMP ),
    .Y(\$procmux$12603_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_input_filter.sv:60.21-60.42|../rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12607  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCount$10098 ),
    .B(\$auto$builder.cc:338:Biop$10087 [2:0]),
    .S(\$procmux$12608_CMP ),
    .Y(\$procmux$12607_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12609  (
    .A(3'hx),
    .B(\$procmux$12607_Y ),
    .S(\$procmux$12610_CMP ),
    .Y(\$procmux$12609_Y )
  );
  /* src = "../rtl/apb_uart/slib_input_filter.sv:58.16-65.21|../rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12612  (
    .A(iCount),
    .B(\$auto$slang_frontend.cc:694:finish$\iCount$10099 ),
    .S(\$procmux$12613_CMP ),
    .Y(\$procmux$12612_Y )
  );
  assign \$procmux$12588_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10108 ;
  assign \$procmux$12591_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10104 ;
  assign \$auto$slang_frontend.cc:694:finish$\Q$10109  = \$procmux$12590_Y ;
  assign \$procmux$12596_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10104 ;
  assign \$auto$slang_frontend.cc:694:finish$\Q$10110  = \$procmux$12595_Y ;
  assign \$procmux$12599_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10095 ;
  assign \$procmux$12602_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10085 ;
  assign \$procmux$12604_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10077 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$10098  = \$procmux$12603_Y ;
  assign \$procmux$12608_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10085 ;
  assign \$procmux$12610_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10077 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$10099  = \$procmux$12609_Y ;
  assign \$procmux$12613_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10077 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCount$10100  = \$procmux$12612_Y ;
  assign \$auto$builder.cc:338:Biop$10075  = CE;
  assign \$auto$rtlil.cc:2746:ReduceBool$10077  = CE;
  assign \$auto$builder.cc:338:Biop$10079  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$10085  = \$auto$builder.cc:338:Biop$10083 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10095  = \$auto$builder.cc:338:Biop$10093 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10104  = \$auto$builder.cc:338:Biop$10102 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10108  = \$auto$builder.cc:338:Biop$10106 ;
endmodule

/* src = "../rtl/apb_uart/slib_input_sync.sv:35.8" */
module \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_CTS (CLK, D, Q, RST);
  wire \$auto$rtlil.cc:2747:LogicNot$8104 ;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:39.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:43.11" */
  wire [1:0] iD;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8103  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8104 )
  );
  /* src = "../rtl/apb_uart/slib_input_sync.sv:45.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iD  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ iD[0], D }),
    .Q(iD)
  );
  assign Q = iD[1];
endmodule

/* src = "../rtl/apb_uart/slib_input_sync.sv:35.8" */
module \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_DCD (CLK, D, Q, RST);
  wire \$auto$rtlil.cc:2747:LogicNot$8110 ;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:39.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:43.11" */
  wire [1:0] iD;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8109  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8110 )
  );
  /* src = "../rtl/apb_uart/slib_input_sync.sv:45.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iD  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ iD[0], D }),
    .Q(iD)
  );
  assign Q = iD[1];
endmodule

/* src = "../rtl/apb_uart/slib_input_sync.sv:35.8" */
module \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_DSR (CLK, D, Q, RST);
  wire \$auto$rtlil.cc:2747:LogicNot$8107 ;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:39.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:43.11" */
  wire [1:0] iD;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8106  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8107 )
  );
  /* src = "../rtl/apb_uart/slib_input_sync.sv:45.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iD  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ iD[0], D }),
    .Q(iD)
  );
  assign Q = iD[1];
endmodule

/* src = "../rtl/apb_uart/slib_input_sync.sv:35.8" */
module \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_RI (CLK, D, Q, RST);
  wire \$auto$rtlil.cc:2747:LogicNot$8113 ;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:39.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:43.11" */
  wire [1:0] iD;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8112  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8113 )
  );
  /* src = "../rtl/apb_uart/slib_input_sync.sv:45.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iD  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ iD[0], D }),
    .Q(iD)
  );
  assign Q = iD[1];
endmodule

/* src = "../rtl/apb_uart/slib_input_sync.sv:35.8" */
module \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_SIN (CLK, D, Q, RST);
  wire \$auto$rtlil.cc:2747:LogicNot$8101 ;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:38.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:39.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_input_sync.sv:43.11" */
  wire [1:0] iD;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8100  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8101 )
  );
  /* src = "../rtl/apb_uart/slib_input_sync.sv:45.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iD  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ iD[0], D }),
    .Q(iD)
  );
  assign Q = iD[1];
endmodule

/* src = "../rtl/apb_uart/slib_mv_filter.sv:35.8" */
module \slib_mv_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_MVF (CLK, D, Q, RST, CLEAR, SAMPLE);
  wire \$auto$builder.cc:338:Biop$10049 ;
  wire \$auto$builder.cc:338:Biop$10053 ;
  wire \$auto$builder.cc:338:Biop$10055 ;
  wire \$auto$builder.cc:338:Biop$10057 ;
  wire [31:0] \$auto$builder.cc:338:Biop$10061 ;
  wire \$auto$builder.cc:338:Biop$10066 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10051 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10059 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$10068 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10047 ;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:63.13-66.18" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\iCounter$10062 ;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:57.8-67.13" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\iCounter$10063 ;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:68.8-73.13" */
  wire [4:0] \$auto$slang_frontend.cc:694:finish$\iCounter$10069 ;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:57.8-67.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iQ$10064 ;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:68.8-73.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iQ$10070 ;
  wire \$procmux$12614_Y ;
  wire \$procmux$12615_CMP ;
  wire [4:0] \$procmux$12617_Y ;
  wire \$procmux$12618_CMP ;
  wire [4:0] \$procmux$12620_Y ;
  wire \$procmux$12621_CMP ;
  wire [4:0] \$procmux$12623_Y ;
  wire \$procmux$12624_CMP ;
  wire \$procmux$12627_Y ;
  wire \$procmux$12628_CMP ;
  wire [4:0] \$procmux$12631_Y ;
  wire \$procmux$12632_CMP ;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:39.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:40.14" */
  input D;
  wire D;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:41.16" */
  output Q;
  wire Q;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:38.14" */
  input SAMPLE;
  wire SAMPLE;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:45.15" */
  wire [4:0] iCounter;
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:46.5" */
  wire iQ;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10046  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10047 )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10048  (
    .A({ 27'h0000000, iCounter }),
    .B(32'd10),
    .Y(\$auto$builder.cc:338:Biop$10049 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$10056  (
    .A(\$auto$builder.cc:338:Biop$10053 ),
    .B(\$auto$builder.cc:338:Biop$10055 ),
    .Y(\$auto$builder.cc:338:Biop$10057 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$10060  (
    .A({ 27'h0000000, iCounter }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$10061 )
  );
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:48.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd5)
  ) \$driver$iCounter  (
    .AD(5'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iCounter$10069 ),
    .Q(iCounter)
  );
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:48.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iQ  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iQ$10070 ),
    .Q(iQ)
  );
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:69.10-73.13|../rtl/apb_uart/slib_mv_filter.sv:68.8-73.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12614  (
    .A(\$auto$slang_frontend.cc:694:finish$\iQ$10064 ),
    .B(1'h0),
    .S(\$procmux$12615_CMP ),
    .Y(\$procmux$12614_Y )
  );
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:69.10-73.13|../rtl/apb_uart/slib_mv_filter.sv:68.8-73.13" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12617  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCounter$10063 ),
    .B(5'h00),
    .S(\$procmux$12618_CMP ),
    .Y(\$procmux$12617_Y )
  );
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:65.18-65.43|../rtl/apb_uart/slib_mv_filter.sv:63.13-66.18" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12620  (
    .A(iCounter),
    .B(\$auto$builder.cc:338:Biop$10061 [4:0]),
    .S(\$procmux$12621_CMP ),
    .Y(\$procmux$12620_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:59.13-59.25|../rtl/apb_uart/slib_mv_filter.sv:57.8-67.13" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12623  (
    .A(\$procmux$12620_Y ),
    .B(5'hxx),
    .S(\$procmux$12624_CMP ),
    .Y(\$procmux$12623_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:59.13-59.25|../rtl/apb_uart/slib_mv_filter.sv:57.8-67.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12627  (
    .A(iQ),
    .B(1'h1),
    .S(\$procmux$12628_CMP ),
    .Y(\$procmux$12627_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/slib_mv_filter.sv:59.13-59.25|../rtl/apb_uart/slib_mv_filter.sv:57.8-67.13" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$12631  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCounter$10062 ),
    .B(iCounter),
    .S(\$procmux$12632_CMP ),
    .Y(\$procmux$12631_Y )
  );
  assign Q = iQ;
  assign \$procmux$12615_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10068 ;
  assign \$auto$slang_frontend.cc:694:finish$\iQ$10070  = \$procmux$12614_Y ;
  assign \$procmux$12618_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10068 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$10069  = \$procmux$12617_Y ;
  assign \$procmux$12621_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10059 ;
  assign \$procmux$12624_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10051 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$10062  = \$procmux$12623_Y ;
  assign \$procmux$12628_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10051 ;
  assign \$auto$slang_frontend.cc:694:finish$\iQ$10064  = \$procmux$12627_Y ;
  assign \$procmux$12632_CMP  = \$auto$rtlil.cc:2746:ReduceBool$10051 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$10063  = \$procmux$12631_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$10051  = \$auto$builder.cc:338:Biop$10049 ;
  assign \$auto$builder.cc:338:Biop$10053  = SAMPLE;
  assign \$auto$builder.cc:338:Biop$10055  = D;
  assign \$auto$rtlil.cc:2746:ReduceBool$10059  = \$auto$builder.cc:338:Biop$10057 ;
  assign \$auto$builder.cc:338:Biop$10066  = CLEAR;
  assign \$auto$rtlil.cc:2746:ReduceBool$10068  = CLEAR;
endmodule

/* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:10.8" */
module \soc_ctrl_reg_top$croc_chip.i_croc_soc.i_croc.i_soc_ctrl (clk_i, rst_ni, reg_req_i, reg_rsp_o, reg2hw, hw2reg, devmode_i);
  wire \$auto$builder.cc:338:Biop$1156 ;
  wire \$auto$builder.cc:338:Biop$1160 ;
  wire \$auto$builder.cc:338:Biop$1162 ;
  wire \$auto$builder.cc:338:Biop$1164 ;
  wire \$auto$builder.cc:338:Biop$1167 ;
  wire \$auto$builder.cc:338:Biop$1169 ;
  wire \$auto$builder.cc:338:Biop$1171 ;
  wire \$auto$builder.cc:338:Biop$1173 ;
  wire \$auto$builder.cc:338:Biop$1175 ;
  wire \$auto$builder.cc:338:Biop$1177 ;
  wire [3:0] \$auto$builder.cc:338:Biop$1190 ;
  wire \$auto$builder.cc:338:Biop$1194 ;
  wire [3:0] \$auto$builder.cc:338:Biop$1198 ;
  wire \$auto$builder.cc:338:Biop$1202 ;
  wire \$auto$builder.cc:338:Biop$1204 ;
  wire [3:0] \$auto$builder.cc:338:Biop$1208 ;
  wire \$auto$builder.cc:338:Biop$1212 ;
  wire \$auto$builder.cc:338:Biop$1214 ;
  wire [3:0] \$auto$builder.cc:338:Biop$1218 ;
  wire \$auto$builder.cc:338:Biop$1222 ;
  wire \$auto$builder.cc:338:Biop$1224 ;
  wire [3:0] \$auto$builder.cc:338:Biop$1228 ;
  wire \$auto$builder.cc:338:Biop$1232 ;
  wire \$auto$builder.cc:338:Biop$1234 ;
  wire \$auto$builder.cc:338:Biop$1236 ;
  wire \$auto$builder.cc:338:Biop$1238 ;
  wire \$auto$builder.cc:338:Biop$1242 ;
  wire \$auto$builder.cc:338:Biop$1244 ;
  wire \$auto$builder.cc:338:Biop$1248 ;
  wire \$auto$builder.cc:338:Biop$1250 ;
  wire \$auto$builder.cc:338:Biop$1254 ;
  wire \$auto$builder.cc:338:Biop$1256 ;
  wire \$auto$builder.cc:338:Biop$1260 ;
  wire \$auto$builder.cc:338:Biop$1262 ;
  wire \$auto$builder.cc:338:Biop$1266 ;
  wire \$auto$builder.cc:364:Unop$1158 ;
  wire \$auto$builder.cc:364:Unop$1181 ;
  wire [3:0] \$auto$builder.cc:364:Unop$1188 ;
  wire \$auto$builder.cc:364:Unop$1192 ;
  wire [3:0] \$auto$builder.cc:364:Unop$1196 ;
  wire \$auto$builder.cc:364:Unop$1200 ;
  wire [3:0] \$auto$builder.cc:364:Unop$1206 ;
  wire \$auto$builder.cc:364:Unop$1210 ;
  wire [3:0] \$auto$builder.cc:364:Unop$1216 ;
  wire \$auto$builder.cc:364:Unop$1220 ;
  wire [3:0] \$auto$builder.cc:364:Unop$1226 ;
  wire \$auto$builder.cc:364:Unop$1230 ;
  wire \$auto$builder.cc:364:Unop$1240 ;
  wire \$auto$builder.cc:364:Unop$1246 ;
  wire \$auto$builder.cc:364:Unop$1252 ;
  wire \$auto$builder.cc:364:Unop$1258 ;
  wire \$auto$builder.cc:364:Unop$1264 ;
  wire \$auto$builder.cc:364:Unop$1270 ;
  wire \$auto$builder.cc:364:Unop$1272 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1179 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1183 ;
  wire \$auto$rtlil.cc:2874:Mux$1185 ;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:266.5-290.12" */
  wire [31:0] \$auto$slang_frontend.cc:694:finish$\reg_rdata_next$1268 ;
  wire [31:0] \$procmux$15364_Y ;
  wire \$procmux$15365_CMP ;
  wire \$procmux$15366_CMP ;
  wire \$procmux$15367_CMP ;
  wire \$procmux$15368_CMP ;
  wire \$procmux$15369_CMP ;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:226.15" */
  wire [4:0] addr_hit;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:43.18" */
  wire addrmiss;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:72.16" */
  wire [31:0] bootaddr_qs;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:73.16" */
  wire [31:0] bootaddr_wd;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:74.9" */
  wire bootaddr_we;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:81.9" */
  wire bootmode_qs;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:82.9" */
  wire bootmode_wd;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:83.9" */
  wire bootmode_we;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:16.15" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:78.16" */
  wire [31:0] corestatus_qs;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:79.16" */
  wire [31:0] corestatus_wd;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:80.9" */
  wire corestatus_we;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:26.9" */
  input devmode_i;
  wire devmode_i;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:75.9" */
  wire fetchen_qs;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:76.9" */
  wire fetchen_wd;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:77.9" */
  wire fetchen_we;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:22.46" */
  input [3:0] hw2reg;
  wire [3:0] hw2reg;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:21.46" */
  output [66:0] reg2hw;
  wire [66:0] reg2hw;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:37.24" */
  wire [4:0] reg_addr;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:39.19" */
  wire [3:0] reg_be;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:41.19" */
  wire reg_error;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:48.14" */
  wire [69:0] reg_intf_req;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:49.14" */
  wire [33:0] reg_intf_rsp;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:40.19" */
  wire [31:0] reg_rdata;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:45.18" */
  wire [31:0] reg_rdata_next;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:36.19" */
  wire reg_re;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:18.20" */
  input [69:0] reg_req_i;
  wire [69:0] reg_req_i;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:19.20" */
  output [33:0] reg_rsp_o;
  wire [33:0] reg_rsp_o;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:38.19" */
  wire [31:0] reg_wdata;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:35.19" */
  wire reg_we;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:17.15" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:84.9" */
  wire sram_dly_qs;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:85.9" */
  wire sram_dly_wd;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:86.9" */
  wire sram_dly_we;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:298.9" */
  wire unused_be;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:297.9" */
  wire unused_wdata;
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:43.28" */
  wire wr_err;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1182  (
    .A(\$auto$builder.cc:364:Unop$1181 ),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1183 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1155  (
    .A(reg_intf_req[0]),
    .B(reg_intf_req[37]),
    .Y(\$auto$builder.cc:338:Biop$1156 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1159  (
    .A(reg_intf_req[0]),
    .B(\$auto$builder.cc:364:Unop$1158 ),
    .Y(\$auto$builder.cc:338:Biop$1160 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1161  (
    .A(devmode_i),
    .B(addrmiss),
    .Y(\$auto$builder.cc:338:Biop$1162 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1163  (
    .A(\$auto$builder.cc:338:Biop$1162 ),
    .B(wr_err),
    .Y(\$auto$builder.cc:338:Biop$1164 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1166  (
    .A(reg_addr),
    .Y(\$auto$builder.cc:338:Biop$1167 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1168  (
    .A(reg_addr),
    .B(5'h04),
    .Y(\$auto$builder.cc:338:Biop$1169 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1170  (
    .A(reg_addr),
    .B(5'h08),
    .Y(\$auto$builder.cc:338:Biop$1171 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1172  (
    .A(reg_addr),
    .B(5'h0c),
    .Y(\$auto$builder.cc:338:Biop$1173 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1174  (
    .A(reg_addr),
    .B(5'h10),
    .Y(\$auto$builder.cc:338:Biop$1175 )
  );
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1176  (
    .A(reg_re),
    .B(reg_we),
    .Y(\$auto$builder.cc:338:Biop$1177 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1193  (
    .A(addr_hit[0]),
    .B(\$auto$builder.cc:364:Unop$1192 ),
    .Y(\$auto$builder.cc:338:Biop$1194 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1201  (
    .A(addr_hit[1]),
    .B(\$auto$builder.cc:364:Unop$1200 ),
    .Y(\$auto$builder.cc:338:Biop$1202 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1203  (
    .A(\$auto$builder.cc:338:Biop$1194 ),
    .B(\$auto$builder.cc:338:Biop$1202 ),
    .Y(\$auto$builder.cc:338:Biop$1204 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1211  (
    .A(addr_hit[2]),
    .B(\$auto$builder.cc:364:Unop$1210 ),
    .Y(\$auto$builder.cc:338:Biop$1212 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1213  (
    .A(\$auto$builder.cc:338:Biop$1204 ),
    .B(\$auto$builder.cc:338:Biop$1212 ),
    .Y(\$auto$builder.cc:338:Biop$1214 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1221  (
    .A(addr_hit[3]),
    .B(\$auto$builder.cc:364:Unop$1220 ),
    .Y(\$auto$builder.cc:338:Biop$1222 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1223  (
    .A(\$auto$builder.cc:338:Biop$1214 ),
    .B(\$auto$builder.cc:338:Biop$1222 ),
    .Y(\$auto$builder.cc:338:Biop$1224 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1231  (
    .A(addr_hit[4]),
    .B(\$auto$builder.cc:364:Unop$1230 ),
    .Y(\$auto$builder.cc:338:Biop$1232 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1233  (
    .A(\$auto$builder.cc:338:Biop$1224 ),
    .B(\$auto$builder.cc:338:Biop$1232 ),
    .Y(\$auto$builder.cc:338:Biop$1234 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1235  (
    .A(reg_we),
    .B(\$auto$builder.cc:338:Biop$1234 ),
    .Y(\$auto$builder.cc:338:Biop$1236 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1237  (
    .A(addr_hit[0]),
    .B(reg_we),
    .Y(\$auto$builder.cc:338:Biop$1238 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1241  (
    .A(\$auto$builder.cc:338:Biop$1238 ),
    .B(\$auto$builder.cc:364:Unop$1240 ),
    .Y(\$auto$builder.cc:338:Biop$1242 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1243  (
    .A(addr_hit[1]),
    .B(reg_we),
    .Y(\$auto$builder.cc:338:Biop$1244 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1247  (
    .A(\$auto$builder.cc:338:Biop$1244 ),
    .B(\$auto$builder.cc:364:Unop$1246 ),
    .Y(\$auto$builder.cc:338:Biop$1248 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1249  (
    .A(addr_hit[2]),
    .B(reg_we),
    .Y(\$auto$builder.cc:338:Biop$1250 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1253  (
    .A(\$auto$builder.cc:338:Biop$1250 ),
    .B(\$auto$builder.cc:364:Unop$1252 ),
    .Y(\$auto$builder.cc:338:Biop$1254 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1255  (
    .A(addr_hit[3]),
    .B(reg_we),
    .Y(\$auto$builder.cc:338:Biop$1256 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1259  (
    .A(\$auto$builder.cc:338:Biop$1256 ),
    .B(\$auto$builder.cc:364:Unop$1258 ),
    .Y(\$auto$builder.cc:338:Biop$1260 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1261  (
    .A(addr_hit[4]),
    .B(reg_we),
    .Y(\$auto$builder.cc:338:Biop$1262 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1265  (
    .A(\$auto$builder.cc:338:Biop$1262 ),
    .B(\$auto$builder.cc:364:Unop$1264 ),
    .Y(\$auto$builder.cc:338:Biop$1266 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1157  (
    .A(reg_intf_req[37]),
    .Y(\$auto$builder.cc:364:Unop$1158 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1180  (
    .A(addr_hit),
    .Y(\$auto$builder.cc:364:Unop$1181 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$builder.cc:359:Unop$1187  (
    .A(reg_be),
    .Y(\$auto$builder.cc:364:Unop$1188 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1191  (
    .A(\$auto$builder.cc:338:Biop$1190 ),
    .Y(\$auto$builder.cc:364:Unop$1192 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$builder.cc:359:Unop$1195  (
    .A(reg_be),
    .Y(\$auto$builder.cc:364:Unop$1196 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$builder.cc:359:Unop$1205  (
    .A(reg_be),
    .Y(\$auto$builder.cc:364:Unop$1206 )
  );
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1209  (
    .A(\$auto$builder.cc:338:Biop$1208 ),
    .Y(\$auto$builder.cc:364:Unop$1210 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$builder.cc:359:Unop$1215  (
    .A(reg_be),
    .Y(\$auto$builder.cc:364:Unop$1216 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$builder.cc:359:Unop$1225  (
    .A(reg_be),
    .Y(\$auto$builder.cc:364:Unop$1226 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1239  (
    .A(reg_error),
    .Y(\$auto$builder.cc:364:Unop$1240 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1245  (
    .A(reg_error),
    .Y(\$auto$builder.cc:364:Unop$1246 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1251  (
    .A(reg_error),
    .Y(\$auto$builder.cc:364:Unop$1252 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1257  (
    .A(reg_error),
    .Y(\$auto$builder.cc:364:Unop$1258 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1263  (
    .A(reg_error),
    .Y(\$auto$builder.cc:364:Unop$1264 )
  );
  \$reduce_xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1269  (
    .A(reg_wdata),
    .Y(\$auto$builder.cc:364:Unop$1270 )
  );
  \$reduce_xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1271  (
    .A(reg_be),
    .Y(\$auto$builder.cc:364:Unop$1272 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$1184  (
    .A(1'h0),
    .B(\$auto$rtlil.cc:2747:LogicNot$1183 ),
    .S(\$auto$rtlil.cc:2746:ReduceBool$1179 ),
    .Y(\$auto$rtlil.cc:2874:Mux$1185 )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:284.9-284.41|../rtl/soc_ctrl/soc_ctrl_reg_top.sv:266.5-290.12" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd32)
  ) \$procmux$15364  (
    .A(32'd4294967295),
    .B({ bootaddr_qs, 31'h00000000, fetchen_qs, corestatus_qs, 31'h00000000, bootmode_qs, 31'h00000000, sram_dly_qs }),
    .S({ \$procmux$15369_CMP , \$procmux$15368_CMP , \$procmux$15367_CMP , \$procmux$15366_CMP , \$procmux$15365_CMP  }),
    .Y(\$procmux$15364_Y )
  );
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:95.5" */
  \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootaddr  u_bootaddr (
    .clk_i(clk_i),
    .d(32'd0),
    .de(1'h0),
    .q(reg2hw[66:35]),
    .qs(bootaddr_qs),
    .rst_ni(rst_ni),
    .wd(bootaddr_wd),
    .we(bootaddr_we)
  );
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:176.5" */
  \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootmode  u_bootmode (
    .clk_i(clk_i),
    .d(hw2reg[1]),
    .de(hw2reg[0]),
    .q(reg2hw[1]),
    .qs(bootmode_qs),
    .rst_ni(rst_ni),
    .wd(bootmode_wd),
    .we(bootmode_we)
  );
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:149.5" */
  \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_corestatus  u_corestatus (
    .clk_i(clk_i),
    .d(32'd0),
    .de(1'h0),
    .q(reg2hw[33:2]),
    .qs(corestatus_qs),
    .rst_ni(rst_ni),
    .wd(corestatus_wd),
    .we(corestatus_we)
  );
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:122.5" */
  \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_fetchen  u_fetchen (
    .clk_i(clk_i),
    .d(hw2reg[3]),
    .de(hw2reg[2]),
    .q(reg2hw[34]),
    .qs(fetchen_qs),
    .rst_ni(rst_ni),
    .wd(fetchen_wd),
    .we(fetchen_we)
  );
  /* src = "../rtl/soc_ctrl/soc_ctrl_reg_top.sv:203.5" */
  \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_sram_dly  u_sram_dly (
    .clk_i(clk_i),
    .d(1'h0),
    .de(1'h0),
    .q(reg2hw[0]),
    .qs(sram_dly_qs),
    .rst_ni(rst_ni),
    .wd(sram_dly_wd),
    .we(sram_dly_we)
  );
  assign reg_intf_req = reg_req_i;
  assign reg_rsp_o = reg_intf_rsp;
  assign reg_we = \$auto$builder.cc:338:Biop$1156 ;
  assign reg_re = \$auto$builder.cc:338:Biop$1160 ;
  assign reg_addr = reg_intf_req[42:38];
  assign reg_wdata = reg_intf_req[36:5];
  assign reg_be = reg_intf_req[4:1];
  assign reg_intf_rsp[33:2] = reg_rdata;
  assign reg_intf_rsp[1] = reg_error;
  assign reg_intf_rsp[0] = 1'h1;
  assign reg_rdata = reg_rdata_next;
  assign reg_error = \$auto$builder.cc:338:Biop$1164 ;
  assign addr_hit = { \$auto$builder.cc:338:Biop$1175 , \$auto$builder.cc:338:Biop$1173 , \$auto$builder.cc:338:Biop$1171 , \$auto$builder.cc:338:Biop$1169 , \$auto$builder.cc:338:Biop$1167  };
  assign addrmiss = \$auto$rtlil.cc:2874:Mux$1185 ;
  assign wr_err = \$auto$builder.cc:338:Biop$1236 ;
  assign bootaddr_we = \$auto$builder.cc:338:Biop$1242 ;
  assign bootaddr_wd = reg_wdata;
  assign fetchen_we = \$auto$builder.cc:338:Biop$1248 ;
  assign fetchen_wd = reg_wdata[0];
  assign corestatus_we = \$auto$builder.cc:338:Biop$1254 ;
  assign corestatus_wd = reg_wdata;
  assign bootmode_we = \$auto$builder.cc:338:Biop$1260 ;
  assign bootmode_wd = reg_wdata[0];
  assign sram_dly_we = \$auto$builder.cc:338:Biop$1266 ;
  assign sram_dly_wd = reg_wdata[0];
  assign reg_rdata_next = \$auto$slang_frontend.cc:694:finish$\reg_rdata_next$1268 ;
  assign unused_wdata = \$auto$builder.cc:364:Unop$1270 ;
  assign unused_be = \$auto$builder.cc:364:Unop$1272 ;
  assign \$auto$slang_frontend.cc:694:finish$\reg_rdata_next$1268  = \$procmux$15364_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$1179  = \$auto$builder.cc:338:Biop$1177 ;
  assign \$auto$builder.cc:338:Biop$1190  = \$auto$builder.cc:364:Unop$1188 ;
  assign \$auto$builder.cc:338:Biop$1198 [3:1] = 3'h0;
  assign \$auto$builder.cc:338:Biop$1198 [0] = \$auto$builder.cc:364:Unop$1196 [0];
  assign \$auto$builder.cc:364:Unop$1200  = \$auto$builder.cc:364:Unop$1196 [0];
  assign \$auto$builder.cc:338:Biop$1208  = \$auto$builder.cc:364:Unop$1206 ;
  assign \$auto$builder.cc:338:Biop$1218 [3:1] = 3'h0;
  assign \$auto$builder.cc:338:Biop$1218 [0] = \$auto$builder.cc:364:Unop$1216 [0];
  assign \$auto$builder.cc:364:Unop$1220  = \$auto$builder.cc:364:Unop$1216 [0];
  assign \$auto$builder.cc:338:Biop$1228 [3:1] = 3'h0;
  assign \$auto$builder.cc:338:Biop$1228 [0] = \$auto$builder.cc:364:Unop$1226 [0];
  assign \$auto$builder.cc:364:Unop$1230  = \$auto$builder.cc:364:Unop$1226 [0];
  assign \$procmux$15365_CMP  = \$auto$builder.cc:338:Biop$1175 ;
  assign \$procmux$15366_CMP  = \$auto$builder.cc:338:Biop$1173 ;
  assign \$procmux$15367_CMP  = \$auto$builder.cc:338:Biop$1171 ;
  assign \$procmux$15368_CMP  = \$auto$builder.cc:338:Biop$1169 ;
  assign \$procmux$15369_CMP  = \$auto$builder.cc:338:Biop$1167 ;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10754 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10756 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10753  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10754 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$10756  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10749 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10751 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10748  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10749 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$10751  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10764 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10766 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10763  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10764 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$10766  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10759 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10761 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10758  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10759 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$10761  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10118 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10120 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10117  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10118 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
  assign \$auto$rtlil.cc:2747:LogicNot$10120  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10113 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10115 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10112  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10113 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
  assign \$auto$rtlil.cc:2747:LogicNot$10115  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10774 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10776 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10773  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10774 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$10776  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10769 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10771 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10768  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10769 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$10771  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10784 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10786 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10783  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10784 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$10786  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10779 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10781 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10778  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10779 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$10781  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10290 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10292 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10289  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10290 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
  assign \$auto$rtlil.cc:2747:LogicNot$10292  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$10285 ;
  wire \$auto$rtlil.cc:2747:LogicNot$10287 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$10284  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$10285 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
  assign \$auto$rtlil.cc:2747:LogicNot$10287  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[0].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5748 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5750 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5747  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5748 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5750  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[10].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5798 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5800 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5797  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5798 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5800  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[11].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5803 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5805 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5802  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5803 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5805  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[12].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5808 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5810 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5807  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5808 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5810  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[13].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5813 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5815 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5812  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5813 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5815  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[14].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5818 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5820 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5817  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5818 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5820  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[15].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5823 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5825 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5822  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5823 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5825  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[16].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5828 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5830 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5827  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5828 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5830  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[17].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5833 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5835 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5832  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5833 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5835  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[18].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5838 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5840 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5837  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5838 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5840  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[19].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5843 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5845 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5842  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5843 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5845  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[1].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5753 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5755 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5752  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5753 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5755  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[20].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5848 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5850 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5847  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5848 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5850  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[21].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5853 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5855 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5852  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5853 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5855  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[22].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5858 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5860 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5857  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5858 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5860  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[23].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5863 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5865 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5862  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5863 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5865  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[24].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5868 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5870 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5867  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5868 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5870  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[25].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5873 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5875 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5872  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5873 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5875  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[26].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5878 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5880 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5877  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5878 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5880  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[27].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5883 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5885 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5882  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5883 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5885  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[28].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5888 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5890 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5887  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5888 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5890  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[29].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5893 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5895 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5892  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5893 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5895  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[2].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5758 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5760 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5757  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5758 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5760  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[30].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5898 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5900 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5897  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5898 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5900  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[31].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5903 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5905 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5902  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5903 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5905  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[3].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5763 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5765 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5762  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5763 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5765  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[4].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5768 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5770 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5767  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5768 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5770  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[5].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5773 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5775 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5772  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5773 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5775  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[6].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5778 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5780 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5777  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5778 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5780  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[7].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5783 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5785 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5782  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5783 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5785  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[8].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5788 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5790 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5787  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5788 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5790  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[9].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$5793 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5795 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$5792  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$5793 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5795  = rst_ni;
endmodule

/* src = "../rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_ext_intr_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$auto$rtlil.cc:2747:LogicNot$3 ;
  wire \$auto$rtlil.cc:2747:LogicNot$5 ;
  /* src = "../rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "../rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "../rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$2  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$3 )
  );
  /* keep = "true" */
  /* src = "../rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$auto$rtlil.cc:2747:LogicNot$5  = rst_ni;
endmodule

/* src = "../ihp13/tc_clk.sv:9.8" */
module \tc_clk_inverter$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap.i_tck_inv (clk_i, clk_o);
  /* src = "../ihp13/tc_clk.sv:10.18" */
  input clk_i;
  wire clk_i;
  /* src = "../ihp13/tc_clk.sv:11.18" */
  output clk_o;
  wire clk_o;
  /* keep = 1'h1 */
  /* src = "../ihp13/tc_clk.sv:14.16" */
  sg13g2_inv_1 i_inv (
    .A(clk_i),
    .Y(clk_o)
  );
endmodule

/* src = "../ihp13/tc_clk.sv:33.8" */
module \tc_clk_mux2$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap.i_dft_tck_mux (clk0_i, clk1_i, clk_sel_i, clk_o);
  /* src = "../ihp13/tc_clk.sv:34.18" */
  input clk0_i;
  wire clk0_i;
  /* src = "../ihp13/tc_clk.sv:35.18" */
  input clk1_i;
  wire clk1_i;
  /* src = "../ihp13/tc_clk.sv:37.18" */
  output clk_o;
  wire clk_o;
  /* src = "../ihp13/tc_clk.sv:36.18" */
  input clk_sel_i;
  wire clk_sel_i;
  /* keep = 1'h1 */
  /* src = "../ihp13/tc_clk.sv:40.17" */
  sg13g2_mux2_1 i_mux (
    .A0(clk0_i),
    .A1(clk1_i),
    .S(clk_sel_i),
    .X(clk_o)
  );
endmodule

/* src = "../ihp13/tc_clk.sv:33.8" */
module \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_init_no (clk0_i, clk1_i, clk_sel_i, clk_o);
  /* src = "../ihp13/tc_clk.sv:34.18" */
  input clk0_i;
  wire clk0_i;
  /* src = "../ihp13/tc_clk.sv:35.18" */
  input clk1_i;
  wire clk1_i;
  /* src = "../ihp13/tc_clk.sv:37.18" */
  output clk_o;
  wire clk_o;
  /* src = "../ihp13/tc_clk.sv:36.18" */
  input clk_sel_i;
  wire clk_sel_i;
  /* keep = 1'h1 */
  /* src = "../ihp13/tc_clk.sv:40.17" */
  sg13g2_mux2_1 i_mux (
    .A0(clk0_i),
    .A1(clk1_i),
    .S(clk_sel_i),
    .X(clk_o)
  );
endmodule

/* src = "../ihp13/tc_clk.sv:33.8" */
module \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_rst_n (clk0_i, clk1_i, clk_sel_i, clk_o);
  /* src = "../ihp13/tc_clk.sv:34.18" */
  input clk0_i;
  wire clk0_i;
  /* src = "../ihp13/tc_clk.sv:35.18" */
  input clk1_i;
  wire clk1_i;
  /* src = "../ihp13/tc_clk.sv:37.18" */
  output clk_o;
  wire clk_o;
  /* src = "../ihp13/tc_clk.sv:36.18" */
  input clk_sel_i;
  wire clk_sel_i;
  /* keep = 1'h1 */
  /* src = "../ihp13/tc_clk.sv:40.17" */
  sg13g2_mux2_1 i_mux (
    .A0(clk0_i),
    .A1(clk1_i),
    .S(clk_sel_i),
    .X(clk_o)
  );
endmodule

/* src = "../ihp13/tc_clk.sv:33.8" */
module \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_rst_no (clk0_i, clk1_i, clk_sel_i, clk_o);
  /* src = "../ihp13/tc_clk.sv:34.18" */
  input clk0_i;
  wire clk0_i;
  /* src = "../ihp13/tc_clk.sv:35.18" */
  input clk1_i;
  wire clk1_i;
  /* src = "../ihp13/tc_clk.sv:37.18" */
  output clk_o;
  wire clk_o;
  /* src = "../ihp13/tc_clk.sv:36.18" */
  input clk_sel_i;
  wire clk_sel_i;
  /* keep = 1'h1 */
  /* src = "../ihp13/tc_clk.sv:40.17" */
  sg13g2_mux2_1 i_mux (
    .A0(clk0_i),
    .A1(clk1_i),
    .S(clk_sel_i),
    .X(clk_o)
  );
endmodule

/* src = "../ihp13/tc_sram_impl.sv:73.8" */
module \tc_sram_impl$croc_chip.i_croc_soc.i_croc.gen_sram_bank[0].i_sram (clk_i, rst_ni, req_i, impl_i, we_i, addr_i, wdata_i, be_i, rdata_o, impl_o);
  wire \$auto$builder.cc:338:Biop$218 ;
  wire \$auto$builder.cc:338:Biop$220 ;
  wire \$auto$builder.cc:338:Biop$230 ;
  wire \$auto$builder.cc:338:Biop$232 ;
  wire \$auto$builder.cc:338:Biop$242 ;
  wire \$auto$builder.cc:338:Biop$244 ;
  wire \$auto$builder.cc:338:Biop$254 ;
  wire \$auto$builder.cc:338:Biop$256 ;
  wire \$auto$builder.cc:338:Biop$266 ;
  wire \$auto$builder.cc:338:Biop$268 ;
  wire \$auto$builder.cc:338:Biop$278 ;
  wire \$auto$builder.cc:338:Biop$280 ;
  wire \$auto$builder.cc:338:Biop$290 ;
  wire \$auto$builder.cc:338:Biop$292 ;
  wire \$auto$builder.cc:338:Biop$302 ;
  wire \$auto$builder.cc:338:Biop$304 ;
  wire \$auto$builder.cc:338:Biop$314 ;
  wire \$auto$builder.cc:338:Biop$316 ;
  wire \$auto$builder.cc:338:Biop$326 ;
  wire \$auto$builder.cc:338:Biop$328 ;
  wire \$auto$builder.cc:338:Biop$338 ;
  wire \$auto$builder.cc:338:Biop$340 ;
  wire \$auto$builder.cc:338:Biop$350 ;
  wire \$auto$builder.cc:338:Biop$352 ;
  wire \$auto$builder.cc:338:Biop$362 ;
  wire \$auto$builder.cc:338:Biop$364 ;
  wire \$auto$builder.cc:338:Biop$374 ;
  wire \$auto$builder.cc:338:Biop$376 ;
  wire \$auto$builder.cc:338:Biop$386 ;
  wire \$auto$builder.cc:338:Biop$388 ;
  wire \$auto$builder.cc:338:Biop$398 ;
  wire \$auto$builder.cc:338:Biop$400 ;
  wire \$auto$builder.cc:338:Biop$410 ;
  wire \$auto$builder.cc:338:Biop$412 ;
  wire \$auto$builder.cc:338:Biop$422 ;
  wire \$auto$builder.cc:338:Biop$424 ;
  wire \$auto$builder.cc:338:Biop$434 ;
  wire \$auto$builder.cc:338:Biop$436 ;
  wire \$auto$builder.cc:338:Biop$446 ;
  wire \$auto$builder.cc:338:Biop$448 ;
  wire \$auto$builder.cc:338:Biop$458 ;
  wire \$auto$builder.cc:338:Biop$460 ;
  wire \$auto$builder.cc:338:Biop$470 ;
  wire \$auto$builder.cc:338:Biop$472 ;
  wire \$auto$builder.cc:338:Biop$482 ;
  wire \$auto$builder.cc:338:Biop$484 ;
  wire \$auto$builder.cc:338:Biop$494 ;
  wire \$auto$builder.cc:338:Biop$496 ;
  wire \$auto$builder.cc:338:Biop$506 ;
  wire \$auto$builder.cc:338:Biop$508 ;
  wire \$auto$builder.cc:338:Biop$518 ;
  wire \$auto$builder.cc:338:Biop$520 ;
  wire \$auto$builder.cc:338:Biop$530 ;
  wire \$auto$builder.cc:338:Biop$532 ;
  wire \$auto$builder.cc:338:Biop$542 ;
  wire \$auto$builder.cc:338:Biop$544 ;
  wire \$auto$builder.cc:338:Biop$554 ;
  wire \$auto$builder.cc:338:Biop$556 ;
  wire \$auto$builder.cc:338:Biop$566 ;
  wire \$auto$builder.cc:338:Biop$568 ;
  wire \$auto$builder.cc:338:Biop$578 ;
  wire \$auto$builder.cc:338:Biop$580 ;
  wire \$auto$builder.cc:338:Biop$590 ;
  wire \$auto$builder.cc:338:Biop$592 ;
  wire \$auto$builder.cc:338:Biop$606 ;
  wire \$auto$builder.cc:364:Unop$216 ;
  wire \$auto$builder.cc:364:Unop$222 ;
  wire \$auto$builder.cc:364:Unop$228 ;
  wire \$auto$builder.cc:364:Unop$234 ;
  wire \$auto$builder.cc:364:Unop$240 ;
  wire \$auto$builder.cc:364:Unop$246 ;
  wire \$auto$builder.cc:364:Unop$252 ;
  wire \$auto$builder.cc:364:Unop$258 ;
  wire \$auto$builder.cc:364:Unop$264 ;
  wire \$auto$builder.cc:364:Unop$270 ;
  wire \$auto$builder.cc:364:Unop$276 ;
  wire \$auto$builder.cc:364:Unop$282 ;
  wire \$auto$builder.cc:364:Unop$288 ;
  wire \$auto$builder.cc:364:Unop$294 ;
  wire \$auto$builder.cc:364:Unop$300 ;
  wire \$auto$builder.cc:364:Unop$306 ;
  wire \$auto$builder.cc:364:Unop$312 ;
  wire \$auto$builder.cc:364:Unop$318 ;
  wire \$auto$builder.cc:364:Unop$324 ;
  wire \$auto$builder.cc:364:Unop$330 ;
  wire \$auto$builder.cc:364:Unop$336 ;
  wire \$auto$builder.cc:364:Unop$342 ;
  wire \$auto$builder.cc:364:Unop$348 ;
  wire \$auto$builder.cc:364:Unop$354 ;
  wire \$auto$builder.cc:364:Unop$360 ;
  wire \$auto$builder.cc:364:Unop$366 ;
  wire \$auto$builder.cc:364:Unop$372 ;
  wire \$auto$builder.cc:364:Unop$378 ;
  wire \$auto$builder.cc:364:Unop$384 ;
  wire \$auto$builder.cc:364:Unop$390 ;
  wire \$auto$builder.cc:364:Unop$396 ;
  wire \$auto$builder.cc:364:Unop$402 ;
  wire \$auto$builder.cc:364:Unop$408 ;
  wire \$auto$builder.cc:364:Unop$414 ;
  wire \$auto$builder.cc:364:Unop$420 ;
  wire \$auto$builder.cc:364:Unop$426 ;
  wire \$auto$builder.cc:364:Unop$432 ;
  wire \$auto$builder.cc:364:Unop$438 ;
  wire \$auto$builder.cc:364:Unop$444 ;
  wire \$auto$builder.cc:364:Unop$450 ;
  wire \$auto$builder.cc:364:Unop$456 ;
  wire \$auto$builder.cc:364:Unop$462 ;
  wire \$auto$builder.cc:364:Unop$468 ;
  wire \$auto$builder.cc:364:Unop$474 ;
  wire \$auto$builder.cc:364:Unop$480 ;
  wire \$auto$builder.cc:364:Unop$486 ;
  wire \$auto$builder.cc:364:Unop$492 ;
  wire \$auto$builder.cc:364:Unop$498 ;
  wire \$auto$builder.cc:364:Unop$504 ;
  wire \$auto$builder.cc:364:Unop$510 ;
  wire \$auto$builder.cc:364:Unop$516 ;
  wire \$auto$builder.cc:364:Unop$522 ;
  wire \$auto$builder.cc:364:Unop$528 ;
  wire \$auto$builder.cc:364:Unop$534 ;
  wire \$auto$builder.cc:364:Unop$540 ;
  wire \$auto$builder.cc:364:Unop$546 ;
  wire \$auto$builder.cc:364:Unop$552 ;
  wire \$auto$builder.cc:364:Unop$558 ;
  wire \$auto$builder.cc:364:Unop$564 ;
  wire \$auto$builder.cc:364:Unop$570 ;
  wire \$auto$builder.cc:364:Unop$576 ;
  wire \$auto$builder.cc:364:Unop$582 ;
  wire \$auto$builder.cc:364:Unop$588 ;
  wire \$auto$builder.cc:364:Unop$594 ;
  wire \$auto$builder.cc:364:Unop$604 ;
  wire \$auto$builder.cc:364:Unop$611 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$224 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$236 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$248 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$260 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$272 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$284 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$296 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$308 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$320 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$332 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$344 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$356 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$368 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$380 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$392 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$404 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$416 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$428 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$440 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$452 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$464 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$476 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$488 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$500 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$512 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$524 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$536 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$548 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$560 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$572 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$584 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$596 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$608 ;
  wire \$auto$rtlil.cc:2747:LogicNot$600 ;
  wire \$auto$rtlil.cc:2747:LogicNot$602 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$213 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$214 ;
  /* \$nonstatic  = 32'd2 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$226 ;
  /* \$nonstatic  = 32'd3 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$238 ;
  /* \$nonstatic  = 32'd4 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$250 ;
  /* \$nonstatic  = 32'd5 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$262 ;
  /* \$nonstatic  = 32'd6 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$274 ;
  /* \$nonstatic  = 32'd7 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$286 ;
  /* \$nonstatic  = 32'd8 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$298 ;
  /* \$nonstatic  = 32'd9 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$310 ;
  /* \$nonstatic  = 32'd10 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$322 ;
  /* \$nonstatic  = 32'd11 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$334 ;
  /* \$nonstatic  = 32'd12 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$346 ;
  /* \$nonstatic  = 32'd13 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$358 ;
  /* \$nonstatic  = 32'd14 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$370 ;
  /* \$nonstatic  = 32'd15 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$382 ;
  /* \$nonstatic  = 32'd16 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$394 ;
  /* \$nonstatic  = 32'd17 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$406 ;
  /* \$nonstatic  = 32'd18 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$418 ;
  /* \$nonstatic  = 32'd19 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$430 ;
  /* \$nonstatic  = 32'd20 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$442 ;
  /* \$nonstatic  = 32'd21 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$454 ;
  /* \$nonstatic  = 32'd22 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$466 ;
  /* \$nonstatic  = 32'd23 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$478 ;
  /* \$nonstatic  = 32'd24 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$490 ;
  /* \$nonstatic  = 32'd25 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$502 ;
  /* \$nonstatic  = 32'd26 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$514 ;
  /* \$nonstatic  = 32'd27 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$526 ;
  /* \$nonstatic  = 32'd28 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$538 ;
  /* \$nonstatic  = 32'd29 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$550 ;
  /* \$nonstatic  = 32'd30 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$562 ;
  /* \$nonstatic  = 32'd31 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$574 ;
  /* \$nonstatic  = 32'd32 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$586 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$212 ;
  /* src = "../ihp13/tc_sram_impl.sv:248.12-248.46" */
  wire \$auto$slang_frontend.cc:694:finish$\gen_512x32xBx1.sel_q$609 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[0]$225 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[10]$345 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[11]$357 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[12]$369 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[13]$381 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[14]$393 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[15]$405 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[16]$417 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[17]$429 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[18]$441 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[19]$453 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[1]$237 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[20]$465 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[21]$477 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[22]$489 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[23]$501 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[24]$513 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[25]$525 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[26]$537 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[27]$549 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[28]$561 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[29]$573 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[2]$249 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[30]$585 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[31]$597 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[3]$261 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[4]$273 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[5]$285 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[6]$297 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[7]$309 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[8]$321 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[9]$333 ;
  wire \$procmux$15984_Y ;
  wire \$procmux$15985_CMP ;
  wire \$procmux$15987_Y ;
  wire \$procmux$15988_CMP ;
  wire \$procmux$16021_Y ;
  wire \$procmux$16022_CMP ;
  wire \$procmux$16054_Y ;
  wire \$procmux$16055_CMP ;
  wire \$procmux$16086_Y ;
  wire \$procmux$16087_CMP ;
  wire \$procmux$16117_Y ;
  wire \$procmux$16118_CMP ;
  wire \$procmux$16147_Y ;
  wire \$procmux$16148_CMP ;
  wire \$procmux$16176_Y ;
  wire \$procmux$16177_CMP ;
  wire \$procmux$16204_Y ;
  wire \$procmux$16205_CMP ;
  wire \$procmux$16231_Y ;
  wire \$procmux$16232_CMP ;
  wire \$procmux$16257_Y ;
  wire \$procmux$16258_CMP ;
  wire \$procmux$16282_Y ;
  wire \$procmux$16283_CMP ;
  wire \$procmux$16306_Y ;
  wire \$procmux$16307_CMP ;
  wire \$procmux$16329_Y ;
  wire \$procmux$16330_CMP ;
  wire \$procmux$16351_Y ;
  wire \$procmux$16352_CMP ;
  wire \$procmux$16372_Y ;
  wire \$procmux$16373_CMP ;
  wire \$procmux$16392_Y ;
  wire \$procmux$16393_CMP ;
  wire \$procmux$16411_Y ;
  wire \$procmux$16412_CMP ;
  wire \$procmux$16429_Y ;
  wire \$procmux$16430_CMP ;
  wire \$procmux$16446_Y ;
  wire \$procmux$16447_CMP ;
  wire \$procmux$16462_Y ;
  wire \$procmux$16463_CMP ;
  wire \$procmux$16477_Y ;
  wire \$procmux$16478_CMP ;
  wire \$procmux$16491_Y ;
  wire \$procmux$16492_CMP ;
  wire \$procmux$16504_Y ;
  wire \$procmux$16505_CMP ;
  wire \$procmux$16516_Y ;
  wire \$procmux$16517_CMP ;
  wire \$procmux$16527_Y ;
  wire \$procmux$16528_CMP ;
  wire \$procmux$16537_Y ;
  wire \$procmux$16538_CMP ;
  wire \$procmux$16546_Y ;
  wire \$procmux$16547_CMP ;
  wire \$procmux$16554_Y ;
  wire \$procmux$16555_CMP ;
  wire \$procmux$16561_Y ;
  wire \$procmux$16562_CMP ;
  wire \$procmux$16567_Y ;
  wire \$procmux$16568_CMP ;
  wire \$procmux$16572_Y ;
  wire \$procmux$16573_CMP ;
  wire \$procmux$16576_Y ;
  wire \$procmux$16577_CMP ;
  /* src = "../ihp13/tc_sram_impl.sv:100.32" */
  input [8:0] addr_i;
  wire [8:0] addr_i;
  /* src = "../ihp13/tc_sram_impl.sv:102.32" */
  input [3:0] be_i;
  wire [3:0] be_i;
  /* src = "../ihp13/tc_sram_impl.sv:110.25" */
  wire [31:0] bm;
  /* src = "../ihp13/tc_sram_impl.sv:92.32" */
  input clk_i;
  wire clk_i;
  /* src = "../ihp13/tc_sram_impl.sv:223.36" */
  wire [63:0] \gen_512x32xBx1.bm64 ;
  /* src = "../ihp13/tc_sram_impl.sv:223.27" */
  wire [63:0] \gen_512x32xBx1.rdata64 ;
  /* src = "../ihp13/tc_sram_impl.sv:224.11" */
  wire \gen_512x32xBx1.sel_d ;
  /* src = "../ihp13/tc_sram_impl.sv:224.18" */
  wire \gen_512x32xBx1.sel_q ;
  /* src = "../ihp13/tc_sram_impl.sv:223.18" */
  wire [63:0] \gen_512x32xBx1.wdata64 ;
  /* src = "../ihp13/tc_sram_impl.sv:95.32" */
  input impl_i;
  wire impl_i;
  /* src = "../ihp13/tc_sram_impl.sv:96.32" */
  output impl_o;
  wire impl_o;
  /* src = "../ihp13/tc_sram_impl.sv:104.32" */
  output [31:0] rdata_o;
  wire [31:0] rdata_o;
  /* src = "../ihp13/tc_sram_impl.sv:98.32" */
  input req_i;
  wire req_i;
  /* src = "../ihp13/tc_sram_impl.sv:93.32" */
  input rst_ni;
  wire rst_ni;
  /* src = "../ihp13/tc_sram_impl.sv:101.32" */
  input [31:0] wdata_i;
  wire [31:0] wdata_i;
  /* src = "../ihp13/tc_sram_impl.sv:99.32" */
  input we_i;
  wire we_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$599  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$600 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$217  (
    .A(bm[0]),
    .B(\$auto$builder.cc:364:Unop$216 ),
    .Y(\$auto$builder.cc:338:Biop$218 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$219  (
    .A(bm[0]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$220 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$229  (
    .A(bm[1]),
    .B(\$auto$builder.cc:364:Unop$228 ),
    .Y(\$auto$builder.cc:338:Biop$230 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$231  (
    .A(bm[1]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$232 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$241  (
    .A(bm[2]),
    .B(\$auto$builder.cc:364:Unop$240 ),
    .Y(\$auto$builder.cc:338:Biop$242 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$243  (
    .A(bm[2]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$244 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$253  (
    .A(bm[3]),
    .B(\$auto$builder.cc:364:Unop$252 ),
    .Y(\$auto$builder.cc:338:Biop$254 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$255  (
    .A(bm[3]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$256 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$265  (
    .A(bm[4]),
    .B(\$auto$builder.cc:364:Unop$264 ),
    .Y(\$auto$builder.cc:338:Biop$266 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$267  (
    .A(bm[4]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$268 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$277  (
    .A(bm[5]),
    .B(\$auto$builder.cc:364:Unop$276 ),
    .Y(\$auto$builder.cc:338:Biop$278 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$279  (
    .A(bm[5]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$280 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$289  (
    .A(bm[6]),
    .B(\$auto$builder.cc:364:Unop$288 ),
    .Y(\$auto$builder.cc:338:Biop$290 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$291  (
    .A(bm[6]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$292 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$301  (
    .A(bm[7]),
    .B(\$auto$builder.cc:364:Unop$300 ),
    .Y(\$auto$builder.cc:338:Biop$302 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$303  (
    .A(bm[7]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$304 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$313  (
    .A(bm[8]),
    .B(\$auto$builder.cc:364:Unop$312 ),
    .Y(\$auto$builder.cc:338:Biop$314 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$315  (
    .A(bm[8]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$316 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$325  (
    .A(bm[9]),
    .B(\$auto$builder.cc:364:Unop$324 ),
    .Y(\$auto$builder.cc:338:Biop$326 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$327  (
    .A(bm[9]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$328 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$337  (
    .A(bm[10]),
    .B(\$auto$builder.cc:364:Unop$336 ),
    .Y(\$auto$builder.cc:338:Biop$338 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$339  (
    .A(bm[10]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$340 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$349  (
    .A(bm[11]),
    .B(\$auto$builder.cc:364:Unop$348 ),
    .Y(\$auto$builder.cc:338:Biop$350 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$351  (
    .A(bm[11]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$352 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$361  (
    .A(bm[12]),
    .B(\$auto$builder.cc:364:Unop$360 ),
    .Y(\$auto$builder.cc:338:Biop$362 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$363  (
    .A(bm[12]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$364 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$373  (
    .A(bm[13]),
    .B(\$auto$builder.cc:364:Unop$372 ),
    .Y(\$auto$builder.cc:338:Biop$374 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$375  (
    .A(bm[13]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$376 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$385  (
    .A(bm[14]),
    .B(\$auto$builder.cc:364:Unop$384 ),
    .Y(\$auto$builder.cc:338:Biop$386 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$387  (
    .A(bm[14]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$388 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$397  (
    .A(bm[15]),
    .B(\$auto$builder.cc:364:Unop$396 ),
    .Y(\$auto$builder.cc:338:Biop$398 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$399  (
    .A(bm[15]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$400 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$409  (
    .A(bm[16]),
    .B(\$auto$builder.cc:364:Unop$408 ),
    .Y(\$auto$builder.cc:338:Biop$410 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$411  (
    .A(bm[16]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$412 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$421  (
    .A(bm[17]),
    .B(\$auto$builder.cc:364:Unop$420 ),
    .Y(\$auto$builder.cc:338:Biop$422 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$423  (
    .A(bm[17]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$424 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$433  (
    .A(bm[18]),
    .B(\$auto$builder.cc:364:Unop$432 ),
    .Y(\$auto$builder.cc:338:Biop$434 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$435  (
    .A(bm[18]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$436 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$445  (
    .A(bm[19]),
    .B(\$auto$builder.cc:364:Unop$444 ),
    .Y(\$auto$builder.cc:338:Biop$446 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$447  (
    .A(bm[19]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$448 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$457  (
    .A(bm[20]),
    .B(\$auto$builder.cc:364:Unop$456 ),
    .Y(\$auto$builder.cc:338:Biop$458 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$459  (
    .A(bm[20]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$460 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$469  (
    .A(bm[21]),
    .B(\$auto$builder.cc:364:Unop$468 ),
    .Y(\$auto$builder.cc:338:Biop$470 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$471  (
    .A(bm[21]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$472 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$481  (
    .A(bm[22]),
    .B(\$auto$builder.cc:364:Unop$480 ),
    .Y(\$auto$builder.cc:338:Biop$482 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$483  (
    .A(bm[22]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$484 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$493  (
    .A(bm[23]),
    .B(\$auto$builder.cc:364:Unop$492 ),
    .Y(\$auto$builder.cc:338:Biop$494 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$495  (
    .A(bm[23]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$496 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$505  (
    .A(bm[24]),
    .B(\$auto$builder.cc:364:Unop$504 ),
    .Y(\$auto$builder.cc:338:Biop$506 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$507  (
    .A(bm[24]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$508 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$517  (
    .A(bm[25]),
    .B(\$auto$builder.cc:364:Unop$516 ),
    .Y(\$auto$builder.cc:338:Biop$518 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$519  (
    .A(bm[25]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$520 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$529  (
    .A(bm[26]),
    .B(\$auto$builder.cc:364:Unop$528 ),
    .Y(\$auto$builder.cc:338:Biop$530 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$531  (
    .A(bm[26]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$532 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$541  (
    .A(bm[27]),
    .B(\$auto$builder.cc:364:Unop$540 ),
    .Y(\$auto$builder.cc:338:Biop$542 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$543  (
    .A(bm[27]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$544 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$553  (
    .A(bm[28]),
    .B(\$auto$builder.cc:364:Unop$552 ),
    .Y(\$auto$builder.cc:338:Biop$554 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$555  (
    .A(bm[28]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$556 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$565  (
    .A(bm[29]),
    .B(\$auto$builder.cc:364:Unop$564 ),
    .Y(\$auto$builder.cc:338:Biop$566 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$567  (
    .A(bm[29]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$568 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$577  (
    .A(bm[30]),
    .B(\$auto$builder.cc:364:Unop$576 ),
    .Y(\$auto$builder.cc:338:Biop$578 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$579  (
    .A(bm[30]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$580 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$589  (
    .A(bm[31]),
    .B(\$auto$builder.cc:364:Unop$588 ),
    .Y(\$auto$builder.cc:338:Biop$590 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$591  (
    .A(bm[31]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$592 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$605  (
    .A(req_i),
    .B(\$auto$builder.cc:364:Unop$604 ),
    .Y(\$auto$builder.cc:338:Biop$606 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$215  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$216 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$221  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$222 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$227  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$228 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$233  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$234 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$239  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$240 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$245  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$246 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$251  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$252 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$257  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$258 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$263  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$264 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$269  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$270 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$275  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$276 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$281  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$282 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$287  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$288 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$293  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$294 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$299  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$300 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$305  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$306 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$311  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$312 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$317  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$318 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$323  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$324 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$329  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$330 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$335  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$336 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$341  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$342 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$347  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$348 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$353  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$354 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$359  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$360 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$365  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$366 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$371  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$372 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$377  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$378 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$383  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$384 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$389  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$390 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$395  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$396 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$401  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$402 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$407  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$408 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$413  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$414 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$419  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$420 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$425  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$426 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$431  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$432 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$437  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$438 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$443  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$444 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$449  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$450 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$455  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$456 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$461  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$462 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$467  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$468 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$473  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$474 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$479  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$480 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$485  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$486 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$491  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$492 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$497  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$498 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$503  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$504 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$509  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$510 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$515  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$516 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$521  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$522 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$527  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$528 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$533  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$534 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$539  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$540 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$545  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$546 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$551  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$552 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$557  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$558 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$563  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$564 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$569  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$570 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$575  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$576 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$581  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$582 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$587  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$588 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$593  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$594 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$603  (
    .A(we_i),
    .Y(\$auto$builder.cc:364:Unop$604 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$610  (
    .A(we_i),
    .Y(\$auto$builder.cc:364:Unop$611 )
  );
  /* src = "../ihp13/tc_sram_impl.sv:246.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_512x32xBx1.sel_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_512x32xBx1.sel_q$609 ),
    .Q(\gen_512x32xBx1.sel_q )
  );
  /* src = "../ihp13/tc_sram_impl.sv:248.31-248.46|../ihp13/tc_sram_impl.sv:248.12-248.46" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15984  (
    .A(\gen_512x32xBx1.sel_q ),
    .B(addr_i[0]),
    .S(\$procmux$15985_CMP ),
    .Y(\$procmux$15984_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15987  (
    .A(\gen_512x32xBx1.rdata64 [62]),
    .B(\gen_512x32xBx1.rdata64 [63]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15987_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16021  (
    .A(\gen_512x32xBx1.rdata64 [60]),
    .B(\gen_512x32xBx1.rdata64 [61]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16021_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16054  (
    .A(\gen_512x32xBx1.rdata64 [58]),
    .B(\gen_512x32xBx1.rdata64 [59]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16054_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16086  (
    .A(\gen_512x32xBx1.rdata64 [56]),
    .B(\gen_512x32xBx1.rdata64 [57]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16086_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16117  (
    .A(\gen_512x32xBx1.rdata64 [54]),
    .B(\gen_512x32xBx1.rdata64 [55]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16117_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16147  (
    .A(\gen_512x32xBx1.rdata64 [52]),
    .B(\gen_512x32xBx1.rdata64 [53]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16147_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16176  (
    .A(\gen_512x32xBx1.rdata64 [50]),
    .B(\gen_512x32xBx1.rdata64 [51]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16176_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16204  (
    .A(\gen_512x32xBx1.rdata64 [48]),
    .B(\gen_512x32xBx1.rdata64 [49]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16204_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16231  (
    .A(\gen_512x32xBx1.rdata64 [46]),
    .B(\gen_512x32xBx1.rdata64 [47]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16231_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16257  (
    .A(\gen_512x32xBx1.rdata64 [44]),
    .B(\gen_512x32xBx1.rdata64 [45]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16257_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16282  (
    .A(\gen_512x32xBx1.rdata64 [42]),
    .B(\gen_512x32xBx1.rdata64 [43]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16282_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16306  (
    .A(\gen_512x32xBx1.rdata64 [40]),
    .B(\gen_512x32xBx1.rdata64 [41]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16306_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16329  (
    .A(\gen_512x32xBx1.rdata64 [38]),
    .B(\gen_512x32xBx1.rdata64 [39]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16329_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16351  (
    .A(\gen_512x32xBx1.rdata64 [36]),
    .B(\gen_512x32xBx1.rdata64 [37]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16351_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16372  (
    .A(\gen_512x32xBx1.rdata64 [34]),
    .B(\gen_512x32xBx1.rdata64 [35]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16372_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16392  (
    .A(\gen_512x32xBx1.rdata64 [32]),
    .B(\gen_512x32xBx1.rdata64 [33]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16392_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16411  (
    .A(\gen_512x32xBx1.rdata64 [30]),
    .B(\gen_512x32xBx1.rdata64 [31]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16411_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16429  (
    .A(\gen_512x32xBx1.rdata64 [28]),
    .B(\gen_512x32xBx1.rdata64 [29]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16429_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16446  (
    .A(\gen_512x32xBx1.rdata64 [26]),
    .B(\gen_512x32xBx1.rdata64 [27]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16446_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16462  (
    .A(\gen_512x32xBx1.rdata64 [24]),
    .B(\gen_512x32xBx1.rdata64 [25]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16462_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16477  (
    .A(\gen_512x32xBx1.rdata64 [22]),
    .B(\gen_512x32xBx1.rdata64 [23]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16477_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16491  (
    .A(\gen_512x32xBx1.rdata64 [20]),
    .B(\gen_512x32xBx1.rdata64 [21]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16491_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16504  (
    .A(\gen_512x32xBx1.rdata64 [18]),
    .B(\gen_512x32xBx1.rdata64 [19]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16504_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16516  (
    .A(\gen_512x32xBx1.rdata64 [16]),
    .B(\gen_512x32xBx1.rdata64 [17]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16516_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16527  (
    .A(\gen_512x32xBx1.rdata64 [14]),
    .B(\gen_512x32xBx1.rdata64 [15]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16527_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16537  (
    .A(\gen_512x32xBx1.rdata64 [12]),
    .B(\gen_512x32xBx1.rdata64 [13]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16537_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16546  (
    .A(\gen_512x32xBx1.rdata64 [10]),
    .B(\gen_512x32xBx1.rdata64 [11]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16546_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16554  (
    .A(\gen_512x32xBx1.rdata64 [8]),
    .B(\gen_512x32xBx1.rdata64 [9]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16554_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16561  (
    .A(\gen_512x32xBx1.rdata64 [6]),
    .B(\gen_512x32xBx1.rdata64 [7]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16561_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16567  (
    .A(\gen_512x32xBx1.rdata64 [4]),
    .B(\gen_512x32xBx1.rdata64 [5]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16567_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16572  (
    .A(\gen_512x32xBx1.rdata64 [2]),
    .B(\gen_512x32xBx1.rdata64 [3]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16572_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$16576  (
    .A(\gen_512x32xBx1.rdata64 [0]),
    .B(\gen_512x32xBx1.rdata64 [1]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$16576_Y )
  );
  /* src = "../ihp13/tc_sram_impl.sv:251.37" */
  RM_IHPSG13_1P_256x64_c2_bm_bist \gen_512x32xBx1.i_cut  (
    .A_ADDR(addr_i[8:1]),
    .A_BIST_ADDR(8'h00),
    .A_BIST_BM(64'h0000000000000000),
    .A_BIST_CLK(1'h0),
    .A_BIST_DIN(64'h0000000000000000),
    .A_BIST_EN(1'h0),
    .A_BIST_MEN(1'h0),
    .A_BIST_REN(1'h0),
    .A_BIST_WEN(1'h0),
    .A_BM(\gen_512x32xBx1.bm64 ),
    .A_CLK(clk_i),
    .A_DIN(\gen_512x32xBx1.wdata64 ),
    .A_DLY(impl_i),
    .A_DOUT(\gen_512x32xBx1.rdata64 ),
    .A_MEN(req_i),
    .A_REN(\$auto$builder.cc:364:Unop$611 ),
    .A_WEN(we_i)
  );
  assign bm[0] = be_i[0];
  assign bm[1] = be_i[0];
  assign bm[2] = be_i[0];
  assign bm[3] = be_i[0];
  assign bm[4] = be_i[0];
  assign bm[5] = be_i[0];
  assign bm[6] = be_i[0];
  assign bm[7] = be_i[0];
  assign bm[8] = be_i[1];
  assign bm[9] = be_i[1];
  assign bm[10] = be_i[1];
  assign bm[11] = be_i[1];
  assign bm[12] = be_i[1];
  assign bm[13] = be_i[1];
  assign bm[14] = be_i[1];
  assign bm[15] = be_i[1];
  assign bm[16] = be_i[2];
  assign bm[17] = be_i[2];
  assign bm[18] = be_i[2];
  assign bm[19] = be_i[2];
  assign bm[20] = be_i[2];
  assign bm[21] = be_i[2];
  assign bm[22] = be_i[2];
  assign bm[23] = be_i[2];
  assign bm[24] = be_i[3];
  assign bm[25] = be_i[3];
  assign bm[26] = be_i[3];
  assign bm[27] = be_i[3];
  assign bm[28] = be_i[3];
  assign bm[29] = be_i[3];
  assign bm[30] = be_i[3];
  assign bm[31] = be_i[3];
  assign impl_o = 1'hx;
  assign rdata_o = { \$auto$slang_frontend.cc:694:finish$\rdata_o[31]$597 , \$auto$slang_frontend.cc:694:finish$\rdata_o[30]$585 , \$auto$slang_frontend.cc:694:finish$\rdata_o[29]$573 , \$auto$slang_frontend.cc:694:finish$\rdata_o[28]$561 , \$auto$slang_frontend.cc:694:finish$\rdata_o[27]$549 , \$auto$slang_frontend.cc:694:finish$\rdata_o[26]$537 , \$auto$slang_frontend.cc:694:finish$\rdata_o[25]$525 , \$auto$slang_frontend.cc:694:finish$\rdata_o[24]$513 , \$auto$slang_frontend.cc:694:finish$\rdata_o[23]$501 , \$auto$slang_frontend.cc:694:finish$\rdata_o[22]$489 , \$auto$slang_frontend.cc:694:finish$\rdata_o[21]$477 , \$auto$slang_frontend.cc:694:finish$\rdata_o[20]$465 , \$auto$slang_frontend.cc:694:finish$\rdata_o[19]$453 , \$auto$slang_frontend.cc:694:finish$\rdata_o[18]$441 , \$auto$slang_frontend.cc:694:finish$\rdata_o[17]$429 , \$auto$slang_frontend.cc:694:finish$\rdata_o[16]$417 , \$auto$slang_frontend.cc:694:finish$\rdata_o[15]$405 , \$auto$slang_frontend.cc:694:finish$\rdata_o[14]$393 , \$auto$slang_frontend.cc:694:finish$\rdata_o[13]$381 , \$auto$slang_frontend.cc:694:finish$\rdata_o[12]$369 , \$auto$slang_frontend.cc:694:finish$\rdata_o[11]$357 , \$auto$slang_frontend.cc:694:finish$\rdata_o[10]$345 , \$auto$slang_frontend.cc:694:finish$\rdata_o[9]$333 , \$auto$slang_frontend.cc:694:finish$\rdata_o[8]$321 , \$auto$slang_frontend.cc:694:finish$\rdata_o[7]$309 , \$auto$slang_frontend.cc:694:finish$\rdata_o[6]$297 , \$auto$slang_frontend.cc:694:finish$\rdata_o[5]$285 , \$auto$slang_frontend.cc:694:finish$\rdata_o[4]$273 , \$auto$slang_frontend.cc:694:finish$\rdata_o[3]$261 , \$auto$slang_frontend.cc:694:finish$\rdata_o[2]$249 , \$auto$slang_frontend.cc:694:finish$\rdata_o[1]$237 , \$auto$slang_frontend.cc:694:finish$\rdata_o[0]$225  };
  assign \gen_512x32xBx1.wdata64  = { wdata_i[31], wdata_i[31:30], wdata_i[30:29], wdata_i[29:28], wdata_i[28:27], wdata_i[27:26], wdata_i[26:25], wdata_i[25:24], wdata_i[24:23], wdata_i[23:22], wdata_i[22:21], wdata_i[21:20], wdata_i[20:19], wdata_i[19:18], wdata_i[18:17], wdata_i[17:16], wdata_i[16:15], wdata_i[15:14], wdata_i[14:13], wdata_i[13:12], wdata_i[12:11], wdata_i[11:10], wdata_i[10:9], wdata_i[9:8], wdata_i[8:7], wdata_i[7:6], wdata_i[6:5], wdata_i[5:4], wdata_i[4:3], wdata_i[3:2], wdata_i[2:1], wdata_i[1:0], wdata_i[0] };
  assign \gen_512x32xBx1.bm64  = { \$auto$builder.cc:338:Biop$592 , \$auto$builder.cc:338:Biop$590 , \$auto$builder.cc:338:Biop$580 , \$auto$builder.cc:338:Biop$578 , \$auto$builder.cc:338:Biop$568 , \$auto$builder.cc:338:Biop$566 , \$auto$builder.cc:338:Biop$556 , \$auto$builder.cc:338:Biop$554 , \$auto$builder.cc:338:Biop$544 , \$auto$builder.cc:338:Biop$542 , \$auto$builder.cc:338:Biop$532 , \$auto$builder.cc:338:Biop$530 , \$auto$builder.cc:338:Biop$520 , \$auto$builder.cc:338:Biop$518 , \$auto$builder.cc:338:Biop$508 , \$auto$builder.cc:338:Biop$506 , \$auto$builder.cc:338:Biop$496 , \$auto$builder.cc:338:Biop$494 , \$auto$builder.cc:338:Biop$484 , \$auto$builder.cc:338:Biop$482 , \$auto$builder.cc:338:Biop$472 , \$auto$builder.cc:338:Biop$470 , \$auto$builder.cc:338:Biop$460 , \$auto$builder.cc:338:Biop$458 , \$auto$builder.cc:338:Biop$448 , \$auto$builder.cc:338:Biop$446 , \$auto$builder.cc:338:Biop$436 , \$auto$builder.cc:338:Biop$434 , \$auto$builder.cc:338:Biop$424 , \$auto$builder.cc:338:Biop$422 , \$auto$builder.cc:338:Biop$412 , \$auto$builder.cc:338:Biop$410 , \$auto$builder.cc:338:Biop$400 , \$auto$builder.cc:338:Biop$398 , \$auto$builder.cc:338:Biop$388 , \$auto$builder.cc:338:Biop$386 , \$auto$builder.cc:338:Biop$376 , \$auto$builder.cc:338:Biop$374 , \$auto$builder.cc:338:Biop$364 , \$auto$builder.cc:338:Biop$362 , \$auto$builder.cc:338:Biop$352 , \$auto$builder.cc:338:Biop$350 , \$auto$builder.cc:338:Biop$340 , \$auto$builder.cc:338:Biop$338 , \$auto$builder.cc:338:Biop$328 , \$auto$builder.cc:338:Biop$326 , \$auto$builder.cc:338:Biop$316 , \$auto$builder.cc:338:Biop$314 , \$auto$builder.cc:338:Biop$304 , \$auto$builder.cc:338:Biop$302 , \$auto$builder.cc:338:Biop$292 , \$auto$builder.cc:338:Biop$290 , \$auto$builder.cc:338:Biop$280 , \$auto$builder.cc:338:Biop$278 , \$auto$builder.cc:338:Biop$268 , \$auto$builder.cc:338:Biop$266 , \$auto$builder.cc:338:Biop$256 , \$auto$builder.cc:338:Biop$254 , \$auto$builder.cc:338:Biop$244 , \$auto$builder.cc:338:Biop$242 , \$auto$builder.cc:338:Biop$232 , \$auto$builder.cc:338:Biop$230 , \$auto$builder.cc:338:Biop$220 , \$auto$builder.cc:338:Biop$218  };
  assign \gen_512x32xBx1.sel_d  = addr_i[0];
  assign \$procmux$15985_CMP  = \$auto$rtlil.cc:2746:ReduceBool$608 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_512x32xBx1.sel_q$609  = \$procmux$15984_Y ;
  assign \$procmux$15988_CMP  = \$auto$rtlil.cc:2746:ReduceBool$596 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[31]$597  = \$procmux$15987_Y ;
  assign \$procmux$16022_CMP  = \$auto$rtlil.cc:2746:ReduceBool$584 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[30]$585  = \$procmux$16021_Y ;
  assign \$procmux$16055_CMP  = \$auto$rtlil.cc:2746:ReduceBool$572 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[29]$573  = \$procmux$16054_Y ;
  assign \$procmux$16087_CMP  = \$auto$rtlil.cc:2746:ReduceBool$560 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[28]$561  = \$procmux$16086_Y ;
  assign \$procmux$16118_CMP  = \$auto$rtlil.cc:2746:ReduceBool$548 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[27]$549  = \$procmux$16117_Y ;
  assign \$procmux$16148_CMP  = \$auto$rtlil.cc:2746:ReduceBool$536 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[26]$537  = \$procmux$16147_Y ;
  assign \$procmux$16177_CMP  = \$auto$rtlil.cc:2746:ReduceBool$524 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[25]$525  = \$procmux$16176_Y ;
  assign \$procmux$16205_CMP  = \$auto$rtlil.cc:2746:ReduceBool$512 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[24]$513  = \$procmux$16204_Y ;
  assign \$procmux$16232_CMP  = \$auto$rtlil.cc:2746:ReduceBool$500 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[23]$501  = \$procmux$16231_Y ;
  assign \$procmux$16258_CMP  = \$auto$rtlil.cc:2746:ReduceBool$488 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[22]$489  = \$procmux$16257_Y ;
  assign \$procmux$16283_CMP  = \$auto$rtlil.cc:2746:ReduceBool$476 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[21]$477  = \$procmux$16282_Y ;
  assign \$procmux$16307_CMP  = \$auto$rtlil.cc:2746:ReduceBool$464 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[20]$465  = \$procmux$16306_Y ;
  assign \$procmux$16330_CMP  = \$auto$rtlil.cc:2746:ReduceBool$452 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[19]$453  = \$procmux$16329_Y ;
  assign \$procmux$16352_CMP  = \$auto$rtlil.cc:2746:ReduceBool$440 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[18]$441  = \$procmux$16351_Y ;
  assign \$procmux$16373_CMP  = \$auto$rtlil.cc:2746:ReduceBool$428 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[17]$429  = \$procmux$16372_Y ;
  assign \$procmux$16393_CMP  = \$auto$rtlil.cc:2746:ReduceBool$416 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[16]$417  = \$procmux$16392_Y ;
  assign \$procmux$16412_CMP  = \$auto$rtlil.cc:2746:ReduceBool$404 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[15]$405  = \$procmux$16411_Y ;
  assign \$procmux$16430_CMP  = \$auto$rtlil.cc:2746:ReduceBool$392 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[14]$393  = \$procmux$16429_Y ;
  assign \$procmux$16447_CMP  = \$auto$rtlil.cc:2746:ReduceBool$380 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[13]$381  = \$procmux$16446_Y ;
  assign \$procmux$16463_CMP  = \$auto$rtlil.cc:2746:ReduceBool$368 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[12]$369  = \$procmux$16462_Y ;
  assign \$procmux$16478_CMP  = \$auto$rtlil.cc:2746:ReduceBool$356 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[11]$357  = \$procmux$16477_Y ;
  assign \$procmux$16492_CMP  = \$auto$rtlil.cc:2746:ReduceBool$344 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[10]$345  = \$procmux$16491_Y ;
  assign \$procmux$16505_CMP  = \$auto$rtlil.cc:2746:ReduceBool$332 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[9]$333  = \$procmux$16504_Y ;
  assign \$procmux$16517_CMP  = \$auto$rtlil.cc:2746:ReduceBool$320 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[8]$321  = \$procmux$16516_Y ;
  assign \$procmux$16528_CMP  = \$auto$rtlil.cc:2746:ReduceBool$308 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[7]$309  = \$procmux$16527_Y ;
  assign \$procmux$16538_CMP  = \$auto$rtlil.cc:2746:ReduceBool$296 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[6]$297  = \$procmux$16537_Y ;
  assign \$procmux$16547_CMP  = \$auto$rtlil.cc:2746:ReduceBool$284 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[5]$285  = \$procmux$16546_Y ;
  assign \$procmux$16555_CMP  = \$auto$rtlil.cc:2746:ReduceBool$272 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[4]$273  = \$procmux$16554_Y ;
  assign \$procmux$16562_CMP  = \$auto$rtlil.cc:2746:ReduceBool$260 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[3]$261  = \$procmux$16561_Y ;
  assign \$procmux$16568_CMP  = \$auto$rtlil.cc:2746:ReduceBool$248 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[2]$249  = \$procmux$16567_Y ;
  assign \$procmux$16573_CMP  = \$auto$rtlil.cc:2746:ReduceBool$236 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[1]$237  = \$procmux$16572_Y ;
  assign \$procmux$16577_CMP  = \$auto$rtlil.cc:2746:ReduceBool$224 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[0]$225  = \$procmux$16576_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$224  = \$auto$builder.cc:364:Unop$222 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$236  = \$auto$builder.cc:364:Unop$234 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$248  = \$auto$builder.cc:364:Unop$246 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$260  = \$auto$builder.cc:364:Unop$258 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$272  = \$auto$builder.cc:364:Unop$270 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$284  = \$auto$builder.cc:364:Unop$282 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$296  = \$auto$builder.cc:364:Unop$294 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$308  = \$auto$builder.cc:364:Unop$306 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$320  = \$auto$builder.cc:364:Unop$318 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$332  = \$auto$builder.cc:364:Unop$330 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$344  = \$auto$builder.cc:364:Unop$342 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$356  = \$auto$builder.cc:364:Unop$354 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$368  = \$auto$builder.cc:364:Unop$366 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$380  = \$auto$builder.cc:364:Unop$378 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$392  = \$auto$builder.cc:364:Unop$390 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$404  = \$auto$builder.cc:364:Unop$402 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$416  = \$auto$builder.cc:364:Unop$414 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$428  = \$auto$builder.cc:364:Unop$426 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$440  = \$auto$builder.cc:364:Unop$438 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$452  = \$auto$builder.cc:364:Unop$450 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$464  = \$auto$builder.cc:364:Unop$462 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$476  = \$auto$builder.cc:364:Unop$474 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$488  = \$auto$builder.cc:364:Unop$486 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$500  = \$auto$builder.cc:364:Unop$498 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$512  = \$auto$builder.cc:364:Unop$510 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$524  = \$auto$builder.cc:364:Unop$522 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$536  = \$auto$builder.cc:364:Unop$534 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$548  = \$auto$builder.cc:364:Unop$546 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$560  = \$auto$builder.cc:364:Unop$558 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$572  = \$auto$builder.cc:364:Unop$570 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$584  = \$auto$builder.cc:364:Unop$582 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$596  = \$auto$builder.cc:364:Unop$594 ;
  assign \$auto$rtlil.cc:2747:LogicNot$602  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$608  = \$auto$builder.cc:338:Biop$606 ;
endmodule

/* src = "../ihp13/tc_sram_impl.sv:73.8" */
module \tc_sram_impl$croc_chip.i_croc_soc.i_croc.gen_sram_bank[1].i_sram (clk_i, rst_ni, req_i, impl_i, we_i, addr_i, wdata_i, be_i, rdata_o, impl_o);
  wire \$auto$builder.cc:338:Biop$1001 ;
  wire \$auto$builder.cc:338:Biop$1015 ;
  wire \$auto$builder.cc:338:Biop$627 ;
  wire \$auto$builder.cc:338:Biop$629 ;
  wire \$auto$builder.cc:338:Biop$639 ;
  wire \$auto$builder.cc:338:Biop$641 ;
  wire \$auto$builder.cc:338:Biop$651 ;
  wire \$auto$builder.cc:338:Biop$653 ;
  wire \$auto$builder.cc:338:Biop$663 ;
  wire \$auto$builder.cc:338:Biop$665 ;
  wire \$auto$builder.cc:338:Biop$675 ;
  wire \$auto$builder.cc:338:Biop$677 ;
  wire \$auto$builder.cc:338:Biop$687 ;
  wire \$auto$builder.cc:338:Biop$689 ;
  wire \$auto$builder.cc:338:Biop$699 ;
  wire \$auto$builder.cc:338:Biop$701 ;
  wire \$auto$builder.cc:338:Biop$711 ;
  wire \$auto$builder.cc:338:Biop$713 ;
  wire \$auto$builder.cc:338:Biop$723 ;
  wire \$auto$builder.cc:338:Biop$725 ;
  wire \$auto$builder.cc:338:Biop$735 ;
  wire \$auto$builder.cc:338:Biop$737 ;
  wire \$auto$builder.cc:338:Biop$747 ;
  wire \$auto$builder.cc:338:Biop$749 ;
  wire \$auto$builder.cc:338:Biop$759 ;
  wire \$auto$builder.cc:338:Biop$761 ;
  wire \$auto$builder.cc:338:Biop$771 ;
  wire \$auto$builder.cc:338:Biop$773 ;
  wire \$auto$builder.cc:338:Biop$783 ;
  wire \$auto$builder.cc:338:Biop$785 ;
  wire \$auto$builder.cc:338:Biop$795 ;
  wire \$auto$builder.cc:338:Biop$797 ;
  wire \$auto$builder.cc:338:Biop$807 ;
  wire \$auto$builder.cc:338:Biop$809 ;
  wire \$auto$builder.cc:338:Biop$819 ;
  wire \$auto$builder.cc:338:Biop$821 ;
  wire \$auto$builder.cc:338:Biop$831 ;
  wire \$auto$builder.cc:338:Biop$833 ;
  wire \$auto$builder.cc:338:Biop$843 ;
  wire \$auto$builder.cc:338:Biop$845 ;
  wire \$auto$builder.cc:338:Biop$855 ;
  wire \$auto$builder.cc:338:Biop$857 ;
  wire \$auto$builder.cc:338:Biop$867 ;
  wire \$auto$builder.cc:338:Biop$869 ;
  wire \$auto$builder.cc:338:Biop$879 ;
  wire \$auto$builder.cc:338:Biop$881 ;
  wire \$auto$builder.cc:338:Biop$891 ;
  wire \$auto$builder.cc:338:Biop$893 ;
  wire \$auto$builder.cc:338:Biop$903 ;
  wire \$auto$builder.cc:338:Biop$905 ;
  wire \$auto$builder.cc:338:Biop$915 ;
  wire \$auto$builder.cc:338:Biop$917 ;
  wire \$auto$builder.cc:338:Biop$927 ;
  wire \$auto$builder.cc:338:Biop$929 ;
  wire \$auto$builder.cc:338:Biop$939 ;
  wire \$auto$builder.cc:338:Biop$941 ;
  wire \$auto$builder.cc:338:Biop$951 ;
  wire \$auto$builder.cc:338:Biop$953 ;
  wire \$auto$builder.cc:338:Biop$963 ;
  wire \$auto$builder.cc:338:Biop$965 ;
  wire \$auto$builder.cc:338:Biop$975 ;
  wire \$auto$builder.cc:338:Biop$977 ;
  wire \$auto$builder.cc:338:Biop$987 ;
  wire \$auto$builder.cc:338:Biop$989 ;
  wire \$auto$builder.cc:338:Biop$999 ;
  wire \$auto$builder.cc:364:Unop$1003 ;
  wire \$auto$builder.cc:364:Unop$1013 ;
  wire \$auto$builder.cc:364:Unop$1020 ;
  wire \$auto$builder.cc:364:Unop$625 ;
  wire \$auto$builder.cc:364:Unop$631 ;
  wire \$auto$builder.cc:364:Unop$637 ;
  wire \$auto$builder.cc:364:Unop$643 ;
  wire \$auto$builder.cc:364:Unop$649 ;
  wire \$auto$builder.cc:364:Unop$655 ;
  wire \$auto$builder.cc:364:Unop$661 ;
  wire \$auto$builder.cc:364:Unop$667 ;
  wire \$auto$builder.cc:364:Unop$673 ;
  wire \$auto$builder.cc:364:Unop$679 ;
  wire \$auto$builder.cc:364:Unop$685 ;
  wire \$auto$builder.cc:364:Unop$691 ;
  wire \$auto$builder.cc:364:Unop$697 ;
  wire \$auto$builder.cc:364:Unop$703 ;
  wire \$auto$builder.cc:364:Unop$709 ;
  wire \$auto$builder.cc:364:Unop$715 ;
  wire \$auto$builder.cc:364:Unop$721 ;
  wire \$auto$builder.cc:364:Unop$727 ;
  wire \$auto$builder.cc:364:Unop$733 ;
  wire \$auto$builder.cc:364:Unop$739 ;
  wire \$auto$builder.cc:364:Unop$745 ;
  wire \$auto$builder.cc:364:Unop$751 ;
  wire \$auto$builder.cc:364:Unop$757 ;
  wire \$auto$builder.cc:364:Unop$763 ;
  wire \$auto$builder.cc:364:Unop$769 ;
  wire \$auto$builder.cc:364:Unop$775 ;
  wire \$auto$builder.cc:364:Unop$781 ;
  wire \$auto$builder.cc:364:Unop$787 ;
  wire \$auto$builder.cc:364:Unop$793 ;
  wire \$auto$builder.cc:364:Unop$799 ;
  wire \$auto$builder.cc:364:Unop$805 ;
  wire \$auto$builder.cc:364:Unop$811 ;
  wire \$auto$builder.cc:364:Unop$817 ;
  wire \$auto$builder.cc:364:Unop$823 ;
  wire \$auto$builder.cc:364:Unop$829 ;
  wire \$auto$builder.cc:364:Unop$835 ;
  wire \$auto$builder.cc:364:Unop$841 ;
  wire \$auto$builder.cc:364:Unop$847 ;
  wire \$auto$builder.cc:364:Unop$853 ;
  wire \$auto$builder.cc:364:Unop$859 ;
  wire \$auto$builder.cc:364:Unop$865 ;
  wire \$auto$builder.cc:364:Unop$871 ;
  wire \$auto$builder.cc:364:Unop$877 ;
  wire \$auto$builder.cc:364:Unop$883 ;
  wire \$auto$builder.cc:364:Unop$889 ;
  wire \$auto$builder.cc:364:Unop$895 ;
  wire \$auto$builder.cc:364:Unop$901 ;
  wire \$auto$builder.cc:364:Unop$907 ;
  wire \$auto$builder.cc:364:Unop$913 ;
  wire \$auto$builder.cc:364:Unop$919 ;
  wire \$auto$builder.cc:364:Unop$925 ;
  wire \$auto$builder.cc:364:Unop$931 ;
  wire \$auto$builder.cc:364:Unop$937 ;
  wire \$auto$builder.cc:364:Unop$943 ;
  wire \$auto$builder.cc:364:Unop$949 ;
  wire \$auto$builder.cc:364:Unop$955 ;
  wire \$auto$builder.cc:364:Unop$961 ;
  wire \$auto$builder.cc:364:Unop$967 ;
  wire \$auto$builder.cc:364:Unop$973 ;
  wire \$auto$builder.cc:364:Unop$979 ;
  wire \$auto$builder.cc:364:Unop$985 ;
  wire \$auto$builder.cc:364:Unop$991 ;
  wire \$auto$builder.cc:364:Unop$997 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1005 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$1017 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$633 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$645 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$657 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$669 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$681 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$693 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$705 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$717 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$729 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$741 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$753 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$765 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$777 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$789 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$801 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$813 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$825 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$837 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$849 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$861 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$873 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$885 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$897 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$909 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$921 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$933 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$945 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$957 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$969 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$981 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$993 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1009 ;
  wire \$auto$rtlil.cc:2747:LogicNot$1011 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1311:handle$break$622 ;
  /* \$nonstatic  = 32'd1 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$623 ;
  /* \$nonstatic  = 32'd2 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$635 ;
  /* \$nonstatic  = 32'd3 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$647 ;
  /* \$nonstatic  = 32'd4 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$659 ;
  /* \$nonstatic  = 32'd5 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$671 ;
  /* \$nonstatic  = 32'd6 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$683 ;
  /* \$nonstatic  = 32'd7 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$695 ;
  /* \$nonstatic  = 32'd8 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$707 ;
  /* \$nonstatic  = 32'd9 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$719 ;
  /* \$nonstatic  = 32'd10 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$731 ;
  /* \$nonstatic  = 32'd11 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$743 ;
  /* \$nonstatic  = 32'd12 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$755 ;
  /* \$nonstatic  = 32'd13 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$767 ;
  /* \$nonstatic  = 32'd14 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$779 ;
  /* \$nonstatic  = 32'd15 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$791 ;
  /* \$nonstatic  = 32'd16 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$803 ;
  /* \$nonstatic  = 32'd17 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$815 ;
  /* \$nonstatic  = 32'd18 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$827 ;
  /* \$nonstatic  = 32'd19 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$839 ;
  /* \$nonstatic  = 32'd20 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$851 ;
  /* \$nonstatic  = 32'd21 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$863 ;
  /* \$nonstatic  = 32'd22 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$875 ;
  /* \$nonstatic  = 32'd23 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$887 ;
  /* \$nonstatic  = 32'd24 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$899 ;
  /* \$nonstatic  = 32'd25 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$911 ;
  /* \$nonstatic  = 32'd26 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$923 ;
  /* \$nonstatic  = 32'd27 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$935 ;
  /* \$nonstatic  = 32'd28 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$947 ;
  /* \$nonstatic  = 32'd29 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$959 ;
  /* \$nonstatic  = 32'd30 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$971 ;
  /* \$nonstatic  = 32'd31 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$983 ;
  /* \$nonstatic  = 32'd32 */
  wire \$auto$slang_frontend.cc:1484:push_frame$disable$995 ;
  /* \$nonstatic  = 32'd1 */
  wire [31:0] \$auto$slang_frontend.cc:1507:create_local$local$621 ;
  /* src = "../ihp13/tc_sram_impl.sv:248.12-248.46" */
  wire \$auto$slang_frontend.cc:694:finish$\gen_512x32xBx1.sel_q$1018 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[0]$634 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[10]$754 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[11]$766 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[12]$778 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[13]$790 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[14]$802 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[15]$814 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[16]$826 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[17]$838 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[18]$850 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[19]$862 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[1]$646 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[20]$874 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[21]$886 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[22]$898 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[23]$910 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[24]$922 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[25]$934 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[26]$946 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[27]$958 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[28]$970 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[29]$982 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[2]$658 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[30]$994 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[31]$1006 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[3]$670 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[4]$682 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[5]$694 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[6]$706 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[7]$718 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[8]$730 ;
  /* src = "../ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$auto$slang_frontend.cc:694:finish$\rdata_o[9]$742 ;
  wire \$procmux$15390_Y ;
  wire \$procmux$15391_CMP ;
  wire \$procmux$15393_Y ;
  wire \$procmux$15394_CMP ;
  wire \$procmux$15427_Y ;
  wire \$procmux$15428_CMP ;
  wire \$procmux$15460_Y ;
  wire \$procmux$15461_CMP ;
  wire \$procmux$15492_Y ;
  wire \$procmux$15493_CMP ;
  wire \$procmux$15523_Y ;
  wire \$procmux$15524_CMP ;
  wire \$procmux$15553_Y ;
  wire \$procmux$15554_CMP ;
  wire \$procmux$15582_Y ;
  wire \$procmux$15583_CMP ;
  wire \$procmux$15610_Y ;
  wire \$procmux$15611_CMP ;
  wire \$procmux$15637_Y ;
  wire \$procmux$15638_CMP ;
  wire \$procmux$15663_Y ;
  wire \$procmux$15664_CMP ;
  wire \$procmux$15688_Y ;
  wire \$procmux$15689_CMP ;
  wire \$procmux$15712_Y ;
  wire \$procmux$15713_CMP ;
  wire \$procmux$15735_Y ;
  wire \$procmux$15736_CMP ;
  wire \$procmux$15757_Y ;
  wire \$procmux$15758_CMP ;
  wire \$procmux$15778_Y ;
  wire \$procmux$15779_CMP ;
  wire \$procmux$15798_Y ;
  wire \$procmux$15799_CMP ;
  wire \$procmux$15817_Y ;
  wire \$procmux$15818_CMP ;
  wire \$procmux$15835_Y ;
  wire \$procmux$15836_CMP ;
  wire \$procmux$15852_Y ;
  wire \$procmux$15853_CMP ;
  wire \$procmux$15868_Y ;
  wire \$procmux$15869_CMP ;
  wire \$procmux$15883_Y ;
  wire \$procmux$15884_CMP ;
  wire \$procmux$15897_Y ;
  wire \$procmux$15898_CMP ;
  wire \$procmux$15910_Y ;
  wire \$procmux$15911_CMP ;
  wire \$procmux$15922_Y ;
  wire \$procmux$15923_CMP ;
  wire \$procmux$15933_Y ;
  wire \$procmux$15934_CMP ;
  wire \$procmux$15943_Y ;
  wire \$procmux$15944_CMP ;
  wire \$procmux$15952_Y ;
  wire \$procmux$15953_CMP ;
  wire \$procmux$15960_Y ;
  wire \$procmux$15961_CMP ;
  wire \$procmux$15967_Y ;
  wire \$procmux$15968_CMP ;
  wire \$procmux$15973_Y ;
  wire \$procmux$15974_CMP ;
  wire \$procmux$15978_Y ;
  wire \$procmux$15979_CMP ;
  wire \$procmux$15982_Y ;
  wire \$procmux$15983_CMP ;
  /* src = "../ihp13/tc_sram_impl.sv:100.32" */
  input [8:0] addr_i;
  wire [8:0] addr_i;
  /* src = "../ihp13/tc_sram_impl.sv:102.32" */
  input [3:0] be_i;
  wire [3:0] be_i;
  /* src = "../ihp13/tc_sram_impl.sv:110.25" */
  wire [31:0] bm;
  /* src = "../ihp13/tc_sram_impl.sv:92.32" */
  input clk_i;
  wire clk_i;
  /* src = "../ihp13/tc_sram_impl.sv:223.36" */
  wire [63:0] \gen_512x32xBx1.bm64 ;
  /* src = "../ihp13/tc_sram_impl.sv:223.27" */
  wire [63:0] \gen_512x32xBx1.rdata64 ;
  /* src = "../ihp13/tc_sram_impl.sv:224.11" */
  wire \gen_512x32xBx1.sel_d ;
  /* src = "../ihp13/tc_sram_impl.sv:224.18" */
  wire \gen_512x32xBx1.sel_q ;
  /* src = "../ihp13/tc_sram_impl.sv:223.18" */
  wire [63:0] \gen_512x32xBx1.wdata64 ;
  /* src = "../ihp13/tc_sram_impl.sv:95.32" */
  input impl_i;
  wire impl_i;
  /* src = "../ihp13/tc_sram_impl.sv:96.32" */
  output impl_o;
  wire impl_o;
  /* src = "../ihp13/tc_sram_impl.sv:104.32" */
  output [31:0] rdata_o;
  wire [31:0] rdata_o;
  /* src = "../ihp13/tc_sram_impl.sv:98.32" */
  input req_i;
  wire req_i;
  /* src = "../ihp13/tc_sram_impl.sv:93.32" */
  input rst_ni;
  wire rst_ni;
  /* src = "../ihp13/tc_sram_impl.sv:101.32" */
  input [31:0] wdata_i;
  wire [31:0] wdata_i;
  /* src = "../ihp13/tc_sram_impl.sv:99.32" */
  input we_i;
  wire we_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$1008  (
    .A(rst_ni),
    .Y(\$auto$rtlil.cc:2747:LogicNot$1009 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1000  (
    .A(bm[31]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$1001 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$1014  (
    .A(req_i),
    .B(\$auto$builder.cc:364:Unop$1013 ),
    .Y(\$auto$builder.cc:338:Biop$1015 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$626  (
    .A(bm[0]),
    .B(\$auto$builder.cc:364:Unop$625 ),
    .Y(\$auto$builder.cc:338:Biop$627 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$628  (
    .A(bm[0]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$629 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$638  (
    .A(bm[1]),
    .B(\$auto$builder.cc:364:Unop$637 ),
    .Y(\$auto$builder.cc:338:Biop$639 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$640  (
    .A(bm[1]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$641 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$650  (
    .A(bm[2]),
    .B(\$auto$builder.cc:364:Unop$649 ),
    .Y(\$auto$builder.cc:338:Biop$651 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$652  (
    .A(bm[2]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$653 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$662  (
    .A(bm[3]),
    .B(\$auto$builder.cc:364:Unop$661 ),
    .Y(\$auto$builder.cc:338:Biop$663 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$664  (
    .A(bm[3]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$665 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$674  (
    .A(bm[4]),
    .B(\$auto$builder.cc:364:Unop$673 ),
    .Y(\$auto$builder.cc:338:Biop$675 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$676  (
    .A(bm[4]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$677 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$686  (
    .A(bm[5]),
    .B(\$auto$builder.cc:364:Unop$685 ),
    .Y(\$auto$builder.cc:338:Biop$687 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$688  (
    .A(bm[5]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$689 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$698  (
    .A(bm[6]),
    .B(\$auto$builder.cc:364:Unop$697 ),
    .Y(\$auto$builder.cc:338:Biop$699 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$700  (
    .A(bm[6]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$701 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$710  (
    .A(bm[7]),
    .B(\$auto$builder.cc:364:Unop$709 ),
    .Y(\$auto$builder.cc:338:Biop$711 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$712  (
    .A(bm[7]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$713 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$722  (
    .A(bm[8]),
    .B(\$auto$builder.cc:364:Unop$721 ),
    .Y(\$auto$builder.cc:338:Biop$723 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$724  (
    .A(bm[8]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$725 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$734  (
    .A(bm[9]),
    .B(\$auto$builder.cc:364:Unop$733 ),
    .Y(\$auto$builder.cc:338:Biop$735 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$736  (
    .A(bm[9]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$737 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$746  (
    .A(bm[10]),
    .B(\$auto$builder.cc:364:Unop$745 ),
    .Y(\$auto$builder.cc:338:Biop$747 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$748  (
    .A(bm[10]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$749 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$758  (
    .A(bm[11]),
    .B(\$auto$builder.cc:364:Unop$757 ),
    .Y(\$auto$builder.cc:338:Biop$759 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$760  (
    .A(bm[11]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$761 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$770  (
    .A(bm[12]),
    .B(\$auto$builder.cc:364:Unop$769 ),
    .Y(\$auto$builder.cc:338:Biop$771 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$772  (
    .A(bm[12]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$773 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$782  (
    .A(bm[13]),
    .B(\$auto$builder.cc:364:Unop$781 ),
    .Y(\$auto$builder.cc:338:Biop$783 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$784  (
    .A(bm[13]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$785 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$794  (
    .A(bm[14]),
    .B(\$auto$builder.cc:364:Unop$793 ),
    .Y(\$auto$builder.cc:338:Biop$795 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$796  (
    .A(bm[14]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$797 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$806  (
    .A(bm[15]),
    .B(\$auto$builder.cc:364:Unop$805 ),
    .Y(\$auto$builder.cc:338:Biop$807 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$808  (
    .A(bm[15]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$809 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$818  (
    .A(bm[16]),
    .B(\$auto$builder.cc:364:Unop$817 ),
    .Y(\$auto$builder.cc:338:Biop$819 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$820  (
    .A(bm[16]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$821 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$830  (
    .A(bm[17]),
    .B(\$auto$builder.cc:364:Unop$829 ),
    .Y(\$auto$builder.cc:338:Biop$831 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$832  (
    .A(bm[17]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$833 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$842  (
    .A(bm[18]),
    .B(\$auto$builder.cc:364:Unop$841 ),
    .Y(\$auto$builder.cc:338:Biop$843 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$844  (
    .A(bm[18]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$845 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$854  (
    .A(bm[19]),
    .B(\$auto$builder.cc:364:Unop$853 ),
    .Y(\$auto$builder.cc:338:Biop$855 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$856  (
    .A(bm[19]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$857 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$866  (
    .A(bm[20]),
    .B(\$auto$builder.cc:364:Unop$865 ),
    .Y(\$auto$builder.cc:338:Biop$867 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$868  (
    .A(bm[20]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$869 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$878  (
    .A(bm[21]),
    .B(\$auto$builder.cc:364:Unop$877 ),
    .Y(\$auto$builder.cc:338:Biop$879 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$880  (
    .A(bm[21]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$881 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$890  (
    .A(bm[22]),
    .B(\$auto$builder.cc:364:Unop$889 ),
    .Y(\$auto$builder.cc:338:Biop$891 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$892  (
    .A(bm[22]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$893 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$902  (
    .A(bm[23]),
    .B(\$auto$builder.cc:364:Unop$901 ),
    .Y(\$auto$builder.cc:338:Biop$903 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$904  (
    .A(bm[23]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$905 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$914  (
    .A(bm[24]),
    .B(\$auto$builder.cc:364:Unop$913 ),
    .Y(\$auto$builder.cc:338:Biop$915 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$916  (
    .A(bm[24]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$917 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$926  (
    .A(bm[25]),
    .B(\$auto$builder.cc:364:Unop$925 ),
    .Y(\$auto$builder.cc:338:Biop$927 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$928  (
    .A(bm[25]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$929 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$938  (
    .A(bm[26]),
    .B(\$auto$builder.cc:364:Unop$937 ),
    .Y(\$auto$builder.cc:338:Biop$939 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$940  (
    .A(bm[26]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$941 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$950  (
    .A(bm[27]),
    .B(\$auto$builder.cc:364:Unop$949 ),
    .Y(\$auto$builder.cc:338:Biop$951 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$952  (
    .A(bm[27]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$953 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$962  (
    .A(bm[28]),
    .B(\$auto$builder.cc:364:Unop$961 ),
    .Y(\$auto$builder.cc:338:Biop$963 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$964  (
    .A(bm[28]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$965 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$974  (
    .A(bm[29]),
    .B(\$auto$builder.cc:364:Unop$973 ),
    .Y(\$auto$builder.cc:338:Biop$975 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$976  (
    .A(bm[29]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$977 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$986  (
    .A(bm[30]),
    .B(\$auto$builder.cc:364:Unop$985 ),
    .Y(\$auto$builder.cc:338:Biop$987 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$988  (
    .A(bm[30]),
    .B(addr_i[0]),
    .Y(\$auto$builder.cc:338:Biop$989 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$998  (
    .A(bm[31]),
    .B(\$auto$builder.cc:364:Unop$997 ),
    .Y(\$auto$builder.cc:338:Biop$999 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1002  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$1003 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1012  (
    .A(we_i),
    .Y(\$auto$builder.cc:364:Unop$1013 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$1019  (
    .A(we_i),
    .Y(\$auto$builder.cc:364:Unop$1020 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$624  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$625 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$630  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$631 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$636  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$637 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$642  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$643 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$648  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$649 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$654  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$655 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$660  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$661 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$666  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$667 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$672  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$673 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$678  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$679 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$684  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$685 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$690  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$691 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$696  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$697 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$702  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$703 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$708  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$709 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$714  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$715 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$720  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$721 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$726  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$727 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$732  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$733 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$738  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$739 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$744  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$745 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$750  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$751 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$756  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$757 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$762  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$763 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$768  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$769 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$774  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$775 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$780  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$781 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$786  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$787 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$792  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$793 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$798  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$799 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$804  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$805 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$810  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$811 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$816  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$817 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$822  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$823 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$828  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$829 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$834  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$835 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$840  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$841 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$846  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$847 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$852  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$853 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$858  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$859 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$864  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$865 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$870  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$871 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$876  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$877 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$882  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$883 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$888  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$889 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$894  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$895 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$900  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$901 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$906  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$907 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$912  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$913 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$918  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$919 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$924  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$925 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$930  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$931 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$936  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$937 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$942  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$943 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$948  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$949 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$954  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$955 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$960  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$961 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$966  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$967 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$972  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$973 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$978  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$979 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$984  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$985 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$990  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$auto$builder.cc:364:Unop$991 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$996  (
    .A(addr_i[0]),
    .Y(\$auto$builder.cc:364:Unop$997 )
  );
  /* src = "../ihp13/tc_sram_impl.sv:246.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_512x32xBx1.sel_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$auto$slang_frontend.cc:694:finish$\gen_512x32xBx1.sel_q$1018 ),
    .Q(\gen_512x32xBx1.sel_q )
  );
  /* src = "../ihp13/tc_sram_impl.sv:248.31-248.46|../ihp13/tc_sram_impl.sv:248.12-248.46" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15390  (
    .A(\gen_512x32xBx1.sel_q ),
    .B(addr_i[0]),
    .S(\$procmux$15391_CMP ),
    .Y(\$procmux$15390_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15393  (
    .A(\gen_512x32xBx1.rdata64 [62]),
    .B(\gen_512x32xBx1.rdata64 [63]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15393_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15427  (
    .A(\gen_512x32xBx1.rdata64 [60]),
    .B(\gen_512x32xBx1.rdata64 [61]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15427_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15460  (
    .A(\gen_512x32xBx1.rdata64 [58]),
    .B(\gen_512x32xBx1.rdata64 [59]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15460_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15492  (
    .A(\gen_512x32xBx1.rdata64 [56]),
    .B(\gen_512x32xBx1.rdata64 [57]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15492_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15523  (
    .A(\gen_512x32xBx1.rdata64 [54]),
    .B(\gen_512x32xBx1.rdata64 [55]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15523_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15553  (
    .A(\gen_512x32xBx1.rdata64 [52]),
    .B(\gen_512x32xBx1.rdata64 [53]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15553_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15582  (
    .A(\gen_512x32xBx1.rdata64 [50]),
    .B(\gen_512x32xBx1.rdata64 [51]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15582_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15610  (
    .A(\gen_512x32xBx1.rdata64 [48]),
    .B(\gen_512x32xBx1.rdata64 [49]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15610_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15637  (
    .A(\gen_512x32xBx1.rdata64 [46]),
    .B(\gen_512x32xBx1.rdata64 [47]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15637_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15663  (
    .A(\gen_512x32xBx1.rdata64 [44]),
    .B(\gen_512x32xBx1.rdata64 [45]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15663_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15688  (
    .A(\gen_512x32xBx1.rdata64 [42]),
    .B(\gen_512x32xBx1.rdata64 [43]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15688_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15712  (
    .A(\gen_512x32xBx1.rdata64 [40]),
    .B(\gen_512x32xBx1.rdata64 [41]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15712_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15735  (
    .A(\gen_512x32xBx1.rdata64 [38]),
    .B(\gen_512x32xBx1.rdata64 [39]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15735_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15757  (
    .A(\gen_512x32xBx1.rdata64 [36]),
    .B(\gen_512x32xBx1.rdata64 [37]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15757_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15778  (
    .A(\gen_512x32xBx1.rdata64 [34]),
    .B(\gen_512x32xBx1.rdata64 [35]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15778_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15798  (
    .A(\gen_512x32xBx1.rdata64 [32]),
    .B(\gen_512x32xBx1.rdata64 [33]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15798_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15817  (
    .A(\gen_512x32xBx1.rdata64 [30]),
    .B(\gen_512x32xBx1.rdata64 [31]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15817_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15835  (
    .A(\gen_512x32xBx1.rdata64 [28]),
    .B(\gen_512x32xBx1.rdata64 [29]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15835_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15852  (
    .A(\gen_512x32xBx1.rdata64 [26]),
    .B(\gen_512x32xBx1.rdata64 [27]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15852_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15868  (
    .A(\gen_512x32xBx1.rdata64 [24]),
    .B(\gen_512x32xBx1.rdata64 [25]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15868_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15883  (
    .A(\gen_512x32xBx1.rdata64 [22]),
    .B(\gen_512x32xBx1.rdata64 [23]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15883_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15897  (
    .A(\gen_512x32xBx1.rdata64 [20]),
    .B(\gen_512x32xBx1.rdata64 [21]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15897_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15910  (
    .A(\gen_512x32xBx1.rdata64 [18]),
    .B(\gen_512x32xBx1.rdata64 [19]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15910_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15922  (
    .A(\gen_512x32xBx1.rdata64 [16]),
    .B(\gen_512x32xBx1.rdata64 [17]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15922_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15933  (
    .A(\gen_512x32xBx1.rdata64 [14]),
    .B(\gen_512x32xBx1.rdata64 [15]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15933_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15943  (
    .A(\gen_512x32xBx1.rdata64 [12]),
    .B(\gen_512x32xBx1.rdata64 [13]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15943_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15952  (
    .A(\gen_512x32xBx1.rdata64 [10]),
    .B(\gen_512x32xBx1.rdata64 [11]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15952_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15960  (
    .A(\gen_512x32xBx1.rdata64 [8]),
    .B(\gen_512x32xBx1.rdata64 [9]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15960_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15967  (
    .A(\gen_512x32xBx1.rdata64 [6]),
    .B(\gen_512x32xBx1.rdata64 [7]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15967_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15973  (
    .A(\gen_512x32xBx1.rdata64 [4]),
    .B(\gen_512x32xBx1.rdata64 [5]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15973_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15978  (
    .A(\gen_512x32xBx1.rdata64 [2]),
    .B(\gen_512x32xBx1.rdata64 [3]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15978_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../ihp13/tc_sram_impl.sv:236.13-236.42|../ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15982  (
    .A(\gen_512x32xBx1.rdata64 [0]),
    .B(\gen_512x32xBx1.rdata64 [1]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$15982_Y )
  );
  /* src = "../ihp13/tc_sram_impl.sv:251.37" */
  RM_IHPSG13_1P_256x64_c2_bm_bist \gen_512x32xBx1.i_cut  (
    .A_ADDR(addr_i[8:1]),
    .A_BIST_ADDR(8'h00),
    .A_BIST_BM(64'h0000000000000000),
    .A_BIST_CLK(1'h0),
    .A_BIST_DIN(64'h0000000000000000),
    .A_BIST_EN(1'h0),
    .A_BIST_MEN(1'h0),
    .A_BIST_REN(1'h0),
    .A_BIST_WEN(1'h0),
    .A_BM(\gen_512x32xBx1.bm64 ),
    .A_CLK(clk_i),
    .A_DIN(\gen_512x32xBx1.wdata64 ),
    .A_DLY(impl_i),
    .A_DOUT(\gen_512x32xBx1.rdata64 ),
    .A_MEN(req_i),
    .A_REN(\$auto$builder.cc:364:Unop$1020 ),
    .A_WEN(we_i)
  );
  assign bm[0] = be_i[0];
  assign bm[1] = be_i[0];
  assign bm[2] = be_i[0];
  assign bm[3] = be_i[0];
  assign bm[4] = be_i[0];
  assign bm[5] = be_i[0];
  assign bm[6] = be_i[0];
  assign bm[7] = be_i[0];
  assign bm[8] = be_i[1];
  assign bm[9] = be_i[1];
  assign bm[10] = be_i[1];
  assign bm[11] = be_i[1];
  assign bm[12] = be_i[1];
  assign bm[13] = be_i[1];
  assign bm[14] = be_i[1];
  assign bm[15] = be_i[1];
  assign bm[16] = be_i[2];
  assign bm[17] = be_i[2];
  assign bm[18] = be_i[2];
  assign bm[19] = be_i[2];
  assign bm[20] = be_i[2];
  assign bm[21] = be_i[2];
  assign bm[22] = be_i[2];
  assign bm[23] = be_i[2];
  assign bm[24] = be_i[3];
  assign bm[25] = be_i[3];
  assign bm[26] = be_i[3];
  assign bm[27] = be_i[3];
  assign bm[28] = be_i[3];
  assign bm[29] = be_i[3];
  assign bm[30] = be_i[3];
  assign bm[31] = be_i[3];
  assign impl_o = 1'hx;
  assign rdata_o = { \$auto$slang_frontend.cc:694:finish$\rdata_o[31]$1006 , \$auto$slang_frontend.cc:694:finish$\rdata_o[30]$994 , \$auto$slang_frontend.cc:694:finish$\rdata_o[29]$982 , \$auto$slang_frontend.cc:694:finish$\rdata_o[28]$970 , \$auto$slang_frontend.cc:694:finish$\rdata_o[27]$958 , \$auto$slang_frontend.cc:694:finish$\rdata_o[26]$946 , \$auto$slang_frontend.cc:694:finish$\rdata_o[25]$934 , \$auto$slang_frontend.cc:694:finish$\rdata_o[24]$922 , \$auto$slang_frontend.cc:694:finish$\rdata_o[23]$910 , \$auto$slang_frontend.cc:694:finish$\rdata_o[22]$898 , \$auto$slang_frontend.cc:694:finish$\rdata_o[21]$886 , \$auto$slang_frontend.cc:694:finish$\rdata_o[20]$874 , \$auto$slang_frontend.cc:694:finish$\rdata_o[19]$862 , \$auto$slang_frontend.cc:694:finish$\rdata_o[18]$850 , \$auto$slang_frontend.cc:694:finish$\rdata_o[17]$838 , \$auto$slang_frontend.cc:694:finish$\rdata_o[16]$826 , \$auto$slang_frontend.cc:694:finish$\rdata_o[15]$814 , \$auto$slang_frontend.cc:694:finish$\rdata_o[14]$802 , \$auto$slang_frontend.cc:694:finish$\rdata_o[13]$790 , \$auto$slang_frontend.cc:694:finish$\rdata_o[12]$778 , \$auto$slang_frontend.cc:694:finish$\rdata_o[11]$766 , \$auto$slang_frontend.cc:694:finish$\rdata_o[10]$754 , \$auto$slang_frontend.cc:694:finish$\rdata_o[9]$742 , \$auto$slang_frontend.cc:694:finish$\rdata_o[8]$730 , \$auto$slang_frontend.cc:694:finish$\rdata_o[7]$718 , \$auto$slang_frontend.cc:694:finish$\rdata_o[6]$706 , \$auto$slang_frontend.cc:694:finish$\rdata_o[5]$694 , \$auto$slang_frontend.cc:694:finish$\rdata_o[4]$682 , \$auto$slang_frontend.cc:694:finish$\rdata_o[3]$670 , \$auto$slang_frontend.cc:694:finish$\rdata_o[2]$658 , \$auto$slang_frontend.cc:694:finish$\rdata_o[1]$646 , \$auto$slang_frontend.cc:694:finish$\rdata_o[0]$634  };
  assign \gen_512x32xBx1.wdata64  = { wdata_i[31], wdata_i[31:30], wdata_i[30:29], wdata_i[29:28], wdata_i[28:27], wdata_i[27:26], wdata_i[26:25], wdata_i[25:24], wdata_i[24:23], wdata_i[23:22], wdata_i[22:21], wdata_i[21:20], wdata_i[20:19], wdata_i[19:18], wdata_i[18:17], wdata_i[17:16], wdata_i[16:15], wdata_i[15:14], wdata_i[14:13], wdata_i[13:12], wdata_i[12:11], wdata_i[11:10], wdata_i[10:9], wdata_i[9:8], wdata_i[8:7], wdata_i[7:6], wdata_i[6:5], wdata_i[5:4], wdata_i[4:3], wdata_i[3:2], wdata_i[2:1], wdata_i[1:0], wdata_i[0] };
  assign \gen_512x32xBx1.bm64  = { \$auto$builder.cc:338:Biop$1001 , \$auto$builder.cc:338:Biop$999 , \$auto$builder.cc:338:Biop$989 , \$auto$builder.cc:338:Biop$987 , \$auto$builder.cc:338:Biop$977 , \$auto$builder.cc:338:Biop$975 , \$auto$builder.cc:338:Biop$965 , \$auto$builder.cc:338:Biop$963 , \$auto$builder.cc:338:Biop$953 , \$auto$builder.cc:338:Biop$951 , \$auto$builder.cc:338:Biop$941 , \$auto$builder.cc:338:Biop$939 , \$auto$builder.cc:338:Biop$929 , \$auto$builder.cc:338:Biop$927 , \$auto$builder.cc:338:Biop$917 , \$auto$builder.cc:338:Biop$915 , \$auto$builder.cc:338:Biop$905 , \$auto$builder.cc:338:Biop$903 , \$auto$builder.cc:338:Biop$893 , \$auto$builder.cc:338:Biop$891 , \$auto$builder.cc:338:Biop$881 , \$auto$builder.cc:338:Biop$879 , \$auto$builder.cc:338:Biop$869 , \$auto$builder.cc:338:Biop$867 , \$auto$builder.cc:338:Biop$857 , \$auto$builder.cc:338:Biop$855 , \$auto$builder.cc:338:Biop$845 , \$auto$builder.cc:338:Biop$843 , \$auto$builder.cc:338:Biop$833 , \$auto$builder.cc:338:Biop$831 , \$auto$builder.cc:338:Biop$821 , \$auto$builder.cc:338:Biop$819 , \$auto$builder.cc:338:Biop$809 , \$auto$builder.cc:338:Biop$807 , \$auto$builder.cc:338:Biop$797 , \$auto$builder.cc:338:Biop$795 , \$auto$builder.cc:338:Biop$785 , \$auto$builder.cc:338:Biop$783 , \$auto$builder.cc:338:Biop$773 , \$auto$builder.cc:338:Biop$771 , \$auto$builder.cc:338:Biop$761 , \$auto$builder.cc:338:Biop$759 , \$auto$builder.cc:338:Biop$749 , \$auto$builder.cc:338:Biop$747 , \$auto$builder.cc:338:Biop$737 , \$auto$builder.cc:338:Biop$735 , \$auto$builder.cc:338:Biop$725 , \$auto$builder.cc:338:Biop$723 , \$auto$builder.cc:338:Biop$713 , \$auto$builder.cc:338:Biop$711 , \$auto$builder.cc:338:Biop$701 , \$auto$builder.cc:338:Biop$699 , \$auto$builder.cc:338:Biop$689 , \$auto$builder.cc:338:Biop$687 , \$auto$builder.cc:338:Biop$677 , \$auto$builder.cc:338:Biop$675 , \$auto$builder.cc:338:Biop$665 , \$auto$builder.cc:338:Biop$663 , \$auto$builder.cc:338:Biop$653 , \$auto$builder.cc:338:Biop$651 , \$auto$builder.cc:338:Biop$641 , \$auto$builder.cc:338:Biop$639 , \$auto$builder.cc:338:Biop$629 , \$auto$builder.cc:338:Biop$627  };
  assign \gen_512x32xBx1.sel_d  = addr_i[0];
  assign \$procmux$15391_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1017 ;
  assign \$auto$slang_frontend.cc:694:finish$\gen_512x32xBx1.sel_q$1018  = \$procmux$15390_Y ;
  assign \$procmux$15394_CMP  = \$auto$rtlil.cc:2746:ReduceBool$1005 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[31]$1006  = \$procmux$15393_Y ;
  assign \$procmux$15428_CMP  = \$auto$rtlil.cc:2746:ReduceBool$993 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[30]$994  = \$procmux$15427_Y ;
  assign \$procmux$15461_CMP  = \$auto$rtlil.cc:2746:ReduceBool$981 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[29]$982  = \$procmux$15460_Y ;
  assign \$procmux$15493_CMP  = \$auto$rtlil.cc:2746:ReduceBool$969 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[28]$970  = \$procmux$15492_Y ;
  assign \$procmux$15524_CMP  = \$auto$rtlil.cc:2746:ReduceBool$957 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[27]$958  = \$procmux$15523_Y ;
  assign \$procmux$15554_CMP  = \$auto$rtlil.cc:2746:ReduceBool$945 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[26]$946  = \$procmux$15553_Y ;
  assign \$procmux$15583_CMP  = \$auto$rtlil.cc:2746:ReduceBool$933 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[25]$934  = \$procmux$15582_Y ;
  assign \$procmux$15611_CMP  = \$auto$rtlil.cc:2746:ReduceBool$921 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[24]$922  = \$procmux$15610_Y ;
  assign \$procmux$15638_CMP  = \$auto$rtlil.cc:2746:ReduceBool$909 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[23]$910  = \$procmux$15637_Y ;
  assign \$procmux$15664_CMP  = \$auto$rtlil.cc:2746:ReduceBool$897 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[22]$898  = \$procmux$15663_Y ;
  assign \$procmux$15689_CMP  = \$auto$rtlil.cc:2746:ReduceBool$885 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[21]$886  = \$procmux$15688_Y ;
  assign \$procmux$15713_CMP  = \$auto$rtlil.cc:2746:ReduceBool$873 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[20]$874  = \$procmux$15712_Y ;
  assign \$procmux$15736_CMP  = \$auto$rtlil.cc:2746:ReduceBool$861 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[19]$862  = \$procmux$15735_Y ;
  assign \$procmux$15758_CMP  = \$auto$rtlil.cc:2746:ReduceBool$849 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[18]$850  = \$procmux$15757_Y ;
  assign \$procmux$15779_CMP  = \$auto$rtlil.cc:2746:ReduceBool$837 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[17]$838  = \$procmux$15778_Y ;
  assign \$procmux$15799_CMP  = \$auto$rtlil.cc:2746:ReduceBool$825 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[16]$826  = \$procmux$15798_Y ;
  assign \$procmux$15818_CMP  = \$auto$rtlil.cc:2746:ReduceBool$813 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[15]$814  = \$procmux$15817_Y ;
  assign \$procmux$15836_CMP  = \$auto$rtlil.cc:2746:ReduceBool$801 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[14]$802  = \$procmux$15835_Y ;
  assign \$procmux$15853_CMP  = \$auto$rtlil.cc:2746:ReduceBool$789 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[13]$790  = \$procmux$15852_Y ;
  assign \$procmux$15869_CMP  = \$auto$rtlil.cc:2746:ReduceBool$777 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[12]$778  = \$procmux$15868_Y ;
  assign \$procmux$15884_CMP  = \$auto$rtlil.cc:2746:ReduceBool$765 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[11]$766  = \$procmux$15883_Y ;
  assign \$procmux$15898_CMP  = \$auto$rtlil.cc:2746:ReduceBool$753 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[10]$754  = \$procmux$15897_Y ;
  assign \$procmux$15911_CMP  = \$auto$rtlil.cc:2746:ReduceBool$741 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[9]$742  = \$procmux$15910_Y ;
  assign \$procmux$15923_CMP  = \$auto$rtlil.cc:2746:ReduceBool$729 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[8]$730  = \$procmux$15922_Y ;
  assign \$procmux$15934_CMP  = \$auto$rtlil.cc:2746:ReduceBool$717 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[7]$718  = \$procmux$15933_Y ;
  assign \$procmux$15944_CMP  = \$auto$rtlil.cc:2746:ReduceBool$705 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[6]$706  = \$procmux$15943_Y ;
  assign \$procmux$15953_CMP  = \$auto$rtlil.cc:2746:ReduceBool$693 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[5]$694  = \$procmux$15952_Y ;
  assign \$procmux$15961_CMP  = \$auto$rtlil.cc:2746:ReduceBool$681 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[4]$682  = \$procmux$15960_Y ;
  assign \$procmux$15968_CMP  = \$auto$rtlil.cc:2746:ReduceBool$669 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[3]$670  = \$procmux$15967_Y ;
  assign \$procmux$15974_CMP  = \$auto$rtlil.cc:2746:ReduceBool$657 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[2]$658  = \$procmux$15973_Y ;
  assign \$procmux$15979_CMP  = \$auto$rtlil.cc:2746:ReduceBool$645 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[1]$646  = \$procmux$15978_Y ;
  assign \$procmux$15983_CMP  = \$auto$rtlil.cc:2746:ReduceBool$633 ;
  assign \$auto$slang_frontend.cc:694:finish$\rdata_o[0]$634  = \$procmux$15982_Y ;
  assign \$auto$rtlil.cc:2746:ReduceBool$633  = \$auto$builder.cc:364:Unop$631 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$645  = \$auto$builder.cc:364:Unop$643 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$657  = \$auto$builder.cc:364:Unop$655 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$669  = \$auto$builder.cc:364:Unop$667 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$681  = \$auto$builder.cc:364:Unop$679 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$693  = \$auto$builder.cc:364:Unop$691 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$705  = \$auto$builder.cc:364:Unop$703 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$717  = \$auto$builder.cc:364:Unop$715 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$729  = \$auto$builder.cc:364:Unop$727 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$741  = \$auto$builder.cc:364:Unop$739 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$753  = \$auto$builder.cc:364:Unop$751 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$765  = \$auto$builder.cc:364:Unop$763 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$777  = \$auto$builder.cc:364:Unop$775 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$789  = \$auto$builder.cc:364:Unop$787 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$801  = \$auto$builder.cc:364:Unop$799 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$813  = \$auto$builder.cc:364:Unop$811 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$825  = \$auto$builder.cc:364:Unop$823 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$837  = \$auto$builder.cc:364:Unop$835 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$849  = \$auto$builder.cc:364:Unop$847 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$861  = \$auto$builder.cc:364:Unop$859 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$873  = \$auto$builder.cc:364:Unop$871 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$885  = \$auto$builder.cc:364:Unop$883 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$897  = \$auto$builder.cc:364:Unop$895 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$909  = \$auto$builder.cc:364:Unop$907 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$921  = \$auto$builder.cc:364:Unop$919 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$933  = \$auto$builder.cc:364:Unop$931 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$945  = \$auto$builder.cc:364:Unop$943 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$957  = \$auto$builder.cc:364:Unop$955 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$969  = \$auto$builder.cc:364:Unop$967 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$981  = \$auto$builder.cc:364:Unop$979 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$993  = \$auto$builder.cc:364:Unop$991 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$1005  = \$auto$builder.cc:364:Unop$1003 ;
  assign \$auto$rtlil.cc:2747:LogicNot$1011  = rst_ni;
  assign \$auto$rtlil.cc:2746:ReduceBool$1017  = \$auto$builder.cc:338:Biop$1015 ;
endmodule

/* src = "../rtl/timer_unit/timer_unit_blackbox.sv:37.8" */
module \timer_unit$croc_chip.i_croc_soc.i_croc.i_timer (clk_i, rst_ni, ref_clk_i, req_i, wen_i, gnt_o, r_valid_o, r_opc_o, event_lo_i, event_hi_i, irq_lo_o, irq_hi_o, busy_o, addr_i, wdata_i, be_i, id_i, r_rdata_o, r_id_o);
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:48.39" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:51.39" */
  input [3:0] be_i;
  wire [3:0] be_i;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:66.39" */
  output busy_o;
  wire busy_o;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:42.39" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:61.39" */
  input event_hi_i;
  wire event_hi_i;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:60.39" */
  input event_lo_i;
  wire event_lo_i;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:53.39" */
  output gnt_o;
  wire gnt_o;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:52.39" */
  input [2:0] id_i;
  wire [2:0] id_i;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:64.39" */
  output irq_hi_o;
  wire irq_hi_o;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:63.39" */
  output irq_lo_o;
  wire irq_lo_o;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:57.39" */
  output [2:0] r_id_o;
  wire [2:0] r_id_o;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:56.39" */
  output r_opc_o;
  wire r_opc_o;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:58.39" */
  output [31:0] r_rdata_o;
  wire [31:0] r_rdata_o;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:55.39" */
  output r_valid_o;
  wire r_valid_o;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:45.39" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:47.39" */
  input req_i;
  wire req_i;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:43.39" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:50.39" */
  input [31:0] wdata_i;
  wire [31:0] wdata_i;
  /* src = "../rtl/timer_unit/timer_unit_blackbox.sv:49.39" */
  input wen_i;
  wire wen_i;
endmodule

/* src = "../rtl/apb_uart/uart_baudgen.sv:35.8" */
module \uart_baudgen$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BG16 (CLK, RST, CE, CLEAR, DIVIDER, BAUDTICK);
  wire \$auto$builder.cc:338:Biop$8518 ;
  wire \$auto$builder.cc:338:Biop$8522 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8526 ;
  wire \$auto$builder.cc:338:Biop$8530 ;
  wire [31:0] \$auto$builder.cc:338:Biop$8534 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8520 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8524 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8532 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8516 ;
  /* src = "../rtl/apb_uart/uart_baudgen.sv:67.5-72.18" */
  wire \$auto$slang_frontend.cc:694:finish$\BAUDTICK$8535 ;
  /* src = "../rtl/apb_uart/uart_baudgen.sv:62.16-65.18" */
  wire [15:0] \$auto$slang_frontend.cc:694:finish$\iCounter$8527 ;
  /* src = "../rtl/apb_uart/uart_baudgen.sv:57.3-65.18" */
  wire [15:0] \$auto$slang_frontend.cc:694:finish$\iCounter$8528 ;
  /* src = "../rtl/apb_uart/uart_baudgen.sv:67.5-72.18" */
  wire [15:0] \$auto$slang_frontend.cc:694:finish$\iCounter$8536 ;
  wire [15:0] \$procmux$13269_Y ;
  wire \$procmux$13270_CMP ;
  wire \$procmux$13272_Y ;
  wire \$procmux$13273_CMP ;
  wire [15:0] \$procmux$13275_Y ;
  wire \$procmux$13276_CMP ;
  wire [15:0] \$procmux$13278_Y ;
  wire \$procmux$13279_CMP ;
  wire [15:0] \$procmux$13282_Y ;
  wire \$procmux$13283_CMP ;
  /* src = "../rtl/apb_uart/uart_baudgen.sv:41.16" */
  output BAUDTICK;
  wire BAUDTICK;
  /* src = "../rtl/apb_uart/uart_baudgen.sv:38.14" */
  input CE;
  wire CE;
  /* src = "../rtl/apb_uart/uart_baudgen.sv:39.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "../rtl/apb_uart/uart_baudgen.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/uart_baudgen.sv:40.21" */
  input [15:0] DIVIDER;
  wire [15:0] DIVIDER;
  /* src = "../rtl/apb_uart/uart_baudgen.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/uart_baudgen.sv:45.12" */
  wire [15:0] iCounter;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8515  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8516 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8525  (
    .A({ 16'h0000, iCounter }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8526 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd16),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8529  (
    .A(iCounter),
    .Y(\$auto$builder.cc:338:Biop$8530 )
  );
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$8533  (
    .A({ 16'h0000, DIVIDER }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$8534 )
  );
  /* src = "../rtl/apb_uart/uart_baudgen.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$BAUDTICK  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\BAUDTICK$8535 ),
    .Q(BAUDTICK)
  );
  /* src = "../rtl/apb_uart/uart_baudgen.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd16)
  ) \$driver$iCounter  (
    .AD(16'h0000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iCounter$8536 ),
    .Q(iCounter)
  );
  /* src = "../rtl/apb_uart/uart_baudgen.sv:68.11-72.18|../rtl/apb_uart/uart_baudgen.sv:67.5-72.18" */
  \$mux  #(
    .WIDTH(32'd16)
  ) \$procmux$13269  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCounter$8528 ),
    .B(\$auto$builder.cc:338:Biop$8534 [15:0]),
    .S(\$procmux$13270_CMP ),
    .Y(\$procmux$13269_Y )
  );
  /* src = "../rtl/apb_uart/uart_baudgen.sv:68.11-72.18|../rtl/apb_uart/uart_baudgen.sv:67.5-72.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13272  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$13273_CMP ),
    .Y(\$procmux$13272_Y )
  );
  /* src = "../rtl/apb_uart/uart_baudgen.sv:64.7-64.32|../rtl/apb_uart/uart_baudgen.sv:62.16-65.18" */
  \$mux  #(
    .WIDTH(32'd16)
  ) \$procmux$13275  (
    .A(iCounter),
    .B(\$auto$builder.cc:338:Biop$8526 [15:0]),
    .S(\$procmux$13276_CMP ),
    .Y(\$procmux$13275_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_baudgen.sv:60.1-60.131|../rtl/apb_uart/uart_baudgen.sv:57.3-65.18" */
  \$mux  #(
    .WIDTH(32'd16)
  ) \$procmux$13278  (
    .A(\$procmux$13275_Y ),
    .B(16'hxxxx),
    .S(\$procmux$13279_CMP ),
    .Y(\$procmux$13278_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_baudgen.sv:60.1-60.131|../rtl/apb_uart/uart_baudgen.sv:57.3-65.18" */
  \$mux  #(
    .WIDTH(32'd16)
  ) \$procmux$13282  (
    .A(\$auto$slang_frontend.cc:694:finish$\iCounter$8527 ),
    .B(16'h0000),
    .S(\$procmux$13283_CMP ),
    .Y(\$procmux$13282_Y )
  );
  assign \$procmux$13270_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8532 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$8536  = \$procmux$13269_Y ;
  assign \$procmux$13273_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8532 ;
  assign \$auto$slang_frontend.cc:694:finish$\BAUDTICK$8535  = \$procmux$13272_Y ;
  assign \$procmux$13276_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8524 ;
  assign \$procmux$13279_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8520 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$8527  = \$procmux$13278_Y ;
  assign \$procmux$13283_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8520 ;
  assign \$auto$slang_frontend.cc:694:finish$\iCounter$8528  = \$procmux$13282_Y ;
  assign \$auto$builder.cc:338:Biop$8518  = CLEAR;
  assign \$auto$rtlil.cc:2746:ReduceBool$8520  = CLEAR;
  assign \$auto$builder.cc:338:Biop$8522  = CE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8524  = CE;
  assign \$auto$rtlil.cc:2746:ReduceBool$8532  = \$auto$builder.cc:338:Biop$8530 ;
endmodule

/* src = "../rtl/apb_uart/uart_interrupt.sv:35.8" */
module \uart_interrupt$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IIC (CLK, INT, RST, IER, LSR, THI, RDA, CTI, AFE, MSR, IIR);
  wire \$auto$builder.cc:338:Biop$8275 ;
  wire \$auto$builder.cc:338:Biop$8277 ;
  wire \$auto$builder.cc:338:Biop$8279 ;
  wire \$auto$builder.cc:338:Biop$8281 ;
  wire \$auto$builder.cc:338:Biop$8283 ;
  wire \$auto$builder.cc:338:Biop$8285 ;
  wire \$auto$builder.cc:338:Biop$8287 ;
  wire \$auto$builder.cc:338:Biop$8291 ;
  wire \$auto$builder.cc:338:Biop$8293 ;
  wire \$auto$builder.cc:338:Biop$8295 ;
  wire \$auto$builder.cc:338:Biop$8297 ;
  wire \$auto$builder.cc:338:Biop$8299 ;
  wire \$auto$builder.cc:338:Biop$8304 ;
  wire \$auto$builder.cc:338:Biop$8308 ;
  wire \$auto$builder.cc:338:Biop$8312 ;
  wire \$auto$builder.cc:338:Biop$8316 ;
  wire \$auto$builder.cc:338:Biop$8320 ;
  wire \$auto$builder.cc:364:Unop$8289 ;
  wire \$auto$builder.cc:364:Unop$8329 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8306 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8310 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8314 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8318 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8322 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8302 ;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:85.13-92.13" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\iIIR$8323 ;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:81.13-92.13" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\iIIR$8324 ;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:77.13-92.13" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\iIIR$8325 ;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:73.13-92.13" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\iIIR$8326 ;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\iIIR$8327 ;
  wire [3:0] \$procmux$13285_Y ;
  wire \$procmux$13286_CMP ;
  wire [3:0] \$procmux$13288_Y ;
  wire \$procmux$13289_CMP ;
  wire [3:0] \$procmux$13291_Y ;
  wire \$procmux$13292_CMP ;
  wire [3:0] \$procmux$13294_Y ;
  wire \$procmux$13295_CMP ;
  wire [3:0] \$procmux$13297_Y ;
  wire \$procmux$13298_CMP ;
  wire [3:0] \$procmux$13301_Y ;
  wire \$procmux$13302_CMP ;
  wire [3:0] \$procmux$13304_Y ;
  wire \$procmux$13305_CMP ;
  wire [3:0] \$procmux$13307_Y ;
  wire \$procmux$13308_CMP ;
  wire [3:0] \$procmux$13310_Y ;
  wire \$procmux$13311_CMP ;
  wire [3:0] \$procmux$13314_Y ;
  wire \$procmux$13315_CMP ;
  wire [3:0] \$procmux$13317_Y ;
  wire \$procmux$13318_CMP ;
  wire [3:0] \$procmux$13320_Y ;
  wire \$procmux$13321_CMP ;
  wire [3:0] \$procmux$13324_Y ;
  wire \$procmux$13325_CMP ;
  wire [3:0] \$procmux$13327_Y ;
  wire \$procmux$13328_CMP ;
  wire [3:0] \$procmux$13331_Y ;
  wire \$procmux$13332_CMP ;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:43.14" */
  input AFE;
  wire AFE;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:42.14" */
  input CTI;
  wire CTI;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:38.20" */
  input [3:0] IER;
  wire [3:0] IER;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:45.22" */
  output [3:0] IIR;
  wire [3:0] IIR;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:46.16" */
  output INT;
  wire INT;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:39.20" */
  input [4:0] LSR;
  wire [4:0] LSR;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:44.20" */
  input [3:0] MSR;
  wire [3:0] MSR;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:41.14" */
  input RDA;
  wire RDA;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:40.14" */
  input THI;
  wire THI;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:52.5" */
  wire iCTIInterrupt;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:55.11" */
  wire [3:0] iIIR;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:54.5" */
  wire iMSRInterrupt;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:51.5" */
  wire iRDAInterrupt;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:50.5" */
  wire iRLSInterrupt;
  /* src = "../rtl/apb_uart/uart_interrupt.sv:53.5" */
  wire iTHRInterrupt;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8301  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8302 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8274  (
    .A(LSR[1]),
    .B(LSR[2]),
    .Y(\$auto$builder.cc:338:Biop$8275 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8276  (
    .A(\$auto$builder.cc:338:Biop$8275 ),
    .B(LSR[3]),
    .Y(\$auto$builder.cc:338:Biop$8277 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8278  (
    .A(\$auto$builder.cc:338:Biop$8277 ),
    .B(LSR[4]),
    .Y(\$auto$builder.cc:338:Biop$8279 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8280  (
    .A(IER[2]),
    .B(\$auto$builder.cc:338:Biop$8279 ),
    .Y(\$auto$builder.cc:338:Biop$8281 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8282  (
    .A(IER[0]),
    .B(RDA),
    .Y(\$auto$builder.cc:338:Biop$8283 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8284  (
    .A(IER[0]),
    .B(CTI),
    .Y(\$auto$builder.cc:338:Biop$8285 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8286  (
    .A(IER[1]),
    .B(THI),
    .Y(\$auto$builder.cc:338:Biop$8287 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8290  (
    .A(MSR[0]),
    .B(\$auto$builder.cc:364:Unop$8289 ),
    .Y(\$auto$builder.cc:338:Biop$8291 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8292  (
    .A(\$auto$builder.cc:338:Biop$8291 ),
    .B(MSR[1]),
    .Y(\$auto$builder.cc:338:Biop$8293 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8294  (
    .A(\$auto$builder.cc:338:Biop$8293 ),
    .B(MSR[2]),
    .Y(\$auto$builder.cc:338:Biop$8295 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8296  (
    .A(\$auto$builder.cc:338:Biop$8295 ),
    .B(MSR[3]),
    .Y(\$auto$builder.cc:338:Biop$8297 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8298  (
    .A(IER[3]),
    .B(\$auto$builder.cc:338:Biop$8297 ),
    .Y(\$auto$builder.cc:338:Biop$8299 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$8288  (
    .A(AFE),
    .Y(\$auto$builder.cc:364:Unop$8289 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$8328  (
    .A(iIIR[0]),
    .Y(\$auto$builder.cc:364:Unop$8329 )
  );
  /* src = "../rtl/apb_uart/uart_interrupt.sv:62.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$iIIR  (
    .AD(4'h1),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iIIR$8327 ),
    .Q(iIIR)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:87.13-87.29|../rtl/apb_uart/uart_interrupt.sv:85.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13285  (
    .A(4'h1),
    .B(4'h0),
    .S(\$procmux$13286_CMP ),
    .Y(\$procmux$13285_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:83.13-83.29|../rtl/apb_uart/uart_interrupt.sv:81.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13288  (
    .A(\$procmux$13285_Y ),
    .B(4'hx),
    .S(\$procmux$13289_CMP ),
    .Y(\$procmux$13288_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:79.13-79.29|../rtl/apb_uart/uart_interrupt.sv:77.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13291  (
    .A(\$procmux$13288_Y ),
    .B(4'hx),
    .S(\$procmux$13292_CMP ),
    .Y(\$procmux$13291_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:75.13-75.29|../rtl/apb_uart/uart_interrupt.sv:73.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13294  (
    .A(\$procmux$13291_Y ),
    .B(4'hx),
    .S(\$procmux$13295_CMP ),
    .Y(\$procmux$13294_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:71.13-71.29|../rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13297  (
    .A(\$procmux$13294_Y ),
    .B(4'hx),
    .S(\$procmux$13298_CMP ),
    .Y(\$procmux$13297_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:83.13-83.29|../rtl/apb_uart/uart_interrupt.sv:81.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13301  (
    .A(\$auto$slang_frontend.cc:694:finish$\iIIR$8323 ),
    .B(4'h2),
    .S(\$procmux$13302_CMP ),
    .Y(\$procmux$13301_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:79.13-79.29|../rtl/apb_uart/uart_interrupt.sv:77.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13304  (
    .A(\$procmux$13301_Y ),
    .B(4'hx),
    .S(\$procmux$13305_CMP ),
    .Y(\$procmux$13304_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:75.13-75.29|../rtl/apb_uart/uart_interrupt.sv:73.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13307  (
    .A(\$procmux$13304_Y ),
    .B(4'hx),
    .S(\$procmux$13308_CMP ),
    .Y(\$procmux$13307_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:71.13-71.29|../rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13310  (
    .A(\$procmux$13307_Y ),
    .B(4'hx),
    .S(\$procmux$13311_CMP ),
    .Y(\$procmux$13310_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:79.13-79.29|../rtl/apb_uart/uart_interrupt.sv:77.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13314  (
    .A(\$auto$slang_frontend.cc:694:finish$\iIIR$8324 ),
    .B(4'h4),
    .S(\$procmux$13315_CMP ),
    .Y(\$procmux$13314_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:75.13-75.29|../rtl/apb_uart/uart_interrupt.sv:73.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13317  (
    .A(\$procmux$13314_Y ),
    .B(4'hx),
    .S(\$procmux$13318_CMP ),
    .Y(\$procmux$13317_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:71.13-71.29|../rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13320  (
    .A(\$procmux$13317_Y ),
    .B(4'hx),
    .S(\$procmux$13321_CMP ),
    .Y(\$procmux$13320_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:75.13-75.29|../rtl/apb_uart/uart_interrupt.sv:73.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13324  (
    .A(\$auto$slang_frontend.cc:694:finish$\iIIR$8325 ),
    .B(4'hc),
    .S(\$procmux$13325_CMP ),
    .Y(\$procmux$13324_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:71.13-71.29|../rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13327  (
    .A(\$procmux$13324_Y ),
    .B(4'hx),
    .S(\$procmux$13328_CMP ),
    .Y(\$procmux$13327_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_interrupt.sv:71.13-71.29|../rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13331  (
    .A(\$auto$slang_frontend.cc:694:finish$\iIIR$8326 ),
    .B(4'h6),
    .S(\$procmux$13332_CMP ),
    .Y(\$procmux$13331_Y )
  );
  assign iRLSInterrupt = \$auto$builder.cc:338:Biop$8281 ;
  assign iRDAInterrupt = \$auto$builder.cc:338:Biop$8283 ;
  assign iCTIInterrupt = \$auto$builder.cc:338:Biop$8285 ;
  assign iTHRInterrupt = \$auto$builder.cc:338:Biop$8287 ;
  assign iMSRInterrupt = \$auto$builder.cc:338:Biop$8299 ;
  assign IIR = iIIR;
  assign INT = \$auto$builder.cc:364:Unop$8329 ;
  assign \$procmux$13286_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8322 ;
  assign \$procmux$13289_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8318 ;
  assign \$procmux$13292_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8314 ;
  assign \$procmux$13295_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8310 ;
  assign \$procmux$13298_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8306 ;
  assign \$auto$slang_frontend.cc:694:finish$\iIIR$8323  = \$procmux$13297_Y ;
  assign \$procmux$13302_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8318 ;
  assign \$procmux$13305_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8314 ;
  assign \$procmux$13308_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8310 ;
  assign \$procmux$13311_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8306 ;
  assign \$auto$slang_frontend.cc:694:finish$\iIIR$8324  = \$procmux$13310_Y ;
  assign \$procmux$13315_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8314 ;
  assign \$procmux$13318_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8310 ;
  assign \$procmux$13321_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8306 ;
  assign \$auto$slang_frontend.cc:694:finish$\iIIR$8325  = \$procmux$13320_Y ;
  assign \$procmux$13325_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8310 ;
  assign \$procmux$13328_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8306 ;
  assign \$auto$slang_frontend.cc:694:finish$\iIIR$8326  = \$procmux$13327_Y ;
  assign \$procmux$13332_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8306 ;
  assign \$auto$slang_frontend.cc:694:finish$\iIIR$8327  = \$procmux$13331_Y ;
  assign \$auto$builder.cc:338:Biop$8304  = iRLSInterrupt;
  assign \$auto$rtlil.cc:2746:ReduceBool$8306  = \$auto$builder.cc:338:Biop$8281 ;
  assign \$auto$builder.cc:338:Biop$8308  = iCTIInterrupt;
  assign \$auto$rtlil.cc:2746:ReduceBool$8310  = \$auto$builder.cc:338:Biop$8285 ;
  assign \$auto$builder.cc:338:Biop$8312  = iRDAInterrupt;
  assign \$auto$rtlil.cc:2746:ReduceBool$8314  = \$auto$builder.cc:338:Biop$8283 ;
  assign \$auto$builder.cc:338:Biop$8316  = iTHRInterrupt;
  assign \$auto$rtlil.cc:2746:ReduceBool$8318  = \$auto$builder.cc:338:Biop$8287 ;
  assign \$auto$builder.cc:338:Biop$8320  = iMSRInterrupt;
  assign \$auto$rtlil.cc:2746:ReduceBool$8322  = \$auto$builder.cc:338:Biop$8299 ;
endmodule

/* src = "../rtl/apb_uart/uart_receiver.sv:35.8" */
module \uart_receiver$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX (BI, CLK, SIN, RST, FE, WLS, STB, PEN, EPS, SP, RXCLK, RXCLEAR, PE, DOUT, RXFINISHED);
  wire \$auto$builder.cc:338:Biop$9094 ;
  wire \$auto$builder.cc:338:Biop$9097 ;
  wire \$auto$builder.cc:338:Biop$9099 ;
  wire \$auto$builder.cc:338:Biop$9101 ;
  wire \$auto$builder.cc:338:Biop$9103 ;
  wire \$auto$builder.cc:338:Biop$9105 ;
  wire \$auto$builder.cc:338:Biop$9107 ;
  wire \$auto$builder.cc:338:Biop$9109 ;
  wire \$auto$builder.cc:338:Biop$9113 ;
  wire \$auto$builder.cc:338:Biop$9118 ;
  wire \$auto$builder.cc:338:Biop$9122 ;
  wire \$auto$builder.cc:338:Biop$9124 ;
  wire \$auto$builder.cc:338:Biop$9126 ;
  wire [31:0] \$auto$builder.cc:338:Biop$9144 ;
  wire \$auto$builder.cc:338:Biop$9150 ;
  wire \$auto$builder.cc:338:Biop$9152 ;
  wire \$auto$builder.cc:338:Biop$9154 ;
  wire \$auto$builder.cc:338:Biop$9156 ;
  wire \$auto$builder.cc:338:Biop$9158 ;
  wire \$auto$builder.cc:338:Biop$9160 ;
  wire \$auto$builder.cc:338:Biop$9162 ;
  wire \$auto$builder.cc:338:Biop$9164 ;
  wire \$auto$builder.cc:338:Biop$9166 ;
  wire \$auto$builder.cc:338:Biop$9168 ;
  wire \$auto$builder.cc:338:Biop$9170 ;
  wire \$auto$builder.cc:338:Biop$9172 ;
  wire \$auto$builder.cc:338:Biop$9174 ;
  wire \$auto$builder.cc:338:Biop$9176 ;
  wire \$auto$builder.cc:338:Biop$9178 ;
  wire \$auto$builder.cc:338:Biop$9188 ;
  wire \$auto$builder.cc:338:Biop$9193 ;
  wire \$auto$builder.cc:338:Biop$9197 ;
  wire \$auto$builder.cc:338:Biop$9203 ;
  wire \$auto$builder.cc:338:Biop$9207 ;
  wire \$auto$builder.cc:338:Biop$9213 ;
  wire \$auto$builder.cc:338:Biop$9218 ;
  wire \$auto$builder.cc:338:Biop$9222 ;
  wire \$auto$builder.cc:338:Biop$9230 ;
  wire \$auto$builder.cc:338:Biop$9242 ;
  wire \$auto$builder.cc:338:Biop$9244 ;
  wire \$auto$builder.cc:338:Biop$9246 ;
  wire \$auto$builder.cc:338:Biop$9251 ;
  wire \$auto$builder.cc:338:Biop$9255 ;
  wire \$auto$builder.cc:338:Biop$9259 ;
  wire \$auto$builder.cc:338:Biop$9261 ;
  wire \$auto$builder.cc:338:Biop$9266 ;
  wire \$auto$builder.cc:338:Biop$9274 ;
  wire \$auto$builder.cc:338:Biop$9276 ;
  wire \$auto$builder.cc:338:Biop$9278 ;
  wire \$auto$builder.cc:338:Biop$9284 ;
  wire \$auto$builder.cc:338:Biop$9286 ;
  wire \$auto$builder.cc:338:Biop$9288 ;
  wire \$auto$builder.cc:338:Biop$9290 ;
  wire \$auto$builder.cc:338:Biop$9292 ;
  wire \$auto$builder.cc:338:Biop$9298 ;
  wire \$auto$builder.cc:364:Unop$9111 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9120 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9128 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9180 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9190 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9195 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9199 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9205 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9209 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9215 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9220 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9224 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9232 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9248 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9253 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9257 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9263 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9268 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9280 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9294 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9300 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9092 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9116 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9185 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9240 ;
  wire \$auto$rtlil.cc:2791:Lt$9130 ;
  wire \$auto$rtlil.cc:2797:Ge$9132 ;
  wire \$auto$rtlil.cc:2806:LogicAnd$9134 ;
  wire \$auto$rtlil.cc:2874:Mux$9136 ;
  wire \$auto$rtlil.cc:2874:Mux$9182 ;
  wire \$auto$rtlil.cc:2874:Mux$9282 ;
  wire \$auto$rtlil.cc:2874:Mux$9296 ;
  wire \$auto$rtlil.cc:2874:Mux$9302 ;
  wire [7:0] \$auto$rtlil.cc:2875:Bwmux$9142 ;
  wire [7:0] \$auto$rtlil.cc:2896:Demux$9138 ;
  wire [7:0] \$auto$rtlil.cc:2896:Demux$9140 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:169.3-172.18" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\NState$9191 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:183.7-186.26" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\NState$9200 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:181.5-192.18" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\NState$9201 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:199.7-206.26" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\NState$9210 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:197.3-211.18" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\NState$9211 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:216.3-223.18" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\NState$9216 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:230.7-239.26" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\NState$9226 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\NState$9228 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:249.3-252.18" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\NState$9233 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  wire [2:0] \$auto$slang_frontend.cc:694:finish$\NState$9235 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:284.11-287.34" */
  wire \$auto$slang_frontend.cc:694:finish$\PE$9264 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:292.11-295.34" */
  wire \$auto$slang_frontend.cc:694:finish$\PE$9269 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:282.9-297.14" */
  wire \$auto$slang_frontend.cc:694:finish$\PE$9270 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  wire \$auto$slang_frontend.cc:694:finish$\PE$9271 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  wire \$auto$slang_frontend.cc:694:finish$\iBaudCountClear$9236 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:140.13-144.18" */
  wire [7:0] \$auto$slang_frontend.cc:694:finish$\iDOUT$9146 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  wire [7:0] \$auto$slang_frontend.cc:694:finish$\iDOUT$9148 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:140.13-144.18" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\iDataCount$9145 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\iDataCount$9147 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  wire \$auto$slang_frontend.cc:694:finish$\iDataCountInit$9237 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:274.3-277.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iParityReceived$9249 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iParityReceived$9272 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:230.7-239.26" */
  wire \$auto$slang_frontend.cc:694:finish$\iRXFinished$9225 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iRXFinished$9227 ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  wire \$auto$slang_frontend.cc:694:finish$\iRXFinished$9234 ;
  wire [7:0] \$procmux$12725_Y ;
  wire \$procmux$12726_CMP ;
  wire [7:0] \$procmux$12728_Y ;
  wire \$procmux$12729_CMP ;
  wire [3:0] \$procmux$12730_Y ;
  wire \$procmux$12731_CMP ;
  wire [3:0] \$procmux$12733_Y ;
  wire \$procmux$12734_CMP ;
  wire [7:0] \$procmux$12737_Y ;
  wire \$procmux$12738_CMP ;
  wire [3:0] \$procmux$12741_Y ;
  wire \$procmux$12742_CMP ;
  wire [2:0] \$procmux$12744_Y ;
  wire \$procmux$12745_CMP ;
  wire [2:0] \$procmux$12746_Y ;
  wire \$procmux$12747_CMP ;
  wire [2:0] \$procmux$12752_Y ;
  wire \$procmux$12753_CMP ;
  wire [2:0] \$procmux$12754_Y ;
  wire \$procmux$12755_CMP ;
  wire \$procmux$12760_Y ;
  wire \$procmux$12761_CMP ;
  wire \$procmux$12762_Y ;
  wire \$procmux$12763_CMP ;
  wire [2:0] \$procmux$12768_Y ;
  wire \$procmux$12769_CMP ;
  wire [2:0] \$procmux$12770_Y ;
  wire \$procmux$12771_CMP ;
  wire [2:0] \$procmux$12772_Y ;
  wire \$procmux$12773_CMP ;
  wire \$procmux$12779_Y ;
  wire \$procmux$12780_CMP ;
  wire \$procmux$12781_Y ;
  wire \$procmux$12782_CMP ;
  wire [2:0] \$procmux$12787_Y ;
  wire \$procmux$12788_CMP ;
  wire [2:0] \$procmux$12789_Y ;
  wire \$procmux$12790_CMP ;
  wire [2:0] \$procmux$12797_Y ;
  wire \$procmux$12798_CMP ;
  wire [2:0] \$procmux$12799_Y ;
  wire \$procmux$12800_CMP ;
  wire [2:0] \$procmux$12807_Y ;
  wire \$procmux$12808_CMP ;
  wire [2:0] \$procmux$12809_Y ;
  wire \$procmux$12810_CMP ;
  wire [2:0] \$procmux$12811_Y ;
  wire \$procmux$12812_CMP ;
  wire [2:0] \$procmux$12820_Y ;
  wire \$procmux$12821_CMP ;
  wire [2:0] \$procmux$12822_Y ;
  wire \$procmux$12823_CMP ;
  wire [2:0] \$procmux$12830_Y ;
  wire \$procmux$12831_CMP ;
  wire [2:0] \$procmux$12832_Y ;
  wire \$procmux$12833_CMP ;
  wire [2:0] \$procmux$12834_Y ;
  wire \$procmux$12835_CMP ;
  wire \$procmux$12846_Y ;
  wire \$procmux$12847_CMP ;
  wire \$procmux$12849_CMP ;
  wire \$procmux$12862_Y ;
  wire \$procmux$12863_CMP ;
  wire [2:0] \$procmux$12866_Y ;
  wire \$procmux$12867_CMP ;
  wire \$procmux$12869_CMP ;
  wire \$procmux$12871_CMP ;
  wire \$procmux$12873_CMP ;
  wire \$procmux$12875_CMP ;
  wire \$procmux$12877_CMP ;
  wire [2:0] \$procmux$12884_Y ;
  wire \$procmux$12885_CMP ;
  wire [2:0] \$procmux$12886_Y ;
  wire \$procmux$12887_CMP ;
  wire \$procmux$12892_Y ;
  wire \$procmux$12893_CMP ;
  wire \$procmux$12896_Y ;
  wire \$procmux$12897_CMP ;
  wire \$procmux$12900_Y ;
  wire \$procmux$12901_CMP ;
  wire \$procmux$12903_Y ;
  wire \$procmux$12904_CMP ;
  wire \$procmux$12905_Y ;
  wire \$procmux$12906_CMP ;
  wire \$procmux$12912_Y ;
  wire \$procmux$12913_CMP ;
  wire \$procmux$12914_Y ;
  wire \$procmux$12915_CMP ;
  wire \$procmux$12919_Y ;
  wire \$procmux$12920_CMP ;
  wire \$procmux$12921_Y ;
  wire \$procmux$12922_CMP ;
  wire \$procmux$12923_Y ;
  wire \$procmux$12924_CMP ;
  wire \$procmux$12927_Y ;
  wire \$procmux$12928_CMP ;
  wire \$procmux$12930_Y ;
  wire \$procmux$12931_CMP ;
  /* src = "../rtl/apb_uart/uart_receiver.sv:48.16" */
  output BI;
  wire BI;
  /* src = "../rtl/apb_uart/uart_receiver.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/uart_receiver.sv:60.12" */
  wire [2:0] CState;
  /* src = "../rtl/apb_uart/uart_receiver.sv:49.22" */
  output [7:0] DOUT;
  wire [7:0] DOUT;
  /* src = "../rtl/apb_uart/uart_receiver.sv:43.14" */
  input EPS;
  wire EPS;
  /* src = "../rtl/apb_uart/uart_receiver.sv:47.16" */
  output FE;
  wire FE;
  /* src = "../rtl/apb_uart/uart_receiver.sv:60.20" */
  wire [2:0] NState;
  /* src = "../rtl/apb_uart/uart_receiver.sv:46.16" */
  output PE;
  wire PE;
  /* src = "../rtl/apb_uart/uart_receiver.sv:42.14" */
  input PEN;
  wire PEN;
  /* src = "../rtl/apb_uart/uart_receiver.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/uart_receiver.sv:39.14" */
  input RXCLEAR;
  wire RXCLEAR;
  /* src = "../rtl/apb_uart/uart_receiver.sv:38.14" */
  input RXCLK;
  wire RXCLK;
  /* src = "../rtl/apb_uart/uart_receiver.sv:50.16" */
  output RXFINISHED;
  wire RXFINISHED;
  /* src = "../rtl/apb_uart/uart_receiver.sv:45.14" */
  input SIN;
  wire SIN;
  /* src = "../rtl/apb_uart/uart_receiver.sv:44.14" */
  input SP;
  wire SP;
  /* src = "../rtl/apb_uart/uart_receiver.sv:41.14" */
  input STB;
  wire STB;
  /* src = "../rtl/apb_uart/uart_receiver.sv:40.20" */
  input [1:0] WLS;
  wire [1:0] WLS;
  /* src = "../rtl/apb_uart/uart_receiver.sv:75.5" */
  wire iBI;
  /* src = "../rtl/apb_uart/uart_receiver.sv:61.11" */
  wire [3:0] iBaudCount;
  /* src = "../rtl/apb_uart/uart_receiver.sv:62.5" */
  wire iBaudCountClear;
  /* src = "../rtl/apb_uart/uart_receiver.sv:63.5" */
  wire iBaudStep;
  /* src = "../rtl/apb_uart/uart_receiver.sv:64.5" */
  wire iBaudStepD;
  /* src = "../rtl/apb_uart/uart_receiver.sv:77.11" */
  wire [7:0] iDOUT;
  /* src = "../rtl/apb_uart/uart_receiver.sv:70.11" */
  wire [3:0] iDataCount;
  /* src = "../rtl/apb_uart/uart_receiver.sv:72.5" */
  wire iDataCountFinish;
  /* src = "../rtl/apb_uart/uart_receiver.sv:71.5" */
  wire iDataCountInit;
  /* src = "../rtl/apb_uart/uart_receiver.sv:74.5" */
  wire iFE;
  /* src = "../rtl/apb_uart/uart_receiver.sv:66.5" */
  wire iFSIN;
  /* src = "../rtl/apb_uart/uart_receiver.sv:67.5" */
  wire iFStopBit;
  /* src = "../rtl/apb_uart/uart_receiver.sv:65.5" */
  wire iFilterClear;
  /* src = "../rtl/apb_uart/uart_receiver.sv:76.5" */
  wire iNoStopReceived;
  /* src = "../rtl/apb_uart/uart_receiver.sv:68.5" */
  wire iParity;
  /* src = "../rtl/apb_uart/uart_receiver.sv:69.5" */
  wire iParityReceived;
  /* src = "../rtl/apb_uart/uart_receiver.sv:73.5" */
  wire iRXFinished;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$9091  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$9092 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$9115  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$9116 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$9184  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$9185 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$9239  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$9240 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$builder.cc:112:Mux$9135  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2806:LogicAnd$9134 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9136 )
  );
  \$bwmux  #(
    .WIDTH(32'd8)
  ) \$auto$builder.cc:128:Bwmux$9141  (
    .A(iDOUT),
    .B({ iFSIN, iFSIN, iFSIN, iFSIN, iFSIN, iFSIN, iFSIN, iFSIN }),
    .S(\$auto$rtlil.cc:2896:Demux$9140 ),
    .Y(\$auto$rtlil.cc:2875:Bwmux$9142 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9093  (
    .A(iBaudStepD),
    .B(iBaudCountClear),
    .Y(\$auto$builder.cc:338:Biop$9094 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9096  (
    .A(iDOUT[7]),
    .B(iDOUT[6]),
    .Y(\$auto$builder.cc:338:Biop$9097 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9098  (
    .A(\$auto$builder.cc:338:Biop$9097 ),
    .B(iDOUT[5]),
    .Y(\$auto$builder.cc:338:Biop$9099 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9100  (
    .A(\$auto$builder.cc:338:Biop$9099 ),
    .B(iDOUT[4]),
    .Y(\$auto$builder.cc:338:Biop$9101 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9102  (
    .A(\$auto$builder.cc:338:Biop$9101 ),
    .B(iDOUT[3]),
    .Y(\$auto$builder.cc:338:Biop$9103 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9104  (
    .A(\$auto$builder.cc:338:Biop$9103 ),
    .B(iDOUT[2]),
    .Y(\$auto$builder.cc:338:Biop$9105 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9106  (
    .A(\$auto$builder.cc:338:Biop$9105 ),
    .B(iDOUT[1]),
    .Y(\$auto$builder.cc:338:Biop$9107 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9108  (
    .A(\$auto$builder.cc:338:Biop$9107 ),
    .B(iDOUT[0]),
    .Y(\$auto$builder.cc:338:Biop$9109 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9112  (
    .A(\$auto$builder.cc:338:Biop$9109 ),
    .B(\$auto$builder.cc:364:Unop$9111 ),
    .Y(\$auto$builder.cc:338:Biop$9113 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9123  (
    .A(iDataCountFinish),
    .Y(\$auto$builder.cc:338:Biop$9124 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9125  (
    .A(\$auto$builder.cc:338:Biop$9122 ),
    .B(\$auto$builder.cc:338:Biop$9124 ),
    .Y(\$auto$builder.cc:338:Biop$9126 )
  );
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$auto$builder.cc:330:Biop$9143  (
    .A({ 28'h0000000, iDataCount }),
    .B(32'd1),
    .Y(\$auto$builder.cc:338:Biop$9144 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9149  (
    .A(WLS),
    .Y(\$auto$builder.cc:338:Biop$9150 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9151  (
    .A(iDataCount),
    .B(4'h5),
    .Y(\$auto$builder.cc:338:Biop$9152 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9153  (
    .A(\$auto$builder.cc:338:Biop$9150 ),
    .B(\$auto$builder.cc:338:Biop$9152 ),
    .Y(\$auto$builder.cc:338:Biop$9154 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9155  (
    .A(WLS),
    .B(2'h1),
    .Y(\$auto$builder.cc:338:Biop$9156 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9157  (
    .A(iDataCount),
    .B(4'h6),
    .Y(\$auto$builder.cc:338:Biop$9158 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9159  (
    .A(\$auto$builder.cc:338:Biop$9156 ),
    .B(\$auto$builder.cc:338:Biop$9158 ),
    .Y(\$auto$builder.cc:338:Biop$9160 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9161  (
    .A(\$auto$builder.cc:338:Biop$9154 ),
    .B(\$auto$builder.cc:338:Biop$9160 ),
    .Y(\$auto$builder.cc:338:Biop$9162 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9163  (
    .A(WLS),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$9164 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9165  (
    .A(iDataCount),
    .B(4'h7),
    .Y(\$auto$builder.cc:338:Biop$9166 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9167  (
    .A(\$auto$builder.cc:338:Biop$9164 ),
    .B(\$auto$builder.cc:338:Biop$9166 ),
    .Y(\$auto$builder.cc:338:Biop$9168 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9169  (
    .A(\$auto$builder.cc:338:Biop$9162 ),
    .B(\$auto$builder.cc:338:Biop$9168 ),
    .Y(\$auto$builder.cc:338:Biop$9170 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9171  (
    .A(WLS),
    .B(2'h3),
    .Y(\$auto$builder.cc:338:Biop$9172 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9173  (
    .A(iDataCount),
    .B(4'h8),
    .Y(\$auto$builder.cc:338:Biop$9174 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9175  (
    .A(\$auto$builder.cc:338:Biop$9172 ),
    .B(\$auto$builder.cc:338:Biop$9174 ),
    .Y(\$auto$builder.cc:338:Biop$9176 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9177  (
    .A(\$auto$builder.cc:338:Biop$9170 ),
    .B(\$auto$builder.cc:338:Biop$9176 ),
    .Y(\$auto$builder.cc:338:Biop$9178 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9187  (
    .A(SIN),
    .Y(\$auto$builder.cc:338:Biop$9188 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9196  (
    .A(iFSIN),
    .Y(\$auto$builder.cc:338:Biop$9197 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9221  (
    .A(iFStopBit),
    .Y(\$auto$builder.cc:338:Biop$9222 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9229  (
    .A(SIN),
    .Y(\$auto$builder.cc:338:Biop$9230 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9241  (
    .A(CState),
    .B(3'h3),
    .Y(\$auto$builder.cc:338:Biop$9242 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9245  (
    .A(\$auto$builder.cc:338:Biop$9242 ),
    .B(\$auto$builder.cc:338:Biop$9244 ),
    .Y(\$auto$builder.cc:338:Biop$9246 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9258  (
    .A(EPS),
    .B(iParityReceived),
    .Y(\$auto$builder.cc:338:Biop$9259 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9260  (
    .A(\$auto$builder.cc:338:Biop$9259 ),
    .Y(\$auto$builder.cc:338:Biop$9261 )
  );
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9265  (
    .A(iParity),
    .B(iParityReceived),
    .Y(\$auto$builder.cc:338:Biop$9266 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9273  (
    .A(iFStopBit),
    .Y(\$auto$builder.cc:338:Biop$9274 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9275  (
    .A(CState),
    .B(3'h4),
    .Y(\$auto$builder.cc:338:Biop$9276 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9277  (
    .A(\$auto$builder.cc:338:Biop$9274 ),
    .B(\$auto$builder.cc:338:Biop$9276 ),
    .Y(\$auto$builder.cc:338:Biop$9278 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9283  (
    .A(iDOUT),
    .Y(\$auto$builder.cc:338:Biop$9284 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9285  (
    .A(iParityReceived),
    .Y(\$auto$builder.cc:338:Biop$9286 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9287  (
    .A(\$auto$builder.cc:338:Biop$9284 ),
    .B(\$auto$builder.cc:338:Biop$9286 ),
    .Y(\$auto$builder.cc:338:Biop$9288 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9291  (
    .A(\$auto$builder.cc:338:Biop$9288 ),
    .B(\$auto$builder.cc:338:Biop$9290 ),
    .Y(\$auto$builder.cc:338:Biop$9292 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9110  (
    .A(EPS),
    .Y(\$auto$builder.cc:364:Unop$9111 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$9137  (
    .A(\$auto$rtlil.cc:2874:Mux$9136 ),
    .S(iDataCount[2:0]),
    .Y(\$auto$rtlil.cc:2896:Demux$9138 )
  );
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$auto$builder.cc:38:Demux$9139  (
    .A(\$auto$rtlil.cc:2874:Mux$9136 ),
    .S(iDataCount[2:0]),
    .Y(\$auto$rtlil.cc:2896:Demux$9140 )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:50:Ge$9131  (
    .A({ 1'h0, iDataCount }),
    .B(1'h0),
    .Y(\$auto$rtlil.cc:2797:Ge$9132 )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:56:Lt$9129  (
    .A({ 1'h0, iDataCount }),
    .B(5'h08),
    .Y(\$auto$rtlil.cc:2791:Lt$9130 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:88:LogicAnd$9133  (
    .A(\$auto$rtlil.cc:2797:Ge$9132 ),
    .B(\$auto$rtlil.cc:2791:Lt$9130 ),
    .Y(\$auto$rtlil.cc:2806:LogicAnd$9134 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$9181  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9180 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9182 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$9281  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9280 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9282 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$9295  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9294 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9296 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$9301  (
    .A(1'h0),
    .B(1'h1),
    .S(\$auto$rtlil.cc:2746:ReduceBool$9300 ),
    .Y(\$auto$rtlil.cc:2874:Mux$9302 )
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:150.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$CState  (
    .AD(3'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(NState),
    .Q(CState)
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:265.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$PE  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\PE$9271 ),
    .Q(PE)
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iBaudStepD  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(iBaudStep),
    .Q(iBaudStepD)
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:123.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iDOUT  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iDOUT$9148 ),
    .Q(iDOUT)
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:123.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$iDataCount  (
    .AD(4'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iDataCount$9147 ),
    .Q(iDataCount)
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:265.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iParityReceived  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iParityReceived$9272 ),
    .Q(iParityReceived)
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:141.15-144.18|../rtl/apb_uart/uart_receiver.sv:140.13-144.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$12725  (
    .A(iDOUT),
    .B(\$auto$rtlil.cc:2875:Bwmux$9142 ),
    .S(\$procmux$12726_CMP ),
    .Y(\$procmux$12725_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:133.10-137.13|../rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$12728  (
    .A(\$procmux$12725_Y ),
    .B(8'hxx),
    .S(\$procmux$12729_CMP ),
    .Y(\$procmux$12728_Y )
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:141.15-144.18|../rtl/apb_uart/uart_receiver.sv:140.13-144.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12730  (
    .A(iDataCount),
    .B(\$auto$builder.cc:338:Biop$9144 [3:0]),
    .S(\$procmux$12731_CMP ),
    .Y(\$procmux$12730_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:133.10-137.13|../rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12733  (
    .A(\$procmux$12730_Y ),
    .B(4'hx),
    .S(\$procmux$12734_CMP ),
    .Y(\$procmux$12733_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:133.10-137.13|../rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$12737  (
    .A(\$auto$slang_frontend.cc:694:finish$\iDOUT$9146 ),
    .B(8'h00),
    .S(\$procmux$12738_CMP ),
    .Y(\$procmux$12737_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:133.10-137.13|../rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12741  (
    .A(\$auto$slang_frontend.cc:694:finish$\iDataCount$9145 ),
    .B(4'h0),
    .S(\$procmux$12742_CMP ),
    .Y(\$procmux$12741_Y )
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:251.7-251.23|../rtl/apb_uart/uart_receiver.sv:249.3-252.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12744  (
    .A(3'h5),
    .B(3'h0),
    .S(SIN),
    .Y(\$procmux$12744_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:249.3-252.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12746  (
    .A(3'hx),
    .B(\$procmux$12744_Y ),
    .S(\$procmux$12747_CMP ),
    .Y(\$procmux$12746_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:249.3-252.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12747_CMP0  (
    .A(CState),
    .B(3'h5),
    .Y(\$procmux$12747_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:230.7-239.26|../rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12752  (
    .A(3'h4),
    .B(\$auto$slang_frontend.cc:694:finish$\NState$9226 ),
    .S(\$procmux$12753_CMP ),
    .Y(\$procmux$12752_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12754  (
    .A(3'hx),
    .B(\$procmux$12752_Y ),
    .S(\$procmux$12755_CMP ),
    .Y(\$procmux$12754_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12755_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$12755_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:230.7-239.26|../rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12760  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\iRXFinished$9225 ),
    .S(\$procmux$12761_CMP ),
    .Y(\$procmux$12760_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12762  (
    .A(1'hx),
    .B(\$procmux$12760_Y ),
    .S(\$procmux$12763_CMP ),
    .Y(\$procmux$12762_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12763_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$12763_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:231.19-234.26|../rtl/apb_uart/uart_receiver.sv:230.7-239.26" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12768  (
    .A(3'h5),
    .B(3'h0),
    .S(iFStopBit),
    .Y(\$procmux$12768_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:230.7-239.26|../rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12770  (
    .A(3'hx),
    .B(\$procmux$12768_Y ),
    .S(\$procmux$12771_CMP ),
    .Y(\$procmux$12770_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12772  (
    .A(3'hx),
    .B(\$procmux$12770_Y ),
    .S(\$procmux$12773_CMP ),
    .Y(\$procmux$12772_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12773_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$12773_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:230.7-239.26|../rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12779  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$12780_CMP ),
    .Y(\$procmux$12779_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12781  (
    .A(1'hx),
    .B(\$procmux$12779_Y ),
    .S(\$procmux$12782_CMP ),
    .Y(\$procmux$12781_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12782_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$12782_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:218.7-218.22|../rtl/apb_uart/uart_receiver.sv:216.3-223.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12787  (
    .A(3'h3),
    .B(3'h4),
    .S(\$procmux$12788_CMP ),
    .Y(\$procmux$12787_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:216.3-223.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12789  (
    .A(3'hx),
    .B(\$procmux$12787_Y ),
    .S(\$procmux$12790_CMP ),
    .Y(\$procmux$12789_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:216.3-223.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12790_CMP0  (
    .A(CState),
    .B(3'h3),
    .Y(\$procmux$12790_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:199.7-206.26|../rtl/apb_uart/uart_receiver.sv:197.3-211.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12797  (
    .A(3'h2),
    .B(\$auto$slang_frontend.cc:694:finish$\NState$9210 ),
    .S(\$procmux$12798_CMP ),
    .Y(\$procmux$12797_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:197.3-211.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12799  (
    .A(3'hx),
    .B(\$procmux$12797_Y ),
    .S(\$procmux$12800_CMP ),
    .Y(\$procmux$12799_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:197.3-211.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12800_CMP0  (
    .A(CState),
    .B(3'h2),
    .Y(\$procmux$12800_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:201.11-201.25|../rtl/apb_uart/uart_receiver.sv:199.7-206.26" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12807  (
    .A(3'h4),
    .B(3'h3),
    .S(\$procmux$12808_CMP ),
    .Y(\$procmux$12807_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:199.7-206.26|../rtl/apb_uart/uart_receiver.sv:197.3-211.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12809  (
    .A(3'hx),
    .B(\$procmux$12807_Y ),
    .S(\$procmux$12810_CMP ),
    .Y(\$procmux$12809_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:197.3-211.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12811  (
    .A(3'hx),
    .B(\$procmux$12809_Y ),
    .S(\$procmux$12812_CMP ),
    .Y(\$procmux$12811_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:197.3-211.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12812_CMP0  (
    .A(CState),
    .B(3'h2),
    .Y(\$procmux$12812_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:183.7-186.26|../rtl/apb_uart/uart_receiver.sv:181.5-192.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12820  (
    .A(3'h1),
    .B(\$auto$slang_frontend.cc:694:finish$\NState$9200 ),
    .S(\$procmux$12821_CMP ),
    .Y(\$procmux$12820_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:179.5-193.12|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12822  (
    .A(3'hx),
    .B(\$procmux$12820_Y ),
    .S(\$procmux$12823_CMP ),
    .Y(\$procmux$12822_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:179.5-193.12|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12823_CMP0  (
    .A(CState),
    .B(3'h1),
    .Y(\$procmux$12823_CMP )
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:185.11-185.26|../rtl/apb_uart/uart_receiver.sv:183.7-186.26" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12830  (
    .A(3'h2),
    .B(3'h0),
    .S(iFSIN),
    .Y(\$procmux$12830_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:183.7-186.26|../rtl/apb_uart/uart_receiver.sv:181.5-192.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12832  (
    .A(3'hx),
    .B(\$procmux$12830_Y ),
    .S(\$procmux$12833_CMP ),
    .Y(\$procmux$12832_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:179.5-193.12|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12834  (
    .A(3'hx),
    .B(\$procmux$12832_Y ),
    .S(\$procmux$12835_CMP ),
    .Y(\$procmux$12834_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:179.5-193.12|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12835_CMP0  (
    .A(CState),
    .B(3'h1),
    .Y(\$procmux$12835_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:179.5-193.12|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$12846  (
    .A(1'h0),
    .B(2'h3),
    .S({ \$procmux$12849_CMP , \$procmux$12847_CMP  }),
    .Y(\$procmux$12846_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:179.5-193.12|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12847_CMP0  (
    .A(CState),
    .B(3'h1),
    .Y(\$procmux$12847_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:168.5-176.10|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12849_CMP0  (
    .A(CState),
    .Y(\$procmux$12849_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:168.5-176.10|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12862  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12863_CMP ),
    .Y(\$procmux$12862_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:168.5-176.10|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12863_CMP0  (
    .A(CState),
    .Y(\$procmux$12863_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:249.3-252.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd3)
  ) \$procmux$12866  (
    .A(3'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\NState$9191 , \$auto$slang_frontend.cc:694:finish$\NState$9201 , \$auto$slang_frontend.cc:694:finish$\NState$9211 , \$auto$slang_frontend.cc:694:finish$\NState$9216 , \$auto$slang_frontend.cc:694:finish$\NState$9228 , \$auto$slang_frontend.cc:694:finish$\NState$9233  }),
    .S({ \$procmux$12877_CMP , \$procmux$12875_CMP , \$procmux$12873_CMP , \$procmux$12871_CMP , \$procmux$12869_CMP , \$procmux$12867_CMP  }),
    .Y(\$procmux$12866_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:249.3-252.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12867_CMP0  (
    .A(CState),
    .B(3'h5),
    .Y(\$procmux$12867_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12869_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$12869_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:216.3-223.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12871_CMP0  (
    .A(CState),
    .B(3'h3),
    .Y(\$procmux$12871_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:197.3-211.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12873_CMP0  (
    .A(CState),
    .B(3'h2),
    .Y(\$procmux$12873_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:179.5-193.12|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12875_CMP0  (
    .A(CState),
    .B(3'h1),
    .Y(\$procmux$12875_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:168.5-176.10|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12877_CMP0  (
    .A(CState),
    .Y(\$procmux$12877_CMP )
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:171.7-171.23|../rtl/apb_uart/uart_receiver.sv:169.3-172.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12884  (
    .A(3'h1),
    .B(3'h0),
    .S(SIN),
    .Y(\$procmux$12884_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:168.5-176.10|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12886  (
    .A(3'hx),
    .B(\$procmux$12884_Y ),
    .S(\$procmux$12887_CMP ),
    .Y(\$procmux$12886_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:168.5-176.10|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12887_CMP0  (
    .A(CState),
    .Y(\$procmux$12887_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12892  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\iRXFinished$9227 ),
    .S(\$procmux$12893_CMP ),
    .Y(\$procmux$12892_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:228.3-244.18|../rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12893_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$12893_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:280.11-298.20|../rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12896  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\PE$9270 ),
    .S(\$procmux$12897_CMP ),
    .Y(\$procmux$12896_Y )
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:294.15-294.27|../rtl/apb_uart/uart_receiver.sv:292.11-295.34" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12900  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12901_CMP ),
    .Y(\$procmux$12900_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:284.11-287.34|../rtl/apb_uart/uart_receiver.sv:282.9-297.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12903  (
    .A(\$procmux$12900_Y ),
    .B(1'hx),
    .S(\$procmux$12904_CMP ),
    .Y(\$procmux$12903_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:280.11-298.20|../rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12905  (
    .A(1'hx),
    .B(\$procmux$12903_Y ),
    .S(\$procmux$12906_CMP ),
    .Y(\$procmux$12905_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:284.11-287.34|../rtl/apb_uart/uart_receiver.sv:282.9-297.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12912  (
    .A(\$auto$slang_frontend.cc:694:finish$\PE$9269 ),
    .B(\$auto$slang_frontend.cc:694:finish$\PE$9264 ),
    .S(\$procmux$12913_CMP ),
    .Y(\$procmux$12912_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:280.11-298.20|../rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12914  (
    .A(1'hx),
    .B(\$procmux$12912_Y ),
    .S(\$procmux$12915_CMP ),
    .Y(\$procmux$12914_Y )
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:286.15-286.27|../rtl/apb_uart/uart_receiver.sv:284.11-287.34" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12919  (
    .A(1'h1),
    .B(1'h0),
    .S(\$auto$builder.cc:338:Biop$9259 ),
    .Y(\$procmux$12919_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:284.11-287.34|../rtl/apb_uart/uart_receiver.sv:282.9-297.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12921  (
    .A(1'hx),
    .B(\$procmux$12919_Y ),
    .S(\$procmux$12922_CMP ),
    .Y(\$procmux$12921_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:280.11-298.20|../rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12923  (
    .A(1'hx),
    .B(\$procmux$12921_Y ),
    .S(\$procmux$12924_CMP ),
    .Y(\$procmux$12923_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_receiver.sv:280.11-298.20|../rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12927  (
    .A(1'h0),
    .B(\$auto$slang_frontend.cc:694:finish$\iParityReceived$9249 ),
    .S(\$procmux$12928_CMP ),
    .Y(\$procmux$12927_Y )
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:276.7-276.32|../rtl/apb_uart/uart_receiver.sv:274.3-277.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12930  (
    .A(iParityReceived),
    .B(iFSIN),
    .S(\$procmux$12931_CMP ),
    .Y(\$procmux$12930_Y )
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:78.27" */
  \slib_counter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_BRC  RX_BRC (
    .CLEAR(iBaudCountClear),
    .CLK(CLK),
    .D(4'h0),
    .DOWN(1'h0),
    .ENABLE(RXCLK),
    .LOAD(1'h0),
    .OVERFLOW(iBaudStep),
    .Q(iBaudCount),
    .RST(RST)
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:95.31" */
  \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_IFSB  RX_IFSB (
    .CE(RXCLK),
    .CLK(CLK),
    .D(SIN),
    .Q(iFStopBit),
    .RST(RST)
  );
  /* src = "../rtl/apb_uart/uart_receiver.sv:88.44" */
  \slib_mv_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_MVF  RX_MVF (
    .CLEAR(iFilterClear),
    .CLK(CLK),
    .D(SIN),
    .Q(iFSIN),
    .RST(RST),
    .SAMPLE(RXCLK)
  );
  assign iFilterClear = \$auto$builder.cc:338:Biop$9094 ;
  assign iParity = \$auto$builder.cc:338:Biop$9113 ;
  assign iDataCountFinish = \$auto$rtlil.cc:2874:Mux$9182 ;
  assign iRXFinished = \$auto$slang_frontend.cc:694:finish$\iRXFinished$9234 ;
  assign NState = \$auto$slang_frontend.cc:694:finish$\NState$9235 ;
  assign iBaudCountClear = \$auto$slang_frontend.cc:694:finish$\iBaudCountClear$9236 ;
  assign iDataCountInit = \$auto$slang_frontend.cc:694:finish$\iDataCountInit$9237 ;
  assign iNoStopReceived = \$auto$rtlil.cc:2874:Mux$9282 ;
  assign iBI = \$auto$rtlil.cc:2874:Mux$9296 ;
  assign iFE = \$auto$rtlil.cc:2874:Mux$9302 ;
  assign DOUT = iDOUT;
  assign BI = iBI;
  assign FE = iFE;
  assign RXFINISHED = iRXFinished;
  assign \$procmux$12726_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9128 ;
  assign \$procmux$12729_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9120 ;
  assign \$auto$slang_frontend.cc:694:finish$\iDOUT$9146  = \$procmux$12728_Y ;
  assign \$procmux$12731_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9128 ;
  assign \$procmux$12734_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9120 ;
  assign \$auto$slang_frontend.cc:694:finish$\iDataCount$9145  = \$procmux$12733_Y ;
  assign \$procmux$12738_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9120 ;
  assign \$auto$slang_frontend.cc:694:finish$\iDOUT$9148  = \$procmux$12737_Y ;
  assign \$procmux$12742_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9120 ;
  assign \$auto$slang_frontend.cc:694:finish$\iDataCount$9147  = \$procmux$12741_Y ;
  assign \$procmux$12745_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9232 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9233  = \$procmux$12746_Y ;
  assign \$procmux$12753_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9220 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9228  = \$procmux$12754_Y ;
  assign \$procmux$12761_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9220 ;
  assign \$auto$slang_frontend.cc:694:finish$\iRXFinished$9227  = \$procmux$12762_Y ;
  assign \$procmux$12769_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9224 ;
  assign \$procmux$12771_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9220 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9226  = \$procmux$12772_Y ;
  assign \$procmux$12780_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9220 ;
  assign \$auto$slang_frontend.cc:694:finish$\iRXFinished$9225  = \$procmux$12781_Y ;
  assign \$procmux$12788_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9215 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9216  = \$procmux$12789_Y ;
  assign \$procmux$12798_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9205 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9211  = \$procmux$12799_Y ;
  assign \$procmux$12808_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9209 ;
  assign \$procmux$12810_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9205 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9210  = \$procmux$12811_Y ;
  assign \$procmux$12821_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9195 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9201  = \$procmux$12822_Y ;
  assign \$procmux$12831_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9199 ;
  assign \$procmux$12833_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9195 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9200  = \$procmux$12834_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\iDataCountInit$9237  = \$procmux$12846_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\iBaudCountClear$9236  = \$procmux$12862_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9235  = \$procmux$12866_Y ;
  assign \$procmux$12885_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9190 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9191  = \$procmux$12886_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\iRXFinished$9234  = \$procmux$12892_Y ;
  assign \$procmux$12897_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9253 ;
  assign \$auto$slang_frontend.cc:694:finish$\PE$9271  = \$procmux$12896_Y ;
  assign \$procmux$12901_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9268 ;
  assign \$procmux$12904_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9257 ;
  assign \$procmux$12906_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9253 ;
  assign \$auto$slang_frontend.cc:694:finish$\PE$9269  = \$procmux$12905_Y ;
  assign \$procmux$12913_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9257 ;
  assign \$procmux$12915_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9253 ;
  assign \$auto$slang_frontend.cc:694:finish$\PE$9270  = \$procmux$12914_Y ;
  assign \$procmux$12920_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9263 ;
  assign \$procmux$12922_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9257 ;
  assign \$procmux$12924_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9253 ;
  assign \$auto$slang_frontend.cc:694:finish$\PE$9264  = \$procmux$12923_Y ;
  assign \$procmux$12928_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9253 ;
  assign \$auto$slang_frontend.cc:694:finish$\iParityReceived$9272  = \$procmux$12927_Y ;
  assign \$procmux$12931_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9248 ;
  assign \$auto$slang_frontend.cc:694:finish$\iParityReceived$9249  = \$procmux$12930_Y ;
  assign \$auto$builder.cc:338:Biop$9118  = iDataCountInit;
  assign \$auto$rtlil.cc:2746:ReduceBool$9120  = \$procmux$12846_Y ;
  assign \$auto$builder.cc:338:Biop$9122  = iBaudStep;
  assign \$auto$rtlil.cc:2746:ReduceBool$9180  = \$auto$builder.cc:338:Biop$9178 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9128  = \$auto$builder.cc:338:Biop$9126 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9190  = \$auto$builder.cc:338:Biop$9188 ;
  assign \$auto$builder.cc:338:Biop$9193  = iBaudStep;
  assign \$auto$rtlil.cc:2746:ReduceBool$9195  = iBaudStep;
  assign \$auto$rtlil.cc:2746:ReduceBool$9199  = \$auto$builder.cc:338:Biop$9197 ;
  assign \$auto$builder.cc:338:Biop$9203  = iDataCountFinish;
  assign \$auto$rtlil.cc:2746:ReduceBool$9205  = \$auto$rtlil.cc:2874:Mux$9182 ;
  assign \$auto$builder.cc:338:Biop$9207  = PEN;
  assign \$auto$rtlil.cc:2746:ReduceBool$9209  = PEN;
  assign \$auto$builder.cc:338:Biop$9213  = iBaudStep;
  assign \$auto$rtlil.cc:2746:ReduceBool$9215  = iBaudStep;
  assign \$auto$builder.cc:338:Biop$9218  = iBaudCount[3];
  assign \$auto$rtlil.cc:2746:ReduceBool$9220  = iBaudCount[3];
  assign \$auto$rtlil.cc:2746:ReduceBool$9224  = \$auto$builder.cc:338:Biop$9222 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9232  = \$auto$builder.cc:338:Biop$9230 ;
  assign \$auto$builder.cc:338:Biop$9244  = iBaudStep;
  assign \$auto$rtlil.cc:2746:ReduceBool$9248  = \$auto$builder.cc:338:Biop$9246 ;
  assign \$auto$builder.cc:338:Biop$9251  = PEN;
  assign \$auto$rtlil.cc:2746:ReduceBool$9253  = PEN;
  assign \$auto$builder.cc:338:Biop$9255  = SP;
  assign \$auto$rtlil.cc:2746:ReduceBool$9257  = SP;
  assign \$auto$rtlil.cc:2746:ReduceBool$9263  = \$auto$builder.cc:338:Biop$9261 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9268  = \$auto$builder.cc:338:Biop$9266 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9280  = \$auto$builder.cc:338:Biop$9278 ;
  assign \$auto$builder.cc:338:Biop$9290  = iNoStopReceived;
  assign \$auto$rtlil.cc:2746:ReduceBool$9294  = \$auto$builder.cc:338:Biop$9292 ;
  assign \$auto$builder.cc:338:Biop$9298  = iNoStopReceived;
  assign \$auto$rtlil.cc:2746:ReduceBool$9300  = \$auto$rtlil.cc:2874:Mux$9282 ;
endmodule

/* src = "../rtl/apb_uart/uart_transmitter.sv:35.8" */
module \uart_transmitter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_TX (CLK, SOUT, RST, CLEAR, TXCLK, TXSTART, WLS, STB, PEN, EPS, SP, BC, DIN, TXFINISHED);
  wire \$auto$builder.cc:338:Biop$8951 ;
  wire \$auto$builder.cc:338:Biop$8955 ;
  wire \$auto$builder.cc:338:Biop$8959 ;
  wire \$auto$builder.cc:338:Biop$8961 ;
  wire \$auto$builder.cc:338:Biop$8963 ;
  wire \$auto$builder.cc:338:Biop$8965 ;
  wire \$auto$builder.cc:338:Biop$8967 ;
  wire \$auto$builder.cc:338:Biop$8978 ;
  wire \$auto$builder.cc:338:Biop$8983 ;
  wire \$auto$builder.cc:338:Biop$8987 ;
  wire \$auto$builder.cc:338:Biop$8993 ;
  wire \$auto$builder.cc:338:Biop$8997 ;
  wire \$auto$builder.cc:338:Biop$9003 ;
  wire \$auto$builder.cc:338:Biop$9007 ;
  wire \$auto$builder.cc:338:Biop$9013 ;
  wire \$auto$builder.cc:338:Biop$9018 ;
  wire \$auto$builder.cc:338:Biop$9022 ;
  wire \$auto$builder.cc:338:Biop$9027 ;
  wire \$auto$builder.cc:338:Biop$9035 ;
  wire \$auto$builder.cc:338:Biop$9039 ;
  wire \$auto$builder.cc:338:Biop$9045 ;
  wire \$auto$builder.cc:338:Biop$9053 ;
  wire \$auto$builder.cc:338:Biop$9055 ;
  wire \$auto$builder.cc:338:Biop$9057 ;
  wire \$auto$builder.cc:338:Biop$9059 ;
  wire \$auto$builder.cc:338:Biop$9061 ;
  wire \$auto$builder.cc:338:Biop$9063 ;
  wire \$auto$builder.cc:338:Biop$9065 ;
  wire \$auto$builder.cc:338:Biop$9071 ;
  wire \$auto$builder.cc:338:Biop$9073 ;
  wire \$auto$builder.cc:338:Biop$9075 ;
  wire \$auto$builder.cc:338:Biop$9080 ;
  wire \$auto$builder.cc:338:Biop$9085 ;
  wire \$auto$builder.cc:364:Unop$9031 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8953 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8957 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8969 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8980 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8985 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8989 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8995 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$8999 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9005 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9009 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9015 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9020 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9024 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9029 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9037 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9041 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9047 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9077 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9082 ;
  wire \$auto$rtlil.cc:2746:ReduceBool$9087 ;
  wire \$auto$rtlil.cc:2747:LogicNot$8949 ;
  wire \$auto$rtlil.cc:2747:LogicNot$9069 ;
  wire \$auto$rtlil.cc:2874:Mux$9089 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:89.18-98.23" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\CState$8970 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\CState$8972 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\CState$8974 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:110.13-113.18" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$8981 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:152.18-159.23" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$8990 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:150.13-164.18" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$8991 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:172.18-179.23" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$9000 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:170.13-184.18" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$9001 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:192.18-199.23" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$9010 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:190.13-204.18" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$9011 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:210.13-217.18" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$9016 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:255.18-258.23" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$9042 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:249.13-260.18" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$9043 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:265.8-268.13" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$9048 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  wire [3:0] \$auto$slang_frontend.cc:694:finish$\NState$9049 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:308.14-309.34" */
  wire \$auto$slang_frontend.cc:694:finish$\iFinished$9078 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:310.14-313.30" */
  wire \$auto$slang_frontend.cc:694:finish$\iLast$9083 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:289.9-294.16" */
  wire \$auto$slang_frontend.cc:694:finish$\iParity$9066 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:224.18-231.23" */
  wire \$auto$slang_frontend.cc:694:finish$\iSout$9025 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:235.18-242.23" */
  wire \$auto$slang_frontend.cc:694:finish$\iSout$9032 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:222.13-243.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iSout$9033 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iSout$9050 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:89.18-98.23" */
  wire \$auto$slang_frontend.cc:694:finish$\iTx2$8971 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  wire \$auto$slang_frontend.cc:694:finish$\iTx2$8973 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  wire \$auto$slang_frontend.cc:694:finish$\iTx2$8975 ;
  wire \$procmux$12933_Y ;
  wire \$procmux$12934_CMP ;
  wire \$procmux$12936_Y ;
  wire \$procmux$12937_CMP ;
  wire \$procmux$12939_Y ;
  wire \$procmux$12940_CMP ;
  wire \$procmux$12941_CMP ;
  wire \$procmux$12942_CMP ;
  wire [3:0] \$procmux$12944_Y ;
  wire \$procmux$12945_CMP ;
  wire [3:0] \$procmux$12946_Y ;
  wire \$procmux$12947_CMP ;
  wire [3:0] \$procmux$12950_Y ;
  wire \$procmux$12951_CMP ;
  wire [3:0] \$procmux$12953_Y ;
  wire \$procmux$12954_CMP ;
  wire [3:0] \$procmux$12955_Y ;
  wire \$procmux$12956_CMP ;
  wire [3:0] \$procmux$12961_Y ;
  wire \$procmux$12962_CMP ;
  wire [3:0] \$procmux$12963_Y ;
  wire \$procmux$12964_CMP ;
  wire \$procmux$12969_Y ;
  wire \$procmux$12970_CMP ;
  wire \$procmux$12972_Y ;
  wire \$procmux$12973_CMP ;
  wire \$procmux$12974_Y ;
  wire \$procmux$12975_CMP ;
  wire \$procmux$12982_Y ;
  wire \$procmux$12983_CMP ;
  wire \$procmux$12984_Y ;
  wire \$procmux$12985_CMP ;
  wire \$procmux$12991_Y ;
  wire \$procmux$12992_CMP ;
  wire \$procmux$12993_Y ;
  wire \$procmux$12994_CMP ;
  wire \$procmux$12995_Y ;
  wire \$procmux$12996_CMP ;
  wire [3:0] \$procmux$13002_Y ;
  wire \$procmux$13003_CMP ;
  wire [3:0] \$procmux$13004_Y ;
  wire \$procmux$13005_CMP ;
  wire [3:0] \$procmux$13013_Y ;
  wire \$procmux$13014_CMP ;
  wire [3:0] \$procmux$13015_Y ;
  wire \$procmux$13016_CMP ;
  wire [3:0] \$procmux$13024_Y ;
  wire \$procmux$13025_CMP ;
  wire [3:0] \$procmux$13026_Y ;
  wire \$procmux$13027_CMP ;
  wire [3:0] \$procmux$13028_Y ;
  wire \$procmux$13029_CMP ;
  wire [3:0] \$procmux$13038_Y ;
  wire \$procmux$13039_CMP ;
  wire [3:0] \$procmux$13040_Y ;
  wire \$procmux$13041_CMP ;
  wire [3:0] \$procmux$13050_Y ;
  wire \$procmux$13051_CMP ;
  wire [3:0] \$procmux$13052_Y ;
  wire \$procmux$13053_CMP ;
  wire [3:0] \$procmux$13054_Y ;
  wire \$procmux$13055_CMP ;
  wire [3:0] \$procmux$13065_Y ;
  wire \$procmux$13066_CMP ;
  wire [3:0] \$procmux$13067_Y ;
  wire \$procmux$13068_CMP ;
  wire [3:0] \$procmux$13078_Y ;
  wire \$procmux$13079_CMP ;
  wire [3:0] \$procmux$13080_Y ;
  wire \$procmux$13081_CMP ;
  wire [3:0] \$procmux$13082_Y ;
  wire \$procmux$13083_CMP ;
  wire [3:0] \$procmux$13086_Y ;
  wire \$procmux$13087_CMP ;
  wire \$procmux$13089_CMP ;
  wire \$procmux$13091_CMP ;
  wire \$procmux$13093_CMP ;
  wire \$procmux$13095_CMP ;
  wire \$procmux$13097_CMP ;
  wire \$procmux$13099_CMP ;
  wire \$procmux$13100_CMP ;
  wire \$procmux$13101_CMP ;
  wire \$procmux$13102_CMP ;
  wire \$procmux$13103_CMP ;
  wire \$procmux$13104_CMP ;
  wire \$procmux$13106_CMP ;
  wire [3:0] \$procmux$13120_Y ;
  wire \$procmux$13121_CMP ;
  wire [3:0] \$procmux$13122_Y ;
  wire \$procmux$13123_CMP ;
  wire \$procmux$13130_Y ;
  wire \$procmux$13131_CMP ;
  wire \$procmux$13133_CMP ;
  wire \$procmux$13135_CMP ;
  wire \$procmux$13137_CMP ;
  wire \$procmux$13139_CMP ;
  wire \$procmux$13140_CMP ;
  wire \$procmux$13141_CMP ;
  wire \$procmux$13142_CMP ;
  wire \$procmux$13143_CMP ;
  wire \$procmux$13144_CMP ;
  wire \$procmux$13146_Y ;
  wire \$procmux$13147_CMP ;
  wire \$procmux$13149_Y ;
  wire \$procmux$13150_CMP ;
  wire \$procmux$13151_Y ;
  wire \$procmux$13152_CMP ;
  wire [3:0] \$procmux$13154_Y ;
  wire \$procmux$13155_CMP ;
  wire [3:0] \$procmux$13157_Y ;
  wire \$procmux$13158_CMP ;
  wire [3:0] \$procmux$13159_Y ;
  wire \$procmux$13160_CMP ;
  wire \$procmux$13163_Y ;
  wire \$procmux$13164_CMP ;
  wire \$procmux$13165_Y ;
  wire \$procmux$13166_CMP ;
  wire [3:0] \$procmux$13169_Y ;
  wire \$procmux$13170_CMP ;
  wire [3:0] \$procmux$13171_Y ;
  wire \$procmux$13172_CMP ;
  wire \$procmux$13174_Y ;
  wire \$procmux$13175_CMP ;
  wire [3:0] \$procmux$13177_Y ;
  wire \$procmux$13178_CMP ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:46.14" */
  input BC;
  wire BC;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:40.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:66.12" */
  wire [3:0] CState;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:47.20" */
  input [7:0] DIN;
  wire [7:0] DIN;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:44.14" */
  input EPS;
  wire EPS;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:66.20" */
  wire [3:0] NState;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:43.14" */
  input PEN;
  wire PEN;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:49.16" */
  output SOUT;
  wire SOUT;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:45.14" */
  input SP;
  wire SP;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:42.14" */
  input STB;
  wire STB;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:38.14" */
  input TXCLK;
  wire TXCLK;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:48.16" */
  output TXFINISHED;
  wire TXFINISHED;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:39.14" */
  input TXSTART;
  wire TXSTART;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:283.15" */
  wire \TX_PAR.iP40 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:283.21" */
  wire \TX_PAR.iP50 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:283.27" */
  wire \TX_PAR.iP60 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:283.33" */
  wire \TX_PAR.iP70 ;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:41.20" */
  input [1:0] WLS;
  wire [1:0] WLS;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:70.5" */
  wire iFinished;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:297.9" */
  wire iLast;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:69.5" */
  wire iParity;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:68.5" */
  wire iSout;
  /* src = "../rtl/apb_uart/uart_transmitter.sv:67.5" */
  wire iTx2;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$8948  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$8949 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:102:LogicNot$9068  (
    .A(RST),
    .Y(\$auto$rtlil.cc:2747:LogicNot$9069 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8954  (
    .A(iTx2),
    .Y(\$auto$builder.cc:338:Biop$8955 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8958  (
    .A(WLS),
    .Y(\$auto$builder.cc:338:Biop$8959 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8962  (
    .A(\$auto$builder.cc:338:Biop$8959 ),
    .B(\$auto$builder.cc:338:Biop$8961 ),
    .Y(\$auto$builder.cc:338:Biop$8963 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8964  (
    .A(CState),
    .B(4'hc),
    .Y(\$auto$builder.cc:338:Biop$8965 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8966  (
    .A(\$auto$builder.cc:338:Biop$8963 ),
    .B(\$auto$builder.cc:338:Biop$8965 ),
    .Y(\$auto$builder.cc:338:Biop$8967 )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8982  (
    .A(WLS),
    .Y(\$auto$builder.cc:338:Biop$8983 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$8992  (
    .A(WLS),
    .B(2'h1),
    .Y(\$auto$builder.cc:338:Biop$8993 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9002  (
    .A(WLS),
    .B(2'h2),
    .Y(\$auto$builder.cc:338:Biop$9003 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9052  (
    .A(DIN[4]),
    .B(DIN[3]),
    .Y(\$auto$builder.cc:338:Biop$9053 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9054  (
    .A(\$auto$builder.cc:338:Biop$9053 ),
    .B(DIN[2]),
    .Y(\$auto$builder.cc:338:Biop$9055 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9056  (
    .A(\$auto$builder.cc:338:Biop$9055 ),
    .B(DIN[1]),
    .Y(\$auto$builder.cc:338:Biop$9057 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9058  (
    .A(\$auto$builder.cc:338:Biop$9057 ),
    .B(DIN[0]),
    .Y(\$auto$builder.cc:338:Biop$9059 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9060  (
    .A(DIN[5]),
    .B(\$auto$builder.cc:338:Biop$9059 ),
    .Y(\$auto$builder.cc:338:Biop$9061 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9062  (
    .A(DIN[6]),
    .B(\$auto$builder.cc:338:Biop$9061 ),
    .Y(\$auto$builder.cc:338:Biop$9063 )
  );
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9064  (
    .A(DIN[7]),
    .B(\$auto$builder.cc:338:Biop$9063 ),
    .Y(\$auto$builder.cc:338:Biop$9065 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9070  (
    .A(iLast),
    .Y(\$auto$builder.cc:338:Biop$9071 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9072  (
    .A(CState),
    .B(4'hb),
    .Y(\$auto$builder.cc:338:Biop$9073 )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9074  (
    .A(\$auto$builder.cc:338:Biop$9071 ),
    .B(\$auto$builder.cc:338:Biop$9073 ),
    .Y(\$auto$builder.cc:338:Biop$9075 )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9079  (
    .A(CState),
    .B(4'hb),
    .Y(\$auto$builder.cc:338:Biop$9080 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:330:Biop$9084  (
    .A(BC),
    .Y(\$auto$builder.cc:338:Biop$9085 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$builder.cc:359:Unop$9030  (
    .A(iParity),
    .Y(\$auto$builder.cc:364:Unop$9031 )
  );
  \$mux  #(
    .WIDTH(32'd1)
  ) \$auto$slang_frontend.cc:2041:operator()$9088  (
    .A(iSout),
    .B(1'h0),
    .S(BC),
    .Y(\$auto$rtlil.cc:2874:Mux$9089 )
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:72.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$CState  (
    .AD(4'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\CState$8974 ),
    .Q(CState)
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:298.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFinished  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iFinished$9078 ),
    .Q(iFinished)
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:298.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLast  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iLast$9083 ),
    .Q(iLast)
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:72.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iTx2  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$auto$slang_frontend.cc:694:finish$\iTx2$8975 ),
    .Q(iTx2)
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:311.16-311.30|../rtl/apb_uart/uart_transmitter.sv:310.14-313.30" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12933  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12934_CMP ),
    .Y(\$procmux$12933_Y )
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:309.16-309.34|../rtl/apb_uart/uart_transmitter.sv:308.14-309.34" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12936  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12937_CMP ),
    .Y(\$procmux$12936_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:292.20-292.36|../rtl/apb_uart/uart_transmitter.sv:289.9-294.16" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$12939  (
    .A(\$auto$builder.cc:338:Biop$9065 ),
    .B({ \$auto$builder.cc:338:Biop$9059 , \$auto$builder.cc:338:Biop$9061 , \$auto$builder.cc:338:Biop$9063  }),
    .S({ \$procmux$12942_CMP , \$procmux$12941_CMP , \$procmux$12940_CMP  }),
    .Y(\$procmux$12939_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:292.20-292.36|../rtl/apb_uart/uart_transmitter.sv:289.9-294.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12940_CMP0  (
    .A(WLS),
    .B(2'h2),
    .Y(\$procmux$12940_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:291.20-291.36|../rtl/apb_uart/uart_transmitter.sv:289.9-294.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12941_CMP0  (
    .A(WLS),
    .B(2'h1),
    .Y(\$procmux$12941_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:290.20-290.36|../rtl/apb_uart/uart_transmitter.sv:289.9-294.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12942_CMP0  (
    .A(WLS),
    .Y(\$procmux$12942_CMP )
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:267.13-267.29|../rtl/apb_uart/uart_transmitter.sv:265.8-268.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12944  (
    .A(4'h0),
    .B(4'h1),
    .S(\$procmux$12945_CMP ),
    .Y(\$procmux$12944_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:265.8-268.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12946  (
    .A(4'hx),
    .B(\$procmux$12944_Y ),
    .S(\$procmux$12947_CMP ),
    .Y(\$procmux$12946_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:265.8-268.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12947_CMP0  (
    .A(CState),
    .B(4'hc),
    .Y(\$procmux$12947_CMP )
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:257.23-257.39|../rtl/apb_uart/uart_transmitter.sv:255.18-258.23" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12950  (
    .A(4'h0),
    .B(4'h1),
    .S(\$procmux$12951_CMP ),
    .Y(\$procmux$12950_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:251.18-251.34|../rtl/apb_uart/uart_transmitter.sv:249.13-260.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12953  (
    .A(\$procmux$12950_Y ),
    .B(4'hx),
    .S(\$procmux$12954_CMP ),
    .Y(\$procmux$12953_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:249.13-260.18|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12955  (
    .A(4'hx),
    .B(\$procmux$12953_Y ),
    .S(\$procmux$12956_CMP ),
    .Y(\$procmux$12955_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:249.13-260.18|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12956_CMP0  (
    .A(CState),
    .B(4'hb),
    .Y(\$procmux$12956_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:251.18-251.34|../rtl/apb_uart/uart_transmitter.sv:249.13-260.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12961  (
    .A(\$auto$slang_frontend.cc:694:finish$\NState$9042 ),
    .B(4'hc),
    .S(\$procmux$12962_CMP ),
    .Y(\$procmux$12961_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:249.13-260.18|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$12963  (
    .A(4'hx),
    .B(\$procmux$12961_Y ),
    .S(\$procmux$12964_CMP ),
    .Y(\$procmux$12963_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:249.13-260.18|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12964_CMP0  (
    .A(CState),
    .B(4'hb),
    .Y(\$procmux$12964_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:237.23-237.40|../rtl/apb_uart/uart_transmitter.sv:235.18-242.23" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12969  (
    .A(\$auto$builder.cc:364:Unop$9031 ),
    .B(\$auto$slang_frontend.cc:694:finish$\iParity$9066 ),
    .S(\$procmux$12970_CMP ),
    .Y(\$procmux$12969_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:224.18-231.23|../rtl/apb_uart/uart_transmitter.sv:222.13-243.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12972  (
    .A(\$procmux$12969_Y ),
    .B(1'hx),
    .S(\$procmux$12973_CMP ),
    .Y(\$procmux$12972_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:221.10-245.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12974  (
    .A(1'hx),
    .B(\$procmux$12972_Y ),
    .S(\$procmux$12975_CMP ),
    .Y(\$procmux$12974_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:221.10-245.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12975_CMP0  (
    .A(CState),
    .B(4'ha),
    .Y(\$procmux$12975_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:224.18-231.23|../rtl/apb_uart/uart_transmitter.sv:222.13-243.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12982  (
    .A(\$auto$slang_frontend.cc:694:finish$\iSout$9032 ),
    .B(\$auto$slang_frontend.cc:694:finish$\iSout$9025 ),
    .S(\$procmux$12983_CMP ),
    .Y(\$procmux$12982_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:221.10-245.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12984  (
    .A(1'hx),
    .B(\$procmux$12982_Y ),
    .S(\$procmux$12985_CMP ),
    .Y(\$procmux$12984_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:221.10-245.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12985_CMP0  (
    .A(CState),
    .B(4'ha),
    .Y(\$procmux$12985_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:226.23-226.38|../rtl/apb_uart/uart_transmitter.sv:224.18-231.23" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12991  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$12992_CMP ),
    .Y(\$procmux$12991_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:224.18-231.23|../rtl/apb_uart/uart_transmitter.sv:222.13-243.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12993  (
    .A(1'hx),
    .B(\$procmux$12991_Y ),
    .S(\$procmux$12994_CMP ),
    .Y(\$procmux$12993_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:221.10-245.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12995  (
    .A(1'hx),
    .B(\$procmux$12993_Y ),
    .S(\$procmux$12996_CMP ),
    .Y(\$procmux$12995_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:221.10-245.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$12996_CMP0  (
    .A(CState),
    .B(4'ha),
    .Y(\$procmux$12996_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:212.18-212.32|../rtl/apb_uart/uart_transmitter.sv:210.13-217.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13002  (
    .A(4'hb),
    .B(4'ha),
    .S(\$procmux$13003_CMP ),
    .Y(\$procmux$13002_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:208.10-218.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13004  (
    .A(4'hx),
    .B(\$procmux$13002_Y ),
    .S(\$procmux$13005_CMP ),
    .Y(\$procmux$13004_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:208.10-218.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13005_CMP0  (
    .A(CState),
    .B(4'h9),
    .Y(\$procmux$13005_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:192.18-199.23|../rtl/apb_uart/uart_transmitter.sv:190.13-204.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13013  (
    .A(4'h9),
    .B(\$auto$slang_frontend.cc:694:finish$\NState$9010 ),
    .S(\$procmux$13014_CMP ),
    .Y(\$procmux$13013_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:188.10-205.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13015  (
    .A(4'hx),
    .B(\$procmux$13013_Y ),
    .S(\$procmux$13016_CMP ),
    .Y(\$procmux$13015_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:188.10-205.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13016_CMP0  (
    .A(CState),
    .B(4'h8),
    .Y(\$procmux$13016_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:194.23-194.37|../rtl/apb_uart/uart_transmitter.sv:192.18-199.23" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13024  (
    .A(4'hb),
    .B(4'ha),
    .S(\$procmux$13025_CMP ),
    .Y(\$procmux$13024_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:192.18-199.23|../rtl/apb_uart/uart_transmitter.sv:190.13-204.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13026  (
    .A(4'hx),
    .B(\$procmux$13024_Y ),
    .S(\$procmux$13027_CMP ),
    .Y(\$procmux$13026_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:188.10-205.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13028  (
    .A(4'hx),
    .B(\$procmux$13026_Y ),
    .S(\$procmux$13029_CMP ),
    .Y(\$procmux$13028_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:188.10-205.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13029_CMP0  (
    .A(CState),
    .B(4'h8),
    .Y(\$procmux$13029_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:172.18-179.23|../rtl/apb_uart/uart_transmitter.sv:170.13-184.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13038  (
    .A(4'h8),
    .B(\$auto$slang_frontend.cc:694:finish$\NState$9000 ),
    .S(\$procmux$13039_CMP ),
    .Y(\$procmux$13038_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:168.10-185.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13040  (
    .A(4'hx),
    .B(\$procmux$13038_Y ),
    .S(\$procmux$13041_CMP ),
    .Y(\$procmux$13040_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:168.10-185.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13041_CMP0  (
    .A(CState),
    .B(4'h7),
    .Y(\$procmux$13041_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:174.23-174.37|../rtl/apb_uart/uart_transmitter.sv:172.18-179.23" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13050  (
    .A(4'hb),
    .B(4'ha),
    .S(\$procmux$13051_CMP ),
    .Y(\$procmux$13050_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:172.18-179.23|../rtl/apb_uart/uart_transmitter.sv:170.13-184.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13052  (
    .A(4'hx),
    .B(\$procmux$13050_Y ),
    .S(\$procmux$13053_CMP ),
    .Y(\$procmux$13052_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:168.10-185.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13054  (
    .A(4'hx),
    .B(\$procmux$13052_Y ),
    .S(\$procmux$13055_CMP ),
    .Y(\$procmux$13054_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:168.10-185.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13055_CMP0  (
    .A(CState),
    .B(4'h7),
    .Y(\$procmux$13055_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:152.18-159.23|../rtl/apb_uart/uart_transmitter.sv:150.13-164.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13065  (
    .A(4'h7),
    .B(\$auto$slang_frontend.cc:694:finish$\NState$8990 ),
    .S(\$procmux$13066_CMP ),
    .Y(\$procmux$13065_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:148.10-165.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13067  (
    .A(4'hx),
    .B(\$procmux$13065_Y ),
    .S(\$procmux$13068_CMP ),
    .Y(\$procmux$13067_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:148.10-165.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13068_CMP0  (
    .A(CState),
    .B(4'h6),
    .Y(\$procmux$13068_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:154.23-154.37|../rtl/apb_uart/uart_transmitter.sv:152.18-159.23" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13078  (
    .A(4'hb),
    .B(4'ha),
    .S(\$procmux$13079_CMP ),
    .Y(\$procmux$13078_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:152.18-159.23|../rtl/apb_uart/uart_transmitter.sv:150.13-164.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13080  (
    .A(4'hx),
    .B(\$procmux$13078_Y ),
    .S(\$procmux$13081_CMP ),
    .Y(\$procmux$13080_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:148.10-165.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13082  (
    .A(4'hx),
    .B(\$procmux$13080_Y ),
    .S(\$procmux$13083_CMP ),
    .Y(\$procmux$13082_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:148.10-165.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13083_CMP0  (
    .A(CState),
    .B(4'h6),
    .Y(\$procmux$13083_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:265.8-268.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$pmux  #(
    .S_WIDTH(32'd13),
    .WIDTH(32'd4)
  ) \$procmux$13086  (
    .A(4'h0),
    .B({ \$auto$slang_frontend.cc:694:finish$\NState$8981 , 20'h23456, \$auto$slang_frontend.cc:694:finish$\NState$8991 , \$auto$slang_frontend.cc:694:finish$\NState$9001 , \$auto$slang_frontend.cc:694:finish$\NState$9011 , \$auto$slang_frontend.cc:694:finish$\NState$9016 , 4'hb, \$auto$slang_frontend.cc:694:finish$\NState$9043 , \$auto$slang_frontend.cc:694:finish$\NState$9048  }),
    .S({ \$procmux$13106_CMP , \$procmux$13104_CMP , \$procmux$13103_CMP , \$procmux$13102_CMP , \$procmux$13101_CMP , \$procmux$13100_CMP , \$procmux$13099_CMP , \$procmux$13097_CMP , \$procmux$13095_CMP , \$procmux$13093_CMP , \$procmux$13091_CMP , \$procmux$13089_CMP , \$procmux$13087_CMP  }),
    .Y(\$procmux$13086_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:265.8-268.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13087_CMP0  (
    .A(CState),
    .B(4'hc),
    .Y(\$procmux$13087_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:249.13-260.18|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13089_CMP0  (
    .A(CState),
    .B(4'hb),
    .Y(\$procmux$13089_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:221.10-245.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13091_CMP0  (
    .A(CState),
    .B(4'ha),
    .Y(\$procmux$13091_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:208.10-218.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13093_CMP0  (
    .A(CState),
    .B(4'h9),
    .Y(\$procmux$13093_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:188.10-205.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13095_CMP0  (
    .A(CState),
    .B(4'h8),
    .Y(\$procmux$13095_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:168.10-185.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13097_CMP0  (
    .A(CState),
    .B(4'h7),
    .Y(\$procmux$13097_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:148.10-165.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13099_CMP0  (
    .A(CState),
    .B(4'h6),
    .Y(\$procmux$13099_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:142.10-145.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13100_CMP0  (
    .A(CState),
    .B(4'h5),
    .Y(\$procmux$13100_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:136.10-139.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13101_CMP0  (
    .A(CState),
    .B(4'h4),
    .Y(\$procmux$13101_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:130.10-133.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13102_CMP0  (
    .A(CState),
    .B(4'h3),
    .Y(\$procmux$13102_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:124.10-127.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13103_CMP0  (
    .A(CState),
    .B(4'h2),
    .Y(\$procmux$13103_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:118.10-121.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13104_CMP0  (
    .A(CState),
    .B(4'h1),
    .Y(\$procmux$13104_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:110.13-113.18|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13106_CMP0  (
    .A(CState),
    .Y(\$procmux$13106_CMP )
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:112.18-112.34|../rtl/apb_uart/uart_transmitter.sv:110.13-113.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13120  (
    .A(4'h0),
    .B(4'h1),
    .S(\$procmux$13121_CMP ),
    .Y(\$procmux$13120_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:110.13-113.18|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13122  (
    .A(4'hx),
    .B(\$procmux$13120_Y ),
    .S(\$procmux$13123_CMP ),
    .Y(\$procmux$13122_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:110.13-113.18|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13123_CMP0  (
    .A(CState),
    .Y(\$procmux$13123_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:221.10-245.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$pmux  #(
    .S_WIDTH(32'd10),
    .WIDTH(32'd1)
  ) \$procmux$13130  (
    .A(1'h1),
    .B({ 1'h0, DIN[0], DIN[1], DIN[2], DIN[3], DIN[4], DIN[5], DIN[6], DIN[7], \$auto$slang_frontend.cc:694:finish$\iSout$9033  }),
    .S({ \$procmux$13144_CMP , \$procmux$13143_CMP , \$procmux$13142_CMP , \$procmux$13141_CMP , \$procmux$13140_CMP , \$procmux$13139_CMP , \$procmux$13137_CMP , \$procmux$13135_CMP , \$procmux$13133_CMP , \$procmux$13131_CMP  }),
    .Y(\$procmux$13130_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:221.10-245.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13131_CMP0  (
    .A(CState),
    .B(4'ha),
    .Y(\$procmux$13131_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:208.10-218.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13133_CMP0  (
    .A(CState),
    .B(4'h9),
    .Y(\$procmux$13133_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:188.10-205.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13135_CMP0  (
    .A(CState),
    .B(4'h8),
    .Y(\$procmux$13135_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:168.10-185.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13137_CMP0  (
    .A(CState),
    .B(4'h7),
    .Y(\$procmux$13137_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:148.10-165.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13139_CMP0  (
    .A(CState),
    .B(4'h6),
    .Y(\$procmux$13139_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:142.10-145.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13140_CMP0  (
    .A(CState),
    .B(4'h5),
    .Y(\$procmux$13140_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:136.10-139.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13141_CMP0  (
    .A(CState),
    .B(4'h4),
    .Y(\$procmux$13141_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:130.10-133.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13142_CMP0  (
    .A(CState),
    .B(4'h3),
    .Y(\$procmux$13142_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:124.10-127.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13143_CMP0  (
    .A(CState),
    .B(4'h2),
    .Y(\$procmux$13143_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:118.10-121.13|../rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$13144_CMP0  (
    .A(CState),
    .B(4'h1),
    .Y(\$procmux$13144_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:90.20-93.23|../rtl/apb_uart/uart_transmitter.sv:89.18-98.23" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13146  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$13147_CMP ),
    .Y(\$procmux$13146_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:83.15-86.18|../rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13149  (
    .A(1'hx),
    .B(\$procmux$13146_Y ),
    .S(iTx2),
    .Y(\$procmux$13149_Y )
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:82.13-99.18|../rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13151  (
    .A(1'hx),
    .B(\$procmux$13149_Y ),
    .S(\$procmux$13152_CMP ),
    .Y(\$procmux$13151_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:90.20-93.23|../rtl/apb_uart/uart_transmitter.sv:89.18-98.23" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13154  (
    .A(CState),
    .B(\$auto$slang_frontend.cc:694:finish$\NState$9049 ),
    .S(\$procmux$13155_CMP ),
    .Y(\$procmux$13154_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:83.15-86.18|../rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13157  (
    .A(4'hx),
    .B(\$procmux$13154_Y ),
    .S(iTx2),
    .Y(\$procmux$13157_Y )
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:82.13-99.18|../rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13159  (
    .A(4'hx),
    .B(\$procmux$13157_Y ),
    .S(\$procmux$13160_CMP ),
    .Y(\$procmux$13159_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:83.15-86.18|../rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13163  (
    .A(1'h1),
    .B(\$auto$slang_frontend.cc:694:finish$\iTx2$8971 ),
    .S(iTx2),
    .Y(\$procmux$13163_Y )
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:82.13-99.18|../rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13165  (
    .A(1'hx),
    .B(\$procmux$13163_Y ),
    .S(\$procmux$13166_CMP ),
    .Y(\$procmux$13165_Y )
  );
  /* full_case = 32'd1 */
  /* src = "../rtl/apb_uart/uart_transmitter.sv:83.15-86.18|../rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13169  (
    .A(\$auto$slang_frontend.cc:694:finish$\NState$9049 ),
    .B(\$auto$slang_frontend.cc:694:finish$\CState$8970 ),
    .S(iTx2),
    .Y(\$procmux$13169_Y )
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:82.13-99.18|../rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13171  (
    .A(4'hx),
    .B(\$procmux$13169_Y ),
    .S(\$procmux$13172_CMP ),
    .Y(\$procmux$13171_Y )
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:82.13-99.18|../rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13174  (
    .A(iTx2),
    .B(\$auto$slang_frontend.cc:694:finish$\iTx2$8973 ),
    .S(\$procmux$13175_CMP ),
    .Y(\$procmux$13174_Y )
  );
  /* src = "../rtl/apb_uart/uart_transmitter.sv:82.13-99.18|../rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$13177  (
    .A(CState),
    .B(\$auto$slang_frontend.cc:694:finish$\CState$8972 ),
    .S(\$procmux$13178_CMP ),
    .Y(\$procmux$13177_Y )
  );
  assign NState = \$auto$slang_frontend.cc:694:finish$\NState$9049 ;
  assign iSout = \$auto$slang_frontend.cc:694:finish$\iSout$9050 ;
  assign iParity = \$auto$slang_frontend.cc:694:finish$\iParity$9066 ;
  assign \TX_PAR.iP40  = \$auto$builder.cc:338:Biop$9059 ;
  assign \TX_PAR.iP50  = \$auto$builder.cc:338:Biop$9061 ;
  assign \TX_PAR.iP60  = \$auto$builder.cc:338:Biop$9063 ;
  assign \TX_PAR.iP70  = \$auto$builder.cc:338:Biop$9065 ;
  assign SOUT = \$auto$rtlil.cc:2874:Mux$9089 ;
  assign TXFINISHED = iFinished;
  assign \$procmux$12934_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9082 ;
  assign \$auto$slang_frontend.cc:694:finish$\iLast$9083  = \$procmux$12933_Y ;
  assign \$procmux$12937_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9077 ;
  assign \$auto$slang_frontend.cc:694:finish$\iFinished$9078  = \$procmux$12936_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\iParity$9066  = \$procmux$12939_Y ;
  assign \$procmux$12945_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9047 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9048  = \$procmux$12946_Y ;
  assign \$procmux$12951_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9041 ;
  assign \$procmux$12954_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9037 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9042  = \$procmux$12955_Y ;
  assign \$procmux$12962_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9037 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9043  = \$procmux$12963_Y ;
  assign \$procmux$12970_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9029 ;
  assign \$procmux$12973_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9020 ;
  assign \$auto$slang_frontend.cc:694:finish$\iSout$9032  = \$procmux$12974_Y ;
  assign \$procmux$12983_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9020 ;
  assign \$auto$slang_frontend.cc:694:finish$\iSout$9033  = \$procmux$12984_Y ;
  assign \$procmux$12992_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9024 ;
  assign \$procmux$12994_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9020 ;
  assign \$auto$slang_frontend.cc:694:finish$\iSout$9025  = \$procmux$12995_Y ;
  assign \$procmux$13003_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9015 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9016  = \$procmux$13004_Y ;
  assign \$procmux$13014_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9005 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9011  = \$procmux$13015_Y ;
  assign \$procmux$13025_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9009 ;
  assign \$procmux$13027_CMP  = \$auto$rtlil.cc:2746:ReduceBool$9005 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9010  = \$procmux$13028_Y ;
  assign \$procmux$13039_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8995 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9001  = \$procmux$13040_Y ;
  assign \$procmux$13051_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8999 ;
  assign \$procmux$13053_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8995 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9000  = \$procmux$13054_Y ;
  assign \$procmux$13066_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8985 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$8991  = \$procmux$13067_Y ;
  assign \$procmux$13079_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8989 ;
  assign \$procmux$13081_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8985 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$8990  = \$procmux$13082_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$9049  = \$procmux$13086_Y ;
  assign \$procmux$13121_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8980 ;
  assign \$auto$slang_frontend.cc:694:finish$\NState$8981  = \$procmux$13122_Y ;
  assign \$auto$slang_frontend.cc:694:finish$\iSout$9050  = \$procmux$13130_Y ;
  assign \$procmux$13147_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8969 ;
  assign \$procmux$13150_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8957 ;
  assign \$procmux$13152_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8953 ;
  assign \$auto$slang_frontend.cc:694:finish$\iTx2$8971  = \$procmux$13151_Y ;
  assign \$procmux$13155_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8969 ;
  assign \$procmux$13158_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8957 ;
  assign \$procmux$13160_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8953 ;
  assign \$auto$slang_frontend.cc:694:finish$\CState$8970  = \$procmux$13159_Y ;
  assign \$procmux$13164_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8957 ;
  assign \$procmux$13166_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8953 ;
  assign \$auto$slang_frontend.cc:694:finish$\iTx2$8973  = \$procmux$13165_Y ;
  assign \$procmux$13170_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8957 ;
  assign \$procmux$13172_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8953 ;
  assign \$auto$slang_frontend.cc:694:finish$\CState$8972  = \$procmux$13171_Y ;
  assign \$procmux$13175_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8953 ;
  assign \$auto$slang_frontend.cc:694:finish$\iTx2$8975  = \$procmux$13174_Y ;
  assign \$procmux$13178_CMP  = \$auto$rtlil.cc:2746:ReduceBool$8953 ;
  assign \$auto$slang_frontend.cc:694:finish$\CState$8974  = \$procmux$13177_Y ;
  assign \$auto$builder.cc:338:Biop$8951  = TXCLK;
  assign \$auto$rtlil.cc:2746:ReduceBool$8953  = TXCLK;
  assign \$auto$rtlil.cc:2746:ReduceBool$8957  = \$auto$builder.cc:338:Biop$8955 ;
  assign \$auto$builder.cc:338:Biop$8961  = STB;
  assign \$auto$rtlil.cc:2746:ReduceBool$8969  = \$auto$builder.cc:338:Biop$8967 ;
  assign \$auto$builder.cc:338:Biop$8978  = TXSTART;
  assign \$auto$rtlil.cc:2746:ReduceBool$8980  = TXSTART;
  assign \$auto$rtlil.cc:2746:ReduceBool$8985  = \$auto$builder.cc:338:Biop$8983 ;
  assign \$auto$builder.cc:338:Biop$8987  = PEN;
  assign \$auto$rtlil.cc:2746:ReduceBool$8989  = PEN;
  assign \$auto$rtlil.cc:2746:ReduceBool$8995  = \$auto$builder.cc:338:Biop$8993 ;
  assign \$auto$builder.cc:338:Biop$8997  = PEN;
  assign \$auto$rtlil.cc:2746:ReduceBool$8999  = PEN;
  assign \$auto$rtlil.cc:2746:ReduceBool$9005  = \$auto$builder.cc:338:Biop$9003 ;
  assign \$auto$builder.cc:338:Biop$9007  = PEN;
  assign \$auto$rtlil.cc:2746:ReduceBool$9009  = PEN;
  assign \$auto$builder.cc:338:Biop$9013  = PEN;
  assign \$auto$rtlil.cc:2746:ReduceBool$9015  = PEN;
  assign \$auto$builder.cc:338:Biop$9018  = SP;
  assign \$auto$rtlil.cc:2746:ReduceBool$9020  = SP;
  assign \$auto$builder.cc:338:Biop$9022  = EPS;
  assign \$auto$rtlil.cc:2746:ReduceBool$9024  = EPS;
  assign \$auto$builder.cc:338:Biop$9027  = EPS;
  assign \$auto$rtlil.cc:2746:ReduceBool$9029  = EPS;
  assign \$auto$builder.cc:338:Biop$9035  = STB;
  assign \$auto$rtlil.cc:2746:ReduceBool$9037  = STB;
  assign \$auto$builder.cc:338:Biop$9039  = TXSTART;
  assign \$auto$rtlil.cc:2746:ReduceBool$9041  = TXSTART;
  assign \$auto$builder.cc:338:Biop$9045  = TXSTART;
  assign \$auto$rtlil.cc:2746:ReduceBool$9047  = TXSTART;
  assign \$auto$rtlil.cc:2746:ReduceBool$9077  = \$auto$builder.cc:338:Biop$9075 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9082  = \$auto$builder.cc:338:Biop$9080 ;
  assign \$auto$rtlil.cc:2746:ReduceBool$9087  = \$auto$builder.cc:338:Biop$9085 ;
endmodule

/* src = "../rtl/user_domain.sv:8.8" */
module \user_domain$croc_chip.i_croc_soc.i_user (clk_i, rst_ni, testmode_i, ref_clk_i, user_sbr_obi_req_i, user_sbr_obi_rsp_o, user_mgr_obi_req_o, user_mgr_obi_rsp_i, gpio_in_sync_i, interrupts_o);
  /* src = "../rtl/user_domain.sv:46.35" */
  wire [73:0] all_user_sbr_obi_req;
  /* src = "../rtl/user_domain.sv:47.35" */
  wire [38:0] all_user_sbr_obi_rsp;
  /* src = "../rtl/user_domain.sv:11.21" */
  input clk_i;
  wire clk_i;
  /* src = "../rtl/user_domain.sv:22.38" */
  input [31:0] gpio_in_sync_i;
  wire [31:0] gpio_in_sync_i;
  /* src = "../rtl/user_domain.sv:23.38" */
  output [3:0] interrupts_o;
  wire [3:0] interrupts_o;
  /* src = "../rtl/user_domain.sv:12.21" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "../rtl/user_domain.sv:13.21" */
  input rst_ni;
  wire rst_ni;
  /* src = "../rtl/user_domain.sv:14.21" */
  input testmode_i;
  wire testmode_i;
  /* src = "../rtl/user_domain.sv:50.17" */
  wire [73:0] user_error_obi_req;
  /* src = "../rtl/user_domain.sv:51.17" */
  wire [38:0] user_error_obi_rsp;
  /* src = "../rtl/user_domain.sv:62.51" */
  wire user_idx;
  /* src = "../rtl/user_domain.sv:19.24" */
  output [71:0] user_mgr_obi_req_o;
  wire [71:0] user_mgr_obi_req_o;
  /* src = "../rtl/user_domain.sv:20.24" */
  input [36:0] user_mgr_obi_rsp_i;
  wire [36:0] user_mgr_obi_rsp_i;
  /* src = "../rtl/user_domain.sv:16.24" */
  input [73:0] user_sbr_obi_req_i;
  wire [73:0] user_sbr_obi_req_i;
  /* src = "../rtl/user_domain.sv:17.24" */
  output [38:0] user_sbr_obi_rsp_o;
  wire [38:0] user_sbr_obi_rsp_o;
  /* src = "../rtl/user_domain.sv:70.5" */
  \addr_decode$croc_chip.i_croc_soc.i_user.i_addr_decode_periphs  i_addr_decode_periphs (
    .addr_i(user_sbr_obi_req_i[73:42]),
    .addr_map_i(192'h000000000000000000000000000000000000000000000000),
    .default_idx_i(1'h0),
    .en_default_idx_i(1'h1),
    .idx_o(user_idx)
  );
  /* src = "../rtl/user_domain.sv:86.5" */
  \obi_demux$croc_chip.i_croc_soc.i_user.i_obi_demux  i_obi_demux (
    .clk_i(clk_i),
    .mgr_ports_req_o(all_user_sbr_obi_req),
    .mgr_ports_rsp_i(all_user_sbr_obi_rsp),
    .rst_ni(rst_ni),
    .sbr_port_req_i(user_sbr_obi_req_i),
    .sbr_port_rsp_o(user_sbr_obi_rsp_o),
    .sbr_port_select_i(user_idx)
  );
  /* src = "../rtl/user_domain.sv:110.5" */
  \obi_err_sbr$croc_chip.i_croc_soc.i_user.i_user_err  i_user_err (
    .clk_i(clk_i),
    .obi_req_i(user_error_obi_req),
    .obi_rsp_o(user_error_obi_rsp),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  assign interrupts_o = 4'h0;
  assign user_mgr_obi_req_o = 72'h000000000000000000;
  assign user_error_obi_req = all_user_sbr_obi_req;
  assign all_user_sbr_obi_rsp = user_error_obi_rsp;
endmodule
